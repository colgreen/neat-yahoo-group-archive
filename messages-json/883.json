{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":29390171,"authorName":"Mattias Fagerlund","from":"&quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;","profile":"mattias_fagerlund","replyTo":"LIST","senderId":"_dYZ5S2w4HVuWpzykiTCZNAG_FSowDECKELD7O6pLLaciXvF-1-6bsOu0sbCI5Qm_WaHZYQHLBTMgz3jEI6tZ02xZaCtlU1xD3p7Nw8E3zqsc1rUmg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Computation Time","postDate":"1085777856","msgId":883,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFdvcmxkQ2xpZW50LUYyMDA0MDUyODIyNTcuQUE1NzM2MDEyOUBvY3RhZ2F0ZS5jb20+","inReplyToHeader":"PEJBWTItRjY5dEdjbVVXakl6ZDIwMDAxYWE1M0Bob3RtYWlsLmNvbT4=","referencesHeader":"PEJBWTItRjY5dEdjbVVXakl6ZDIwMDAxYWE1M0Bob3RtYWlsLmNvbT4="},"prevInTopic":882,"nextInTopic":884,"prevInTime":882,"nextInTime":884,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"... For DelphiNEAT I wrote a Pascal decompiler that created pascal code that represented the network. That way I could use a network that NEAT evolved","rawEmail":"Return-Path: &lt;mattias@...&gt;\r\nX-Sender: mattias@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 8340 invoked from network); 28 May 2004 20:52:24 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m10.grp.scd.yahoo.com with QMQP; 28 May 2004 20:52:24 -0000\r\nReceived: from unknown (HELO endeavour.mit.um.bostream.net) (81.26.227.9)\n  by mta4.grp.scd.yahoo.com with SMTP; 28 May 2004 20:52:24 -0000\r\nReceived: from bredin.nu (h181n5c1o285.bredband.skanova.com [81.227.100.181])\n\tby endeavour.mit.um.bostream.net (Postfix) with ESMTP id 3B5D068013\n\tfor &lt;neat@yahoogroups.com&gt;; Fri, 28 May 2004 22:51:53 +0200 (CEST)\r\nReceived: from WorldClient ([127.0.0.1])\n\t(authenticated user mattias@...)\n\tby bredin.nu (bredin.nu [127.0.0.1])\n\t(MDaemon.PRO.v7.0.1.R)\n\twith ESMTP id md50000008934.msg\n\tfor &lt;neat@yahoogroups.com&gt;; Fri, 28 May 2004 22:57:39 +0200\r\nReceived: from [127.0.0.1] via WorldClient with HTTP;\n\tFri, 28 May 2004 22:57:36 +0200\r\nDate: Fri, 28 May 2004 22:57:36 +0200\r\nTo: neat@yahoogroups.com\r\nMIME-Version: 1.0\r\nContent-Type: text/plain\r\nMessage-ID: &lt;WorldClient-F200405282257.AA57360129@...&gt;\r\nX-Mailer: WorldClient 7.0.1\r\nIn-Reply-To: &lt;BAY2-F69tGcmUWjIzd20001aa53@...&gt;\r\nReferences: &lt;BAY2-F69tGcmUWjIzd20001aa53@...&gt;\r\nX-Authenticated-Sender: mattias@...\r\nX-Spam-Processed: bredin.nu, Fri, 28 May 2004 22:57:39 +0200\n\t(not processed: message from valid local sender)\r\nX-MDRemoteIP: 127.0.0.1\r\nX-Return-Path: mattias@...\r\nX-MDaemon-Deliver-To: neat@yahoogroups.com\r\nX-MDAV-Processed: bredin.nu, Fri, 28 May 2004 22:57:41 +0200\r\nX-eGroups-Remote-IP: 81.26.227.9\r\nFrom: &quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;\r\nSubject: Re: [neat] Re: Computation Time\r\nX-Yahoo-Group-Post: member; u=29390171\r\nX-Yahoo-Profile: mattias_fagerlund\r\n\r\n&gt; No, such a thing is definitely overkill for xor.  But for image\n&gt; enlargement, \n&gt; where analyzing the fitness of a single network may involve billions\n&gt; (yes, \n&gt; billions) of activations, every little bit will help.\n\nFor DelphiNEAT I wrote a &quot;Pascal decompiler&quot; that created pascal code \nthat represented the network. That way I could use a network that NEAT \nevolved outside of my NEAT framework. It&#39;s not very hard - but I&#39;m not \nsure how much faster it is. Mind you, it didn&#39;t compile the code online \nor anything, it just took a NEAT topology and created pascal code that \nperformed the same. It was up to the coder to use the pascal code \nhimself.\n\ncheers,\nm\n\n\n\n"}}