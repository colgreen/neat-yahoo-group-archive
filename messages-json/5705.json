{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":506662524,"authorName":"yyyyaun","from":"&quot;yyyyaun&quot; &lt;yyyyaun@...&gt;","profile":"yyyyaun","replyTo":"LIST","senderId":"PVNr7kYjAiY99GjkRqQd5TwtKW_jGYAMGA9CAVIc6BJrjXONwB9QWcoEnTTBQ3nhb_PhhxIlrhd_w7ciwpQSt7VIZCM","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Hyperneat Network Output Layer All Zero","postDate":"1321974379","msgId":5705,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGphZ2RwYitnYmltQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGphZWwwZSs2dDVyQGVHcm91cHMuY29tPg=="},"prevInTopic":5704,"nextInTopic":5706,"prevInTime":5704,"nextInTime":5706,"topicId":5699,"numMessagesInTopic":7,"msgSnippet":"I had the same problem. Try changing the output node name: ","rawEmail":"Return-Path: &lt;yyyyaun@...&gt;\r\nX-Sender: yyyyaun@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 80537 invoked from network); 22 Nov 2011 15:06:20 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m11.grp.sp2.yahoo.com with QMQP; 22 Nov 2011 15:06:20 -0000\r\nX-Received: from unknown (HELO n38b.bullet.mail.sp1.yahoo.com) (66.163.168.152)\n  by mta2.grp.sp2.yahoo.com with SMTP; 22 Nov 2011 15:06:20 -0000\r\nX-Received: from [69.147.65.149] by n38.bullet.mail.sp1.yahoo.com with NNFMP; 22 Nov 2011 15:06:20 -0000\r\nX-Received: from [98.137.34.155] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 22 Nov 2011 15:06:20 -0000\r\nDate: Tue, 22 Nov 2011 15:06:19 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;jagdpb+gbim@...&gt;\r\nIn-Reply-To: &lt;jael0e+6t5r@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;yyyyaun&quot; &lt;yyyyaun@...&gt;\r\nSubject: Re: Hyperneat Network Output Layer All Zero\r\nX-Yahoo-Group-Post: member; u=506662524; y=YuOVkeVM2pmX5JoBA83facSc-uWvVyV_QM3KMvlWhguhWgv9X4CGskqT5aqBA9et4oqGCtcc5x-16O8\r\nX-Yahoo-Profile: yyyyaun\r\n\r\n\n\nI had the same problem. Try changing the output node name:\ngenes.push_bac=\r\nk(GeneticNodeGene(&quot;Output_Input_Output&quot;,&quot;NetworkOutputNode&quot;,1,false,ACTIVAT=\r\nION_FUNCTION_SIGMOID)); \n\n--- In neat@yahoogroups.com, &quot;Matthew_Hausknecht&quot;=\r\n &lt;matthew_hausknecht@...&gt; wrote:\n&gt;\n&gt; Hi, I&#39;m trying to run Hyperneat on a s=\r\nimple Atari game and was starting out by replicating some of the experiment=\r\n examples. My code compiles and runs, but the value of the output node in t=\r\nhe network always seems to be zero. I suspect I am doing something wrong in=\r\n the initalization/update step, but I&#39;m not sure what... Code is as follows=\r\n:\n&gt; \n&gt; #include &quot;HCUBE_Defines.h&quot;\n&gt; \n&gt; #include &quot;Experiments/HCUBE_AtariExp=\r\neriment.h&quot;\n&gt; #include &lt;boost/foreach.hpp&gt;\n&gt; \n&gt; using namespace NEAT;\n&gt; \n&gt; e=\r\nnum GamePositionValue {\n&gt;   EMPTY,\n&gt;   CHICKEN,\n&gt;   VEHICLE\n&gt; };\n&gt; \n&gt; names=\r\npace HCUBE\n&gt; {\n&gt;   AtariExperiment::AtariExperiment(string _experimentName,=\r\nint _threadID):\n&gt;     Experiment(_experimentName,_threadID)\n&gt;   {\n&gt;     lay=\r\nerInfo =3D NEAT::LayeredSubstrateInfo();\n&gt;     layerInfo.layerSizes.push_ba=\r\nck(Vector2&lt;int&gt;(8,8));\n&gt;     layerInfo.layerIsInput.push_back(true);\n&gt;     =\r\nlayerInfo.layerLocations.push_back(Vector3&lt;float&gt;(0,0,0));\n&gt;     layerInfo.=\r\nlayerNames.push_back(&quot;Input&quot;);\n&gt; \n&gt;     layerInfo.layerSizes.push_back(Vect=\r\nor2&lt;int&gt;(8,8));\n&gt;     layerInfo.layerIsInput.push_back(false);\n&gt;     layerI=\r\nnfo.layerLocations.push_back(Vector3&lt;float&gt;(0,4,0));\n&gt;     layerInfo.layerN=\r\names.push_back(&quot;Output&quot;);\n&gt; \n&gt;     layerInfo.layerAdjacencyList.push_back(s=\r\ntd::pair&lt;string,string&gt;(&quot;Input&quot;,&quot;Output&quot;));\n&gt; \n&gt;     layerInfo.normalize =\r\n=3D true;\n&gt;     layerInfo.useOldOutputNames =3D false;\n&gt;     layerInfo.laye=\r\nrValidSizes =3D layerInfo.layerSizes;\n&gt; \n&gt;     substrate =3D NEAT::LayeredS=\r\nubstrate&lt;float&gt;();\n&gt;     substrate.setLayerInfo(layerInfo);\n&gt;   }\n&gt; \n&gt;   NE=\r\nAT::GeneticPopulation* AtariExperiment::createInitialPopulation(int populat=\r\nionSize) {\n&gt;     GeneticPopulation *population =3D new GeneticPopulation();=\r\n\n&gt;     vector&lt;GeneticNodeGene&gt; genes;\n&gt; \n&gt;     genes.push_back(GeneticNodeG=\r\nene(&quot;Bias&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt;     genes.push_back(GeneticNodeGene=\r\n(&quot;X1&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt;     genes.push_back(GeneticNodeGene(&quot;X2&quot;=\r\n,&quot;NetworkSensor&quot;,0,false));\n&gt;     genes.push_back(GeneticNodeGene(&quot;Y1&quot;,&quot;Net=\r\nworkSensor&quot;,0,false));\n&gt;     genes.push_back(GeneticNodeGene(&quot;Y2&quot;,&quot;NetworkS=\r\nensor&quot;,0,false));\n&gt;     genes.push_back(GeneticNodeGene(&quot;Output&quot;,&quot;NetworkOu=\r\ntputNode&quot;,1,false,ACTIVATION_FUNCTION_SIGMOID));\n&gt; \n&gt;     for (int a=3D0;a&lt;=\r\npopulationSize;a++) {\n&gt;       shared_ptr&lt;GeneticIndividual&gt; individual(new =\r\nGeneticIndividual(genes,true,1.0));\n&gt;       for (int b=3D0;b&lt;0;b++) {\n&gt;    =\r\n     individual-&gt;testMutate();\n&gt;       }\n&gt;       population-&gt;addIndividual(=\r\nindividual);\n&gt;     }\n&gt; \n&gt;     cout &lt;&lt; &quot;Finished creating population&#92;n&quot;;\n&gt;  =\r\n   return population;\n&gt;   }\n&gt; \n&gt;   void AtariExperiment::populateSubstrate(=\r\nshared_ptr&lt;NEAT::GeneticIndividual&gt; individual) {\n&gt;     if (currentSubstrat=\r\neIndividual =3D=3D individual)\n&gt;       return;\n&gt; \n&gt;     currentSubstrateInd=\r\nividual =3D individual;\n&gt;     substrate.populateSubstrate(individual);\n&gt;   =\r\n}\n&gt; \n&gt;   void AtariExperiment::processGroup(shared_ptr&lt;NEAT::GeneticGenerat=\r\nion&gt; generation)\n&gt;   {\n&gt;     shared_ptr&lt;NEAT::GeneticIndividual&gt; individual=\r\n =3D group.front();\n&gt;     //You get 10 points just for being processed, wah=\r\nooo!\n&gt;     individual-&gt;setFitness(10);\n&gt;     populateSubstrate(individual);=\r\n\n&gt;     runAtariEpisode(individual);\n&gt;   }\n&gt; \n&gt;   void AtariExperiment::runA=\r\ntariEpisode(shared_ptr&lt;NEAT::GeneticIndividual&gt; individual) {\n&gt;     GamePos=\r\nitionValue gameState[8][8];\n&gt; \n&gt;     int chic_x =3D 4, chic_y =3D 7;\n&gt;     =\r\nfloat total_reward =3D 0.0;\n&gt;     \n&gt;     // Initialize Game\n&gt;     for (int =\r\nx=3D0;x&lt;8;x++) {\n&gt;       for (int y=3D0;y&lt;8;y++) {\n&gt;         gameState[x][y=\r\n] =3D EMPTY;\n&gt;       }\n&gt;     }\n&gt;     gameState[chic_x][chic_y] =3D CHICKEN;=\r\n\n&gt; \n&gt;     // Run simulation for t timesteps\n&gt;     int num_timesteps =3D 10;=\r\n\n&gt;     for (int t=3D0; t&lt;num_timesteps; t++) {\n&gt;       substrate.getNetwork=\r\n()-&gt;reinitialize();\n&gt;       substrate.getNetwork()-&gt;dummyActivation();\n&gt; \n&gt;=\r\n       // Set substrate values\n&gt;       for (int x=3D0; x&lt;8; ++x) {\n&gt;       =\r\n  for (int y=3D0; y&lt;8; ++y) {\n&gt;           // if (gameState[x][y] =3D=3D CHI=\r\nCKEN) {\n&gt;           //   substrate.setValue((Node(x,y,0)), 1.0);\n&gt;         =\r\n  // } else if (gameState[x][y] =3D=3D VEHICLE) {\n&gt;           //   substrat=\r\ne.setValue((Node(x,y,0)), -1.0);            \n&gt;           // } else {\n&gt;     =\r\n      //   substrate.setValue((Node(x,y,0)), 0.0);            \n&gt;           =\r\n// }\n&gt;           substrate.setValue((Node(x,y,0)), (float)((7.0-y)/7.0));\n&gt;=\r\n         }\n&gt;       }\n&gt; \n&gt;       substrate.getNetwork()-&gt;update();\n&gt; \n&gt;     =\r\n  for (int x=3D0; x&lt;8; ++x) {\n&gt;         for (int y=3D0; y&lt;8; ++y) {\n&gt;      =\r\n     float val =3D substrate.getValue((Node(x,y,1)));\n&gt;           if (val !=\r\n=3D 0)\n&gt;             printf(&quot;Got Nonzero val %f at %d,%d&#92;n&quot;,val,x,y);\n&gt;    =\r\n     }\n&gt;       }\n&gt;       float chicken_val =3D substrate.getValue((Node(chi=\r\nc_x,chic_y,1)));\n&gt;       float down_val =3D (chic_y =3D=3D 7) ? chicken_val=\r\n : substrate.getValue((Node(chic_x,chic_y+1,1)));\n&gt;       float up_val =3D =\r\n(chic_y =3D=3D 0) ? chicken_val : substrate.getValue((Node(chic_x,chic_y-1,=\r\n1)));\n&gt; \n&gt;       int action;\n&gt;       if (chicken_val &gt;=3D up_val) {\n&gt;      =\r\n   if (chicken_val &gt;=3D down_val) {\n&gt;           action =3D 0;\n&gt;         } e=\r\nlse {\n&gt;           action =3D +1;\n&gt;         }\n&gt;       } else {\n&gt;         if =\r\n(up_val &gt;=3D down_val) {\n&gt;           action =3D -1;\n&gt;         } else {\n&gt;   =\r\n        action =3D 1;\n&gt;         }\n&gt;       }\n&gt; \n&gt;       // Update game state=\r\n with action\n&gt;       gameState[chic_x][chic_y] =3D EMPTY;\n&gt;       gameState=\r\n[chic_x][chic_y+action] =3D CHICKEN;\n&gt;       chic_y +=3D action;\n&gt; \n&gt;      =\r\n // Compute reward\n&gt;       if (chic_y =3D=3D 0) {\n&gt;         total_reward +=\r\n=3D 1.0;\n&gt;         // Reset the sim\n&gt;         gameState[chic_x][chic_y] =3D=\r\n EMPTY;\n&gt;         gameState[chic_x][7] =3D CHICKEN;\n&gt;         chic_y =3D 7;=\r\n\n&gt;       }\n&gt;     }\n&gt;     //cout &lt;&lt; &quot;Got total reward: &quot; &lt;&lt; total_reward &lt;&lt; =\r\nendl;\n&gt;     individual-&gt;reward(total_reward);\n&gt;   }\n&gt;\n\n\n\n"}}