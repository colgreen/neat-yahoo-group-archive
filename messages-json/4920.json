{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":420832731,"authorName":"Daniel","from":"&quot;Daniel&quot; &lt;daniel_kuppitz@...&gt;","profile":"dkuppitz","replyTo":"LIST","senderId":"-09Ue9WQHJ7TB7VxCjL9SYzmfQR-AynZds7m8muq6Cq0JNoSkpV_F95Yg60tury4kBK1BwAbPkZ3rXuKbyDCPHBLYd6f5qvyZv3BBQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: FloatFastConcurrentNetwork - Performance Optimization","postDate":"1259109420","msgId":4920,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhlaHU3Yytya29qQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMTI0MTU1MnA3NTk0YmU4MmhjYjA2MjI0NDMwNmJhMjkxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4918,"nextInTopic":4922,"prevInTime":4919,"nextInTime":4921,"topicId":4917,"numMessagesInTopic":12,"msgSnippet":"Hello Colin, yes, the network had a few thousand connections. The network was not intended to produce any meaningful output, I have just played around to see","rawEmail":"Return-Path: &lt;daniel_kuppitz@...&gt;\r\nX-Sender: daniel_kuppitz@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 1717 invoked from network); 25 Nov 2009 00:37:19 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m2.grp.sp2.yahoo.com with QMQP; 25 Nov 2009 00:37:19 -0000\r\nX-Received: from unknown (HELO n5-vm6.bullet.mail.sp2.yahoo.com) (67.195.135.101)\n  by mta3.grp.re1.yahoo.com with SMTP; 25 Nov 2009 00:37:19 -0000\r\nX-Received: from [67.195.134.49] by n5.bullet.mail.sp2.yahoo.com with NNFMP; 25 Nov 2009 00:37:03 -0000\r\nX-Received: from [69.147.65.174] by t2.bullet.mail.sp2.yahoo.com with NNFMP; 25 Nov 2009 00:37:03 -0000\r\nX-Received: from [98.137.34.72] by t12.bullet.mail.sp1.yahoo.com with NNFMP; 25 Nov 2009 00:37:03 -0000\r\nDate: Wed, 25 Nov 2009 00:37:00 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hehu7c+rkoj@...&gt;\r\nIn-Reply-To: &lt;727a406c0911241552p7594be82hcb062244306ba291@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Daniel&quot; &lt;daniel_kuppitz@...&gt;\r\nSubject: Re: FloatFastConcurrentNetwork - Performance Optimization\r\nX-Yahoo-Group-Post: member; u=420832731; y=zBXj8KOINJZrLi-30TcI6vtdx2xR5v7lr4v7DcQ8pUbMTPQ\r\nX-Yahoo-Profile: dkuppitz\r\n\r\nHello Colin,\n\nyes, the network had a few thousand connections. The network =\r\nwas not intended to produce any meaningful output, I have just played aroun=\r\nd to see the different behaviours with different parameters.\n\nThe modificat=\r\nion in the SingleStep method was the only modification within the core libr=\r\nary. However, there are much more methods that can be optimized, I&#39;ve just =\r\nchosen this one, because it was by far the most called method.\n\nCheers,\nDan=\r\niel\n\n--- In neat@yahoogroups.com, Colin Green &lt;colin.green1@...&gt; wrote:\n&gt;\n&gt;=\r\n Hi,\n&gt; \n&gt; 2009/11/24 Daniel &lt;daniel_kuppitz@...&gt;\n&gt; &gt;\n&gt; &gt; I&#39;ve played around=\r\n with a quite large network and took a look at the execution performance of=\r\n HyperSharpNEAT. There was one\n&gt; &gt; outstanding method (besides my actual ev=\r\naluation method): FloatFastConcurrentNetwork.SingleStep()\n&gt; \n&gt; How big are =\r\nthe networks? 0.3ms is quite a long time for one call so\n&gt; I&#39;m guessing you=\r\nr networks have 100k or so connections?\n&gt; \n&gt; \n&gt; &gt; The method has an executi=\r\non time of only 0.3ms (avg) but it&#39;s called hundreds of millions of times, =\r\nso I&#39;ve tried to optimize this\n&gt; &gt; method - with success. I&#39;ve added some u=\r\nnsafe code; the methods readability is lost, but IMO the performance improv=\r\nement\n&gt; &gt; redresses that.\n&gt; \n&gt; Yeh I think the pointer arithmetic means you=\r\n don&#39;t get the little bit\n&gt; of overhead from indexing an array, also it pro=\r\nbably skips the array\n&gt; bounds checking.\n&gt; \n&gt; &gt; Some facts:\n&gt; &gt;\n&gt; &gt; With th=\r\ne original method a call to PerformOneGeneration() took 218 seconds in aver=\r\nage. With my modified version and the same &gt; network a call took 124 second=\r\ns (that&#39;s only 57% of the original version).\n&gt; \n&gt; I tried it with a smallis=\r\nh network of 369 connections and it was about\n&gt; 10% faster. I wonder, did y=\r\nou make any other changes?\n&gt; \n&gt; Even so it&#39;s an interesting idea that might=\r\n be useful throughout the\n&gt; code in general.\n&gt; \n&gt; Colin.\n&gt;\n\n\n\n"}}