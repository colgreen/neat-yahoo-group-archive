{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344770077,"authorName":"Colin Green","from":"Colin Green &lt;colin.green1@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"RiJ3efeWzMkMFhSUB0v4m9Ve39xer1Opi7zFww5lcwErAMotHX25rZ045jfmJfwlX3usP4L0q8tEm3j3p8AkWZQgshPJyYE7Sc7h","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [neat] Re: Some Questions Regarding SharpNEAT v2","postDate":"1328561902","msgId":5760,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRTBNK1ljOG5keWYyQ2M2LUswVFQ4KzM9Ty01X3R2NVZqNXVaTnU2cEJ6bk9FQUZTZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGpnb2wwbitkNmllQGVHcm91cHMuY29tPg==","referencesHeader":"PEFBTkxrVGlrcGZMOFZPOWdBdkIyanQ5M3FuWHVzUTV2S19pWnBfalhhVFQxZUBtYWlsLmdtYWlsLmNvbT4JPGpnb2wwbitkNmllQGVHcm91cHMuY29tPg=="},"prevInTopic":5759,"nextInTopic":5761,"prevInTime":5759,"nextInTime":5761,"topicId":5413,"numMessagesInTopic":7,"msgSnippet":"Hi, ... The code you re referring to takes the evolved CPPN and queries it to create the neural net that you will go on to evaluate. The CPPN accepts inputs","rawEmail":"Return-Path: &lt;colin.green1@...&gt;\r\nX-Sender: colin.green1@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 79736 invoked from network); 6 Feb 2012 20:58:23 -0000\r\nX-Received: from unknown (98.137.35.162)\n  by m16.grp.sp2.yahoo.com with QMQP; 6 Feb 2012 20:58:23 -0000\r\nX-Received: from unknown (HELO mail-bk0-f41.google.com) (209.85.214.41)\n  by mta6.grp.sp2.yahoo.com with SMTP; 6 Feb 2012 20:58:23 -0000\r\nX-Received: by bkbzs2 with SMTP id zs2so6628417bkb.14\n        for &lt;neat@yahoogroups.com&gt;; Mon, 06 Feb 2012 12:58:22 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.204.129.208 with SMTP id p16mr9280162bks.131.1328561902100;\n Mon, 06 Feb 2012 12:58:22 -0800 (PST)\r\nX-Received: by 10.204.73.10 with HTTP; Mon, 6 Feb 2012 12:58:22 -0800 (PST)\r\nIn-Reply-To: &lt;jgol0n+d6ie@...&gt;\r\nReferences: &lt;AANLkTikpfL8VO9gAvB2jt93qnXusQ5vK_iZp_jXaTT1e@...&gt;\n\t&lt;jgol0n+d6ie@...&gt;\r\nDate: Mon, 6 Feb 2012 20:58:22 +0000\r\nMessage-ID: &lt;CAE0M+Yc8ndyf2Cc6-K0TT8+3=O-5_tv5Vj5uZNu6pBznOEAFSg@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 2:4:8:0:0\r\nFrom: Colin Green &lt;colin.green1@...&gt;\r\nSubject: Re: [neat] Re: Some Questions Regarding SharpNEAT v2\r\nX-Yahoo-Group-Post: member; u=344770077; y=vBpH7xN8ATCFWL8jYnd4D0AZ0JIUaZgv1RehCzdXTg-J_O4gsVvU\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nHi,\n\nOn 6 February 2012 13:36, gotnobluemilk &lt;gotnobluemilk@...&gt; wrote:\n&gt;\n&gt; // Read bias connection weight from output 1.\n&gt; double weight = outputSignalArr[1];\n&gt;\n&gt; Should this be outputSignalArr[0]? Sure would love to get rid of having to have 2 outputs, since I ignore the 2nd one for fitness.\n&gt;\n\nThe code you&#39;re referring to takes the evolved CPPN and queries it to\ncreate the neural net that you will go on to evaluate. The CPPN\naccepts inputs describing the coordinates of the source and target\nnodes within the substrate. Output [0] is the connection strength\nbetween the source and target, output [1] is the strength of the bias\nconnection going in to the target node.\n\nIf you are trying to evaluate the CPPN directly then ignoring the\nsecond output is probably the easiest approach, unless you wish to\nimprove the performance by eliminating it. I think this is easy to do\nas the number of outputs on the CPPN is defined on each\nIGuiNeatExperiment (or INeatExperiment) class, on the OutputCount\nproperty, hence it&#39;s not fixed for SharpNEAT as a whole.\n\nHope that helps,\n\nColin.\n\n"}}