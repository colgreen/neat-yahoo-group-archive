{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"SoCqKYhHqOpVpoZ9TCoMeDjRAR5C2u5OacHnlYTfi1ubj--QSrb5_cIBdM-JQqrPozgf1IbnBGDfWGcWugvWr3Ui4sjk","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: CPPNs. Recursive vs Feedforward (Efficient Feedforward)","postDate":"1257283382","msgId":4877,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhjcTZ2bSs1bms3QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMTAyMTYyMms1Yzg4ZDBhNGo3NGRiZDUyYTQ4YWY0NGVmQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4876,"nextInTopic":4878,"prevInTime":4876,"nextInTime":4878,"topicId":4874,"numMessagesInTopic":10,"msgSnippet":"Colin, there is indeed a fast way to compute feedforward activation, but it does not actually involve computing the longest path.  Rather, it entails recursing","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 16164 invoked from network); 3 Nov 2009 21:23:09 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m13.grp.re1.yahoo.com with QMQP; 3 Nov 2009 21:23:09 -0000\r\nX-Received: from unknown (HELO n37b.bullet.mail.sp1.yahoo.com) (66.163.168.151)\n  by mta2.grp.re1.yahoo.com with SMTP; 3 Nov 2009 21:23:09 -0000\r\nX-Received: from [69.147.65.171] by n37.bullet.mail.sp1.yahoo.com with NNFMP; 03 Nov 2009 21:23:03 -0000\r\nX-Received: from [98.137.34.35] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 03 Nov 2009 21:23:03 -0000\r\nDate: Tue, 03 Nov 2009 21:23:02 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hcq6vm+5nk7@...&gt;\r\nIn-Reply-To: &lt;727a406c0911021622k5c88d0a4j74dbd52a48af44ef@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: CPPNs. Recursive vs Feedforward (Efficient Feedforward)\r\nX-Yahoo-Group-Post: member; u=54567749; y=zfx3ICLU0BbVgq7U9-Tw4cXP-ALRC_1QAjMY_83mTL9Y2uuGdRqP\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nColin, there is indeed a fast way to compute feedforward activation, but =\r\nit does not actually involve computing the longest path.  Rather, it entail=\r\ns recursing back from the outputs to the inputs, each time summing the inco=\r\nming activation from the recursive calls.  If a node has already been compu=\r\nted that is then called again, it simply returns the result of that prior c=\r\nomputation.  This approach is efficient because every activation function i=\r\ns guaranteed to be only run once.  In contrast, in the more common arbitrar=\r\ny-topology approach to activation, at time t each node&#39;s activation is comp=\r\nuted from incoming nodes&#39; activations at tine t-1, which can take several t=\r\nicks (and therefore re-activations) for activation to travel through the wh=\r\nole network.\n\nNote that the two different ways of activating do not always =\r\nyield equivalent results because of some subtle implications.  However, the=\r\nse differences generally only come up in continual control scenarios (i.e. =\r\nscenarios in which a networks is activated over and over again continually)=\r\n.  If you just want a single &quot;final answer&quot; (i.e. like a pattern that the C=\r\nPPN outputs) they should be equivalent, as long as the network really is fe=\r\nedforward.\n\nken\n\n--- In neat@yahoogroups.com, Colin Green &lt;colin.green1@...=\r\n&gt; wrote:\n&gt;\n&gt; Quick question. What&#39;s the prevailing opinion on whether CPPNs=\r\n should\n&gt; be recursive or feedforward-only?\n&gt; \n&gt; Also there were discussion=\r\ns some years back about algorithms for\n&gt; efficiently implementing feedforwa=\r\nrd networks - e.g. calculating the\n&gt; longest path from input to output. I t=\r\nhink Derek and Phillip worked on\n&gt; these ideas in ANJI so I&#39;ll be looking i=\r\nn the ANJI code (and NEAT\n&gt; group archive) but if anyone&#39;s got any more rec=\r\nent ideas/pointers on\n&gt; the subject then I&#39;d be interested to hear them. Th=\r\nanks.\n&gt;\n\n\n\n"}}