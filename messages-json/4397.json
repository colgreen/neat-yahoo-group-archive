{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"wGIyzKEK20nqKTgjB093Dt-74DWRA9uEQ1AauOMUFqsMQNxVAuV1D3K4zjCaIrdQbdR2UGpsF-kycABJL4WCuWGa7nQPcC2DoROlSPLBV5QRUCdTc1o","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: rtNEAT: max_depth() in an endless loop","postDate":"1225613266","msgId":4397,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdlam40aSttMnZwQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGRkZjEwMDc4MDgxMTAxMTczOWg0YWVlMzgyNnI5MjE1NzhiZjYxNGEzOTk1QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4396,"nextInTopic":4400,"prevInTime":4396,"nextInTime":4398,"topicId":4396,"numMessagesInTopic":16,"msgSnippet":"Hi Cesar, I know of this problem. It is obvious that depth cannot be determined in a recurrent network, but in general it depends, what is your way to handle","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 39408 invoked from network); 2 Nov 2008 08:07:47 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m53.grp.scd.yahoo.com with QMQP; 2 Nov 2008 08:07:47 -0000\r\nX-Received: from unknown (HELO n35b.bullet.mail.sp1.yahoo.com) (66.163.168.149)\n  by mta15.grp.scd.yahoo.com with SMTP; 2 Nov 2008 08:07:47 -0000\r\nX-Received: from [69.147.65.173] by n35.bullet.mail.sp1.yahoo.com with NNFMP; 02 Nov 2008 08:07:47 -0000\r\nX-Received: from [209.73.164.83] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 02 Nov 2008 08:07:47 -0000\r\nX-Received: from [69.147.65.172] by t7.bullet.scd.yahoo.com with NNFMP; 02 Nov 2008 08:07:47 -0000\r\nX-Received: from [66.218.66.81] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 02 Nov 2008 08:07:46 -0000\r\nDate: Sun, 02 Nov 2008 08:07:46 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;gejn4i+m2vp@...&gt;\r\nIn-Reply-To: &lt;ddf100780811011739h4aee3826r921578bf614a3995@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: rtNEAT: max_depth() in an endless loop\r\nX-Yahoo-Group-Post: member; u=283334584; y=0fMqCFJpYnCl4b362vRojGPYxCTicady9FEQ6fHZ5bTqFZXwQSho62hqbA\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nHi Cesar,\n\nI know of this problem. It is obvious that depth cannot be deter=\r\nmined \nin a recurrent network, but in general it depends, what is your way =\r\nto \nhandle the situation. Try improving the add_link() code so that the \nri=\r\nght nodes are picked up when trying to add a forward or a recurrent \nconnec=\r\ntion. This is a good solution but in general the problem with \nlooped netwo=\r\nrks cannot be avoided. Suppose you have 3 hidden nodes, A, \nB, and C. If yo=\r\nu link these like A-&gt;B, B-&gt;C, C-&gt;A, it is a loop in the \nnetwork, even thou=\r\ngh all connections are meant to be forward. \nThe best solution in my opinio=\r\nn is to put a limit on the possible \ndepth, say 32, if the depth exceeds 32=\r\n, quit the recursion and \nactivate the network 32 times. It slows things do=\r\nwn but at least it \nwill not hurt evolution as if you penalize looped netwo=\r\nrks. \n\nPeter \n\n--- In neat@yahoogroups.com, &quot;Cesar G. Miguel&quot; &lt;cesar.gomes@=\r\n...&gt; \nwrote:\n&gt;\n&gt; Hi all,\n&gt; \n&gt; I&#39;m not sure if someone else has notice this =\r\n&quot;bug&quot; in rtNEAT, but \nthe\n&gt; max_depth() method in network.cpp has the poten=\r\ntial to be forever in\n&gt; loop if a recurrent link is added in a feedforward =\r\ntopology, e.g., \nthe\n&gt; XOR experiment (and that can happen even when the re=\r\ncur_only_prob\n&gt; parameter is set to zero). A real example is attached.\n&gt; \n&gt;=\r\n It seems to happen in 1 out of 10 runs. The max_depth() method calls\n&gt; dep=\r\nth() in nnode.cpp, which should return the max depth of that \nnode.\n&gt; But i=\r\nt can get trapped in a loop if any recurrent link is present \n(as\n&gt; it is c=\r\nommented out in the source: DEPTH NOT DETERMINED FOR NETWORK\n&gt; WITH LOOP).\n=\r\n&gt; \n&gt; For those cases I have to force a return if an endless loop is\n&gt; detec=\r\nted and then set the chromosome&#39;s fitness to zero in order to\n&gt; continue.\n&gt;=\r\n \n&gt; Has anyone dealed with that before?\n&gt; \n&gt; []&#39;s\n&gt; Cesar\n&gt;\n\n\n\n\n"}}