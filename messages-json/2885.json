{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":281645563,"authorName":"afcarl2","from":"&quot;afcarl2&quot; &lt;a.carl@...&gt;","profile":"afcarl2","replyTo":"LIST","senderId":"4FGFuvRhcw8R5-YLqCvHydtL7XHkQoSz8pJ6CJXqUIkvv7j5dfFgFP025vw8cD4r_3ZuzovYDN0JFwkZ21RFXE4","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Advice to NEAT beginner","postDate":"1165966751","msgId":2885,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVsbmVpditic3VyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVsbGQ1Mis0bXM1QGVHcm91cHMuY29tPg=="},"prevInTopic":2883,"nextInTopic":2898,"prevInTime":2884,"nextInTime":2886,"topicId":2875,"numMessagesInTopic":7,"msgSnippet":"Ken, Two related questions: a) Would it make sense to implement last_activation in NNode as a vector and utilize a trait to evolve how many steps a delay is ","rawEmail":"Return-Path: &lt;a.carl@...&gt;\r\nX-Sender: a.carl@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 91328 invoked from network); 12 Dec 2006 23:41:57 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m40.grp.scd.yahoo.com with QMQP; 12 Dec 2006 23:41:57 -0000\r\nReceived: from unknown (HELO n28b.bullet.scd.yahoo.com) (66.94.237.30)\n  by mta9.grp.scd.yahoo.com with SMTP; 12 Dec 2006 23:41:57 -0000\r\nReceived: from [66.218.69.2] by n28.bullet.scd.yahoo.com with NNFMP; 12 Dec 2006 23:39:12 -0000\r\nReceived: from [66.218.66.71] by t2.bullet.scd.yahoo.com with NNFMP; 12 Dec 2006 23:39:12 -0000\r\nDate: Tue, 12 Dec 2006 23:39:11 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;elneiv+bsur@...&gt;\r\nIn-Reply-To: &lt;elld52+4ms5@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;afcarl2&quot; &lt;a.carl@...&gt;\r\nSubject: Re: Advice to NEAT beginner\r\nX-Yahoo-Group-Post: member; u=281645563; y=VkyKyzIki9bl0fXx-ghKpT80T4an4kuw9C_RYX6CSBRihg\r\nX-Yahoo-Profile: afcarl2\r\n\r\nKen,\n\nTwo related questions:\n\na) Would it make sense to implement last_acti=\r\nvation in NNode as a \nvector and utilize a trait to evolve how many steps a=\r\n delay is \nimplemented? Has this been previously attempted? (who/what/when?=\r\n)\n\nb) Is there reference/manual or message posting which deals with the \nop=\r\neration of traits and trait params?\n\nThanks,\n   Andy\n\n\n--- In neat@yahoogro=\r\nups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt; wrote:\n&gt;\n&gt; Hi Mike, yes I think t=\r\nhat&#39;s reasonable.  I haven&#39;t seen such a node \n&gt; attempted before, but it w=\r\nill be interesting to see if it serves a \n&gt; useful purpose.\n&gt; \n&gt; ken\n&gt; \n&gt; -=\r\n-- In neat@yahoogroups.com, &quot;aimike002&quot; &lt;aimike002@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Ken,\n&gt; =\r\n&gt; \n&gt; &gt; Thanks for the good advice.\n&gt; &gt; \n&gt; &gt; My idea to implement a delay in=\r\n the firing of a node is \n&gt; &gt; simply to allow NEAT to insert a special node=\r\n type with a \n&gt; &gt; single input & output. No transfer function. Effect is ju=\r\nst to \n&gt; delay a\n&gt; &gt; node update by one firing cycle.\n&gt; &gt; Does that feel li=\r\nke a reasonable approach to implementing\n&gt; &gt; an evolvable time delay?\n&gt; &gt; \n=\r\n&gt; &gt; Mike\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; =\r\n&lt;kstanley@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Here&#39;s a few pointers:\n&gt; &gt; &gt; \n&gt; &gt; &gt; -Debug e=\r\nvery function as soon as you create it.  For exampe, \n&gt; when \n&gt; &gt; &gt; you wri=\r\nte mutate_add_node, apply it to some dummy genomes and \n&gt; make \n&gt; &gt; &gt; sure =\r\nit really works.  Doing this will save you a lot of \n&gt; debugging \n&gt; &gt; &gt; tim=\r\ne at the end, because if you only start debugging after the \n&gt; whole \n&gt; &gt; &gt;=\r\n thing is created it will be very difficult to tease apart all \n&gt; the \n&gt; &gt; =\r\n&gt; interlocking parts to find what&#39;s causing a bug.\n&gt; &gt; &gt; \n&gt; &gt; &gt; -Memory lea=\r\nks can happen in C++ with all the dynamic memory \n&gt; &gt; &gt; allocation (and cle=\r\nanup) that NEAT requires so be careful.\n&gt; &gt; &gt; \n&gt; &gt; &gt; -To test yout system w=\r\nhen it&#39;s complete, use XOR.  It&#39;s not a \n&gt; very \n&gt; &gt; &gt; interesting experime=\r\nnt, but it usually catches major problems, \n&gt; like \n&gt; &gt; &gt; way off parameter=\r\nizations and things like that.  And it ensures \n&gt; that \n&gt; &gt; &gt; you can evolv=\r\ne structure since it requires a single hidden node \n&gt; to \n&gt; &gt; &gt; evolve.\n&gt; &gt;=\r\n &gt; \n&gt; &gt; &gt; ken\n&gt; &gt; &gt; \n&gt; &gt; &gt; --- In neat@yahoogroups.com, &quot;aimike002&quot; &lt;aimike=\r\n002@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Hi I&#39;m fairly new to NEAT. I&#39;m thinking of wri=\r\nting my own NEAT\n&gt; &gt; &gt; &gt; implementation from scratch, rather than modify on=\r\ne of the \n&gt; existing\n&gt; &gt; &gt; &gt; releases. The main reasons are fisrtly, to imp=\r\nrove my \n&gt; understanding\n&gt; &gt; &gt; &gt; and secondly to give me the flexibility to=\r\n add any extra bits \n&gt; I \n&gt; &gt; &gt; feel\n&gt; &gt; &gt; &gt; might be interesting.\n&gt; &gt; &gt; &gt; =\r\nBased on some suggestions posted here, I hope to include some \n&gt; form \n&gt; &gt; =\r\n&gt; of\n&gt; &gt; &gt; &gt; time delay as well as the ability to use a range of different =\r\n\n&gt; &gt; &gt; transfer\n&gt; &gt; &gt; &gt; functions.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; It&#39;s probably going to =\r\nbe written in C++ under MS windows. My \n&gt; &gt; &gt; interest\n&gt; &gt; &gt; &gt; at the momen=\r\nt is oriented to applying NEAT to analysis of \n&gt; noisy \n&gt; &gt; &gt; time\n&gt; &gt; &gt; &gt; =\r\nseries data.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Would appreciate any suggestions, pitfalls, f=\r\neature-wishes, \n&gt; lessons\n&gt; &gt; &gt; &gt; learnt etc, that may be useful for me to =\r\nknow in advance in \n&gt; this. \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Mike\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}