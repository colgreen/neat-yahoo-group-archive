{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"aXyAlagHrsDkfr3yFEt15_tviEn0OUz2fNLA8pXWOEGLD5AvMQl7o5Bw622umStVm0w8wr-yaDA5NGdo8Ei15lWLBHeq-bKur_w","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] SLEAT","postDate":"1127586235","msgId":2287,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4wLjE0LjAuMjAwNTA5MjQxOTE2MzEuMDI3YTIxZThAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PDQzMzMzODVDLjQwNTA0MDlAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDYuMi4wLjE0LjAuMjAwNTA5MDkxNTA1MDQuMDMyZGFhYjhAcG9wLm1haWwueWFob28uY28udWs+IDw0MzMzMzg1Qy40MDUwNDA5QGRzbC5waXBleC5jb20+"},"prevInTopic":2282,"nextInTopic":2312,"prevInTime":2286,"nextInTime":2288,"topicId":2278,"numMessagesInTopic":5,"msgSnippet":"... Not EP surely, EP is quite like GA.  I think you mean GP... [[I wish Tom Lehrer (sp?) had written a song about the abbreviations in evolutionary","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 56496 invoked from network); 24 Sep 2005 18:21:33 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m28.grp.scd.yahoo.com with QMQP; 24 Sep 2005 18:21:33 -0000\r\nReceived: from unknown (HELO cmailm3.svr.pol.co.uk) (195.92.193.19)\n  by mta6.grp.scd.yahoo.com with SMTP; 24 Sep 2005 18:21:32 -0000\r\nReceived: from modem-239.leopard.dialup.pol.co.uk ([217.135.144.239] helo=giles.yahoo.co.uk)\n\tby cmailm3.svr.pol.co.uk with esmtp (Exim 4.41)\n\tid 1EJEeQ-0001pP-9W\n\tfor neat@yahoogroups.com; Sat, 24 Sep 2005 19:21:32 +0100\r\nMessage-Id: &lt;6.2.0.14.0.20050924191631.027a21e8@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.0.14\r\nDate: Sat, 24 Sep 2005 19:23:55 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;4333385C.4050409@...&gt;\r\nReferences: &lt;6.2.0.14.0.20050909150504.032daab8@...&gt;\n &lt;4333385C.4050409@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Msg-Info: 2:12:4:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] SLEAT\r\nX-Yahoo-Group-Post: member; u=7192225; y=IjvKmYMrkuc-yv_WJoqLOBTI-enKihmKjIgEnu-NrfFk0ZzhJA\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 00:03 23/09/2005, you wrote:\n&gt;Ian Badcoe wrote:\n&gt;\n&gt; &gt;       Inspired by Colin, I have been taking a bit of a look at \n&gt; TicTacToe, and\n&gt; &gt;trying to build a system with some of my ideas for modularity built into it.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;       To this end I have created something I&#39;m calling SLEAT:\n&gt; &gt;\n&gt; &gt;               Symbolic Logic Evolution by Augmenting Topologies\n&gt; &gt;\n&gt; &gt;\n&gt;What you described sounds like EP, or at least what my poorly informed\n&gt;view of EP is. :)  By this I mean EP combines input values within a\n&gt;network (usually a tree I think) of operators to produce an output, or\n&gt;outputs (1 output per tree?). To me it seems that your functions are\n&gt;equivalent to one of these trees that map a load of inputs to an output...\n\nNot EP surely, EP is quite like GA.  I think you mean GP...\n\n[[I wish Tom Lehrer (sp?) had written a song about the abbreviations in \nevolutionary computing.]]\n\nI&#39;m not sure what you want to say.  e.g. my &quot;functions&quot; do that, yes, but \nso does any neural net with a single output (which is what I&#39;m creating at \nthe end of the day) so...\n\nI&#39;ll try to explain some more in a day or two.\n\n&gt; &gt;       This is very much work-in-progress,\n&gt; &gt;\n&gt;Isn&#39;t everything?\n&gt;\n&gt; &gt;       OK, so the basic idea is to take the ideas behind Ken&#39;s \n&gt; &quot;standard&quot; NEAT\n&gt; &gt;and add just enough new pieces to enable some modularity.  I also wanted to\n&gt; &gt;build in some ability to exploit symmetry, but my first take on that didn&#39;t\n&gt; &gt;pan out, so I&#39;ve put that on hold for the moment.\n&gt; &gt;\n&gt; &gt;\n&gt;I wonder, have any of the modular NEAT experiments investigated\n&gt;exploitation of symmetry? So e.g. when attaching modules to the inputs\n&gt;(or each other) if you have knowledge that e.g. the inputs describe\n&gt;points on a 2D surface then you can attach to those inputs in various\n&gt;permutations of rotation, translation and reflection - instead of\n&gt;attempting random combinations.\n\nThis (and your further comments below) are very like some of my thoughts, \nbut I can&#39;t get enough of a grasp on them and need to try the non-symmetric \nversion first.\n\n&gt; &gt;\n&gt; &gt;(i) by considering the input cells in terms of there geometric relationship\n&gt; &gt;to one another, we can rephrase our original expression as:\n&gt; &gt;\n&gt; &gt;X = IsMine(LeftOf(B)) AND IsMine(RightOf(B)) AND IsEmpty(B)\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;       This gives us an expression that remains valid even if B is \n&gt; substituted\n&gt; &gt;for some other cell, so we can rewrite it with a variable:\n&gt; &gt;\n&gt; &gt;X = IsMine(LeftOf(p)) AND IsMine(RightOf(p)) AND IsEmpty(p)\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;Ok this is now a bit like taking an ANN (or an EP) and scanning across\n&gt;all of the boards positions looking for good moves. So like roving eye\n&gt;only not roving. A scanning eye. (Getting feelings of Deja vu here).\n\nWhat I call an &quot;omnipresent&quot; eye.  It&#39;s value is calculated at every \npossible position...\n\n&gt; &gt;(iii) for the overall output, I have assigned each board an additional real\n&gt; &gt;value, which is its output weighting.  The overall output of the system is\n&gt; &gt;the weighted sum of all generated boards, weighted by their output\n&gt; &gt;weighting.  the system is then taken to be choosing the play the cell with\n&gt; &gt;the highest value on this output board.\n&gt; &gt;\n&gt; &gt;--\n&gt; &gt;\n&gt; &gt;       That&#39;s the basic idea.  Is anybody completely lost?\n&gt; &gt;\n&gt; &gt;\n&gt;Sort of. Actually although not central to your post I like the idea of\n&gt;exploiting symmetry, the work we were doing manually normalizing TTT\n&gt;board state was very specific to the problem at hand. A more generic\n&gt;technique for searching out symmetries sounds like a good idea. So e.g.\n&gt;when modules are connecting the connection routine could be\n&gt;parameterised to connect &#39;surfaces&#39; of different dimensionality, shape,\n&gt;size, rotation etc. in the hope that one of the surfaces described is\n&gt;relevant to the problem - so for TTT a 2D surface of size 3x3.\n&gt;\n&gt;In addition I often wonder if we shouldn&#39;t just replace the old style\n&gt;neuron with sigmoid activation fn with nodes that apply one of a fixed\n&gt;set of functions. A sort of  EP-NEAT fusion, this is basically what I\n&gt;was describing a while ago in the discussion about good benchmark\n&gt;functions. Does anyone have a good argument for/against this? I suppose\n&gt;aligning the input/output value ranges of different functions is one\n&gt;problem, but that could be solved by with a bit of normalisation I suspect.\n\nThis is also an idea on my todo-list and will fit very easily into this \nframework...\n\n&gt;Taking this further I would like to modify the sharpneat framework to be\n&gt;made more generic so that EP-NEAT could be defined by slotting an  an\n&gt;EP-NEAT node type and any associated  logic/functionality required.\n&gt;Standard NEAT with ANN&#39;s then becomes one possible implementation of a\n&gt;wider technique. Actually Ken makes this point on the NEAT web page\n&gt;somehwere - that the topolgy evolvign aspect of NEAT is useful in other\n&gt;arena&#39;s, not just ANN&#39;s.\n&gt;\n&gt;\n&gt;Colin\n\nIan\n\nIn 15 minutes everybody will be in the future.\n\n\n\n"}}