{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11966689,"authorName":"Robert Winkel","from":"&quot;Robert Winkel&quot; &lt;robert_winkel@...&gt;","profile":"yeah_its_bull","replyTo":"LIST","senderId":"t984-kgbVAYrWA1pAxwXAwZRa2qrzI4P0O9NBbHX34ia-HIP3O3dVbH7JId-V5z4cC5SXSp-1bCiOuToA_AMfRwx8pDip6T_8akpsvrn1REJvg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Network Stabilization Question","postDate":"1086011289","msgId":923,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTE4LURBVjY0ZGRxTjE5YkIwMDAyMmY4M0Bob3RtYWlsLmNvbT4=","referencesHeader":"PDEwODYwMDAyNzMuMzQ0Ljc4NDk4Lm0xMkB5YWhvb2dyb3Vwcy5jb20+"},"prevInTopic":916,"nextInTopic":924,"prevInTime":922,"nextInTime":924,"topicId":871,"numMessagesInTopic":15,"msgSnippet":"Ken, I thought about using standard perfect memory and allowing the neural network access to this memory, but this will defeat my true goal.  I don t want to","rawEmail":"Return-Path: &lt;robert_winkel@...&gt;\r\nX-Sender: robert_winkel@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 63098 invoked from network); 31 May 2004 13:48:16 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m21.grp.scd.yahoo.com with QMQP; 31 May 2004 13:48:16 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.187.244)\n  by mta1.grp.scd.yahoo.com with SMTP; 31 May 2004 13:48:16 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Mon, 31 May 2004 06:48:18 -0700\r\nReceived: from 150.101.152.49 by bay18-dav64.bay18.hotmail.com with DAV;\n\tMon, 31 May 2004 13:48:18 +0000\r\nX-Originating-Email: [robert_winkel@...]\r\nX-Sender: robert_winkel@...\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nReferences: &lt;1086000273.344.78498.m12@yahoogroups.com&gt;\r\nDate: Mon, 31 May 2004 23:48:09 +1000\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nMessage-ID: &lt;BAY18-DAV64ddqN19bB00022f83@...&gt;\r\nX-OriginalArrivalTime: 31 May 2004 13:48:18.0474 (UTC) FILETIME=[EDEB90A0:01C44715]\r\nX-eGroups-Remote-IP: 65.54.187.244\r\nFrom: &quot;Robert Winkel&quot; &lt;robert_winkel@...&gt;\r\nSubject: Re: Network Stabilization Question\r\nX-Yahoo-Group-Post: member; u=11966689\r\nX-Yahoo-Profile: yeah_its_bull\r\n\r\nKen,\n\nI thought about using standard perfect memory and allowing\nthe neural network access to this memory, but this will defeat\nmy true goal.  I don&#39;t want to have to tell the networks that\nmemory is important, or even how much to remember.\nI want evolution to find out that memory is a good thing for\nthe networks to have and also how they should use this\nmemory for their advantage.\n\nChad,\n\nIf I don&#39;t stabilize, should I at least activate the network a set\nnumber of times?  If I only activate the network once, then\nthe mapping of current input to current output can only be\nvery simple.  What I am thinking is that I pick a number of\nactivations that corresponds to the approximate memory\nsize that I am after, so that if I would like the network to\nremember the last 5 states, then I will relax the network by\nactivating it 5 times for each input.  What&#39;s your opinion on\nthis?\n\nOne thing that I am not concerned about is &quot;perfect&quot; memory.\nHumans don&#39;t have perfect memory, and it tends to degrade\nover time.  I would be happy if my experimental game player\nshows use of memory, even if it is imperfect.  One of the\nexperiments that I have coded up and had a preliminary run\nwas with Tic Tac Toe, but with one twist - I only present to\nthe network the opponent&#39;s *current* move - it is up to the\nnetwork to remember the opponent&#39;s (and its own) previous\nmoves.  During my preliminary run, the fitness of the networks\ncontinued to increase, slowly, over time.  I will soon run this\nexperiment properly, and intend to turn it into a competitive\ncoevolutionary one.  In this experiment, I set the depth for\nrelaxation to 10, simply because it was a few more than the\nrequired memory size and I assumed that this would be enough\nto evolve the necessary recurrent links for memory. I am not\nsure whether or not this is a good idea, although my preliminary\nresults showed increasing fitness.\n\n&gt; Yeah like Chad said, stabilization is not something I&#39;d use for \n&gt; memory tasks.  One hack to consider is that if you know exactly what \n&gt; prior activations you need in memory you can just have them be \n&gt; inputs, as in a sliding window of past activations.\n&gt; \n&gt; ken\n\n&gt; &gt; My first impulse to your question is to say: don&#39;t stabalize!\n&gt; &gt; Stabalizing is a method to destroy memory information by repeatedly\n&gt; &gt; inputing the current state, and waiting until that input propigates the\n&gt; &gt; network. So, yes, the network &quot;forgets&quot; previous states.\n&gt; &gt;\n&gt; &gt; chad\n\n"}}