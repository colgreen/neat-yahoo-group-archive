{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":411255308,"authorName":"torvhydda","from":"&quot;torvhydda&quot; &lt;torvhydda@...&gt;","profile":"torvhydda","replyTo":"LIST","senderId":"o3U68dRaDWFGtJb2mykb0_rx4rXVa8njZA-1DoR_TbhSgq--vfL4LBe7hGD2AyftcWd2diy1lgKvNqryZ0qYv6v3RnE_5SjY","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Discrete Neural Networks","postDate":"1261406203","msgId":5032,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhnbzE1citzNTYyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMjA5MTMzM2kxN2Y1M2ZkYnM1NGM3OTgzNTczN2YwMDI1QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4999,"nextInTopic":5047,"prevInTime":5031,"nextInTime":5033,"topicId":4984,"numMessagesInTopic":16,"msgSnippet":"... Indeed it looks like that. Reading up a bit on Genetic Programming I must say that it looks very interesting. Being a newbie both in the field of Neural","rawEmail":"Return-Path: &lt;torvhydda@...&gt;\r\nX-Sender: torvhydda@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 25402 invoked from network); 21 Dec 2009 14:36:52 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.sp2.yahoo.com with QMQP; 21 Dec 2009 14:36:52 -0000\r\nX-Received: from unknown (HELO n46b.bullet.mail.sp1.yahoo.com) (66.163.168.160)\n  by mta3.grp.sp2.yahoo.com with SMTP; 21 Dec 2009 14:36:52 -0000\r\nX-Received: from [69.147.65.150] by n46.bullet.mail.sp1.yahoo.com with NNFMP; 21 Dec 2009 14:36:44 -0000\r\nX-Received: from [98.137.34.72] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 21 Dec 2009 14:36:44 -0000\r\nDate: Mon, 21 Dec 2009 14:36:43 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hgo15r+s562@...&gt;\r\nIn-Reply-To: &lt;727a406c0912091333i17f53fdbs54c79835737f0025@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;torvhydda&quot; &lt;torvhydda@...&gt;\r\nSubject: Re: Discrete Neural Networks\r\nX-Yahoo-Group-Post: member; u=411255308; y=qWN4RD_5-2fHQmX9y0te4V0WNwQPPeW18YdqGVJ-DonQF5Aw\r\nX-Yahoo-Profile: torvhydda\r\n\r\n\n\n\n\n\n\n\n\n--- In neat@yahoogroups.com, Colin Green &lt;colin.green1@...&gt; wrote:\n=\r\n&gt;\n&gt; It just occured to me that you&#39;re potentially describing Genetic\n&gt; Prog=\r\nramming. Those guys evolve trees and sometimes recursive networks\n&gt; of logi=\r\ncal and arithmetic operations.\n\nIndeed it looks like that. Reading up a bit=\r\n on Genetic Programming I must say that it looks very interesting. Being a =\r\nnewbie both in the field of Neural Networks & Genetic Programming I still h=\r\nave a lot to learn.\n\nThe graphs I evolve can only have loops if at least on=\r\ne of the links in the loop is a recurrent link. Dunno what kind of graphs t=\r\nhese are since I don&#39;t yet speak the lingo of Neural Networks. Sometimes in=\r\n rare cases the mating code produce graphs that contain loops made up of no=\r\nn-recurrent links. These graphs I throw away and replace them with a mutate=\r\nd clone of the mother.\n\nThe mating code can also produce islands in the gra=\r\nph. These islands can contain loops made up of non-recurrent links, but sin=\r\nce I never reach these islands when traversing the graph they never bother =\r\nme. Gene mutations can make paths into these islands but I detect these cas=\r\nes.\n\nI also allow for nodes to have zero inputs, these will output zero. Si=\r\nnce there is possible to start with a genome only consisting of the input &=\r\n output nodes and zero genes, I took the decision to allow for nodes like t=\r\nhis to be valid nodes.\n\nSince junk nodes & genes accumulate during evolutio=\r\nn maybe some kind of cleanup would be nice to have in the future.\n\nMaybe I&#39;=\r\nm already doing GP in my implementation of NEAT (v0.7). The graphs I evolve=\r\n I parse starting from each of the output nodes. During the traversal of th=\r\ne graph I generate code, which for the moment only has one operation, the s=\r\nummation operation. Later on in the activate() function I intepret this cod=\r\ne.\n\nInstead of producing code that I intepret I could spit out machine code=\r\n for the summation I guess. That would be interesting to see. Don&#39;t know so=\r\n much about the X86 architecture I&#39;m programming on, so dunno if it will be=\r\n so much faster. Maybe someone on this group feels like implement it. :)\nHa=\r\nve a look at _genome_codegen() && _genome_activate() in neat.c. I&#39;m guessin=\r\ng here but I do think it would be (very) easy to produce machine code inste=\r\nad.\n\n/Magnus\n\n\n"}}