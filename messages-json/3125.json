{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"XEqkdgojX_AZU7EWwARH38Q9RX5iEqLTJ9Uusxc2uj7L1C6AvQFatjMvhXPdEsRko8KjPcE2zTllXrCLT-TiNR7zNXgrrZkVAvXGNfOhUvMc","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: HyperNEAT release site change and more info","postDate":"1176387738","msgId":3125,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGV2bGZhcSs3dGM4QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGV2bGJtZStlc2thQGVHcm91cHMuY29tPg=="},"prevInTopic":3124,"nextInTopic":3126,"prevInTime":3124,"nextInTime":3126,"topicId":3121,"numMessagesInTopic":16,"msgSnippet":"To add on to Jason s point about network activation, there is a pretty long history of confusion regarding how arbitrary-toplogy networks should be activated.","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 53181 invoked from network); 12 Apr 2007 14:27:44 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m45.grp.scd.yahoo.com with QMQP; 12 Apr 2007 14:27:44 -0000\r\nReceived: from unknown (HELO n5c.bullet.sp1.yahoo.com) (69.147.64.187)\n  by mta11.grp.scd.yahoo.com with SMTP; 12 Apr 2007 14:27:44 -0000\r\nReceived: from [216.252.122.217] by n5.bullet.sp1.yahoo.com with NNFMP; 12 Apr 2007 14:22:20 -0000\r\nReceived: from [66.218.69.1] by t2.bullet.sp1.yahoo.com with NNFMP; 12 Apr 2007 14:22:20 -0000\r\nReceived: from [66.218.66.84] by t1.bullet.scd.yahoo.com with NNFMP; 12 Apr 2007 14:22:20 -0000\r\nDate: Thu, 12 Apr 2007 14:22:18 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;evlfaq+7tc8@...&gt;\r\nIn-Reply-To: &lt;evlbme+eska@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: HyperNEAT release site change and more info\r\nX-Yahoo-Group-Post: member; u=54567749; y=4pR271hNQ61MqwUwYXFuPiCTLzutaLQPEBGp81MC7isnMq6fT_-b\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nTo add on to Jason&#39;s point about network activation, there is a \npretty lon=\r\ng history of confusion regarding how arbitrary-toplogy \nnetworks should be =\r\nactivated.  I myself have gone through several \nrealizations and counter-re=\r\nalizations over the years about how it \nshould be done.  \n\nNow knowing what=\r\n I know from experience, the most general answer is \nthat there is no right=\r\n way.  You can do it however you want.  As long \nas you are consistent abou=\r\nt it, evolution will optimize the networks \nfor the particular activation m=\r\nethod you choose.  \n\nIn more detail, there are pros and cons to the primary=\r\n two ways of \ndoing it.  The &quot;in order&quot; way that requires traversing the ne=\r\ntwork to \nfind out how to activate the whole thing in one pass can potentia=\r\nlly \ntake less computation (after the order has been computed), but it has =\r\n\nother drawbacks.  One is the recurrence problem that Jason pointed \nout.  =\r\nActually, that problem is symptomatic of a broader issue about \nthe interpr=\r\netation of time in a brain.\n\nThe issue is that in the real world, in a give=\r\nn amount of time t, \nactivation can only pass over a finite number of conne=\r\nctions, due to \nthe constraints of physics.  Thus, in a sense the idea that=\r\n you can \nactivate the &quot;whole brain&quot; in some prespecified order in one inst=\r\nant \nbreaks the anology with physical brains.  That may be fine, though, \ni=\r\nf you don&#39;t care about such analogies.  However, by following the \nphysical=\r\n analogy neural networks have more intuitive properties: In a \nshort amount=\r\n of time they can make only simple decisions, but in a \nlonger time they ca=\r\nn make more complex decisions.  The &quot;speed of \nthought&quot; in effect becomes t=\r\nhe number of connections traversed in a \nsingle tick of the clock.  Thus, y=\r\nou can control the amount of \nthought that happens in any one instant by de=\r\nciding how many \nactivations to perform in one tick.  \n\nThe meaning of recu=\r\nrrence is also better defined in this view, as \nJason says:  In a real brai=\r\nn recurrent connections have activation \npassing through them on every tick=\r\n, not only once for every complete \npass through the brain.  In effect ther=\r\ne is less &quot;recurrent \ncomputation&quot; per pass through the brain in the most s=\r\ntraightforward \nin-order method (of course there may be other ad hoc means =\r\nof \nameliorating this problem).  Thus, it is possible some power is lost \ni=\r\nn recurrent systems that are activated once per total pass.\n\nAnother advant=\r\nage is programming: If you do the once-per-tick model, \nthen order doesn&#39;t =\r\nmatter, which is a lot easier to program without \nmaking a mistake.\n\nOn the=\r\n other hand, the &quot;in order&quot; method gets you an &quot;answer&quot; faster, \nso there a=\r\nre pros and cons.  The &quot;answer&quot; will not be exactly the \nsame as the once-p=\r\ner-tick method if there are recurrent connections, \nbut evolution will deal=\r\n with it either way.\n\nMy personal preference, as you can see in my code, is=\r\n the once-per-\ntick method.\n\nken\n\n\n--- In neat@yahoogroups.com, &quot;Jason Gauc=\r\ni&quot; &lt;jgmath2000@...&gt; wrote:\n&gt;\n&gt; I haven&#39;t tried to compile my application fo=\r\nr OS/X, but I think if \n&gt; you follow the instructions for linux, it should =\r\ncompile fine.\n&gt; \n&gt; I can try to create an OS/X binary next time I&#39;m in the =\r\nlab.\n&gt; \n&gt; With regards to your question on network order, I think that the =\r\n\n&gt; reason why I don&#39;t set it up so my nodes are only evaluated once is \n&gt; b=\r\necause it becomes more difficult as you add recurrent \nconnections.  \n&gt; It&#39;=\r\ns hard to say if a node that receieves a recurrent connection \n&gt; input shou=\r\nld also process non-recurrent inputs, should modify its \n&gt; current value, o=\r\nr some other behavior.  If the decision is to \nreceive \n&gt; all inputs simult=\r\naneously, then you might as well just update the \n&gt; whole network for some =\r\nset number of iterations rather than try to \n&gt; model the flow in a way that=\r\n might be hard for the network to train \n&gt; on.\n&gt; \n&gt; --- In neat@yahoogroups=\r\n.com, Stephen Waits &lt;steve@&gt; wrote:\n&gt; &gt;\n&gt; &gt; \n&gt; &gt; On Apr 11, 2007, at 9:48 P=\r\nM, Kenneth Stanley wrote:\n&gt; &gt; \n&gt; &gt; &gt; I want to mention that Jason put a lot=\r\n of effort in to make this\n&gt; &gt; &gt; package user-friendly, both from the execu=\r\ntable and source code\n&gt; &gt; &gt; standpoint.\n&gt; &gt; \n&gt; &gt; I didn&#39;t run it (I&#39;d love =\r\nan OS X binary), but I took at look at  \n&gt; &gt; Jason&#39;s code for a few minutes=\r\n last night.  It is one of the \n&gt; cleaner  \n&gt; &gt; NEAT implementations.\n&gt; &gt; \n=\r\n&gt; &gt; I do have one question.. is there some reason you guys don&#39;t \nsort  \n&gt; =\r\n&gt; your networks so that nodes only need to be updated once?  \nNetwork  \n&gt; &gt;=\r\n order is easily determined via BFS.  Then you just need \nsome &quot;same  \n&gt; &gt; =\r\nlayer order&quot; heuristic (such as lower innovation numbers \nfirst).   \n&gt; &gt; It=\r\n&#39;s a common theme in NEAT implementations - I assume because \n&gt; lots  \n&gt; &gt; =\r\nof people used Ken&#39;s original code?  Or am I missing something???\n&gt; &gt; \n&gt; &gt; =\r\nI plan on digging into the code some more in the next few days.   \n&gt; &gt; Than=\r\nks for publishing it!\n&gt; &gt; \n&gt; &gt; --Steve\n&gt; &gt;\n&gt;\n\n\n\n"}}