{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":200957992,"authorName":"Jason Gauci","from":"Jason Gauci &lt;jgmath2000@...&gt;","profile":"jgmath2000","replyTo":"LIST","senderId":"V3yeK9x7yEswkWtqbfw9ddhpULAMx83FtSuWyFV2RuDJj9daHqh_etcj0yXNz-a_4m3Eb3Oc7sBpoxV6Ajqn4w7Va6MnL03SOQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Problem with HyperneatC++","postDate":"1321423348","msgId":5683,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRUI1NXRYQUU0a1FNWXZuWncyOWZYdDdmNXNRaFNyVF95TFJzQm1jK3FDY2lESzlQQUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGo5dXI5NSs2MnFvQGVHcm91cHMuY29tPg==","referencesHeader":"PGo5dXI5NSs2MnFvQGVHcm91cHMuY29tPg=="},"prevInTopic":5682,"nextInTopic":5684,"prevInTime":5682,"nextInTime":5684,"topicId":5682,"numMessagesInTopic":5,"msgSnippet":"Your example is missing a clone function.  Can you add it?  If the clonefunction isn t doing a deep copy of the experiment, you might have two threads that are","rawEmail":"Return-Path: &lt;jgmath2000@...&gt;\r\nX-Sender: jgmath2000@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 80732 invoked from network); 16 Nov 2011 06:02:31 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m3.grp.sp2.yahoo.com with QMQP; 16 Nov 2011 06:02:31 -0000\r\nX-Received: from unknown (HELO mail-vx0-f181.google.com) (209.85.220.181)\n  by mta4.grp.sp2.yahoo.com with SMTP; 16 Nov 2011 06:02:31 -0000\r\nX-Received: by mail-vx0-f181.google.com with SMTP id fk14so200874vcb.40\n        for &lt;neat@yahoogroups.com&gt;; Tue, 15 Nov 2011 22:02:30 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.52.69.52 with SMTP id b20mr48452354vdu.85.1321423348037; Tue,\n 15 Nov 2011 22:02:28 -0800 (PST)\r\nX-Received: by 10.52.108.136 with HTTP; Tue, 15 Nov 2011 22:02:28 -0800 (PST)\r\nIn-Reply-To: &lt;j9ur95+62qo@...&gt;\r\nReferences: &lt;j9ur95+62qo@...&gt;\r\nDate: Tue, 15 Nov 2011 22:02:28 -0800\r\nMessage-ID: &lt;CAEB55tXAE4kQMYvnZw29fXt7f5sQhSrT_yLRsBmc+qCciDK9PA@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=20cf307f370241f9f004b1d3d9bb\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jason Gauci &lt;jgmath2000@...&gt;\r\nSubject: Re: [neat] Problem with HyperneatC++\r\nX-Yahoo-Group-Post: member; u=200957992; y=_zE5HWZ4vqFUhJFyRa7GCYeRyeOtYx7epOTDB6fApAPQ8XgfVA\r\nX-Yahoo-Profile: jgmath2000\r\n\r\n\r\n--20cf307f370241f9f004b1d3d9bb\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nYour example is missing a clone function.  Can you add it?  If the\nclonefun=\r\nction isn&#39;t doing a deep copy of the experiment, you might have two\nthreads=\r\n that are writing to the same data.\n\nAlso, are you using the MPI and/or GPU=\r\n switches?\n\nOn Tue, Nov 15, 2011 at 3:06 PM, yyyyaun &lt;yyyyaun@...&gt; wr=\r\note:\n\n&gt; **\n&gt;\n&gt;\n&gt; Hi,\n&gt;\n&gt; I&#39;m trying to apply Hyperneat to the Robocup domai=\r\nn using the HyperneatC++\n&gt; 4.0 framework. So far, I&#39;ve managed to set up an=\r\n experiment which runs fine\n&gt; for some time, but after some generations (us=\r\nually about 100), following\n&gt; exception is thrown by\n&gt; the framework:\n&gt;\n&gt; .=\r\n..\n&gt; Generation 49: overall_average =3D 61.01\n&gt; Champion fitness: 106\n&gt; # o=\r\nf Species: 18\n&gt; compat threshold: 18.3\n&gt; DONE PRODUCING\n&gt; PREPROCESSING POP=\r\nULATION\n&gt; debug:toNodeIndex.z:1 fromNodeIndex.z:262144 layers.size:2\n&gt; CAUG=\r\nHT ERROR AT\n&gt;\n&gt; /home/yaun/HyperNeatC++-4.0/NE/HyperNEAT/Hypercube_NEAT/src=\r\n/HCUBE_EvaluationSet.cpp:65\n&gt; OOPS at\n&gt;\n&gt; /home/yaun/HyperNeatC++-4.0/NE/Hy=\r\nperNEAT/NEAT/src/NEAT_FastLayeredNetwork.cpp:152\n&gt; Press enter to continue\n=\r\n&gt;\n&gt; This error occurs in FastLayeredNetwork::setLink, which is called by\n&gt; =\r\nLayeredSubstrate::populateSubstrate. As you can see from the output, wrong\n=\r\n&gt; node indices are supplied as arguments.\n&gt;\n&gt; I&#39;m new to Hyperneat and C++ =\r\nand so I don&#39;t know if this exception is a\n&gt; fault in my experiment or a bu=\r\ng in the Hyperneat framework. Any help would\n&gt; be appreciated!\n&gt;\n&gt; The mini=\r\nmal test experiment which produced the output above is as follows:\n&gt;\n&gt; Test=\r\nExperiment::TestExperiment(string _experimentName,int _threadID)\n&gt; :\n&gt; Expe=\r\nriment(_experimentName,_threadID)\n&gt; {\n&gt; //define substrate\n&gt; layerInfo =3D =\r\nNEAT::LayeredSubstrateInfo();\n&gt;\n&gt; //input layer\n&gt; layerInfo.layerSizes.push=\r\n_back(Vector2&lt;int&gt;(18,23));\n&gt; layerInfo.layerValidSizes.push_back(Vector2&lt;i=\r\nnt&gt;(18,23));\n&gt; layerInfo.layerNames.push_back(&quot;Input&quot;);\n&gt; layerInfo.layerIs=\r\nInput.push_back(true);\n&gt; layerInfo.layerLocations.push_back(Vector3&lt;float&gt;(=\r\n0,0,0));\n&gt;\n&gt; //output layer\n&gt; layerInfo.layerSizes.push_back(Vector2&lt;int&gt;(1=\r\n8,23));\n&gt; layerInfo.layerValidSizes.push_back(Vector2&lt;int&gt;(18,23));\n&gt; layer=\r\nInfo.layerNames.push_back(&quot;Output&quot;);\n&gt; layerInfo.layerIsInput.push_back(fal=\r\nse);\n&gt; layerInfo.layerLocations.push_back(Vector3&lt;float&gt;(0,8,0));\n&gt;\n&gt; //inp=\r\nut layer connects to output layer\n&gt;\n&gt; layerInfo.layerAdjacencyList.push_bac=\r\nk(std::pair&lt;string,string&gt;(&quot;Input&quot;,&quot;Output&quot;));\n&gt;\n&gt; layerInfo.normalize =3D =\r\ntrue;\n&gt; layerInfo.useOldOutputNames =3D false;\n&gt;\n&gt; substrate =3D NEAT::Laye=\r\nredSubstrate&lt;float&gt;();\n&gt; substrate.setLayerInfo(layerInfo);\n&gt; }\n&gt;\n&gt; Genetic=\r\nPopulation* TestExperiment::createInitialPopulation(int\n&gt; populationSize)\n&gt;=\r\n {\n&gt; //define cppn\n&gt; GeneticPopulation *population =3D new GeneticPopulatio=\r\nn();\n&gt; vector&lt;GeneticNodeGene&gt; genes;\n&gt; genes.push_back(GeneticNodeGene(&quot;Bi=\r\nas&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; genes.push_back(GeneticNodeGene(&quot;X1&quot;,&quot;Netw=\r\norkSensor&quot;,0,false));\n&gt; genes.push_back(GeneticNodeGene(&quot;Y1&quot;,&quot;NetworkSensor=\r\n&quot;,0,false));\n&gt; genes.push_back(GeneticNodeGene(&quot;X2&quot;,&quot;NetworkSensor&quot;,0,false=\r\n));\n&gt; genes.push_back(GeneticNodeGene(&quot;Y2&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; gen=\r\nes.push_back(GeneticNodeGene(&quot;Output_Input_Output&quot;,\n&gt; &quot;NetworkOutputNode&quot;, =\r\n1, false, ACTIVATION_FUNCTION_SIGMOID));\n&gt;\n&gt; for (int a=3D0;a&lt;populationSiz=\r\ne;a++)\n&gt; {\n&gt; shared_ptr&lt;GeneticIndividual&gt; individual(new\n&gt; GeneticIndividu=\r\nal(genes,true,1.0));\n&gt;\n&gt; for (int b=3D0;b&lt;0;b++)\n&gt; {\n&gt; individual-&gt;testMuta=\r\nte();\n&gt; }\n&gt;\n&gt; population-&gt;addIndividual(individual);\n&gt; }\n&gt;\n&gt; cout &lt;&lt; &quot;Finis=\r\nhed creating population&#92;n&quot;;\n&gt; return population;\n&gt; }\n&gt;\n&gt; void TestExperimen=\r\nt::populateSubstrate(shared_ptr&lt;NEAT::GeneticIndividual&gt;\n&gt; individual)\n&gt; {\n=\r\n&gt; if (substrateIndividual=3D=3Dindividual)\n&gt; {\n&gt; //Don&#39;t bother remaking th=\r\ne same substrate\n&gt; return;\n&gt; }\n&gt;\n&gt; substrateIndividual=3Dindividual;\n&gt;\n&gt; su=\r\nbstrate.populateSubstrate(individual);\n&gt; }\n&gt;\n&gt; void TestExperiment::process=\r\nGroup(shared_ptr&lt;NEAT::GeneticGeneration&gt;\n&gt; generation)\n&gt; {\n&gt; //cout &lt;&lt; &quot;Pr=\r\nocessing evaluation...&#92;n&quot;;\n&gt; shared_ptr&lt;NEAT::GeneticIndividual&gt; individual=\r\n =3D group.front();\n&gt; //You get 10 points just for being processed, wahooo!=\r\n\n&gt; individual-&gt;setFitness(10);\n&gt;\n&gt; populateSubstrate(individual);\n&gt;\n&gt; subst=\r\nrate.getNetwork()-&gt;reinitialize();\n&gt;\n&gt; substrate.getNetwork()-&gt;update();\n&gt;\n=\r\n&gt; individual-&gt;reward(rand() % 100 + 1);\n&gt; }\n&gt;\n&gt; Thanks in advance,\n&gt; Thomas=\r\n\n&gt;\n&gt;  \n&gt;\n\r\n--20cf307f370241f9f004b1d3d9bb\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nYour example is missing a clone function.=A0 Can you add it?=A0 If the clon=\r\nefunction isn&#39;t doing a deep copy of the experiment, you might have two=\r\n threads that are writing to the same data.&lt;br&gt;&lt;br&gt;Also, are you using the =\r\nMPI and/or GPU switches?&lt;br&gt;\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Tue, Nov 15,=\r\n 2011 at 3:06 PM, yyyyaun &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:yyyyaun@g=\r\nmail.com&quot;&gt;yyyyaun@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D&quot;g=\r\nmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-l=\r\neft:1ex;&quot;&gt;\n\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span=\r\n&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Hi,&lt;br&gt;\n&lt;br&gt;=\r\n\nI&#39;m trying to apply Hyperneat to the Robocup domain using the Hypernea=\r\ntC++ 4.0 framework. So far, I&#39;ve managed to set up an experiment which =\r\nruns fine for some time, but after some generations (usually about 100), fo=\r\nllowing exception is thrown by&lt;br&gt;\n\nthe framework:&lt;br&gt;\n&lt;br&gt;\n...&lt;br&gt;\nGenerat=\r\nion 49: overall_average =3D 61.01&lt;br&gt;\nChampion fitness: 106 &lt;br&gt;\n# of Speci=\r\nes: 18&lt;br&gt;\ncompat threshold: 18.3&lt;br&gt;\nDONE PRODUCING&lt;br&gt;\nPREPROCESSING POPU=\r\nLATION&lt;br&gt;\ndebug:toNodeIndex.z:1 fromNodeIndex.z:262144 layers.size:2&lt;br&gt;\nC=\r\nAUGHT ERROR AT&lt;br&gt;\n/home/yaun/HyperNeatC++-4.0/NE/HyperNEAT/Hypercube_NEAT/=\r\nsrc/HCUBE_EvaluationSet.cpp:65&lt;br&gt;\nOOPS at&lt;br&gt;\n/home/yaun/HyperNeatC++-4.0/=\r\nNE/HyperNEAT/NEAT/src/NEAT_FastLayeredNetwork.cpp:152&lt;br&gt;\nPress enter to co=\r\nntinue&lt;br&gt;\n&lt;br&gt;\nThis error occurs in FastLayeredNetwork::setLink, which is =\r\ncalled by&lt;br&gt;\nLayeredSubstrate::populateSubstrate. As you can see from the =\r\noutput, wrong node indices are supplied as arguments. &lt;br&gt;\n&lt;br&gt;\nI&#39;m new=\r\n to Hyperneat and C++ and so I don&#39;t know if this exception is a fault =\r\nin my experiment or a bug in the Hyperneat framework. Any help would be app=\r\nreciated!&lt;br&gt;\n&lt;br&gt;\nThe minimal test experiment which produced the output ab=\r\nove is as follows:&lt;br&gt;\n&lt;br&gt;\nTestExperiment::TestExperiment(string _experime=\r\nntName,int _threadID)&lt;br&gt;\n                :   &lt;br&gt;\n                        =\r\nExperiment(_experimentName,_threadID)&lt;br&gt;\n{   &lt;br&gt;\n        //define substra=\r\nte&lt;br&gt;\n        layerInfo =3D NEAT::LayeredSubstrateInfo();&lt;br&gt;\n&lt;br&gt;\n//input=\r\n layer&lt;br&gt;\n        layerInfo.layerSizes.push_back(Vector2&lt;int&gt;(18,23)=\r\n);&lt;br&gt;\n        layerInfo.layerValidSizes.push_back(Vector2&lt;int&gt;(18,23=\r\n));&lt;br&gt;\n        layerInfo.layerNames.push_back(&quot;Input&quot;);&lt;br&gt;\n    =\r\n    layerInfo.layerIsInput.push_back(true);&lt;br&gt;\n        layerInfo.layerLoca=\r\ntions.push_back(Vector3&lt;float&gt;(0,0,0));&lt;br&gt;\n&lt;br&gt;\n//output layer&lt;br&gt;\n =\r\n       layerInfo.layerSizes.push_back(Vector2&lt;int&gt;(18,23));&lt;br&gt;\n     =\r\n   layerInfo.layerValidSizes.push_back(Vector2&lt;int&gt;(18,23));&lt;br&gt;\n    =\r\n    layerInfo.layerNames.push_back(&quot;Output&quot;);&lt;br&gt;\n        layerIn=\r\nfo.layerIsInput.push_back(false);&lt;br&gt;\n        layerInfo.layerLocations.push=\r\n_back(Vector3&lt;float&gt;(0,8,0));&lt;br&gt;\n&lt;br&gt;\n//input layer connects to outp=\r\nut layer&lt;br&gt;\n       layerInfo.layerAdjacencyList.push_back(std::pair&lt;str=\r\ning,string&gt;(&quot;Input&quot;,&quot;Output&quot;));&lt;br&gt;\n&lt;br&gt;\nlayerInfo.n=\r\normalize =3D true;&lt;br&gt;\n        layerInfo.useOldOutputNames =3D false;&lt;br&gt;\n&lt;=\r\nbr&gt;\nsubstrate =3D NEAT::LayeredSubstrate&lt;float&gt;();&lt;br&gt;\n        substr=\r\nate.setLayerInfo(layerInfo);&lt;br&gt;\n}   &lt;br&gt;\n&lt;br&gt;\nGeneticPopulation* TestExper=\r\niment::createInitialPopulation(int populationSize)&lt;br&gt;\n{   &lt;br&gt;\n     //defi=\r\nne cppn&lt;br&gt;\n     GeneticPopulation *population =3D new GeneticPopulation();=\r\n&lt;br&gt;\n     vector&lt;GeneticNodeGene&gt; genes;&lt;br&gt;\n     genes.push_back(Gen=\r\neticNodeGene(&quot;Bias&quot;,&quot;NetworkSensor&quot;,0,false));&lt;br&gt;\n    =\r\n genes.push_back(GeneticNodeGene(&quot;X1&quot;,&quot;NetworkSensor&quot;,0=\r\n,false));&lt;br&gt;\n     genes.push_back(GeneticNodeGene(&quot;Y1&quot;,&quot;Net=\r\nworkSensor&quot;,0,false));&lt;br&gt;\n     genes.push_back(GeneticNodeGene(&quot;=\r\nX2&quot;,&quot;NetworkSensor&quot;,0,false));&lt;br&gt;\n     genes.push_back(Gene=\r\nticNodeGene(&quot;Y2&quot;,&quot;NetworkSensor&quot;,0,false));&lt;br&gt;\n     ge=\r\nnes.push_back(GeneticNodeGene(&quot;Output_Input_Output&quot;, &quot;Networ=\r\nkOutputNode&quot;, 1, false, ACTIVATION_FUNCTION_SIGMOID));&lt;br&gt;\n           =\r\n         &lt;br&gt;\n     for (int a=3D0;a&lt;populationSize;a++)&lt;br&gt;\n     {   &lt;br=\r\n&gt;\n             shared_ptr&lt;GeneticIndividual&gt; individual(new GeneticIn=\r\ndividual(genes,true,1.0));&lt;br&gt;\n&lt;br&gt;\nfor (int b=3D0;b&lt;0;b++)&lt;br&gt;\n        =\r\n     {   &lt;br&gt;\n                     individual-&gt;testMutate();&lt;br&gt;\n       =\r\n      }   &lt;br&gt;\n&lt;br&gt;\npopulation-&gt;addIndividual(individual);&lt;br&gt;\n     }   =\r\n&lt;br&gt;\n&lt;br&gt;\ncout &lt;&lt; &quot;Finished creating population&#92;n&quot;;&lt;br&gt;\n   =\r\n  return population;&lt;br&gt;\n}   &lt;br&gt;\n&lt;br&gt;\nvoid TestExperiment::populateSubstra=\r\nte(shared_ptr&lt;NEAT::GeneticIndividual&gt; individual)&lt;br&gt;\n{&lt;br&gt;\n        =\r\nif (substrateIndividual=3D=3Dindividual)&lt;br&gt;\n        {&lt;br&gt;\n                =\r\n//Don&#39;t bother remaking the same substrate&lt;br&gt;\n                return;&lt;=\r\nbr&gt;\n        }&lt;br&gt;\n&lt;br&gt;\nsubstrateIndividual=3Dindividual;&lt;br&gt;\n&lt;br&gt;\nsubstrate=\r\n.populateSubstrate(individual);&lt;br&gt;\n}&lt;br&gt;\n&lt;br&gt;\nvoid TestExperiment::process=\r\nGroup(shared_ptr&lt;NEAT::GeneticGeneration&gt; generation)&lt;br&gt;\n{&lt;br&gt;\n     =\r\n   //cout &lt;&lt; &quot;Processing evaluation...&#92;n&quot;;&lt;br&gt;\n        shar=\r\ned_ptr&lt;NEAT::GeneticIndividual&gt; individual =3D group.front();&lt;br&gt;\n   =\r\n     //You get 10 points just for being processed, wahooo!&lt;br&gt;\n        indi=\r\nvidual-&gt;setFitness(10);&lt;br&gt;\n&lt;br&gt;\npopulateSubstrate(individual);&lt;br&gt;\n&lt;br&gt;=\r\n\nsubstrate.getNetwork()-&gt;reinitialize();&lt;br&gt;\n&lt;br&gt;\nsubstrate.getNetwork()=\r\n-&gt;update();&lt;br&gt;\n&lt;br&gt;\nindividual-&gt;reward(rand() % 100 + 1);&lt;br&gt;\n}&lt;br&gt;\n=\r\n&lt;br&gt;\nThanks in advance,&lt;br&gt;\nThomas&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n  =\r\n  &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/bloc=\r\nkquote&gt;&lt;/div&gt;&lt;br&gt;\n\r\n--20cf307f370241f9f004b1d3d9bb--\r\n\n"}}