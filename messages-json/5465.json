{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":175530192,"authorName":"Rob Marsden","from":"Rob Marsden &lt;rob@...&gt;","profile":"rmarsdena","replyTo":"LIST","senderId":"UiUsQlCKxdmFoYdn-tSQkDG2S4l_IKnvDBYVSyBHbmvYnUPtvUWeYdr5T8NoNwhSgjq28oTvYVoNDz-Lk2sZKEv0gw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Memory usage and the generations stack in NEAT","postDate":"1296035227","msgId":5465,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDREM0ZFRDlCLjYwODAzQGdpc3RpeC5jb20+","inReplyToHeader":"PGloZDgzaitiZGVjQGVHcm91cHMuY29tPg==","referencesHeader":"PGloZDgzaitiZGVjQGVHcm91cHMuY29tPg=="},"prevInTopic":5463,"nextInTopic":0,"prevInTime":5464,"nextInTime":5466,"topicId":5459,"numMessagesInTopic":5,"msgSnippet":"... Thanks for the information. I ve cheated slightly, so that I could check whether or not my thinking was correct. I left the vector of generations in place,","rawEmail":"Return-Path: &lt;rob@...&gt;\r\nX-Sender: rob@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 59691 invoked from network); 26 Jan 2011 09:47:13 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m11.grp.re1.yahoo.com with QMQP; 26 Jan 2011 09:47:13 -0000\r\nX-Received: from unknown (HELO gisti-46062-001.dsvr.co.uk) (212.69.198.226)\n  by mta2.grp.re1.yahoo.com with SMTP; 26 Jan 2011 09:47:13 -0000\r\nX-Received: from [62.3.122.222] (helo=[192.168.1.7])\n\tby gisti-46062-001.dsvr.co.uk with esmtpa (Exim 4.69)\n\t(envelope-from &lt;rob@...&gt;)\n\tid 1Pi1y4-0006QS-TW; Wed, 26 Jan 2011 09:47:12 +0000\r\nMessage-ID: &lt;4D3FED9B.60803@...&gt;\r\nDate: Wed, 26 Jan 2011 09:47:07 +0000\r\nOrganization: Gistix (Northern) Limited\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.2.13) Gecko/20101207 Thunderbird/3.1.7\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;ihd83j+bdec@...&gt;\r\nIn-Reply-To: &lt;ihd83j+bdec@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nFrom: Rob Marsden &lt;rob@...&gt;\r\nSubject: Re: [neat] Re: Memory usage and the generations stack in NEAT\r\nX-Yahoo-Group-Post: member; u=175530192; y=OwK0FgzlYJXLVQI5UU9uci78NNnPqC1VQD-1oMDYx-__Sgy1\r\nX-Yahoo-Profile: rmarsdena\r\n\r\nOn 22/01/2011 00:24, jgmath2000 wrote:\n&gt; Hey Rob,\n&gt;\n&gt; You are correct, the generational data is maintained for each\n&gt; generation, so this will continue to use more memory as you run evolution.\n&gt;\n&gt; With that said, you can remove the individuals from older generations to\n&gt; save memory. I believe that the code currently removes all individuals\n&gt; except the generation champion from old generations, but you could even\n&gt; remove the generation champion if you desire to save the extra space.\n&gt;\n&gt; Because the generations don&#39;t have an ID and are index-based, to be\n&gt; completely free of memory usage creep, you&#39;d have to add a &quot;generation\n&gt; ID&quot; variable to the generations, and use that instead of the list index\n&gt; to find a generation. Then you could remove older generations entirely.\n&gt;\n&gt; --- In neat@yahoogroups.com &lt;mailto:neat%40yahoogroups.com&gt;, Rob Marsden\n\nThanks for the information. I&#39;ve cheated slightly, so that I could check \nwhether or not my thinking was correct. I left the vector of generations \nin place, but as a new generation was added at the end, the previous \nentry in the vector was deleted, leaving a null pointer in its place. I \nfigured that a null point would cause a sufficiently spectacular crash, \nif it were a problem. The vector still grows, but only by 4, or so, \nbytes per generation. I&#39;ve now been running 4 models, since Monday, and \nall looks well, with no obvious signs of memory creep.\n\nSo all I need to do now, is to see what the history gets used for and \nreplace my kludge with a reasoned change to achieve the same goal. In \nthe words of Mr Oats, &quot;I may be gone some time&quot;.\n\nThanks again, to Stan and yourself, for the guidance.\n\n-- \nRob Marsden\nGistix (Northern) Limited\n\n"}}