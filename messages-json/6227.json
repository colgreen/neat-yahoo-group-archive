{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":200957992,"authorName":"Jason Gauci","from":"Jason Gauci &lt;jgmath2000@...&gt;","profile":"jgmath2000","replyTo":"LIST","senderId":"hGO2thlMbMJPa-vZdOOSWbTHS1WBK9_Tec4IMQ5xXX2YD2joTfgQPEbUHCraohKL4aHXVRy96OqzHN3-BdZj8uRJu6qXfPgHNQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] RE: Starting with Neat, evolving CPPN&#39;s questions","postDate":"1388592663","msgId":6227,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRUI1NXRYM1FmVHA3dGtMdC1xaXVLMGMzazZ5YjIwSkxPLWlOU040WjFGX21xSzBSUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGxhMTk4ditvZWhudjdAWWFob29Hcm91cHMuY29tPg==","referencesHeader":"PGw5cG8xMytwNXV1MnVAWWFob29Hcm91cHMuY29tPgk8bGExOTh2K29laG52N0BZYWhvb0dyb3Vwcy5jb20+"},"prevInTopic":6226,"nextInTopic":6228,"prevInTime":6226,"nextInTime":6228,"topicId":6225,"numMessagesInTopic":4,"msgSnippet":"Hey Simon. From reading your text it sounds like you are connecting each input to a single output. This means each output can only be a function of the input ","rawEmail":"Return-Path: &lt;jgmath2000@...&gt;\r\nX-Sender: jgmath2000@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 22641 invoked by uid 102); 1 Jan 2014 16:11:04 -0000\r\nX-Received: from unknown (HELO mtaq4.grp.bf1.yahoo.com) (10.193.84.143)\n  by m8.grp.bf1.yahoo.com with SMTP; 1 Jan 2014 16:11:04 -0000\r\nX-Received: (qmail 28010 invoked from network); 1 Jan 2014 16:11:04 -0000\r\nX-Received: from unknown (HELO mail-we0-f176.google.com) (74.125.82.176)\n  by mtaq4.grp.bf1.yahoo.com with SMTP; 1 Jan 2014 16:11:04 -0000\r\nX-Received: by mail-we0-f176.google.com with SMTP id p61so11586923wes.21\n        for &lt;neat@yahoogroups.com&gt;; Wed, 01 Jan 2014 08:11:03 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.194.175.202 with SMTP id cc10mr28173481wjc.48.1388592663644;\n Wed, 01 Jan 2014 08:11:03 -0800 (PST)\r\nX-Received: by 10.217.123.136 with HTTP; Wed, 1 Jan 2014 08:11:03 -0800 (PST)\r\nX-Received: by 10.217.123.136 with HTTP; Wed, 1 Jan 2014 08:11:03 -0800 (PST)\r\nIn-Reply-To: &lt;la198v+oehnv7@...&gt;\r\nReferences: &lt;l9po13+p5uu2u@...&gt;\n\t&lt;la198v+oehnv7@...&gt;\r\nDate: Wed, 1 Jan 2014 08:11:03 -0800\r\nMessage-ID: &lt;CAEB55tX3QfTp7tkLt-qiuK0c3k6yb20JLO-iNSN4Z1F_mqK0RQ@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=089e013d0f4874530804eeeaec48\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jason Gauci &lt;jgmath2000@...&gt;\r\nSubject: Re: [neat] RE: Starting with Neat, evolving CPPN&#39;s questions\r\nX-Yahoo-Group-Post: member; u=200957992; y=n3tCEzczc5sZ_fvwuaAd0TN6ES-Qh9PU02uf1IKVt3NJPvhD9w\r\nX-Yahoo-Profile: jgmath2000\r\n\r\n\r\n--089e013d0f4874530804eeeaec48\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHey Simon.\n\nFrom reading your text it sounds like you are connecting each i=\r\nnput to a\nsingle output. This means each output can only be a function of t=\r\nhe input\nin the same square.\n\nConsider connecting each input to all outputs=\r\n, and having hidden layers.\nThis will allow for more ecpressive networks.\n\n=\r\nJason G.\nOn Jan 1, 2014 6:38 AM, &lt;neatuser64@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; I hav=\r\ne continued working on this problem and my results have been pretty\n&gt; poor =\r\nas expected.\n&gt;\n&gt;\n&gt; The largest concept I am struggling to visualize is how =\r\nNeat is different\n&gt; to a normal ANN. One of the features of Neat that struc=\r\nk me as most\n&gt; interesting is how Neat can recognize the relationship betwe=\r\nen inputs eg\n&gt; chess pieces on a board where a plain BP ANN would not under=\r\nstand the\n&gt; relationships.\n&gt;\n&gt;\n&gt; Stepping through my problem (described in =\r\nthe first post), I take the the\n&gt; first grid location (0,0), it&#39;s input val=\r\nues will be -1, -1. I want to map\n&gt; this to the same location on the output=\r\n grid, so the values for the output\n&gt; location will also be -1, -1. Thus, t=\r\nhe input to my CPPN looks like the\n&gt; below:\n&gt;\n&gt;\n&gt; Input 1 =3D -1 -&gt; Input g=\r\nrid X location 0\n&gt;\n&gt; Input 2 =3D -1 -&gt; Input grid Y location 0\n&gt;\n&gt; Input 3 =\r\n=3D -1 -&gt; Output grid X location 0\n&gt;\n&gt; Input 4 =3D -1 -&gt; Output grid Y loca=\r\ntion 0\n&gt;\n&gt; Input 5 =3D 1 -&gt; Fixed bias value of 1\n&gt;\n&gt;\n&gt; I feed all the abov=\r\ne into the CPPN and it generates a value of 0.123 (for\n&gt; an example).\n&gt;\n&gt;\n&gt;=\r\n So, I take the input pixel value (let&#39;s say it is 1) and multiply by the\n&gt;=\r\n weight, the the value of the output grid at 0,0 =3D 1 * 0.123.\n&gt;\n&gt;\n&gt; Becau=\r\nse every input pixel (grid location) is mapped to every output pixel,\n&gt; I s=\r\nimply keep summing the values of the output grid. Eg at output grid\n&gt; locat=\r\nion 0,0 I will have (for a square grid of 11) 11x11 =3D 121 values that\n&gt; m=\r\nake up the output grid value at 0,0. So I just sum these values to make\n&gt; t=\r\nhe output value?\n&gt;\n&gt;\n&gt; Even doing this, I fail to understand how the networ=\r\nk learns the\n&gt; relationship between grid locations. Basically currently I a=\r\nm feeding each\n&gt; output grid with 121 neural networks that only take the cu=\r\nrrent grid\n&gt; location as input values.\n&gt;\n&gt;\n&gt; I am sure I am missing a key p=\r\noint here. Advice as always is appreciated.\n&gt;\n&gt;\n&gt; PS I find the processing =\r\ntime slow for my current network. Each population\n&gt; of 100 members with a C=\r\nPPN of 10 functions takes 2500ms per 10 random\n&gt; grids, so evolving a popul=\r\nation takes hours. Does this seem normal? Once I\n&gt; have the basics understo=\r\nod I think moving the process to a GU will speed\n&gt; things up...\n&gt;  \n&gt;\n\r\n--089e013d0f4874530804eeeaec48\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;p dir=3D&quot;ltr&quot;&gt;Hey Simon.&lt;/p&gt;\n&lt;p dir=3D&quot;ltr&quot;&gt;From reading your text it soun=\r\nds like you are connecting each input to a single output. This means each o=\r\nutput can only be a function of the input in the same square.&lt;/p&gt;\n&lt;p dir=3D=\r\n&quot;ltr&quot;&gt;Consider connecting each input to all outputs, and having hidden laye=\r\nrs. This will allow for more ecpressive networks. &lt;/p&gt;\n&lt;p dir=3D&quot;ltr&quot;&gt;Jason=\r\n G.&lt;/p&gt;\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Jan 1, 2014 6:38 AM,  &lt;&lt;a href=3D&quot;=\r\nmailto:neatuser64@...&quot;&gt;neatuser64@...&lt;/a&gt;&gt; wrote:&lt;br type=3D=\r\n&quot;attribution&quot;&gt;&lt;blockquote class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;=\r\nborder-left:1px #ccc solid;padding-left:1ex&quot;&gt;\n\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div sty=\r\nle&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;p&gt;=\r\nI have continued working on this problem and my results have been pretty po=\r\nor as expected.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;font-size:13px;=\r\nbackground-color:transparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;=\r\n\nThe largest concept I am struggling to visualize is how Neat is different =\r\nto a normal ANN. One of the features of Neat that struck me as most interes=\r\nting is how Neat can recognize the relationship between inputs eg chess pie=\r\nces on a board where a plain BP ANN would not understand the relationships.=\r\n =A0&lt;/p&gt;\n&lt;p style=3D&quot;font-style:normal;font-size:13px;background-color:tran=\r\nsparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;f=\r\nont-style:normal;font-size:13px;background-color:transparent;font-family:ar=\r\nial,helvetica,clean,sans-serif&quot;&gt;\nStepping through my problem (described in =\r\nthe first post), I take the the first grid location (0,0), it&#39;s input v=\r\nalues will be -1, -1. I want to map this to the same location on the output=\r\n grid, so the values for the output location will also be -1, -1. Thus, the=\r\n input to my CPPN looks like the below:&lt;/p&gt;\n&lt;p style=3D&quot;font-style:normal;f=\r\nont-size:13px;background-color:transparent;font-family:arial,helvetica,clea=\r\nn,sans-serif&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;font-size:13px;backgrou=\r\nnd-color:transparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;\nInput 1=\r\n =3D -1 -&gt; Input grid X location 0&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;font=\r\n-size:13px;background-color:transparent;font-family:arial,helvetica,clean,s=\r\nans-serif&quot;&gt;Input 2 =3D -1 -&gt; Input grid Y location 0&lt;/p&gt;&lt;p style=3D&quot;back=\r\nground-color:transparent&quot;&gt;\nInput 3 =3D -1 -&gt; Output grid X location 0&lt;/p=\r\n&gt;&lt;p style=3D&quot;background-color:transparent&quot;&gt;Input 4 =3D -1 -&gt; Output grid=\r\n Y location 0&lt;/p&gt;&lt;p style=3D&quot;background-color:transparent&quot;&gt;Input 5 =3D 1 -&=\r\ngt; Fixed bias value of 1&lt;/p&gt;&lt;p style=3D&quot;background-color:transparent&quot;&gt;\n&lt;br=\r\n&gt;&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;font-size:13px;background-color:transpar=\r\nent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;I feed all the above into=\r\n the CPPN and it generates a value of 0.123 (for an example).&lt;/p&gt;&lt;p style=\r\n=3D&quot;font-style:normal;font-size:13px;background-color:transparent;font-fami=\r\nly:arial,helvetica,clean,sans-serif&quot;&gt;\n&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;font-style:normal=\r\n;font-size:13px;background-color:transparent;font-family:arial,helvetica,cl=\r\nean,sans-serif&quot;&gt;So, I take the input pixel value (let&#39;s say it is 1) an=\r\nd multiply by the weight, the the value of the output grid at 0,0 =3D 1 * 0=\r\n.123.&lt;/p&gt;\n&lt;p style=3D&quot;font-style:normal;font-size:13px;background-color:tra=\r\nnsparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;=\r\nfont-style:normal;font-size:13px;background-color:transparent;font-family:a=\r\nrial,helvetica,clean,sans-serif&quot;&gt;\nBecause every input pixel (grid location)=\r\n is mapped to every output pixel, I simply keep summing the values of the o=\r\nutput grid. Eg at output grid location 0,0 I will have (for a square grid o=\r\nf 11) 11x11 =3D 121 values that make up the output grid value at 0,0. So I =\r\njust sum these values to make the output value?&lt;/p&gt;\n&lt;p style=3D&quot;font-style:=\r\nnormal;font-size:13px;background-color:transparent;font-family:arial,helvet=\r\nica,clean,sans-serif&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;font-size:13px;=\r\nbackground-color:transparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;=\r\n\nEven doing this, I fail to understand how the network learns the relations=\r\nhip between grid locations. Basically currently I am feeding each output gr=\r\nid with 121 neural networks that only take the current grid location as inp=\r\nut values.=A0&lt;/p&gt;\n&lt;p style=3D&quot;font-style:normal;font-size:13px;background-c=\r\nolor:transparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p s=\r\ntyle=3D&quot;font-style:normal;font-size:13px;background-color:transparent;font-=\r\nfamily:arial,helvetica,clean,sans-serif&quot;&gt;\nI am sure I am missing a key poin=\r\nt here. Advice as always is appreciated.&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;f=\r\nont-size:13px;background-color:transparent;font-family:arial,helvetica,clea=\r\nn,sans-serif&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=3D&quot;font-style:normal;font-size:13px;backgrou=\r\nnd-color:transparent;font-family:arial,helvetica,clean,sans-serif&quot;&gt;\nPS I fi=\r\nnd the processing time slow for my current network. Each population of 100 =\r\nmembers with a CPPN of 10 functions takes 2500ms per 10 random grids, so ev=\r\nolving a population takes hours. Does this seem normal? Once I have the bas=\r\nics understood I think moving the process to a GU will speed things up...&lt;/=\r\np&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;=\r\n&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;\n\r\n--089e013d0f4874530804eeeaec48--\r\n\n"}}