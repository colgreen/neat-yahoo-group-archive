{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":130107745,"authorName":"Chad Bohannan","from":"&quot;Chad Bohannan&quot; &lt;chad@...&gt;","profile":"tailboom22","replyTo":"LIST","senderId":"qn1hCI4fTAaiQSfXEYs53OsnYUHZ3_yWmfqKxNJx13Ui21f3i3S95pbPeuKu8eI1n7uW0c7CjKHiPcgjwfASyakBzu69iAqoZQU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: multi-agent net inputs","postDate":"1084576604","msgId":783,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGE5OTgwMWM0M2EwOSQ4NTZmNTg0MCQ3MGNiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":782,"nextInTopic":784,"prevInTime":782,"nextInTime":784,"topicId":780,"numMessagesInTopic":11,"msgSnippet":"ken posted while I was typing, now I feel silly... I should have asked the same question earlier. How do you detect if something is inside the radar arc? I","rawEmail":"Return-Path: &lt;chad@...&gt;\r\nX-Sender: chad@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 93507 invoked from network); 14 May 2004 23:22:34 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m20.grp.scd.yahoo.com with QMQP; 14 May 2004 23:22:34 -0000\r\nReceived: from unknown (HELO mwde08la.mail2world.com) (66.28.189.182)\n  by mta4.grp.scd.yahoo.com with SMTP; 14 May 2004 23:22:34 -0000\r\nReceived: from mail pickup service by mwde08la.mail2world.com with Microsoft SMTPSVC;\n\t Fri, 14 May 2004 16:16:45 -0700\r\nauth-sender:chad@...\r\nReceived: from 10.1.203.112 unverified ([10.1.203.112]) by mwde08la.mail2world.com with Mail2World SMTP Server,\n\tFri 14 May 2004 16:16:44 -07:00\r\nReceived: from [153.90.194.179] by bohannan.net with HTTP; 5/14/2004 4:16:44 PM PST\r\nthread-index: AcQ6CYVv5mVzuAwDQvWdgWM2xLugwQ==\r\nThread-Topic: [neat] Re: multi-agent net inputs\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nDate: Fri, 14 May 2004 16:16:44 -0700\r\nMessage-ID: &lt;a99801c43a09$856f5840$70cb010a@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_A999_01C439CE.D9108040&quot;\r\nX-Mailer: Microsoft CDO for Exchange 2000\r\nContent-Class: urn:content-classes:message\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nImportance: normal\r\nPriority: normal\r\nX-OriginalArrivalTime: 14 May 2004 23:16:45.0841 (UTC) FILETIME=[86790010:01C43A09]\r\nX-eGroups-Remote-IP: 66.28.189.182\r\nFrom: &quot;Chad Bohannan&quot; &lt;chad@...&gt;\r\nSubject: Re: [neat] Re: multi-agent net inputs\r\nX-Yahoo-Group-Post: member; u=130107745\r\nX-Yahoo-Profile: tailboom22\r\n\r\n\r\n------=_NextPart_000_A999_01C439CE.D9108040\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\nken posted while I was typing, now I feel silly...\nI should have asked the same question earlier. How do you detect if\nsomething is inside the radar arc? I think ODE lets me draw a ray in\nspace, and I can see if and where that ray intersects with something. Is\nthat how to do it?\nThis sounds exactly like a vision system, and it sounds easier than I\nthought to write.\nChad\n\n&lt;-----Original Message-----&gt; \nFrom: Kenneth Stanley\nSent: 5/14/2004 5:08:54 PM\nTo: neat@yahoogroups.com\nSubject: Re: [neat] Re: multi-agent net inputs\n\nHey Kennon, to answer your first question, dividing the senses into \nradar arc is the best solution. An arc can be activated in \nproportion to how close or how many other agents are in that arc. I \nhave used this kind of sensor alot. It&#39;s nice since it&#39;s egocentric.\n\nAs for a &quot;drop-in&quot; NEAT, you can check all the versions of NEAT that \nare out now, but I don&#39;t know that any are so simple you can just \ndrop them into any code without some coding yourself to hook things \nup. It shouldn&#39;t be too complicated, even with my code (since you \ndon&#39;t actually have to edit the NEAT code itself). The one real \nproblem with my code is getting it to compile on different \nplatforms. But there is a windows version of my code now in the \nfiles section which may be easier, and a lot of people here have \ncompiled it on different platforms, so they may be able to help.\nMy homepage has a list of NEATs that are now available.\n\nken\n\n--- In neat@yahoogroups.com, Kennon Lynn Ballou \nwrote:\n&gt; hi, i&#39;m making a multi-agent sim thingy where i&#39;m hoping to evolve \nagents \n&gt; that can play tag -- although i seem to remember seeing a paper \nabout this \n&gt; somewhere, but i&#39;m enjoying doing it on my own.\n&gt; \n&gt; the basic idea is to have a finite size area, agents with \n&gt; position/velocity, and at any one time, an &quot;it&quot; - which can change \nif the \n&gt; current It touches another. I figure that this would be an \ninteresting \n&gt; thing to learn, since when an agent is not It they will be trying \nto run \n&gt; away from It, and when they are It they will try to run towards \nanother \n&gt; agent. i want to use competitive co-evolution and NN controllers \n&gt; (eventually using neat, although i&#39;m using a simple \ncrossover+mutation GA \n&gt; with binary tournament selection right now). fitness is the \naverage \n&gt; distance from the target over a certain number of time steps.\n&gt; \n&gt; my first task was just for agents to follow around a moving \ntarget, where \n&gt; their input is a bearing to the target and their outputs is a \nchange to \n&gt; their current x and y velocities - this is basically evolving sin \nand \n&gt; cosine in the network. with a population size of 10, with 5 new \noffspring \n&gt; each turn, it readily solves this problem within a couple hundred \n&gt; generations. even though ive done all sorts of evolutionary \nalgorithms, \n&gt; its still DAMN cool to see the little dots start out moving \nrandomly and \n&gt; then over time start swarming around the target ... hehe this \nstuff is so \n&gt; cool. anyway, i then changed their output to be their new heading \nand \n&gt; velocity, and they also learn how to follow the target fairly \neasily, \n&gt; although now that i think about it since one of the inputs is the \nbearing \n&gt; they pretty much just need to learn to turn to the bearing.\n&gt; \n&gt; anyway, my question is this: what do you use as inputs for \nsomething \n&gt; like the tag \n&gt; problem? i mean \n&gt; i guess \n&gt; technically i could have an input which gives the bearing for each \nother \n&gt; agent and then a binary input whether or not they are It. i don&#39;t \nreally \n&gt; like this, though, because you have to change the number of inputs \nbased \n&gt; on the current number of agents in the simulation. other ideas ive \nhad \n&gt; were to divide the circle around the agent into a discrete number \nof arcs \n&gt; and then flag the inputs that have something in their field of \nvision ... \n&gt; has anyone tried anything with that kind of thing?\n&gt; \n&gt; --\n&gt; \n&gt; a separate question, what is the best solution for a light-weight, \ndrop-in \n&gt; with as little change as possible c++ implementation of neat? hehe \nno \n&gt; offense, \n&gt; Ken, but i saw your code a few years ago - hope you cleaned it up \nsince \n&gt; then :) if there isn&#39;t an existing implementation that has a very \nclean \n&gt; interface, are there any plans to develop one?\n&gt; \n&gt; anyway, i really should be studying for my exams, but i&#39;ve \nconvinced \n&gt; myself that this really is revision -- which, actually, it is, \nsince \n&gt; monday&#39;s exam is neural computation and tuesday&#39;s is nature \ninspired \n&gt; design, so i&#39;m actually using concepts from both of those classes \nin this \n&gt; little system.\n&gt; \n&gt; cheers,\n&gt; -KB-\n&gt; \n&gt; -- \n&gt; --------------------------------------------------------\n&gt; k e n n o n b a l l o u\n&gt; msc natural computation : the university of birmingham \n&gt; http://studentweb.cs.bham.ac.uk/~msc92klb/ \n&gt; --------------------------------------------------------\n\n\n\n\n\nYahoo! Groups Links\n\n\n\n\n\n. \n\r\n------=_NextPart_000_A999_01C439CE.D9108040\r\nContent-Type: text/html\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;HTML&gt;\n&lt;BODY&gt;\nken posted while I was typing, now I feel silly...&lt;br&gt;\nI should have asked the same question earlier. How do you detect if something is inside the radar arc? I think ODE lets me draw a ray in space, and I can see if and where that ray intersects with something. Is that how to do it?&lt;br&gt;\nThis sounds exactly like a vision system, and it sounds easier than I thought to write.&lt;br&gt;\nChad&lt;br&gt;\n&lt;br&gt;\n&lt;-----Original Message-----&gt; &lt;br&gt;\nFrom: Kenneth Stanley&lt;br&gt;\nSent: 5/14/2004 5:08:54 PM&lt;br&gt;\nTo: neat@yahoogroups.com&lt;br&gt;\nSubject: Re: [neat] Re: multi-agent net inputs&lt;br&gt;\n&lt;br&gt;\nHey Kennon, to answer your first question, dividing the senses into &lt;br&gt;\nradar arc is the best solution.  An arc can be activated in &lt;br&gt;\nproportion to how close or how many other agents are in that arc.  I &lt;br&gt;\nhave used this kind of sensor alot.  It&#39;s nice since it&#39;s egocentric.&lt;br&gt;\n&lt;br&gt;\nAs for a &quot;drop-in&quot; NEAT, you can check all the versions of NEAT that &lt;br&gt;\nare out now, but I don&#39;t know that any are so simple you can just &lt;br&gt;\ndrop them into any code without some coding yourself to hook things &lt;br&gt;\nup.  It shouldn&#39;t be too complicated, even with my code (since you &lt;br&gt;\ndon&#39;t actually have to edit the NEAT code itself).  The one real &lt;br&gt;\nproblem with my code is getting it to compile on different &lt;br&gt;\nplatforms.  But there is a windows version of my code now in the &lt;br&gt;\nfiles section which may be easier, and a lot of people here have &lt;br&gt;\ncompiled it on different platforms, so they may be able to help.&lt;br&gt;\nMy homepage has a list of NEATs that are now available.&lt;br&gt;\n&lt;br&gt;\nken&lt;br&gt;\n&lt;br&gt;\n--- In neat@yahoogroups.com, Kennon Lynn Ballou &lt;msc92klb@c...&gt; &lt;br&gt;\nwrote:&lt;br&gt;\n&gt; hi, i&#39;m making a multi-agent sim thingy where i&#39;m hoping to evolve &lt;br&gt;\nagents &lt;br&gt;\n&gt; that can play tag -- although i seem to remember seeing a paper &lt;br&gt;\nabout this &lt;br&gt;\n&gt; somewhere, but i&#39;m enjoying doing it on my own.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; the basic idea is to have a finite size area, agents with &lt;br&gt;\n&gt; position/velocity, and at any one time, an &quot;it&quot; - which can change &lt;br&gt;\nif the &lt;br&gt;\n&gt; current It touches another. I figure that this would be an &lt;br&gt;\ninteresting &lt;br&gt;\n&gt; thing to learn, since when an agent is not It they will be trying &lt;br&gt;\nto run &lt;br&gt;\n&gt; away from It, and when they are It they will try to run towards &lt;br&gt;\nanother &lt;br&gt;\n&gt; agent. i want to use competitive co-evolution and NN controllers &lt;br&gt;\n&gt; (eventually using neat, although i&#39;m using a simple &lt;br&gt;\ncrossover+mutation GA &lt;br&gt;\n&gt; with binary tournament selection right now). fitness is the &lt;br&gt;\naverage &lt;br&gt;\n&gt; distance from the target over a certain number of time steps.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; my first task was just for agents to follow around a moving &lt;br&gt;\ntarget, where &lt;br&gt;\n&gt; their input is a bearing to the target and their outputs is a &lt;br&gt;\nchange to &lt;br&gt;\n&gt; their current x and y velocities - this is basically evolving sin &lt;br&gt;\nand &lt;br&gt;\n&gt; cosine in the network. with a population size of 10, with 5 new &lt;br&gt;\noffspring &lt;br&gt;\n&gt; each turn, it readily solves this problem within a couple hundred &lt;br&gt;\n&gt; generations. even though ive done all sorts of evolutionary &lt;br&gt;\nalgorithms, &lt;br&gt;\n&gt; its still DAMN cool to see the little dots start out moving &lt;br&gt;\nrandomly and &lt;br&gt;\n&gt; then over time start swarming around the target ... hehe this &lt;br&gt;\nstuff is so &lt;br&gt;\n&gt; cool. anyway, i then changed their output to be their new heading &lt;br&gt;\nand &lt;br&gt;\n&gt; velocity, and they also learn how to follow the target fairly &lt;br&gt;\neasily, &lt;br&gt;\n&gt; although now that i think about it since one of the inputs is the &lt;br&gt;\nbearing &lt;br&gt;\n&gt; they pretty much just need to learn to turn to the bearing.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; anyway, my question is this: what do you use as inputs for &lt;br&gt;\nsomething &lt;br&gt;\n&gt; like the tag &lt;br&gt;\n&gt; problem? i mean &lt;br&gt;\n&gt; i guess &lt;br&gt;\n&gt; technically i could have an input which gives the bearing for each &lt;br&gt;\nother &lt;br&gt;\n&gt; agent and then a binary input whether or not they are It. i don&#39;t &lt;br&gt;\nreally &lt;br&gt;\n&gt; like this, though, because you have to change the number of inputs &lt;br&gt;\nbased &lt;br&gt;\n&gt; on the current number of agents in the simulation. other ideas ive &lt;br&gt;\nhad &lt;br&gt;\n&gt; were to divide the circle around the agent into a discrete number &lt;br&gt;\nof arcs &lt;br&gt;\n&gt; and then flag the inputs that have something in their field of &lt;br&gt;\nvision ... &lt;br&gt;\n&gt; has anyone tried anything with that kind of thing?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; --&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; a separate question, what is the best solution for a light-weight, &lt;br&gt;\ndrop-in &lt;br&gt;\n&gt; with as little change as possible c++ implementation of neat? hehe &lt;br&gt;\nno &lt;br&gt;\n&gt; offense, &lt;br&gt;\n&gt; Ken, but i saw your code a few years ago - hope you cleaned it up &lt;br&gt;\nsince &lt;br&gt;\n&gt; then :) if there isn&#39;t an existing implementation that has a very &lt;br&gt;\nclean &lt;br&gt;\n&gt; interface, are there any plans to develop one?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; anyway, i really should be studying for my exams, but i&#39;ve &lt;br&gt;\nconvinced &lt;br&gt;\n&gt; myself that this really is revision -- which, actually, it is, &lt;br&gt;\nsince &lt;br&gt;\n&gt; monday&#39;s exam is neural computation and tuesday&#39;s is nature &lt;br&gt;\ninspired &lt;br&gt;\n&gt; design, so i&#39;m actually using concepts from both of those classes &lt;br&gt;\nin this &lt;br&gt;\n&gt; little system.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; cheers,&lt;br&gt;\n&gt; -KB-&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; -- &lt;br&gt;\n&gt; --------------------------------------------------------&lt;br&gt;\n&gt;  k e n n o n  b a l l o u&lt;br&gt;\n&gt;  msc natural computation : the university of birmingham &lt;br&gt;\n&gt;  http://studentweb.cs.bham.ac.uk/~msc92klb/             &lt;br&gt;\n&gt; --------------------------------------------------------&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n------------------------ Yahoo! Groups Sponsor ---------------------~--&gt;&lt;br&gt;\nYahoo! Domains - Claim yours for only $14.70&lt;br&gt;\nhttp://us.click.yahoo.com/Z1wmxD/DREIAA/yQLSAA/7brrlB/TM&lt;br&gt;\n---------------------------------------------------------------------~-&gt;&lt;br&gt;\n&lt;br&gt;\n &lt;br&gt;\nYahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To visit your group on the web, go to:&lt;br&gt;\n     http://groups.yahoo.com/group/neat/&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To unsubscribe from this group, send an email to:&lt;br&gt;\n     neat-unsubscribe@yahoogroups.com&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Yahoo! Groups is subject to:&lt;br&gt;\n     http://docs.yahoo.com/info/terms/&lt;br&gt;\n &lt;br&gt;\n&lt;br&gt;\n.\n&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_A999_01C439CE.D9108040--\r\n\n"}}