{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"KUj932cHP95K3Z62Yk6oayI-QEAgwumUnK8oF_dqn6O1dSh-QyVqjKOvYJAl-IBKidtzNVGJG-b_kEa8b2odPovakQMm","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Open science software/experiment repository","postDate":"1358566620","msgId":5966,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGtkZDRjcyticWQyQGVHcm91cHMuY29tPg=="},"prevInTopic":5965,"nextInTopic":5991,"prevInTime":5965,"nextInTime":5967,"topicId":5942,"numMessagesInTopic":18,"msgSnippet":"By the way, I want to emphasize that I am very much in favor of releasing code voluntarily and agree with Jean-Baptise that it is often very helpful.  I just","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 5337 invoked from network); 19 Jan 2013 03:37:00 -0000\r\nX-Received: from unknown (10.193.84.168)\n  by m8.grp.bf1.yahoo.com with QMQP; 19 Jan 2013 03:37:00 -0000\r\nX-Received: from unknown (HELO ng12-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.98)\n  by mta6.grp.bf1.yahoo.com with SMTP; 19 Jan 2013 03:37:00 -0000\r\nX-Received: from [98.139.164.121] by ng12.bullet.mail.bf1.yahoo.com with NNFMP; 19 Jan 2013 03:37:00 -0000\r\nX-Received: from [10.193.94.43] by tg2.bullet.mail.bf1.yahoo.com with NNFMP; 19 Jan 2013 03:37:00 -0000\r\nDate: Sat, 19 Jan 2013 03:37:00 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;kdd4cs+bqd2@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Open science software/experiment repository\r\nX-Yahoo-Group-Post: member; u=54567749; y=pR7mxBaMMWi3JzR-zbP3BFUBL3BcVOEzI9w0ODIXwJ04g2WweQZv\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nBy the way, I want to emphasize that I am very much in favor of releasing=\r\n code voluntarily and agree with Jean-Baptise that it is often very helpful=\r\n.  I just don&#39;t want a universal requirement.\n\n--- In neat@yahoogroups.com,=\r\n &quot;Ken&quot;  wrote:\n&gt;\n&gt; \n&gt; \n&gt; Maybe I can elaborate a little more on why I don&#39;t=\r\n think code submission should be a requirement.  I appear to be on the mino=\r\nrity side of this issue so I know it&#39;s an uphill battle but here&#39;s my reaso=\r\nning:\n&gt; \n&gt; As soon as you make something a requirement, you are adding to b=\r\nureaucracy.  Inevitably, someone will be charged with checking that you sat=\r\nisfied the requirement.  Even if we start out saying you &quot;only&quot; have to sub=\r\nmit the code but no one has to run it, eventually an incident will be expos=\r\ned when someone submitted incorrect or even fraudulent code, and then the c=\r\node checks will become increasingly onerous.  And it&#39;s likely those code ch=\r\necks will be done by reviewers, which means that people who already don&#39;t s=\r\npend enough time reading our papers will now spend even less time as they h=\r\nave to dedicate new effort to looking at a giant impenetrable volume of spa=\r\nghetti code.  \n&gt; \n&gt; I&#39;ve sat on enough executive committees and editorial b=\r\noards at this point to know that things will only get stricter and more out=\r\n of control.  Requirements never get lighter, they only get heavier.  These=\r\n committees often make decisions with broad implications after short, ranco=\r\nrous arguments that ratchet up the paranoia about how someone might cheat t=\r\nhe system, leading to more and more burdensome checks and requirements.  As=\r\n Jeff points out, as if having to write 15-page project description wasn&#39;t =\r\nenough, now NSF requires proposals to include an additional 2-page data man=\r\nagement plan.  Not to mention the new proliferation of endless plagiarism c=\r\nhecks throughout the academic world.  So once we open this Pandora&#39;s box, d=\r\non&#39;t think that someone won&#39;t ultimately be trying to run your code and bla=\r\nming you if it doesn&#39;t work for them.\n&gt; \n&gt; As far as the upsides, such as J=\r\neff&#39;s example of how helpful it is to have the code to reproduce results, i=\r\nf you really think about it, it&#39;s not so clear cut.  In fact, Jeff, it&#39;s co=\r\nnceivable that you (or someone like you) would not have made your discovery=\r\n had the code been available to begin with, because you would have simply r=\r\nun it and seen (misleadingly) that it works.  It&#39;s only because it wasn&#39;t a=\r\nvailable and you thereby were forced to try to reproduce the concept for yo=\r\nurself that you learned the concept doesn&#39;t work as advertised.  It may eve=\r\nn be the case that having specific experimental code universally available =\r\nleads the community to more deception (and thus to be more naive) because w=\r\ne would trust results that ultimately depend on obscure idiosyncrasies hidd=\r\nen in arcane code bases rather than on the supposed main idea.  After all, =\r\nwe all know you can get virtually anything to &quot;work&quot; if you finesse it enou=\r\ngh.  \n&gt; \n&gt; Not only that, but more deeply it seems like making code a requi=\r\nrement is wishful thinking:  We&#39;re trying to get a quick fix for a problem =\r\n(i.e. deciding whether an idea is promising) that is only really solved by =\r\ngood old fashioned time and effort.  That is, what really validates a metho=\r\nd is not the one time it was run to give a published result, but rather the=\r\n numerous reimplementations by independent parties over many subsequent yea=\r\nrs.  The main reason you can trust NEAT is not because you can download my =\r\noriginal pole balancing experiment and run it, but because of all the excel=\r\nlent independent packages like SharpNEAT, ANJI, and many others in which I =\r\nhad no hand at all.   \n&gt; \n&gt; Moreover, why should we even care about the cod=\r\ne if the idea is uninspiring anyway?  By forcing everyone to submit code we=\r\n are implicitly suggesting that what matters is simply that something worke=\r\nd rather than that it is an interesting idea.  In my view the biggest probl=\r\nem in reviewing today is not some kind of systematic flaw in experimental d=\r\nesign but rather an unhealthy obsession with experimental results to the co=\r\nmplete exclusion of the main idea.  Jeff, you say that &quot;reviewers tend to b=\r\ne pretty good about this&quot; when it comes to unfairly demanding excessive com=\r\nparisons, but if that&#39;s true, it&#39;s only in our own community.  In the large=\r\nr machine learning community, reviewers are biased against EC and would lov=\r\ne another excuse simply to say, &quot;Why didn&#39;t you compare to X&quot; as a way of a=\r\nvoiding actually needing to understand the central idea.  We will be perpet=\r\nuating that kind of culture and hence our own ostracization and defunding. =\r\n \n&gt; \n&gt; Let&#39;s leave it voluntary and stop the senseless proliferation of end=\r\nless requirements that technology tempts us to perpetuate upon ourselves.  =\r\nWe are ultimately only hurting ourselves as we forget that well-intended re=\r\nquirements steal from the precious little time in life we have to actually =\r\nsit and think, which is the most important thing we do as scientists.\n&gt; \n&gt; =\r\nken\n&gt; \n&gt; \n&gt; --- In neat@yahoogroups.com, Jeff Clune  wrote:\n&gt; &gt;\n&gt; &gt; Hello a=\r\nll,\n&gt; &gt; \n&gt; &gt; I agree with JBM that code should be submitted, and I don&#39;t mi=\r\nnd it being a requirement. Submitting the code does not mean it has to comp=\r\nile the day after submission, be maintained, or even be clean/commented. It=\r\n&#39;s just a written record of what happened in the experiment. If you are pub=\r\nlishing the experiment and trying to describe exactly what you did, the cod=\r\ne is the equivalent of a very detailed explanation of the experiment that a=\r\nllows others to replicate it if they wish. \n&gt; &gt; \n&gt; &gt; For example, Jean-Bapt=\r\niste and I tried and failed to replicate the results of a famous, high-impa=\r\nct study. It was hard for us to know if there were bugs in our code, if we =\r\nhad the wrong parameters, or if the result itself was suspicious (e.g. a bu=\r\ng in their code). Eventually we got the code from the authors and we sudden=\r\nly were able to replicate the results and learn under which conditions the =\r\neffect in question occurs. That never would have happened without their cod=\r\ne. In our case the authors were still alive and willing to share their code=\r\n, but both of those conditions don&#39;t hold in a lot of cases (especially wit=\r\nh older work). I think science is better of if we&#39;re able to see exactly ho=\r\nw a result came to be. \n&gt; &gt; \n&gt; &gt; I do agree that there may be some disincen=\r\ntive for businesses to publish. But how many businesses publish papers abou=\r\nt things they don&#39;t really want to share completely? I don&#39;t run into too m=\r\nany influential papers like that. And maybe those businesses can publish in=\r\n other journals, or get an exception from the editors. \n&gt; &gt; \n&gt; &gt; As for the=\r\n accumulation of a lot of worthless code, is that really a big problem? If =\r\nthey papers are worthless, they&#39;re already accumulating=85this is just a li=\r\nnk in the paper that can be ignored, no?\n&gt; &gt; \n&gt; &gt; I do agree that it may cr=\r\neate a pressure on future papers to include previous algorithms more as con=\r\ntrols, because the reviewers can say &quot;the code is posted, why didn&#39;t you us=\r\ne it?&quot; I think we just have to resist that as reviewers=85because everyone =\r\nknows what a pain it is to get someone else&#39;s code running in their domain.=\r\n Reviewers tend to be pretty good about this. \n&gt; &gt; \n&gt; &gt; In any case, it&#39;s a=\r\nn interesting discussion=85.and likely the future whether we like it or not=\r\n. My guess is that a lot of journals will follow the lead of the top journa=\r\nls (plus the NSF now requires such archiving, which is what is really drivi=\r\nng it in a lot of cases). \n&gt; &gt; \n&gt; &gt; Best regards,\n&gt; &gt; Jeff Clune\n&gt; &gt; \n&gt; &gt; A=\r\nssistant Professor\n&gt; &gt; Computer Science\n&gt; &gt; University of Wyoming\n&gt; &gt; jclun=\r\ne@\n&gt; &gt; jeffclune.com\n&gt; &gt; \n&gt; &gt; On Jan 18, 2013, at 7:21 AM,  wrote:\n&gt; &gt; \n&gt; &gt;=\r\n &gt; Hi Ken,\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; More practically,\n&gt; &gt; &gt; &gt; it will mean that revie=\r\nwers will start rejecting papers based on supposed\n&gt; &gt; &gt; &gt; code glitches in=\r\n required code submissions. That will give reviewers a\n&gt; &gt; &gt; &gt; whole new ju=\r\nstification for completely ignoring the main of idea of the\n&gt; &gt; &gt; &gt; paper.\n=\r\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Students will also become overwhelmed with code emergencies=\r\n (since\n&gt; &gt; &gt; &gt; publication will depend now upon strangers running your cod=\r\ne) and code\n&gt; &gt; &gt; &gt; cleanups demanded by random strangers who may themselve=\r\ns be at fault or\n&gt; &gt; &gt; &gt; simply ignorant. Furthermore, in a few years we wi=\r\nll have massive\n&gt; &gt; &gt; &gt; repositories of junk code (think of the hundreds of=\r\n papers published only\n&gt; &gt; &gt; &gt; at GECCO in one year) that is so out of date=\r\n that it requires deprecated\n&gt; &gt; &gt; &gt; compilers and computing platforms even=\r\n to run. But we will be required to\n&gt; &gt; &gt; &gt; maintain these repositories, wh=\r\nich will become increasingly ignored,\n&gt; &gt; &gt; &gt; simply to maintain the appear=\r\nance of rigor.\n&gt; &gt; &gt; \n&gt; &gt; &gt; I think there is a large difference between rev=\r\niewing the code and\n&gt; &gt; &gt; requesting that the authors make it available. I =\r\ndon&#39;t expect reviewers to\n&gt; &gt; &gt; run the code when it&#39;s available. First, re=\r\n-launching experiments may\n&gt; &gt; &gt; require weeks of computations on large clu=\r\nsters. Second, I fully\n&gt; &gt; &gt; understand that releasing &quot;clean code&quot; is a hu=\r\nge job and not our main job\n&gt; &gt; &gt; (Science).\n&gt; &gt; &gt; \n&gt; &gt; &gt; However, I view t=\r\nhe code as the detailed, technical description of a\n&gt; &gt; &gt; paper. It contain=\r\ns all the parameters and all the implementation details,\n&gt; &gt; &gt; including th=\r\nose that the authors thought were not important (but that may\n&gt; &gt; &gt; be actu=\r\nally important). We don&#39;t need to be able to compile the code in\n&gt; &gt; &gt; the =\r\nfuture, we only need to be able to read it.\n&gt; &gt; &gt; \n&gt; &gt; &gt; When I reuse an al=\r\ngorithm described in a paper, I often re-implement it.\n&gt; &gt; &gt; It&#39;s a good ex=\r\nercise and it helps keeping my framework clean and\n&gt; &gt; &gt; consistent. But I =\r\nalways find very helpful to have have access to the\n&gt; &gt; &gt; source code so th=\r\nat I can understand the small details and see the\n&gt; &gt; &gt; &quot;tricks&quot; used by th=\r\ne authors. For instance, I&#39;m very happy that Sebastian\n&gt; &gt; &gt; and you releas=\r\ned the source code of the node placement algorithm for\n&gt; &gt; &gt; HyperNEAT: tha=\r\nnks to it, we were able to reimplement it in our framework\n&gt; &gt; &gt; in a few h=\r\nours/days. Otherwise, it would have been much more difficult.\n&gt; &gt; &gt; \n&gt; &gt; &gt; =\r\nBest regards,\n&gt; &gt; &gt; -- JBM\n&gt; &gt; &gt; \n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}