{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":411255308,"authorName":"torvhydda","from":"&quot;torvhydda&quot; &lt;torvhydda@...&gt;","profile":"torvhydda","replyTo":"LIST","senderId":"iaOKez9wxOk4q9MSlH70fxWi5W7_yvfe6hqd91oD4HSUVX2MeMqmpPtGP7n-z1Zh0YGa-SOKEll2gD4lRVVZjouCmWx31bMg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Evolving feedforward networks","postDate":"1261410136","msgId":5033,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhnbzUwbytuNjY5QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMjE0MTMzNnYyZWUxOTA3MGo0YzczM2MyMjM4ZGNhMWE0QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":5024,"nextInTopic":5034,"prevInTime":5032,"nextInTime":5034,"topicId":5013,"numMessagesInTopic":14,"msgSnippet":"... I think I do something similar to this idea of yours with A-lists (not the bitmap stuff). If I am about to add a gene from node B to C, I do a complete","rawEmail":"Return-Path: &lt;torvhydda@...&gt;\r\nX-Sender: torvhydda@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 52947 invoked from network); 21 Dec 2009 15:47:54 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m5.grp.sp2.yahoo.com with QMQP; 21 Dec 2009 15:47:54 -0000\r\nX-Received: from unknown (HELO n43d.bullet.mail.sp1.yahoo.com) (66.163.169.157)\n  by mta3.grp.sp2.yahoo.com with SMTP; 21 Dec 2009 15:47:54 -0000\r\nX-Received: from [69.147.65.171] by n43.bullet.mail.sp1.yahoo.com with NNFMP; 21 Dec 2009 15:42:17 -0000\r\nX-Received: from [98.137.34.184] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 21 Dec 2009 15:42:17 -0000\r\nDate: Mon, 21 Dec 2009 15:42:16 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hgo50o+n669@...&gt;\r\nIn-Reply-To: &lt;727a406c0912141336v2ee19070j4c733c2238dca1a4@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;torvhydda&quot; &lt;torvhydda@...&gt;\r\nSubject: Re: Evolving feedforward networks\r\nX-Yahoo-Group-Post: member; u=411255308; y=XmDOsoxEgOVBsVZMXwDz-234ymDbpembbDcuONZSZrvt5p9h\r\nX-Yahoo-Profile: torvhydda\r\n\r\n\n\n--- In neat@yahoogroups.com, Colin Green &lt;colin.green1@...&gt; wrote:\n\n&gt; get=\r\n a 32x reduction in storage space requirements. As a bonus, testing\n&gt; if a =\r\nnode is in a given A-list should be almost intantaneous, versus\n&gt; the O(log=\r\n n) time complexity of a binary search against a sorted list\n&gt; of integer I=\r\nDs.\n\nI think I do something similar to this idea of yours with A-lists (not=\r\n the bitmap stuff). If I am about to add a gene from node B to C, I do a co=\r\nmplete O(n) traversal starting from node B, visiting all its children & the=\r\nir children, etc. When traversing the graph I paint the nodes I am visiting=\r\n. When coming back up from the traversal, I check to see if I have been vis=\r\niting node C. If that is the case it is a loop. See _genome_is_loop() for m=\r\nore details.\n\nThe nodes I visit is the nodes that will be in the A-list for=\r\n node B in the idea of yours. I don&#39;t have them sorted, thus the O(n) compl=\r\nexity instead of O(log n).\nIf I understand this bitmap stuff correctly the =\r\ncomplexity will be reduced to O(1), just a bit test to see if node C is in =\r\nthe A-list of node B.\n\nNice idea if one can reduce the memory consumption. =\r\nWorth thinking about.\n\n/Magnus\n\n\n"}}