{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"c8aTzkgRE0mkEnLPi70nQeIncBr0-dXCDBbi9hchXPhcnRvrng4vb3-HOA1KmlrTwiQ1b0Awe_jNOUFLUSqJf0-JTRI4oTj4Kjhy66naMnYtLzNDetY","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: A new approach to build structure with CPPNs","postDate":"1218399711","msgId":4267,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGc3bmlrdis1YWtxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGc3OTBxdithbTRlQGVHcm91cHMuY29tPg=="},"prevInTopic":4249,"nextInTopic":0,"prevInTime":4266,"nextInTime":4268,"topicId":4243,"numMessagesInTopic":4,"msgSnippet":"Hi David, I leave the cells to grow to any X,Y. A cell is basically one fixed- size square in a grid. Cell division tries to put a new cell directly next to it","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 87836 invoked from network); 10 Aug 2008 20:21:52 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m50.grp.scd.yahoo.com with QMQP; 10 Aug 2008 20:21:52 -0000\r\nX-Received: from unknown (HELO n17d.bullet.scd.yahoo.com) (66.218.67.56)\n  by mta15.grp.scd.yahoo.com with SMTP; 10 Aug 2008 20:21:51 -0000\r\nX-Received: from [209.73.164.83] by n17.bullet.scd.yahoo.com with NNFMP; 10 Aug 2008 20:21:51 -0000\r\nX-Received: from [66.218.66.80] by t7.bullet.scd.yahoo.com with NNFMP; 10 Aug 2008 20:21:51 -0000\r\nDate: Sun, 10 Aug 2008 20:21:51 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;g7nikv+5akq@...&gt;\r\nIn-Reply-To: &lt;g790qv+am4e@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: A new approach to build structure with CPPNs\r\nX-Yahoo-Group-Post: member; u=283334584; y=Wf0orx3GkYVlQZJkkdSzJM5bxPCric_w3XR7K2oGS2bJ4FmW35EBxfZ2hg\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nHi David, \n\nI leave the cells to grow to any X,Y. A cell is basically one f=\r\nixed-\nsize square in a grid. Cell division tries to put a new cell directly=\r\n \nnext to it (choosing randomly one of 8 possible neighborhood \nlocations).=\r\n If the location is occupied by another cell, a new \nlocation is chosen in =\r\na loop until it gives up (which happens when \nall locations are occupied). =\r\n\nThe cells do not interact with each other in any other way than \ndivision.=\r\n \n\nWell I think there may be a better solution for the substrate, to \nkeep =\r\nthings between -1 and 1. For now I just scale down the \ncoordinates I input=\r\n to the CPPN. I keep it simple. \n\nNow, about the crappy pictures and stuff.=\r\n This method actually \nevolves *objects*, not pictures. A snapshot CPPN pic=\r\nture or a \nHyperNEAT mesh with limited line segment length (as Ken suggeste=\r\nd) \ncan turn out to be several discrete objects after \nconversion/creation.=\r\n This can be bad in most domains, where you want \nan object with a specific=\r\n shape and structure, but only one object. \nNot pieces that are scattered a=\r\nround. I guess one way to have such \nobjects is to allow cells to die. This=\r\n way it becomes a CPPN-based \nCA. \n\nMost crappy objects are simple blobs of=\r\n matter. But there are such \nthat get more and more interesting shapes and =\r\ncolors as the CPPNs \ncomplexify. I apply a simple novelty metric for novelt=\r\ny search for \nthis. It is the total amount of cells and how many cells of e=\r\nach of 4 \npossible types the phenotype has. It is simple, but good enough f=\r\nor a \ndemo. \n\nBy the way I will probably upload the demo tomorrow after I m=\r\nake some \ntouches to it. \n\nPeter\n\n--- In neat@yahoogroups.com, &quot;David D&#39;Amb=\r\nrosio&quot; &lt;ddambro84@...&gt; wrote:\n&gt;\n&gt; Hi Peter,\n&gt; \n&gt; I&#39;ve also started playing =\r\naround with CPPNs whose output change over\n&gt; time as well.  This sounds lik=\r\ne a very interesting idea and I&#39;ll be\n&gt; interested to see the results.  In =\r\nparticular it answers the \nquestion\n&gt; I kept running into: &quot;How can a CPPN =\r\ncreate a structure of arbitrary\n&gt; size?&quot;  I do have a few questions though.=\r\n\n&gt; \n&gt; -When new cells are created, how are the assigned coordinates?  Do \ny=\r\nou\n&gt; keep things between -1 and 1 or do you let them grow to any x,y?  I\n&gt; =\r\nask because I always keep my substrates between -1 and 1 because the\n&gt; func=\r\ntions I use only have &quot;interesting&quot; behavior in those bounds. \n&gt; If you do =\r\nkeep them between -1 and 1 though, then it seems like you\n&gt; would have to k=\r\neep shifting the cells around and it basically \namounts\n&gt; to increasing the=\r\n resolution of the substrate.\n&gt; \n&gt; -Do you get a sense that there is a bene=\r\nfit to building things this\n&gt; way?  I have a feeling that there are certain=\r\n patterns that are \neasier\n&gt; to encode in a developmental process, but I ha=\r\nve a hard time \nactually\n&gt; thinking of any that a CPPN could not easily enc=\r\node on its own.  You\n&gt; mention that it cuts down on the number of crappy ph=\r\nenotypes, but \nI&#39;d\n&gt; guess that there are just as many crappy snapshot patt=\r\nerns as there\n&gt; are developmental ones, and one would hope that fitness eva=\r\nluation\n&gt; would take care of that in either case.\n&gt; \n&gt; -Do the cells influe=\r\nnce each other in anyway, other than dividing?\n&gt; \n&gt; Thanks,\n&gt; David\n&gt; \n&gt; --=\r\n- In neat@yahoogroups.com, &quot;petar_chervenski&quot; &lt;petar_chervenski@&gt;\n&gt; wrote:\n=\r\n&gt; &gt;\n&gt; &gt; Hi all, \n&gt; &gt; \n&gt; &gt; Well my project is not finished yet, but here is =\r\nsomething that I \n&gt; &gt; want to share with the community. It is about using C=\r\nPPNs to grow \n&gt; &gt; physical or basically any kind of objects over time. \n&gt; &gt;=\r\n \n&gt; &gt; The problem involved when using a CPPN to describe a material, \n&gt; &gt; p=\r\nhysical objects is this. There is no constraint in the matter \nthat \n&gt; &gt; is=\r\n available to build an object. One CPPN can output 100000000000 \n&gt; &gt; parts =\r\nand another just one. All in the same genome complexity. \n&gt; &gt; Inverted &quot;ima=\r\nges&quot; of the CPPN output can lead to infinite \nbuilding of \n&gt; &gt; parts. And m=\r\nore, most objects may just be too bizzare, like a \npattern \n&gt; &gt; of concentr=\r\nic circles. The search practitioner has to decide and \n&gt; &gt; develop too hard=\r\n things. Like the Alife domain, where you should \n&gt; &gt; discard individuals t=\r\nhat do not meet the requirements for \nsomething \n&gt; &gt; that is meanigful. \n&gt; =\r\n&gt; \n&gt; &gt; The idea I propose is that the phenotype can be built without \n&gt; &gt; q=\r\nuieriyng at each possible coordinate. The CPPN does not have to \nbe a \n&gt; &gt; =\r\nsnapshot, &quot;printing&quot; an image on the phenotype surface. \n&gt; &gt; \n&gt; &gt; Consider =\r\na 2D grid where you have one cell (which I call &quot;the \nseed&quot;) \n&gt; &gt; at coordi=\r\nnate 0,0. The CPPN is then asked what to do with that \ncell. \n&gt; &gt; Should it=\r\n divide, or change type/color/whatever? The CPPN is \nprovided \n&gt; &gt; with geo=\r\nmetric data, of course, that is the coordinates of the \n&gt; &gt; particular cell=\r\n that is asked and the time step of development \ntime. \n&gt; &gt; After that, the=\r\n CPPN is asked again, but for those 2 cells, if \nthe \n&gt; &gt; first one divides=\r\n. And then for four. And eight. etc... \n&gt; &gt; \n&gt; &gt; In effect, the CPPN instru=\r\ncts a mass of cells over time (TIME IS \nRE-\n&gt; &gt; INTRODUCED!) of how to deve=\r\nlop. A cell divides in this way. If it \nis \n&gt; &gt; not completely surounded by=\r\n other cells, choose randomly a place \n&gt; &gt; where to put a new cell. The par=\r\nent cell still retains its \nposition. \n&gt; &gt; The CPPN has the input of the cu=\r\nrrent cell&#39;s position and time \nuntil \n&gt; &gt; end of development. The developm=\r\nent of the phenotype happens in \n&gt; &gt; discrete time steps where all the cell=\r\ns are checked at once and \nthen \n&gt; &gt; the phenotype is replaced. \n&gt; &gt; \n&gt; &gt; D=\r\nuring development time, objects of cells appear. I can confirm \nthat \n&gt; &gt; t=\r\nhese objects&#39;s shapes are directly related to the functions used \nin \n&gt; &gt; t=\r\nhe CPPNs. In fact, when I use sin(x) and sin(y) for inputs, they \nare \n&gt; &gt; =\r\nso.. cool! Like flowers and any kind of shapes. \n&gt; &gt; \n&gt; &gt; Besides, there ar=\r\ne no empty holes, and there is no shit like if \nyou&#39;d \n&gt; &gt; try it with the =\r\nsnapshot approach. All objects are just made \n&gt; &gt; of &quot;matter&quot;. They can be =\r\ndirectly moved over a physical \nsimulation or \n&gt; &gt; something like this. \n&gt; =\r\n&gt; \n&gt; &gt; This in fact brings the CPPN theory more closely to engeneering \n&gt; &gt;=\r\n applications and stuff. Also in Artificial Life. In fact my \nproject \n&gt; &gt; =\r\nis dedicated to Alife mostly. \n&gt; &gt; \n&gt; &gt; Peter Chervenski\n&gt; &gt;\n&gt;\n\n\n\n"}}