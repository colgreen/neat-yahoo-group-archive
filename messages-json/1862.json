{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":187587090,"authorName":"Mark Ahlstrom","from":"Mark Ahlstrom &lt;lists@...&gt;","profile":"linteil","replyTo":"LIST","senderId":"kjrQK4HhYwnBphbQCE6ugvoMPrNsLg9bvx2IUzJg-0GHS-vzIqT3-9A7B65TigjYp3iZ5Pwmrs0w1k4HypqLrZpq_P_ZrqE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Aircraft control and parallelizing neat","postDate":"1107660654","msgId":1862,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDViNDUyMjA1YmI0ZWM5OWUyMzdkNjEwYWIyNDIxYTBhQGRpbG9neS5uZXQ+","inReplyToHeader":"PGN1M3MxaCsyNmpkQGVHcm91cHMuY29tPg==","referencesHeader":"PGN1M3MxaCsyNmpkQGVHcm91cHMuY29tPg=="},"prevInTopic":1861,"nextInTopic":1863,"prevInTime":1861,"nextInTime":1863,"topicId":1853,"numMessagesInTopic":13,"msgSnippet":"... The code is identical in the important areas.  The only real changes have been stripping out the guile, swig, and visualization guile and replacing it with","rawEmail":"Return-Path: &lt;mark@...&gt;\r\nX-Sender: mark@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 99273 invoked from network); 6 Feb 2005 03:31:00 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m25.grp.scd.yahoo.com with QMQP; 6 Feb 2005 03:31:00 -0000\r\nReceived: from unknown (HELO lakermmtao11.cox.net) (68.230.240.28)\n  by mta5.grp.scd.yahoo.com with SMTP; 6 Feb 2005 03:30:59 -0000\r\nReceived: from [192.168.0.100] (really [68.110.143.4])\n          by lakermmtao11.cox.net\n          (InterMail vM.6.01.04.00 201-2131-117-20041022) with ESMTP\n          id &lt;20050206033059.GBFQ15343.lakermmtao11.cox.net@[192.168.0.100]&gt;\n          for &lt;neat@yahoogroups.com&gt;; Sat, 5 Feb 2005 22:30:59 -0500\r\nMime-Version: 1.0 (Apple Message framework v619.2)\r\nIn-Reply-To: &lt;cu3s1h+26jd@...&gt;\r\nReferences: &lt;cu3s1h+26jd@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;5b452205bb4ec99e237d610ab2421a0a@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Sat, 5 Feb 2005 22:30:54 -0500\r\nTo: neat@yahoogroups.com\r\nX-Mailer: Apple Mail (2.619.2)\r\nX-eGroups-Remote-IP: 68.230.240.28\r\nX-eGroups-From: Mark Ahlstrom &lt;mark@...&gt;\r\nFrom: Mark Ahlstrom &lt;lists@...&gt;\r\nSubject: Re: [neat] Re: Aircraft control and parallelizing neat\r\nX-Yahoo-Group-Post: member; u=187587090\r\nX-Yahoo-Profile: linteil\r\n\r\n&gt;\n&gt; Hi Mark, just to make sure I understand, you are using my NEAT code\n&gt; right?\n\nThe code is identical in the important areas.  The only real changes \nhave been stripping out the guile, swig, and visualization guile and \nreplacing it with the appropriate KDE code. It ends up for the user \nworking a lot more like sharpNEAT.  The interfaces look a lot different \nthan the original, but the actual NEAT algorithm code hasn&#39;t changed.\n\n&gt; One really big area that is easy to parallelize is individual\n&gt; evaluations.  If each individual in the population can be evaluated\n&gt; individually, then you can parallelize as many evaluations as you\n&gt; have processors.  In that case, you get an n-times speedup in\n&gt; evaluation where n is the # processors, and I am betting that in\n&gt; your domain evaluation is by far taking up most of the processing\n&gt; (as opposed to e.g. NEAT genetic operations).\n\nThis seemed like the most likely place for a speedup to me as well.  \nThe other place that Im forking with hope of a speedup is in the \nreproduction loop.  My only concern here is that multithreading seems \nmore appropriate than forking.  The memory usage of making all of those \nduplicate copies may end up wiping out any performance advantage.  \nThere are a few other loops that I have tagged as potential targets for \nparallelization, but Im not certain that they will get me much payoff.\n\n&gt; I will try to put together a tar of my adaptive NEAT files in the\n&gt; next few days.  I can&#39;t provide experimental control code (it&#39;s far\n&gt; too complicated and undocumented) but I can provide the genetics.*\n&gt; and networks.* files that implement adaptive synapses.  However, if\n&gt; you are using someone else&#39;s NEAT code this obviously won&#39;t help so\n&gt; let me know if I am right that you are using my code.\n\nVery much appreciated.  With the changes to the control side, the \ngenetics.* and networks.* files should be much more helpful in any \ncase.  Once the experiment is up and running, I&#39;ll post the \nimplementation I&#39;ve got and the experiment.\n\nMark Ahlstrom\n\n\n"}}