{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":436954031,"authorName":"arman.schwarz","from":"&quot;arman.schwarz&quot; &lt;arman.schwarz@...&gt;","profile":"arman.schwarz","replyTo":"LIST","senderId":"GGiuBQcVsVoML_LzWjr4Vf4yt3YlehP3pWT3Y1sCAyFoMz0gUEvS9KsrNbKP0vxRTe-7CJsYxKpslDPqY99Bbjvb88oloSHF7evJqGHpnA8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: technical question about custom number of sensors and output nodes","postDate":"1313288749","msgId":5625,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGoyN2JuZCtxZjkzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGoyNnZhdis2cDdiQGVHcm91cHMuY29tPg=="},"prevInTopic":5624,"nextInTopic":5633,"prevInTime":5624,"nextInTime":5626,"topicId":5623,"numMessagesInTopic":7,"msgSnippet":"Thanks Ken, I think I understand what you mean. So when a new genome is created, NEAT will search through the nodes vector to look for candidates. The nodes","rawEmail":"Return-Path: &lt;arman.schwarz@...&gt;\r\nX-Sender: arman.schwarz@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 99538 invoked from network); 14 Aug 2011 02:25:50 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 14 Aug 2011 02:25:50 -0000\r\nX-Received: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta2.grp.sp2.yahoo.com with SMTP; 14 Aug 2011 02:25:50 -0000\r\nX-Received: from [69.147.65.173] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 14 Aug 2011 02:25:50 -0000\r\nX-Received: from [98.137.34.72] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 14 Aug 2011 02:25:50 -0000\r\nDate: Sun, 14 Aug 2011 02:25:49 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;j27bnd+qf93@...&gt;\r\nIn-Reply-To: &lt;j26vav+6p7b@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;arman.schwarz&quot; &lt;arman.schwarz@...&gt;\r\nSubject: Re: technical question about custom number of sensors and output nodes\r\nX-Yahoo-Group-Post: member; u=436954031; y=kEarCqBIjWFVYl6b1m6VrckXdQH6nVOaDdIyjRp_nbEwyKM6kSWG4Q\r\nX-Yahoo-Profile: arman.schwarz\r\n\r\n\n\nThanks Ken,\n\nI think I understand what you mean. So when a new genome is =\r\ncreated, NEAT will search through the &quot;nodes&quot; vector to look for candidates=\r\n. The nodes vector in turn is generated initially by what it finds in the c=\r\nall to this function during the initial creation of the population:\n\nGenome=\r\n::Genome(int id, std::ifstream &iFile)\n\nDoes this mean that nodes.size() is=\r\n constant and initially constrained to what is given in the genome start fi=\r\nle, or does can it adapt depending on the size of the array passed to the &quot;=\r\nload_sensors&quot; function?\n\nThe reason I ask is because I have about 200 input=\r\ns, and I would like to create a start file which simply takes the first inp=\r\nut as output, and tries to improve based on that, preferably allowing me to=\r\n use any number of inputs with a single genome start file. Can I do that wi=\r\nthout destroying NEAT&#39;s ability to recognise the existence of all the senso=\r\nrs?\n\nI&#39;m also somewhat confused about the format of those start files, is t=\r\nhere any documentation for these files that I can learn from, or will I jus=\r\nt need to look through the source code? I understand NEAT&#39;s concept of bias=\r\n nodes, but not so much the idea of &quot;traits&quot;, so it would be nice to know i=\r\nf any documentation does exist.\n\nThanks again for your help.\nArman\n\n--- In =\r\nneat@yahoogroups.com, &quot;Ken&quot; &lt;kstanley@...&gt; wrote:\n&gt;\n&gt; \n&gt; \n&gt; Hi Arman, from =\r\nwhat you wrote I think you understand how to pass in and read out the input=\r\n and output arrays.  I think the main question you are asking is how it kno=\r\nws how long those arrays are.\n&gt; \n&gt; The answer is that rtNEAT (or plain NEAT=\r\n) C++ counts the number of inputs and number of outputs when it creates a n=\r\neural network from a genome, which happens in the method \n&gt; \n&gt; Network *Gen=\r\nome::genesis(int id)\n&gt; \n&gt; When it creates the network, it creates separate =\r\nlists of inputs, hidden nodes, and outputs, as you can see here:\n&gt; \n&gt;      =\r\n           //Check for input or output designation of node\n&gt;               =\r\n  if (((*curnode)-&gt;gen_node_label)=3D=3DINPUT)\n&gt;                         in=\r\nlist.push_back(newnode);\n&gt;                 if (((*curnode)-&gt;gen_node_label)=\r\n=3D=3DBIAS)\n&gt;                         inlist.push_back(newnode);\n&gt;         =\r\n        if (((*curnode)-&gt;gen_node_label)=3D=3DOUTPUT)\n&gt;                    =\r\n     outlist.push_back(newnode);\n&gt; \n&gt; Then it knows how many inputs there a=\r\nre and how many outputs there are because it knows how long those lists are=\r\n.\n&gt; \n&gt; Going back further in the chain, usually the first place this issue =\r\nwill ultimately be specified is in the starter genome file, which is usuall=\r\ny the origin of the genome data structures (which are created from this fil=\r\ne).  Here is a pole balancing starter genome:\n&gt; \n&gt; genomestart 1\n&gt; trait 1 =\r\n0.1 0 0 0 0 0 0 0\n&gt; node 1 0 1 1\n&gt; node 2 0 1 1\n&gt; node 3 0 1 1\n&gt; node 4 0 1=\r\n 3\n&gt; node 5 0 0 2\n&gt; gene 1 1 5 0.0 0 1 0 1\n&gt; gene 1 2 5 0.0 0 2 0 1\n&gt; gene =\r\n1 3 5 0.0 0 3 0 1\n&gt; gene 1 4 5 0.0 0 4 0 1\n&gt; genomeend 1\n&gt; \n&gt; Here the nume=\r\nrical codes next the nodes specify what type of nodes they are.  In this ca=\r\nse, there are 4 inputs (one is a bias) and 1 output.  These codes are defin=\r\ned in nnode.h:\n&gt; \n&gt;         enum nodetype {\n&gt;                 NEURON =3D 0,=\r\n\n&gt;                 SENSOR =3D 1\n&gt;         };\n&gt; \n&gt;         enum nodeplace {\n=\r\n&gt;                 HIDDEN =3D 0,\n&gt;                 INPUT =3D 1,\n&gt;           =\r\n      OUTPUT =3D 2,\n&gt;                 BIAS =3D 3\n&gt;         };\n&gt; \n&gt; So usual=\r\nly that is from where NEAT ultimately ends up knowing these counts.  I hope=\r\n that helps answer your question.\n&gt; \n&gt; ken\n&gt; \n&gt; \n&gt; --- In neat@yahoogroups.=\r\ncom, &quot;arman.schwarz&quot; &lt;arman.schwarz@&gt; wrote:\n&gt; &gt;\n&gt; &gt; hi everyone, \n&gt; &gt; I am=\r\n currently trying to apply timeseries prediction to the rtNEAT c++ package,=\r\n to compare its search performance to a fixed-size, evolving topology recur=\r\nrent neural net I wrote.\n&gt; &gt; \n&gt; &gt; I have written a custom experiments.h/cpp=\r\n file to cycle through the activate() function for every time step, after l=\r\noading an array of ~75 sensor inputs.\n&gt; &gt; \n&gt; &gt; So while I understand how to=\r\n load the inputs and retrieve the outputs, I don&#39;t quite understand how I a=\r\nm supposed to tell NEAT how many inputs and outputs there are. after all, t=\r\nhat array I&#39;m passing to load_sensor is nothing more than a pointer to a va=\r\nlue.\n&gt; &gt; \n&gt; &gt; so where do I tell NEAT how many inputs I will give each net,=\r\n and how many outputs I will be expecting? (in my RNN the outputs were simp=\r\nly the last x neurons, but the inputs do need to be defined).\n&gt; &gt; \n&gt; &gt; than=\r\nks in advance for the help!\n&gt; &gt;\n&gt;\n\n\n\n"}}