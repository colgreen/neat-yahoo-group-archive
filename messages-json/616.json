{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"VC4SjzafPaJ7PLdogsKpnxd9zJ_kaibjwqp5MJ6G27qjwXsQLMtRfRHdO9BFiq6FqJ0B6LWOfx0Qyd13u676rUcaHhrQytCnKNBAuxCvwB84","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Network Visualization","postDate":"1081244203","msgId":616,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM0dHRuYituaTNuQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEJBWTItRjIwR21FVXY5Y01pTEMwMDAwZjc2Y0Bob3RtYWlsLmNvbT4="},"prevInTopic":612,"nextInTopic":617,"prevInTime":615,"nextInTime":617,"topicId":612,"numMessagesInTopic":12,"msgSnippet":"John, I think this is a very interesting idea, and could be a good way to graph a neural network, or any large network or topology for that matter.  The one","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 2159 invoked from network); 6 Apr 2004 09:37:35 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m16.grp.scd.yahoo.com with QMQP; 6 Apr 2004 09:37:34 -0000\r\nReceived: from unknown (HELO n38.grp.scd.yahoo.com) (66.218.66.106)\n  by mta5.grp.scd.yahoo.com with SMTP; 6 Apr 2004 09:37:34 -0000\r\nReceived: from [66.218.67.156] by n38.grp.scd.yahoo.com with NNFMP; 06 Apr 2004 09:36:45 -0000\r\nDate: Tue, 06 Apr 2004 09:36:43 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c4ttnb+ni3n@...&gt;\r\nIn-Reply-To: &lt;BAY2-F20GmEUv9cMiLC0000f76c@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3579\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.106\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Network Visualization\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nJohn, I think this is a very interesting idea, and could be a good way\nto graph a neural network, or any large network or topology for that\nmatter.  The one question I have is about the computational\ncomplexity:  Does computing the net force on a node requires comparing\nit to every other node?  I wasn&#39;t clear how the net&quot;repulsive\nproximity force&quot; is computed?  I imagine if it&#39;s n^2 in the number of\nnodes it might be prohibitive?  In any case I think this is a clever\napproach.\n\nHowever, I should note that using Mat Buckland&#39;s approach or one like\nit should be sufficient for determining vertical node placement in\nNEAT, since over the course of evolution it is possible to always know\nwhat level/layer a new node should be in based on the level/layer of\nalready existing nodes around it.  Still, there is the question of\nhorizontal placement, which actually could still benefit from an\napproach what you are proposing.  (Though I think Mat had a horizontal\nsplit value as well...I need to look up how that was computed)\n\nI&#39;d be very interested to see net visualizations generated through\nyour method.\n\nken\n\n--- In neat@yahoogroups.com, &quot;John Arrowwood&quot; &lt;jarrowwx@h...&gt; wrote:\n&gt; This is mildly off-topic, and yet relevant...\n&gt; \n&gt; I have some data I want to visualize.  The nature of the data is a\nnetwork \n&gt; or mesh of associations.  It is far more complicated than the\nnetworks that \n&gt; NEAT generates.  Thus, the solution for visualizing this data might\nbe a \n&gt; good way of visualizing a complex NEAT network, too.  So I thought\nperhaps \n&gt; the people on this list might have some interest in a contributing\nto a \n&gt; solution to this problem.\n&gt; \n&gt; The origins of the data is the dictionary.  Specifically \n&gt; dictionary.reference.com and thesaurus.reference.com.\n&gt; \n&gt; I started with a word.  It really doesn&#39;t matter which word, but I\nstarted \n&gt; with &#39;intelligence&#39;.  I query the dictionary and thesaurus entries\nfor that \n&gt; word and parse the results.  I get a list of words that appear in\nthose two \n&gt; pages.  I save that list as the list of &#39;associations&#39; for that\nword.  Now \n&gt; for each of those words (which I have not already processed), I\nrepeat the \n&gt; process.  Virtually no matter what word I start with, I end up with \n&gt; basically the whole dictionary.  Then I prune those associations to\ninclude \n&gt; only those that are reciprocal.  That is, word A references B, and B\nalso \n&gt; references A.  An example would be Tree and Bark.  This pruning\nmakes the \n&gt; data SIGNIFICANTLY smaller, but still pretty large.\n&gt; \n&gt; Now I would like to present the data as a visual &#39;mesh&#39; or network.\n It \n&gt; would help me to &#39;see&#39; the connections.  I want to minimize the\nlengths of \n&gt; the connections so that related words appear close to one another.\n&gt; \n&gt; Here&#39;s what I had in mind.  Load the data into memory.  Randomly\nassign x,y \n&gt; positions to each node.  Then treat every direct connection as an\nattractive \n&gt; force, and treat physical proximity as a repulsive force that falls\noff with \n&gt; the square of the distance.  For each time step, calculate the net\nforce.  \n&gt; Then reposition the nodes based on that net force.  Repeat until the\nnet \n&gt; movement approaches zero.  Then save the positions of everything\nand \n&gt; generate a visualization of it.\n&gt; \n&gt; For NEAT, I thought that you could add an additional &#39;force&#39; that\nis an \n&gt; extra repulsive force between input and output nodes.  Then, the\ninput nodes \n&gt; would tend to cluster towards one side, and the output nodes on the\nother, \n&gt; with a delicate balance forming in the nodes in between.\n&gt; \n&gt; Any thoughts?\n&gt; \n&gt; -- John\n&gt; \n&gt; \n\n\n"}}