{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":199382914,"authorName":"Mike Woodhouse","from":"&quot;Mike Woodhouse&quot; &lt;mikewoodhouse@...&gt;","profile":"mikewoodhouse","replyTo":"LIST","senderId":"XnN_F7Am8nYQJxE0qTf8R7z4Ieg1We8MB5djvdpv3mQNtE6slVxPTDLoIRXPJh8fj7fgbX0mvnQD0zAss6EMTWaoUdySpw7nWg9qTx7WkWMV","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: SharpNEAT code optimizations","postDate":"1164197101","msgId":2847,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVrMWVkZCtpZGp0QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVrMDB1Nys0NmtmQGVHcm91cHMuY29tPg=="},"prevInTopic":2844,"nextInTopic":2849,"prevInTime":2846,"nextInTime":2848,"topicId":2816,"numMessagesInTopic":16,"msgSnippet":"... Ken, Colin s educational (to me at least) optimisations notwithstanding, I ve been interested to see how fast C# and .Net actually can be. As an example, I","rawEmail":"Return-Path: &lt;mikewoodhouse@...&gt;\r\nX-Sender: mikewoodhouse@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 70320 invoked from network); 22 Nov 2006 12:10:35 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m34.grp.scd.yahoo.com with QMQP; 22 Nov 2006 12:10:35 -0000\r\nReceived: from unknown (HELO n12c.bullet.sp1.yahoo.com) (69.147.64.111)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Nov 2006 12:10:35 -0000\r\nReceived: from [216.252.122.218] by n12.bullet.sp1.yahoo.com with NNFMP; 22 Nov 2006 12:05:02 -0000\r\nReceived: from [66.218.69.1] by t3.bullet.sp1.yahoo.com with NNFMP; 22 Nov 2006 12:05:02 -0000\r\nReceived: from [66.218.66.77] by t1.bullet.scd.yahoo.com with NNFMP; 22 Nov 2006 12:05:02 -0000\r\nDate: Wed, 22 Nov 2006 12:05:01 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ek1edd+idjt@...&gt;\r\nIn-Reply-To: &lt;ek00u7+46kf@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Mike Woodhouse&quot; &lt;mikewoodhouse@...&gt;\r\nSubject: Re: SharpNEAT code optimizations\r\nX-Yahoo-Group-Post: member; u=199382914; y=1bCQDQwndpGx1aCvPzzP0zsmN-7OpOV5NqEiiUIvguO3KiEQS7hhOQ\r\nX-Yahoo-Profile: mikewoodhouse\r\n\r\n--- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt; wrote:\n&gt;\n&gt; Co=\r\nlin, thanks very much for all the info.  I have to congratulate \n&gt; you on m=\r\naking SharpNEAT such a great system.  It&#39;s incredibly fast, \n&gt; has a nice G=\r\nUI, and implements an efficient version of NEAT.  Some \n&gt; of my students ar=\r\ne now choosing to use it inside their projects.\n&gt; \n&gt; The next version sound=\r\ns exciting and I&#39;ll be looking forward to it.\n&gt; \n&gt; ken\n\n\nKen,\n\nColin&#39;s educ=\r\national (to me at least) optimisations notwithstanding,\nI&#39;ve been intereste=\r\nd to see how fast C# and .Net actually can be. As\nan example, I recently po=\r\nrted part of a (non-AI related)\nheavily-optimised &quot;straight&quot; C library to C=\r\n#, expecting to see a\nfairly substantial reduction in performance. The resu=\r\nlt? Almost\nexactly the same. And by &quot;almost&quot; I mean within 1 or 2 percent e=\r\nither\nway: it&#39;s possible, without putting stop-watch code in, that C# is\nma=\r\nrginally faster, although I can&#39;t quite see what JIT optimisations\nmight be=\r\n in play within the .Net runtime. And I haven&#39;t made any\nparticular effort =\r\nto speed up my C# code.\n\nAnd as someone who has a blind spot as regards C++=\r\n (despite being able\nto code in about a dozen languages from Cobol to Ruby =\r\nI just can&#39;t\nassimilate C++&#39;s arcane syntax) this is a big plus. I&#39;ve been =\r\nvery\nimpressed indeed by the speed I get from my SharpNEAT models and by\nth=\r\ne ease with which they were integrated. Not happy with the results,\nmind, b=\r\nut that&#39;s my problem!\n\nMike\n\n\n\n"}}