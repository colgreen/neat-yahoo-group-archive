{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"t2bUNUDG0F_6v7RdzivRylU_lUQDqi4dgsQyGG9uqv_Bu3a9_d-Nml5fQwJGBoNFA-aAsLA57KFXTZJ7tyL7tkHh-Wdb8iscug","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Refining Search","postDate":"1099861796","msgId":1699,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxOEU4RjI0LjcwNjA5MDlAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PDE5YjEwZDUxMDQxMTA3MTExNzYxMGVjZDkzQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDE5YjEwZDUxMDQxMTA3MTExNzYxMGVjZDkzQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":1698,"nextInTopic":1700,"prevInTime":1698,"nextInTime":1700,"topicId":1698,"numMessagesInTopic":40,"msgSnippet":"... Hi Derek, yeh I read the draft and I liked it. It s an interesting problem domain and the roaming eye component could potentially be applied to many other","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 64055 invoked from network); 7 Nov 2004 21:09:55 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m22.grp.scd.yahoo.com with QMQP; 7 Nov 2004 21:09:55 -0000\r\nReceived: from unknown (HELO ranger.systems.pipex.net) (62.241.162.32)\n  by mta5.grp.scd.yahoo.com with SMTP; 7 Nov 2004 21:09:55 -0000\r\nReceived: from [10.0.0.10] (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby ranger.systems.pipex.net (Postfix) with ESMTP id 7BE3EE00015C\n\tfor &lt;neat@yahoogroups.com&gt;; Sun,  7 Nov 2004 21:09:54 +0000 (GMT)\r\nMessage-ID: &lt;418E8F24.7060909@...&gt;\r\nDate: Sun, 07 Nov 2004 21:09:56 +0000\r\nUser-Agent: Mozilla Thunderbird 0.7.1 (Windows/20040626)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;19b10d510411071117610ecd93@...&gt;\r\nIn-Reply-To: &lt;19b10d510411071117610ecd93@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 62.241.162.32\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] Refining Search\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nDerek James wrote:\n\n&gt;Hi all,\n&gt;\n&gt;Don&#39;t know if anyone else has had a chance to look at our paper, but\n&gt;we&#39;re still moving forward with this line of research and we had a\n&gt;general question we thought we&#39;d throw out to the group.\n&gt;  \n&gt;\nHi Derek, yeh I read the draft and I liked it. It&#39;s an interesting \nproblem domain and the roaming eye component could potentially be \napplied to many other types of problem. So it&#39;s nice to see some \npositive results...\n\n&gt;We can evolve eyes that get in the upper 90s percentage-wise for\n&gt;identifying objects, but that last 2 or 3 percent is eluding us.  When\n&gt;evolving, we have a pop size of 100, and 30 randomized objects for\n&gt;evaluation.  But a best-evolved individual may have identifed all 30\n&gt;correctly, but when shown a test set of 100, for example, it will\n&gt;still miss two or three.  It seems like the evaluation set may be too\n&gt;small to generalize *all* possible randomizations.\n&gt;  \n&gt;\nI have also noted this problem during prey capture runs. Following all \nof SharpNEAT&#39;s tweaks and bug fixes to date, it actually performs very \nwell on this problem and achieves 100/100 on each difficultly level \nquite rapidly. At difficulty 11 (the highest) the fitness usually \nachieves very close to 100 and sometimes a score of 100 is noted, but in \nthe next generation it will be sub-100 again.\n\nThe problem (as in your case) is a randomized set of evaluation cases - \nso you might get full marks in one eval but not the next, and this may \nactually cause NEAT to discard of a good genome if it was tested with a \nparticularly unfortunate set of test cases.\n\nA couple of ideas therefore emerge:\n\n1) Prevent unfortunate discarding of good genomes by keeping a library \nof previous champions seperate from the main population. These can then \nbe somehow incorporated back into the population if they are lost. I \nsuppose a simple alternative to this is to keep more elite genomes per \ngeneration, or to average out the fitness of elite genomes that persist \nover more than one generation - that way the effect of one unfortunate \neval will be lessened.\n\n2) Some kind of hybrid evaluation scheme might be useful. e.g. Consider \nthe following eval scheme:\n\n - Use random tests as normal.\n - If a genome is encountered that scores 100% then test it against a \nmore exhaustive test set (or just a lot more random tests).\n - Note any tests that fail - hopefully there won&#39;t be too many - these \nare now &#39;special&#39; test cases..\n - Subsequent evaluations can now use random tests *and* the set of \npreviously failed tests.\n\nYou might want to only apply the extra tests to genomes that score 100%, \nor you might want to set a flag that is tripped as soon as the first \ngenome scores 100% - all evaluations from then on will use the new \nscheme. You could perform all of the random tests plus the special ones, \nor cut back the random tests to 50%, or perform a random sampling of the \nspecial tests... there are quite a few options here.\n\nYou might also want to refresh the list of &#39;special&#39; tests or allow it \nto grow up to a maximum size, discarding the oldest tests as the search \nprogresses (fixed size FIFO buffer). Hopefully though the &#39;special&#39; \ntests will cause the population to generalize that extra little bit and \ncause them to score 100% on *all* tests, thus not generating any more \nspecial tests, or at least fewer of them.\n\nSuch a sheme effectively zooms in on problem areas of the fitness \nfunction, but because we still test against a set of random test cases \nthis would hopefully not be to the detriment of other areas of the function.\n\n\nAnother simpler idea that I tried was to use a fixed set of test cases - \ndeterminsitic fitness function - that attempted to cover all of the \ntricky areas of the fitness function. Which is effectively what the \nabove scheme achieves in a dynamic manner. But you might not be able to \ncover enough of the fitness function within a fixed set of test cases.\n\nColin.\n\n\n\n\n\n\n\n One idea that comes to mind is to use a semi-intelligent evaluation \ntechnique whereby you start out with random tests, but when a certain \nfitness threshold is reached, say 95%,\n\n\n I typically use a pop. size of 150 and perform 100 prey capture \nsimulations per eval. \n\n&gt;So we thought about increasing the evaluation set, but our image\n&gt;processing is our big bottleneck, and the more evaluations we add, the\n&gt;slower runs take.\n&gt;\n&gt;Does you think it makes sense to chop the pop size in half and up the\n&gt;evaluation set during evolution?  Or does anybody have any other\n&gt;ideas?\n&gt;\n&gt;Thanks,\n&gt;Derek\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt; \n&gt;\n&gt;\n&gt;\n&gt;\n&gt;  \n&gt;\n\n\n"}}