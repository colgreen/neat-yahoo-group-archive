{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"yIxmlCnpcXdZgs1GBj97K2NFeRy7eZTY1fRa8X7-i9QOu9m6_PIGTu_QbQPht-g1nZt-6iIAUYOmb1vLqdWMSxQmkXW_Bna2zOa-DesGQIYo","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Node Bloat","postDate":"1214450925","msgId":4162,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGczdjJkZCtvazdyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEM0ODdGMTAxLjIzODIzJWpjbHVuZUBtc3UuZWR1Pg=="},"prevInTopic":4161,"nextInTopic":4164,"prevInTime":4161,"nextInTime":4163,"topicId":4161,"numMessagesInTopic":7,"msgSnippet":"One issue with bloat that is easy to overlook is that the population contains a range of network sizes and therefore the maximum size of a network in the","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 29849 invoked from network); 26 Jun 2008 03:28:47 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m36.grp.scd.yahoo.com with QMQP; 26 Jun 2008 03:28:47 -0000\r\nX-Received: from unknown (HELO n22a.bullet.scd.yahoo.com) (66.94.237.51)\n  by mta18.grp.scd.yahoo.com with SMTP; 26 Jun 2008 03:28:47 -0000\r\nX-Received: from [66.218.69.6] by n22.bullet.scd.yahoo.com with NNFMP; 26 Jun 2008 03:28:47 -0000\r\nX-Received: from [66.218.66.86] by t6.bullet.scd.yahoo.com with NNFMP; 26 Jun 2008 03:28:47 -0000\r\nDate: Thu, 26 Jun 2008 03:28:45 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;g3v2dd+ok7r@...&gt;\r\nIn-Reply-To: &lt;C487F101.23823%jclune@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Node Bloat\r\nX-Yahoo-Group-Post: member; u=54567749; y=vND8liyEZG2jRoaPN7gJth1dJp3p9X2HkaB_bgo6D5yOdr_H1-Vn\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nOne issue with bloat that is easy to overlook is that the population\ncontai=\r\nns a range of network sizes and therefore the maximum size of a\nnetwork in =\r\nthe population is not necessarily a measure of &quot;bloat&quot;\nbecause other specie=\r\ns may contain significantly smaller networks. \nWhat you probably want to ch=\r\neck is that a healthy range is being\nmaintained rather than simply trying t=\r\no prevent anything from getting big.\n\nIn general, there is good reason to g=\r\nrow networks if fitness is not\ngoing up because the algorithm has no way of=\r\n knowing what is necessary\nto improve.  It might need more structure, or it=\r\n might simply need to\nfind a better set of weights.  Therefore, it is sensi=\r\nble for it to try\nboth: If you are stagnating, keep growing at one end of t=\r\nhe spectrum,\nbut also don&#39;t lose your little guys in case they turn out suf=\r\nficient.\n In other words, a stagnant population should gradually grow in it=\r\ns\nrange of sizes, not putting all its eggs in one basket.\n\nFor populations =\r\nthat are not stagnant, it makes sense for them to\ndisplay less growth in ge=\r\nneral, because they are succeeding in their\ncurrent weight space.  I&#39;d gues=\r\ns your more recent experiment is\nundergoing periods of stagnation, which wo=\r\nuld explain why you see more\ngrowth.\n\nI think this idea of having a healthy=\r\n range of sizes is less prevalent\nin GP because GP populations are usually =\r\nnot speciated and therefore\ntend to bloat all at once.  As soon as someone =\r\ngets bigger, he starts\nmating with others and spreading the extra genes aro=\r\nund.  Therefore,\nGP doesn&#39;t tend to keep a healthy range the way NEAT does.=\r\n  We\nactually have built a version of GP-NEAT at EPlex (which has\nhistorica=\r\nl markings and speciation, but with GP trees) that has very\ndifferent bloat=\r\n characteristics than regular GP, as this argument\nwould suggest. \n\nIn any =\r\ncase, there is still a possibility that things will grow too\nfast if the mu=\r\ntation rate for adding structure is too high.  However,\nthat is a simple pr=\r\noblem compared to what we see in GP.  Also, of\ncourse, some structure that =\r\ngets added is inevitably unnecessary, and\nas you suggest, pruning it out co=\r\nuld streamline learning.  Several\npeople on this group have experimented wi=\r\nth pruning of various types\n(for example, Colin Green, Derek James, and Phi=\r\nllip Tucker) and it\nseems to improve performance when done right.  But I wo=\r\nuld guess the\nalgorithm will not experience a significant pathology even wi=\r\nthout it.\n\nken\n\n--- In neat@yahoogroups.com, Jeff Clune &lt;jclune@...&gt; wrote:=\r\n\n&gt;\n&gt; Hello all-\n&gt; \n&gt; I don&#39;t work in GP, but I have been told that those tr=\r\nees bloat\n(evolve to\n&gt; have many, many internal nodes that are mostly non-f=\r\nunctional). I\nhave also\n&gt; heard, though don&#39;t know if it is true, that the =\r\nmain reason for\nbloat is\n&gt; because the trees are trying to lower their effe=\r\nctive mutation rate\n(if 1%\n&gt; of nodes get mutated, and there are more nodes=\r\n, the good one are\nless likely\n&gt; to be affected by mutation).\n&gt; \n&gt; Do you g=\r\nuys generally see this happen in NEAT? Do the networks get\n&gt; ridiculously l=\r\narge when smaller networks would do?\n&gt; \n&gt; I notice in HyperNEAT that the co=\r\nnfig files used in the papers typically\n&gt; only have an add node mutation ra=\r\nte operator (the demolish node\nprobability\n&gt; is set to zero). This seems to=\r\n me like it would add to the upward\npressure\n&gt; to create bloated networks.\n=\r\n&gt; \n&gt; In most of my experiments so far with HyperNEAT (like the ones in\nthe =\r\npaper\n&gt; I recently posted here), the CPPN networks did not explode in size,=\r\n\nwhich\n&gt; surprised me. However, in some new experiments I am doing I am\nsee=\r\ning the\n&gt; networks get large (e.g. ~200 nodes). This is happening even when=\r\n I\nmake the\n&gt; demolishNode probability the same as the addNode probability.=\r\n\n&gt; \n&gt; If you are seeing bloat, how do you combat it? Do you generally have\n=\r\nto set\n&gt; the demolishNode prop to be much higher than addNode? Or do you gi=\r\nve a\n&gt; fitness penalty for larger networks?\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; Cheers,\n&gt; Jeff=\r\n Clune\n&gt; \n&gt; Digital Evolution Lab, Michigan State University\n&gt; \n&gt; jclune@..=\r\n.\n&gt;\n\n\n\n"}}