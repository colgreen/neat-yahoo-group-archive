{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"4CqoF2jbMjSUIG-VEpgwV6zi6v3OyGEPtZtznVLhpa9kpH52sDhUuFQztcaZ_fWm52fkRAuFkVj8l_bE1L_gJqwQYyHT","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Novelty Search","postDate":"1270672893","msgId":5197,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhwaXFsdCtwNnFrQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGhwaTIyaCtzMXBiQGVHcm91cHMuY29tPg=="},"prevInTopic":5196,"nextInTopic":0,"prevInTime":5196,"nextInTime":5198,"topicId":5158,"numMessagesInTopic":12,"msgSnippet":"Yes, there is certainly a difference between random search as you define it and the random fitness function.  However, this difference is not necessarily good","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 98621 invoked from network); 7 Apr 2010 20:46:23 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m2.grp.sp2.yahoo.com with QMQP; 7 Apr 2010 20:46:23 -0000\r\nX-Received: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta1.grp.re1.yahoo.com with SMTP; 7 Apr 2010 20:46:23 -0000\r\nX-Received: from [69.147.65.147] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 07 Apr 2010 20:41:35 -0000\r\nX-Received: from [98.137.34.33] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 07 Apr 2010 20:41:35 -0000\r\nDate: Wed, 07 Apr 2010 20:41:33 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hpiqlt+p6qk@...&gt;\r\nIn-Reply-To: &lt;hpi22h+s1pb@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Novelty Search\r\nX-Yahoo-Group-Post: member; u=54567749; y=c_J_hqhF62Xh6YUJdmXJf598-r1wV42xNRXBny2P6Figg146gUQk\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nYes, there is certainly a difference between random search as you define =\r\nit and the random fitness function.  However, this difference is not necess=\r\narily good or bad.  It just depends on the problem.  Dropping thousands of =\r\npoints at random on a hilly landscape will not work as well as walking a ra=\r\nndom path if the solution happens to be (1) near where you dropped the orig=\r\ninal point(s) and (2) in a very small portion of search space relative to t=\r\nhe total size of the search space.  Of course it entirely depends on the pr=\r\noblem and luck whether those happen to be the case, but because both random=\r\n approaches completely ignore all feedback from the domain at the points th=\r\ney encounter, neither one is good for anything interesting.  \n\nNote that po=\r\nint 2 above is a big problem for pure random search.  Uniformly distributin=\r\ng points is little help if the solution is in a tiny infinitesimal region o=\r\nf the whole search space.  \n\nAbout topologies evolving:  NEAT by its nature=\r\n keeps small topologies around even as some grow larger because of speciati=\r\non, so you will get a nice range developing over time, not that that makes =\r\nrandom search any more appealing.  (This phenomenon is documented here: htt=\r\np://nn.cs.utexas.edu/keyword?stanley:jair04 )\n\nAnyway, I would not worry to=\r\no much about these issues because arguing about which form of random search=\r\n is a better algorithm is like arguing which type of pillow makes the best =\r\nprojectile weapon.  It is theoretically interesting but any kind of random =\r\nsearch is generally a really bad idea except in some strange concocted scen=\r\narios (for example, if every point in the search space is a solution, then =\r\nrandom search is great!).\n\nken\n\n\n--- In neat@yahoogroups.com, &quot;lior_fainshi=\r\nl&quot; &lt;lior_fainshil@...&gt; wrote:\n&gt;\n&gt; I will give an illustration for the diffe=\r\nrence between a random search and a search directed by a random fitness fun=\r\nction.\n&gt; Imagine you have a hilly landscape and you want to plant a flag as=\r\n high as possible on the landscape.\n&gt; A random search would be to airdrop a=\r\n thousand people at uniformly random locations and each person will plant a=\r\n flag at the spot where he lands.\n&gt; A search with a random fitness function=\r\n would be to drop one person with a thousand flags. This person will at eac=\r\nh timestep choose a random direction, walk a few steps and plant a flag.\n&gt; =\r\nIn the first case you will get a representative sample of the landscape. In=\r\n the second you get a trail with the different flags being at similar heigh=\r\nts. He might land on the planes and miss the hills altogether. The landscap=\r\ne will be poorly represented.\n&gt; A more sophisticated search algorithm, will=\r\n reduce the impact of this problem, as the person will sometimes jump to fa=\r\nraway locations. The problem however will never be eliminated, as a kind of=\r\n a local search is in integral part of any fitness directed search algorith=\r\nm.\n&gt; \n&gt; Additionally, I think there should be another subtler problem with =\r\nrandom fitness directed search, which will manifest itself in representatio=\r\nns with variable size genotypes. It will cause the code size to grow much f=\r\naster than what is optimally wanted in a random search and produce overly c=\r\nonvoluted solutions, where in reality we we want the solutions to be simple=\r\n.\n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;Ken&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; \n&gt; &gt; \n=\r\n&gt; &gt; Probably the best way to quantify the difference would be to implement =\r\nthe kind of random search that you are interested in and then compare it in=\r\n the same domain (and other domains, if you want to be thorough).  Of cours=\r\ne, if you found that any type of completely random process consistently out=\r\nperforms fitness significantly in reasonable domains (as novelty does) it w=\r\nould be a huge shock.   \n&gt; &gt; \n&gt; &gt; You suggest that the random search that w=\r\ne implemented is worse than the kind of random search that you describe.  I=\r\n could be wrong, but I don&#39;t think there is an a priori reason to believe t=\r\nhat any given totally uninformed process is better than another.  You note =\r\nthat our random search may be more &quot;uneven,&quot; which could be true, but there=\r\n is no a priori reason to believe that being &quot;even&quot; is better for a given d=\r\nomain.  Generally, even with totally random searches you are facing a kind =\r\nof no free lunch situation.\n&gt; &gt; \n&gt; &gt; Probably the most important question u=\r\nnderlying your curiosity is why we would expect novelty to be better than r=\r\nandom.  There are many answers to this question, but perhaps one helpful in=\r\nsight is that novelty is an informative gradient.  That is, quite the oppos=\r\nite of random search, novelty is information-rich, which means that the nov=\r\nelty metric tells us a lot about how different points in the search space r=\r\nelate to each other.  In fact, one way to understand the relationship among=\r\n random, fitness, and novelty, is to realize that fitness actually provides=\r\n less information than novelty, putting it between random and novelty on th=\r\ne scale of information-richness.  The reason fitness provides less informat=\r\nion is that many behaviors that are different from each other receive the s=\r\name fitness, whereas novelty search would notice their difference.  Thus, i=\r\nn fitness-based search, moving among such conflated behaviors is similar to=\r\n a random search, because there is no gradient among them.  \n&gt; &gt; \n&gt; &gt; ken\n&gt;=\r\n &gt; \n&gt; &gt; --- In neat@yahoogroups.com, &quot;lior_fainshil&quot; &lt;lior_fainshil@&gt; wrote=\r\n:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Looks like I missed that part. Sorry about that. If however I=\r\n understand correctly what you did, it is not exactly a random search. You =\r\nwrite that you run NEAT with randomly assigned fitness. In such search ther=\r\ne should be significant correlations between the tested individuals, since =\r\ndespite the random selection, much of the genetic material is inherited fro=\r\nm past individuals. This is not at all what we would want in a random searc=\r\nh. Additionally you would get genomes becoming larger with time(probably mu=\r\nch faster than we would want in a random search).\n&gt; &gt; &gt; I would expect thes=\r\ne deviations from a random search to cause an uneven exploration of the gen=\r\notype space. Thus the resulting performance should be worse than that of a =\r\nrandom search. I don&#39;t know however if the difference will be significant (=\r\nIt depends on the specifics of the evolutionary algorithm).\n&gt; &gt; &gt; \n&gt; &gt; &gt; I =\r\nagree that it seems that novelty search will spend less time on degenerate =\r\nbehaviors than a random search. Any ideas on how to quantify this differenc=\r\ne?\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}