{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"qwV_PUk5DXBJ5N7-oFtsURzomFVBbKhzpj9N_Ijp6vt2t-0sSCm8MElfqCsJ-QPzrh9X0LdlJuAOWl4GWGHz63wT3aMF-S17g51u6v8O-uAW","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: An improvement over object evolution with CPPNs","postDate":"1227704137","msgId":4489,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdnamgwOStqc2VzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGdnaHV2aStnOHJmQGVHcm91cHMuY29tPg=="},"prevInTopic":4487,"nextInTopic":4490,"prevInTime":4488,"nextInTime":4490,"topicId":4444,"numMessagesInTopic":14,"msgSnippet":"Peter, the fix worked for me and I am now able to run DCPPN_3.exe. The structures it creates are indeed interesting and I am curious to see what it would","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 31677 invoked from network); 26 Nov 2008 12:56:06 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m56.grp.scd.yahoo.com with QMQP; 26 Nov 2008 12:56:06 -0000\r\nX-Received: from unknown (HELO n15.bullet.mail.re1.yahoo.com) (69.147.103.142)\n  by mta18.grp.scd.yahoo.com with SMTP; 26 Nov 2008 12:55:57 -0000\r\nX-Received: from [68.142.230.28] by n15.bullet.mail.re1.yahoo.com with NNFMP; 26 Nov 2008 12:55:42 -0000\r\nX-Received: from [69.147.65.148] by t1.bullet.re2.yahoo.com with NNFMP; 26 Nov 2008 12:55:39 -0000\r\nX-Received: from [66.218.66.78] by t11.bullet.mail.sp1.yahoo.com with NNFMP; 26 Nov 2008 12:55:39 -0000\r\nDate: Wed, 26 Nov 2008 12:55:37 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ggjh09+jses@...&gt;\r\nIn-Reply-To: &lt;gghuvi+g8rf@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: An improvement over object evolution with CPPNs\r\nX-Yahoo-Group-Post: member; u=54567749; y=1IU_lDsAEqVjPMtQeZ2S6_u_zo_Y1PP2ZHQaclUqgLuWteEME2Ny\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nPeter, the fix worked for me and I am now able to run DCPPN_3.exe. \nThe str=\r\nuctures it creates are indeed interesting and I am curious to\nsee what it w=\r\nould evolve under some kind of fitness constraint.  \n\nCould you also remind=\r\n me what the exact inputs and outputs are for the\nCPPN?\n\nAre you planning t=\r\no evolve these as bodies with brains?  how will you\ndecide what is an outpu=\r\nt, what is an input, and what is a hidden node?\n\nken\n\n--- In neat@yahoogrou=\r\nps.com, &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\nwrote:\n&gt;\n&gt; Hi, \n&gt; \n&gt; This=\r\n is not exactly NEAT-related post. I managed to resolve the bug \n&gt; that mak=\r\nes executables that I build with MSVC 2008 not run on all \n&gt; machines even =\r\nthough they have Windows OS. It is about the runtime \n&gt; libraries. \n&gt; There=\r\n is one small package &quot;Visual C++ 2008 redistributable&quot; at \n&gt; Microsoft&#39;s s=\r\nite, I&#39;ll post a link here so everyone can download it. \n&gt; Install this one=\r\n and all executables developed with MSVC 2008 should \n&gt; run without any pro=\r\nblem. There is also such one for MSVC 2005. I \n&gt; wonder why such redistribu=\r\ntable packages are needed, though. It is \n&gt; frustrating to want to share so=\r\nmething and errors pop up on the other \n&gt; side :/\n&gt; So tell me if there is =\r\nany problem with the DCPPN and other of my \n&gt; demos now. Thanks. \n&gt; \n&gt; Pete=\r\nr\n&gt; \n&gt; Visual C++ 2008 redistributable:\n&gt; http://www.microsoft.com/download=\r\nS/details.aspx?familyid=3D9B2DA534-\n&gt; 3E03-4391-8A4D-074B9F2BC1BF&displayla=\r\nng=3Den\n&gt; \n&gt; Visual C++ 2005 redistributable:\n&gt; http://www.microsoft.com/do=\r\nwnloads/details.aspx?FamilyId=3D32BC1BEE-\n&gt; A3F9-4C13-9C99-220B62A191EE&dis=\r\nplaylang=3Den\n&gt; \n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstan=\r\nley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Peter, DCPPN_.exe seems to have a bug.  It crashes whe=\r\nn I try to run\n&gt; &gt; it.  It says, &quot;the application configuration is incorrec=\r\nt&quot; when it\n&gt; &gt; crashes.\n&gt; &gt; \n&gt; &gt; Can you explain a little more the coordina=\r\nte explosion.  How many\n&gt; &gt; coordinates are there once development is done?=\r\n  \n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt; &gt; --- In neat@yahoogroups.com, &quot;petar_chervenski&quot; &lt;p=\r\netar_chervenski@&gt;\n&gt; &gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; The executable is located in the F=\r\niles section with the name \n&gt; &gt; &gt; &quot;DCPPN_3.exe&quot;.\n&gt; &gt; &gt; \n&gt; &gt; &gt; Yes I have th=\r\ne same opinion, that the links should be created \n&gt; after \n&gt; &gt; &gt; developmen=\r\nt. But how should I deal with the &quot;coordinate explosion&quot; \n&gt; &gt; &gt; then? Becau=\r\nse I don&#39;t really know how big the phenotype can get. \n&gt; There \n&gt; &gt; &gt; is so=\r\nme limit, of course, but I am looking for an elegant way to \n&gt; solve \n&gt; &gt; &gt;=\r\n the problem. Rescaling to [-1..1] is more of a hack than a \n&gt; solution.\n&gt; =\r\n&gt; &gt; \n&gt; &gt; &gt; Peter\n&gt; &gt; &gt; \n&gt; &gt; &gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley=\r\n&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Peter, sounds interesting.  I&#39;ll be in=\r\nterested to see the \n&gt; executable\n&gt; &gt; &gt; &gt; version to get an intuition of th=\r\ne kinds of structures your \n&gt; method\n&gt; &gt; &gt; &gt; creates.  \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Ab=\r\nout the links:  My guess is that it&#39;s best to compute their \n&gt; values\n&gt; &gt; &gt;=\r\n &gt; at the end of development since that is the &quot;final geometry&quot; of \n&gt; the\n&gt;=\r\n &gt; &gt; &gt; brain that I believe makes sense to exploit.  In other words, it \n&gt; =\r\n&gt; &gt; gives\n&gt; &gt; &gt; &gt; the brain the opportunity to exploit the changes occur ov=\r\ner\n&gt; &gt; &gt; &gt; development.  Otherwise, it would seem that those changes and \n&gt;=\r\n the\n&gt; &gt; &gt; &gt; genes that encode them are not really being used for any \n&gt; pu=\r\nrpose.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; ken\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; --- In neat@yahoogroups.com, &quot;=\r\npetar_chervenski&quot; \n&gt; &lt;petar_chervenski@&gt;\n&gt; &gt; &gt; &gt; wrote:\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;=\r\n Hi all!\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; For those of you who are not familiar with th=\r\nis particular \n&gt; &gt; &gt; subject, it \n&gt; &gt; &gt; &gt; &gt; is about physical object evolut=\r\nion with CPPNs. There are some \n&gt; &gt; &gt; problems \n&gt; &gt; &gt; &gt; &gt; when trying to us=\r\ne CPPNs directly to map onto 2/3D objects \n&gt; with \n&gt; &gt; &gt; &gt; &gt; finite, though=\r\n variable (among individuals) size. I am \n&gt; &gt; &gt; particularly\n&gt; &gt; &gt; &gt; intere=\r\nsted in this issue because it also holds the key to the \n&gt; &gt; &gt; &gt; &gt; automati=\r\nc generation of HyperNEAT substrates as well. And \n&gt; perhaps \n&gt; &gt; &gt; it \n&gt; &gt;=\r\n &gt; &gt; &gt; may open up new ways to have content generation in games, too. \n&gt; An=\r\nd \n&gt; &gt; &gt; &gt; &gt; Artificial Life, of course.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; I remember th=\r\nat Ken suggested that animal morphologies and \n&gt; such \n&gt; &gt; &gt; things \n&gt; &gt; &gt; =\r\n&gt; &gt; may be easier to describe in higher dimensional space and then \n&gt; &gt; &gt; m=\r\napped \n&gt; &gt; &gt; &gt; &gt; back to 2D/3D, just like in HyperNEAT. Day after day I was=\r\n \n&gt; trying \n&gt; &gt; &gt; to \n&gt; &gt; &gt; &gt; &gt; find such a higher-dimensional description =\r\nof something that \n&gt; has \n&gt; &gt; &gt; &gt; &gt; limbs, joints, all with variable number=\r\ns and size. Even in the \n&gt; &gt; &gt; most \n&gt; &gt; &gt; &gt; &gt; simplistic 2D case, I never =\r\ngot even close to such an elegant \n&gt; &gt; &gt; &gt; &gt; solution. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; =\r\n&gt; Suppose I want to have a 2D creature with rectangular limbs. \n&gt; But \n&gt; &gt; =\r\n&gt; how \n&gt; &gt; &gt; &gt; &gt; many of them is unknown. How they are connected - too. A l=\r\nimb \n&gt; is  \n&gt; &gt; &gt; &gt; &gt; represented as position in 2D and width/height and an=\r\n angle of \n&gt; &gt; &gt; &gt; &gt; orientation. This makes 5D space in which I have to qu=\r\nery all \n&gt; &gt; &gt; possible \n&gt; &gt; &gt; &gt; &gt; things and ask the CPPN if there is a li=\r\nmb or not. Sounds too \n&gt; &gt; &gt; &gt; &gt; expensive, and more, even if I do that, th=\r\nere are \n&gt; &gt; &gt; &gt; &gt; algorithmic/implementation issues that are just too hard=\r\n. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; The problem I had is, actually, that I missed the f=\r\nact that a \n&gt; CPPN \n&gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; an infinite mathematical descriptio=\r\nn of the phenotype. Any use \n&gt; of \n&gt; &gt; &gt; a \n&gt; &gt; &gt; &gt; &gt; CPPN involves approxi=\r\nmating the phenotype with some kind of \n&gt; level \n&gt; &gt; &gt; of \n&gt; &gt; &gt; &gt; &gt; detail=\r\n. The CPPN makes no difference if I use it for 16x16 \n&gt; visual \n&gt; &gt; &gt; &gt; &gt; s=\r\nubstrate or 65536x65536, for example (note: I mean not in \n&gt; &gt; &gt; phenotype =\r\n\n&gt; &gt; &gt; &gt; &gt; evaluation). So there must be a way to have such level of \n&gt; det=\r\nail \n&gt; &gt; &gt; &gt; &gt; scaling in animal morphologies as well. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; =\r\n&gt; So I went back to the cellular growth approach, looking for \n&gt; what I \n&gt; =\r\n&gt; &gt; &gt; &gt; missed before. The biggest unsolved problem with my previous \n&gt; &gt; &gt;=\r\n system is \n&gt; &gt; &gt; &gt; &gt; that coordinates may grow to infinite and the activat=\r\nion \n&gt; functions \n&gt; &gt; &gt; are \n&gt; &gt; &gt; &gt; &gt; actually best suited to work in [-1.=\r\n.1] substrates (given the \n&gt; fact \n&gt; &gt; &gt; I \n&gt; &gt; &gt; &gt; &gt; have fixed CPPN weigh=\r\nt range and mutation powers). Plus, the \n&gt; CPPN \n&gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; requer=\r\nied on each cell on each timestep in the process of \n&gt; &gt; &gt; development. \n&gt; =\r\n&gt; &gt; &gt; &gt; Too expensive and as the phenotype gets bigger, development \n&gt; slow=\r\ns \n&gt; &gt; &gt; down \n&gt; &gt; &gt; &gt; &gt; to a rate that is not acceptable. And more, it is =\r\nnot clear \n&gt; how \n&gt; &gt; &gt; &gt; &gt; scaling could work if I want to, say, have the =\r\nsame object, \n&gt; the \n&gt; &gt; &gt; same \n&gt; &gt; &gt; &gt; &gt; shape, much bigger, but the cell=\r\n size and the coordinate \n&gt; frames - \n&gt; &gt; &gt; &gt; &gt; still fixed. Something was =\r\nterribly wrong with that model. But \n&gt; I \n&gt; &gt; &gt; think \n&gt; &gt; &gt; &gt; &gt; I have fin=\r\nally found a solution! Or at least something very \n&gt; close \n&gt; &gt; &gt; to \n&gt; &gt; &gt;=\r\n &gt; &gt; it.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; The CPPN already encodes all the development =\r\nof a phenotype \n&gt; with \n&gt; &gt; &gt; any \n&gt; &gt; &gt; &gt; &gt; precision via composing coordi=\r\nnate frames. A whole phenotype \n&gt; with \n&gt; &gt; &gt; all \n&gt; &gt; &gt; &gt; &gt; its patterns w=\r\nith infinite (well at least huge) precision can \n&gt; be \n&gt; &gt; &gt; fit \n&gt; &gt; &gt; &gt; &gt;=\r\n into just the patch of [-1 .. 1] in Cartesian space. Assume I \n&gt; will \n&gt; &gt;=\r\n &gt; be \n&gt; &gt; &gt; &gt; &gt; talking about 2D space only for simplicity. That patch [-1=\r\n .. \n&gt; 1] \n&gt; &gt; &gt; in \n&gt; &gt; &gt; &gt; &gt; both X and Y I call &quot;the Egg&quot;. \n&gt; &gt; &gt; &gt; &gt; \n&gt;=\r\n &gt; &gt; &gt; &gt; The first approach I took with the idea of the egg was too \n&gt; simp=\r\nle, \n&gt; &gt; &gt; but \n&gt; &gt; &gt; &gt; &gt; it is interesting to know about. After the CPPN &quot;=\r\npaints&quot; the \n&gt; egg \n&gt; &gt; &gt; with \n&gt; &gt; &gt; &gt; &gt; cell color and stuff, then it is =\r\nre-queried again, this time \n&gt; the \n&gt; &gt; &gt; &gt; &gt; outputs are 2D vectors. The m=\r\nagnitude of these vectors was re-\n&gt; &gt; &gt; scaled \n&gt; &gt; &gt; &gt; &gt; to be within [0 .=\r\n. MAX_DISTANCE]. So the entire phenotype \n&gt; building \n&gt; &gt; &gt; &gt; &gt; procedure b=\r\necame very simple - first build the egg, then send \n&gt; each \n&gt; &gt; &gt; &gt; &gt; cell =\r\nwhere its vector points. Well that looks so ugly in \n&gt; practice, \n&gt; &gt; &gt; &gt; &gt;=\r\n with empty holes and.. eh.. forget that! This is not anything \n&gt; more \n&gt; &gt;=\r\n &gt; &gt; &gt; advanced than just painting the CPPN output directly like in \n&gt; &gt; &gt; =\r\n&gt; &gt; Picbreeder, just a fancy way of doing the same. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; T=\r\nhen I realized that these &quot;cells&quot; can be also thought of an \n&gt; &gt; &gt; &gt; &gt; abst=\r\nractions of &quot;masses/groups of cells&quot;. In nature, cells \n&gt; don&#39;t \n&gt; &gt; &gt; just=\r\n \n&gt; &gt; &gt; &gt; &gt; go &quot;that way&quot; moving through each other, but stick together. \n&gt;=\r\n &gt; &gt; Entire \n&gt; &gt; &gt; &gt; &gt; tissues develop fast as a mass of cells divides and =\r\nincreases \n&gt; &gt; &gt; size. So \n&gt; &gt; &gt; &gt; &gt; I had this insight. I changed the conc=\r\nept of a cell and \n&gt; improved \n&gt; &gt; &gt; over \n&gt; &gt; &gt; &gt; &gt; the previous model. A =\r\ncell is a circle with a radius, has a \n&gt; color \n&gt; &gt; &gt; and \n&gt; &gt; &gt; &gt; &gt; has ma=\r\nss. It also has more properties but more on that after a \n&gt; few \n&gt; &gt; &gt; &gt; &gt; =\r\nother words. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; This is the key idea. In my previous mod=\r\nel, the CPPN was \n&gt; &gt; &gt; instructing a \n&gt; &gt; &gt; &gt; &gt; big mass of many cells on =\r\nthe fly, during development time. It \n&gt; &gt; &gt; took \n&gt; &gt; &gt; &gt; &gt; advantage of us=\r\ning time as input, so the development was like \n&gt; a \n&gt; &gt; &gt; &gt; &gt; spatial patt=\r\nern in 4D. But it suffered from the coordinates \n&gt; and \n&gt; &gt; &gt; other \n&gt; &gt; &gt; =\r\n&gt; &gt; problems I mentioned above. In this model, the CPPN does not \n&gt; &gt; &gt; ope=\r\nrate \n&gt; &gt; &gt; &gt; &gt; on the cells during development. The CPPN predetermines the=\r\n \n&gt; fate \n&gt; &gt; &gt; of \n&gt; &gt; &gt; &gt; &gt; each cell right in the egg, before developmen=\r\nt begins. \n&gt; Everything \n&gt; &gt; &gt; else \n&gt; &gt; &gt; &gt; &gt; during development is a cons=\r\nequence of the cell&#39;s fate and the \n&gt; &gt; &gt; &gt; &gt; internal 2D physics world in =\r\nwhich the phenotype develops. So, \n&gt; in \n&gt; &gt; &gt; &gt; &gt; simpler words, the CPPN =\r\nis programming the egg.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; A cell has the following prope=\r\nrties that are determined by the \n&gt; &gt; &gt; CPPN:\n&gt; &gt; &gt; &gt; &gt; - Color (of course =\r\n:)\n&gt; &gt; &gt; &gt; &gt; - Growth rate. How fast it increases size in % of circle area.=\r\n \n&gt; &gt; &gt; &gt; &gt; - Time to begin growth. It is a value in [0 .. 1] where 1 is \n&gt;=\r\n the \n&gt; &gt; &gt; total \n&gt; &gt; &gt; &gt; &gt; number of time steps allocated for development=\r\n.\n&gt; &gt; &gt; &gt; &gt; - Growth time duration. Between some min and max value.\n&gt; &gt; &gt; &gt;=\r\n &gt; - Angle for division splitting. Between [-1 .. 1], during \n&gt; &gt; &gt; develop=\r\nment \n&gt; &gt; &gt; &gt; &gt; rescaled to [0 .. pi]\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; As cells grow, t=\r\nhey will inevitably overlap each other. This \n&gt; issue \n&gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; =\r\nhandled by the internal simple 2D physics engine that adds \n&gt; forces \n&gt; &gt; &gt;=\r\n if \n&gt; &gt; &gt; &gt; &gt; the circles overlap. So they eventually will converge to a \n=\r\n&gt; state \n&gt; &gt; &gt; that \n&gt; &gt; &gt; &gt; &gt; they only touch each other, and the whole ph=\r\nenotype bigger of \n&gt; &gt; &gt; course. \n&gt; &gt; &gt; &gt; &gt; Cells can divide. Division is a=\r\nutomatic. If a cell&#39;s radius \n&gt; &gt; &gt; reaches a \n&gt; &gt; &gt; &gt; &gt; a fixed treshold v=\r\nalue, it is split into 2 cells, each one \n&gt; having \n&gt; &gt; &gt; &gt; &gt; exactly half =\r\nthe area of the mother cell. The mother cell is \n&gt; split \n&gt; &gt; &gt; &gt; &gt; along a=\r\n predetermined angle, so the CPPN can control the \n&gt; overall \n&gt; &gt; &gt; &gt; &gt; dir=\r\nections of growth for the phenotype. The 2 children overlap \n&gt; in \n&gt; &gt; &gt; th=\r\ne \n&gt; &gt; &gt; &gt; &gt; beginning, but as time progresses, they are pulled apart by \n&gt;=\r\n the \n&gt; &gt; &gt; &gt; &gt; physics. Children cells inherit the properties of the mothe=\r\nr, \n&gt; but \n&gt; &gt; &gt; &gt; &gt; change their positions and reset their lifetime timers=\r\n. The \n&gt; cells \n&gt; &gt; &gt; in \n&gt; &gt; &gt; &gt; &gt; the egg count their children and their =\r\ngrandchildren as well. \n&gt; No \n&gt; &gt; &gt; more \n&gt; &gt; &gt; &gt; &gt; than 3 generations of d=\r\nivision can occur, in order to keep the \n&gt; &gt; &gt; number \n&gt; &gt; &gt; &gt; &gt; of cells r=\r\nelatively small for performance considerations. \n&gt; Though \n&gt; &gt; &gt; this \n&gt; &gt; =\r\n&gt; &gt; &gt; value can be changed. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; In order to keep the phen=\r\notype solid, not torn apart from \n&gt; internal \n&gt; &gt; &gt; &gt; &gt; velocities, a mass-=\r\nspring grid mesh is created in the egg \n&gt; before \n&gt; &gt; &gt; &gt; &gt; development. Ce=\r\nll divisions update the mesh. The mass-spring \n&gt; mesh \n&gt; &gt; &gt; plus \n&gt; &gt; &gt; &gt; =\r\n&gt; the cell-to-cell overlapping prevention forces act together as \n&gt; the \n&gt; =\r\n&gt; &gt; &gt; &gt; phenotype increases in size and number of cells. Eventually it \n&gt; &gt;=\r\n &gt; will \n&gt; &gt; &gt; &gt; &gt; become more stiff, where large group of recently divided=\r\n cells \n&gt; are \n&gt; &gt; &gt; &gt; &gt; packed together. I don&#39;t know if that is a bug or =\r\na feature :) \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; There is one insight I had after seeing =\r\nthe results. Watching \n&gt; the \n&gt; &gt; &gt; mesh \n&gt; &gt; &gt; &gt; &gt; develops, and some with=\r\n interesting shapes and configurations, \n&gt; &gt; &gt; makes \n&gt; &gt; &gt; &gt; &gt; me think th=\r\nis approach is very well suited to evolve HyperNEAT \n&gt; &gt; &gt; &gt; &gt; substrates a=\r\ns well. In fact I am about to add brains to these \n&gt; &gt; &gt; &gt; &gt; creatures righ=\r\nt this evening :) But I don&#39;t know, if the links \n&gt; &gt; &gt; should \n&gt; &gt; &gt; &gt; &gt; b=\r\ne determined from the beginning right in the egg or after \n&gt; &gt; &gt; &gt; &gt; develo=\r\npment. Any suggestions? \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Well this is it. I hope this =\r\nmay be some advance into the \n&gt; field. I \n&gt; &gt; &gt; &gt; &gt; will be happy to see an=\r\ny thoughts about this stuff. I&#39;ll post \n&gt; an \n&gt; &gt; &gt; &gt; &gt; executable compiled=\r\n with VS2008 in the files section now, so \n&gt; you \n&gt; &gt; &gt; will \n&gt; &gt; &gt; &gt; &gt; see=\r\n it in action. Note however, that it is just a demo of \n&gt; &gt; &gt; development, =\r\n\n&gt; &gt; &gt; &gt; &gt; not evolution. There is no doubt that this thing combined with \n=\r\n&gt; &gt; &gt; NEAT \n&gt; &gt; &gt; &gt; &gt; will make at least something very very cool. :) \n&gt; &gt; =\r\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Peter\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}