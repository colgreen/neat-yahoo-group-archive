{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":200957992,"authorName":"Jason Gauci","from":"&quot;Jason Gauci&quot; &lt;jgmath2000@...&gt;","profile":"jgmath2000","replyTo":"LIST","senderId":"OAFqSIGOC3PHKuwlu5jIX5BYEVr6Q8pfnMxYj3LnnsjeWkzCp98b78XLVLkPLyECFqm6bBTxRgtzTqIqv0DuBm3A2Qe0NI4Z0gW_","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Doble/Single digit precision NEAT","postDate":"1242781777","msgId":4676,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGd1dmw4aCtzOWNzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGd1c2xlZSt1dDU4QGVHcm91cHMuY29tPg=="},"prevInTopic":4675,"nextInTopic":4678,"prevInTime":4675,"nextInTime":4677,"topicId":4671,"numMessagesInTopic":7,"msgSnippet":"Hey Nikolai, My C++ implementation of HyperNEAT has a typedef that makes it easy to change between double and single precision.  I ve tested both with many of","rawEmail":"Return-Path: &lt;jgmath2000@...&gt;\r\nX-Sender: jgmath2000@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 72850 invoked from network); 20 May 2009 01:09:59 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m2.grp.sp2.yahoo.com with QMQP; 20 May 2009 01:09:59 -0000\r\nX-Received: from unknown (HELO n45b.bullet.mail.sp1.yahoo.com) (66.163.168.159)\n  by mta2.grp.sp2.yahoo.com with SMTP; 20 May 2009 01:09:59 -0000\r\nX-Received: from [69.147.65.151] by n45.bullet.mail.sp1.yahoo.com with NNFMP; 20 May 2009 01:09:38 -0000\r\nX-Received: from [98.137.34.36] by t5.bullet.mail.sp1.yahoo.com with NNFMP; 20 May 2009 01:09:38 -0000\r\nDate: Wed, 20 May 2009 01:09:37 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;guvl8h+s9cs@...&gt;\r\nIn-Reply-To: &lt;guslee+ut58@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Jason Gauci&quot; &lt;jgmath2000@...&gt;\r\nSubject: Re: Doble/Single digit precision NEAT\r\nX-Yahoo-Group-Post: member; u=200957992; y=1MJ6VTdF5AgLYkG9PyRAFjmraH2t7FuRKL8gZ-SPWlWnyTac0w\r\nX-Yahoo-Profile: jgmath2000\r\n\r\nHey Nikolai,\n\nMy C++ implementation of HyperNEAT has a typedef that makes i=\r\nt easy to change between double and single precision.  I&#39;ve tested both wit=\r\nh many of the included experiments and I didn&#39;t notice any significant diff=\r\nerence.  In fact, I started using rounding to purposefully lower the precis=\r\nion so that I can get more reproducible results.\n\nOf course if your problem=\r\n domain requires discriminating between very specific output values (i.e. 0=\r\n.9 means something different than 0.95), then I could see it being an issue=\r\n, but hopefully the domain could be transformed into something more forgivi=\r\nng.\n\nTo make a long story short, if CUDA doesn&#39;t support double precision, =\r\ndon&#39;t worry about it and go ahead with single precision.\n\nJason\n\n--- In nea=\r\nt@yahoogroups.com, &quot;Nikolai&quot; &lt;ker_31_toluca@...&gt; wrote:\n&gt;\n&gt; Hi,\n&gt; I am port=\r\ning NEAT to Nvidia GT120 based game cards (GTX 260+ series) with CUDA. The =\r\nproblem is, the GPU executes double precision operations 8 times slower tha=\r\nn single precision.\n&gt; \n&gt; How much will be the accuracy loss for large netwo=\r\nrks if we switch NEAT to floats instead of doubles?\n&gt; \n&gt; Now, let&#39;s say, i =\r\ngo for speed and use single precision. Then as evolution takes place, netwo=\r\nrks are going to be deeper and deeper, the accuracy on the deepest level wi=\r\nll be lower and lower. Right? Or will the network evolve automatically and =\r\ncorrect itself adding _direct_ links from the input level to the deepest le=\r\nvels in order to refresh the lost precision??? That would be a workaround u=\r\nntil Nvidia releases a true  GPU to the market.... what do you think?\n&gt; \n&gt; =\r\nThanks in advance for any comment.\n&gt;\n\n\n\n"}}