{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":436954031,"authorName":"arman.schwarz","from":"&quot;arman.schwarz&quot; &lt;arman.schwarz@...&gt;","profile":"arman.schwarz","replyTo":"LIST","senderId":"c0-3RzoSjxlVXaAgq5uGpzjh622SENEcdWyPmdo_VKdWFC3kfvztsjMJVn2xmDbKvWheugf9vFB8eoRATpmZUCExWQ_ZZhW_DCTCRWY_vfg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Intelligently and nonarbitrarily penalising complexity","postDate":"1316156553","msgId":5638,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGo0dXNhOStxcHVnQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":5639,"prevInTime":5637,"nextInTime":5639,"topicId":5638,"numMessagesInTopic":6,"msgSnippet":"Hi everyone, I noticed that there seem to be 2 schools of thought regarding penalising complexity; either you do it or you don t. NEAT steps away from this","rawEmail":"Return-Path: &lt;arman.schwarz@...&gt;\r\nX-Sender: arman.schwarz@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 84812 invoked from network); 16 Sep 2011 07:02:34 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m13.grp.sp2.yahoo.com with QMQP; 16 Sep 2011 07:02:34 -0000\r\nX-Received: from unknown (HELO n45b.bullet.mail.sp1.yahoo.com) (66.163.168.159)\n  by mta1.grp.sp2.yahoo.com with SMTP; 16 Sep 2011 07:02:34 -0000\r\nX-Received: from [69.147.65.173] by n45.bullet.mail.sp1.yahoo.com with NNFMP; 16 Sep 2011 07:02:34 -0000\r\nX-Received: from [98.137.34.155] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 16 Sep 2011 07:02:34 -0000\r\nDate: Fri, 16 Sep 2011 07:02:33 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;j4usa9+qpug@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;arman.schwarz&quot; &lt;arman.schwarz@...&gt;\r\nSubject: Intelligently and nonarbitrarily penalising complexity\r\nX-Yahoo-Group-Post: member; u=436954031; y=u6-7YhchYQ-rKtox0yYVn4zdqYvVyTU_ZSEjeLGRLECQF51EcEh14w\r\nX-Yahoo-Profile: arman.schwarz\r\n\r\nHi everyone,\n\nI noticed that there seem to be 2 schools of thought regardin=\r\ng penalising complexity; either you do it or you don&#39;t. NEAT steps away fro=\r\nm this black or white approach a little by simply adding complexity only wh=\r\nere it is needed, but it still does not discourage it implicitly.\n\nThis is =\r\nfine in nature, where a large brain or a complex array of organs can be a b=\r\nenefit without necessarily creating problems, but it is less so in the worl=\r\nd of computing.\n\nThe flipside is of course that simply creating some arbitr=\r\nary function that penalises complexity also restricts the model.\n\nHow about=\r\n a system whereby complexity is penalised organically, and not by means of =\r\nmanipulating the fitness?\n\nSuppose we have a population of 100 organisms sp=\r\nread across 10 species. Let&#39;s allocate each organism a fraction of the tota=\r\nl CPU time (so 1% for each organism), then let&#39;s allocate each species a fr=\r\naction of CPU time based on its population. In this scenario, each species =\r\nwould be given 10% of total CPU time.\n\nNow lets evaluate each species, allo=\r\nw it to evolve, and at each cycle speciate them as we would normally in NEA=\r\nT. However, each evaluation of the epoch() function (or the evolution funct=\r\nion) is timed, and each species develops a surplus or debt of CPU time base=\r\nd on the difference between its allocated and used amounts of CPU time. Spe=\r\ncies with a CPU time debt that exceeds the time it takes to run a cycle are=\r\n skipped, and species with a CPU time surplus that exceeds their (typical) =\r\ncycle time are allowed to evolve a multiple of times (depending on the numb=\r\ner of cycles they can use without depleting their surplus).\n\nThis simple me=\r\nchanism would encourage innovation and simplicity, while allowing larger or=\r\nganisms with genuine advantage to still thrive. I&#39;d appreciate some feedbac=\r\nk on this, and would love to know whether something like this has been prev=\r\niously explored.\n\n\n"}}