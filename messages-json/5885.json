{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":234577593,"authorName":"Oliver Coleman","from":"Oliver Coleman &lt;oliver.coleman@...&gt;","profile":"olivercoleman04","replyTo":"LIST","senderId":"3Mrlq1nGygFhBvil-7GrIgL_fjacmOUxJixVrZeQIAiwSRGHhl0Bb3cQhMR834XUz70MjSvg2CDM5uQGR2n6I4fl9wE2avxG_xGtDi7ijVE","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Is AHNI the only java hyperneat implementation?","postDate":"1348948959","msgId":5885,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBK2R1aW1OVC1vbkxqaXNTbV9HQ1hiNHh3WTNkdG9lVWplcWUwTDhmemItSi1rM1dPZ0BtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGs0N2ZoYitoOHZjQGVHcm91cHMuY29tPg==","referencesHeader":"PGs0N2ZoYitoOHZjQGVHcm91cHMuY29tPg=="},"prevInTopic":5884,"nextInTopic":5886,"prevInTime":5884,"nextInTime":5886,"topicId":5884,"numMessagesInTopic":4,"msgSnippet":"Hi Ron, I m the author of AHNI. As far as I know AHNI is the only Java implementation of HyperNEAT. Experiments typically use parameters given in a .properties","rawEmail":"Return-Path: &lt;oliver.coleman@...&gt;\r\nX-Sender: oliver.coleman@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 11492 invoked from network); 29 Sep 2012 20:02:41 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m16.grp.sp2.yahoo.com with QMQP; 29 Sep 2012 20:02:41 -0000\r\nX-Received: from unknown (HELO mail-lb0-f174.google.com) (209.85.217.174)\n  by mta4.grp.sp2.yahoo.com with SMTP; 29 Sep 2012 20:02:41 -0000\r\nX-Received: by lbon3 with SMTP id n3so2999490lbo.19\n        for &lt;neat@yahoogroups.com&gt;; Sat, 29 Sep 2012 13:02:40 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.112.44.167 with SMTP id f7mr3847044lbm.34.1348948959976; Sat,\n 29 Sep 2012 13:02:39 -0700 (PDT)\r\nX-Received: by 10.112.110.72 with HTTP; Sat, 29 Sep 2012 13:02:39 -0700 (PDT)\r\nX-Received: by 10.112.110.72 with HTTP; Sat, 29 Sep 2012 13:02:39 -0700 (PDT)\r\nIn-Reply-To: &lt;k47fhb+h8vc@...&gt;\r\nReferences: &lt;k47fhb+h8vc@...&gt;\r\nDate: Sun, 30 Sep 2012 06:02:39 +1000\r\nMessage-ID: &lt;CA+duimNT-onLjisSm_GCXb4xwY3dtoeUjeqe0L8fzb-J-k3WOg@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=bcaec5524294945ee004cadca7bd\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Oliver Coleman &lt;oliver.coleman@...&gt;\r\nSubject: Re: [neat] Is AHNI the only java hyperneat implementation?\r\nX-Yahoo-Group-Post: member; u=234577593; y=x3GkG7c5VruhOyepNO_mQh-XgKz1_xigbiSSWb49NKy-IhDKj76zCS41bGmZ3W4fgaO1LpIX_Q\r\nX-Yahoo-Profile: olivercoleman04\r\n\r\n\r\n--bcaec5524294945ee004cadca7bd\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Ron,\n\nI&#39;m the author of AHNI. As far as I know AHNI is the only Java\nimp=\r\nlementation of HyperNEAT. Experiments typically use parameters given in\na .=\r\nproperties file (which is given as an argument when running AHNI). It\nwould=\r\n be easy to write a fitness function class that reads input and output\nexam=\r\nples from files specified in the properties file. See\ncom.anji.objectrecogn=\r\nition. ObjectRecognitionFitnessFunction3.java for an\nexample to get started=\r\n.\n\nI&#39;m currently writing a new version of AHNI that will implement extensio=\r\nns\nsuch as ES-HyperNEAT, allow using the Bain neural network simulator (\nht=\r\ntps://github.com/OliverColeman/bain ), and will be refactored to make the\nc=\r\node a bit neater. It&#39;s on github but may not be stable or working just yet.=\r\n\n\nCheers,\nOliver\nOn Sep 30, 2012 4:44 AM, &quot;roncking2001&quot; &lt;roncking@...=\r\nm&gt; wrote:\n\n&gt; **\n&gt;\n&gt;\n&gt; Hi All,\n&gt;\n&gt; I want a java version of hyperneat. AHNI =\r\nappears to have to examples that\n&gt; are &#39;hard coded&#39; in java classes, and I =\r\nwant something that can do new\n&gt; experiments where the input and output com=\r\ne from files instead. I&#39;m\n&gt; especially wanting to do more vision experiment=\r\ns.\n&gt;\n&gt; Is there any other implementations out there?\n&gt;\n&gt; Regards,\n&gt;\n&gt; Ron\n&gt;=\r\n\n&gt;  \n&gt;\n\r\n--bcaec5524294945ee004cadca7bd\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;p&gt;Hi Ron,&lt;/p&gt;\n&lt;p&gt;I&#39;m the author of AHNI. As far as I know AHNI is the =\r\nonly Java implementation of HyperNEAT. Experiments typically use parameters=\r\n given in a .properties file (which is given as an argument when running AH=\r\nNI). It would be easy to write a fitness function class that reads input an=\r\nd output examples from files specified in the properties file. See com.anji=\r\n.objectrecognition. ObjectRecognitionFitnessFunction3.java for an example t=\r\no get started.&lt;/p&gt;\n\n&lt;p&gt;I&#39;m currently writing a new version of AHNI that=\r\n will implement extensions such as ES-HyperNEAT, allow using the Bain neura=\r\nl network simulator ( &lt;a href=3D&quot;https://github.com/OliverColeman/bain&quot;&gt;htt=\r\nps://github.com/OliverColeman/bain&lt;/a&gt; ), and will be refactored to make th=\r\ne code a bit neater. It&#39;s on github but may not be stable or working ju=\r\nst yet.&lt;/p&gt;\n\n&lt;p&gt;Cheers,&lt;br&gt;\nOliver&lt;/p&gt;\n&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sep 30=\r\n, 2012 4:44 AM, &quot;roncking2001&quot; &lt;&lt;a href=3D&quot;mailto:roncking@gma=\r\nil.com&quot;&gt;roncking@...&lt;/a&gt;&gt; wrote:&lt;br type=3D&quot;attribution&quot;&gt;&lt;blockquo=\r\nte class=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc so=\r\nlid;padding-left:1ex&quot;&gt;\n\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n=\r\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Hi All,&lt;br&gt;\n&lt;br&gt;\nI want a =\r\njava version of hyperneat. AHNI appears to have to examples that are &#39;h=\r\nard coded&#39; in java classes, and I want something that can do new experi=\r\nments where the input and output come from files instead. I&#39;m especiall=\r\ny wanting to do more vision experiments.&lt;br&gt;\n\n&lt;br&gt;\nIs there any other imple=\r\nmentations out there?&lt;br&gt;\n&lt;br&gt;\nRegards,&lt;br&gt;\n&lt;br&gt;\nRon&lt;br&gt;\n&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/d=\r\niv&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n=\r\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;\n\r\n--bcaec5524294945ee004cadca7bd--\r\n\n"}}