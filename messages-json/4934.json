{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":306380549,"authorName":"Thomas Johnson","from":"Thomas Johnson &lt;thomas.j.johnson@...&gt;","profile":"thomasj9802","replyTo":"LIST","senderId":"qEHbbqLYnUUuoSGvBSiri9y4vR7mv9IjAuKd5mLuHJZslNmEQmbU2FgRZ7WyspbNosYBDghgxQIqX75kO7qFcNpvL5IS6y2hoxu5hEpImsyoug","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [neat] Re: FloatFastConcurrentNetwork - Performance Optimization","postDate":"1259468733","msgId":4934,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEyODBjZjZhMDkxMTI4MjAyNXkzMmZlNGNhZmdjNzU2MjE5MzFiM2I4YjFkQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMTI4MTQxOGwxOGUxMjZjMHk3YjA3MTc1ZDI0MmE0YjMzQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGhlbjZzZit1dGUwQGVHcm91cHMuY29tPiA8aGVwcWdpK3R0cmVAZUdyb3Vwcy5jb20+CSA8NzI3YTQwNmMwOTExMjgxNDE4bDE4ZTEyNmMweTdiMDcxNzVkMjQyYTRiMzNAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":4933,"nextInTopic":4935,"prevInTime":4933,"nextInTime":4935,"topicId":4917,"numMessagesInTopic":12,"msgSnippet":"As long as you guys are talking about integrating new code, can I request that someone includes a step-by-step of how to build on a modern Linux system with","rawEmail":"Return-Path: &lt;thomas.j.johnson@...&gt;\r\nX-Sender: thomas.j.johnson@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 47635 invoked from network); 29 Nov 2009 04:26:15 -0000\r\nX-Received: from unknown (66.196.94.106)\n  by m12.grp.re1.yahoo.com with QMQP; 29 Nov 2009 04:26:15 -0000\r\nX-Received: from unknown (HELO mail-iw0-f182.google.com) (209.85.223.182)\n  by mta2.grp.re1.yahoo.com with SMTP; 29 Nov 2009 04:26:15 -0000\r\nX-Received: by iwn12 with SMTP id 12so1660135iwn.27\n        for &lt;neat@yahoogroups.com&gt;; Sat, 28 Nov 2009 20:25:33 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.231.29.149 with SMTP id q21mr4131865ibc.35.1259468733826; Sat, \n\t28 Nov 2009 20:25:33 -0800 (PST)\r\nIn-Reply-To: &lt;727a406c0911281418l18e126c0y7b07175d242a4b33@...&gt;\r\nReferences: &lt;hen6sf+ute0@...&gt; &lt;hepqgi+ttre@...&gt;\n\t &lt;727a406c0911281418l18e126c0y7b07175d242a4b33@...&gt;\r\nDate: Sun, 29 Nov 2009 13:25:33 +0900\r\nMessage-ID: &lt;1280cf6a0911282025y32fe4cafgc75621931b3b8b1d@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00151774051c7c45f704797aea0e\r\nX-eGroups-Msg-Info: 2:4:8:0:0\r\nFrom: Thomas Johnson &lt;thomas.j.johnson@...&gt;\r\nSubject: Re: [neat] Re: FloatFastConcurrentNetwork - Performance Optimization\r\nX-Yahoo-Group-Post: member; u=306380549; y=dSzS6Yp0v7OM4FqM-c2d8az_9D7cU9j2gWHYrWGxClDrPoTQ6sU\r\nX-Yahoo-Profile: thomasj9802\r\n\r\n\r\n--00151774051c7c45f704797aea0e\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAs long as you guys are talking about integrating new code, can I request\nt=\r\nhat someone includes a step-by-step of how to build on a modern Linux\nsyste=\r\nm with mono? A lot of scientific computing takes place on Linux these\ndays,=\r\n but the HyperNEAT C++ code is very difficult to build due to the way\nthe C=\r\nMake configuration is set up and the weird dependencies (TinyXMLDLL?!).\nThe=\r\n HyperSharpNEAT code is much better, but it&#39;s not clear to me how to\nbuild =\r\nit on Linux.\n\nOn Sun, Nov 29, 2009 at 7:18 AM, Colin Green &lt;colin.green1@go=\r\noglemail.com&gt;wrote:\n\n&gt;\n&gt;\n&gt; Hi,\n&gt;\n&gt; Yeh the SN2 code is essentially a comple=\r\nte re-write with a primary\n&gt; goal being a more flexible, general-purpose EC=\r\n framework. There were\n&gt; perhaps some forgotten corners in SN1 and this is =\r\naddressed by the\n&gt; re-write. Now that the core code is settled I&#39;ve been re=\r\n-reviewing it\n&gt; all as a whole before progressing further, fixing the odd b=\r\nug,\n&gt; refactoring a few sections that were tagged with FIXMEs, TODOs, and\n&gt;=\r\n ENHANCEMENTs (some of these remain as they are low priority) and\n&gt; ensurin=\r\ng the comments (XML and in-line) are meaningful.\n&gt;\n&gt; Performance in SN1 was=\r\n a primary design goal and is pretty good I\n&gt; think. I ran it through a pro=\r\nfiler and homed in and rewrote some of\n&gt; the less efficient sections - neur=\r\nal net decoding and activation being\n&gt; the main areas I can recall, oh and =\r\ngenome comparison was sped up 100x\n&gt; or so at one point. SN2 hasn&#39;t been th=\r\nrough a profiler yet but I&#39;ve\n&gt; been writing pretty tight code IMO and taki=\r\nng lessons and code from\n&gt; SN1. Even so it always pays to run code through =\r\na profiler in case\n&gt; something has been missed or some unintended things ar=\r\ne going on - new\n&gt; thinsg like k-means algorithm migth need extra work (e.g=\r\n.\n&gt; multithreading).\n&gt;\n&gt; There probably are a few points where events would=\r\n make sense and this\n&gt; is something that can be layered on now that the cor=\r\ne code is settled,\n&gt; however, events in high frequency code such as mutatio=\r\nns could hit\n&gt; performance so care should be taken. My main aim here is to =\r\nget the\n&gt; core stuff right, others can then take the code and bend it to th=\r\neir\n&gt; particular needs.\n&gt;\n&gt; FxCop I have used briefly. IMO the default chec=\r\nks aren&#39;t quite aligned\n&gt; to what I&#39;m trying to achieve, that is, I&#39;m not a=\r\niming for a\n&gt; fixed/pre-compiled API for commercial use by the masses. Ther=\r\ne&#39;s also\n&gt; some degree of personal opinion on what checks to make - I perso=\r\nnally\n&gt; disagree with /some/ of the default checks, but its worth taking a\n=\r\n&gt; fresh look at and maybe tweaking some of the rules.\n&gt;\n&gt; If you have any m=\r\nore thoughts on the SN2 code then let me know, IMO\n&gt; releasing source code =\r\ninto the wild is how good quality code gets\n&gt; written, the more pairs of ey=\r\nes the better, and at the end of the day\n&gt; if people disagree strongly with=\r\n the direction it&#39;s going then it&#39;s\n&gt; open source.\n&gt;\n&gt; Hope that all makes =\r\nsense,\n&gt;\n&gt; Colin\n&gt;  \n&gt;\n\r\n--00151774051c7c45f704797aea0e\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nAs long as you guys are talking about integrating new code, can I request t=\r\nhat someone includes a step-by-step of how to build on a modern Linux syste=\r\nm with mono? A lot of scientific computing takes place on Linux these days,=\r\n but the HyperNEAT C++ code is very difficult to build due to the way the C=\r\nMake configuration is set up and the weird dependencies (TinyXMLDLL?!). The=\r\n HyperSharpNEAT code is much better, but it&#39;s not clear to me how to bu=\r\nild it on Linux.&lt;br&gt;\n&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sun, Nov 29, 2009 at=\r\n 7:18 AM, Colin Green &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:colin.green1@=\r\ngooglemail.com&quot;&gt;colin.green1@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;block=\r\nquote class=3D&quot;gmail_quote&quot; style=3D&quot;border-left: 1px solid rgb(204, 204, 2=\r\n04); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div sty=\r\nle=3D&quot;background-color: rgb(255, 255, 255);&quot;&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;d=\r\niv&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;Hi,&lt;br&gt;\n&lt;br&gt;\nYeh the SN2 code is ess=\r\nentially a complete re-write with a primary&lt;br&gt;\ngoal being a more flexible,=\r\n general-purpose EC framework. There were&lt;br&gt;\nperhaps some forgotten corner=\r\ns in SN1 and this is addressed by the&lt;br&gt;\nre-write. Now that the core code =\r\nis settled I&#39;ve been re-reviewing it&lt;br&gt;\nall as a whole before progress=\r\ning further, fixing the odd bug,&lt;br&gt;\nrefactoring a few sections that were t=\r\nagged with FIXMEs, TODOs, and&lt;br&gt;\nENHANCEMENTs (some of these remain as the=\r\ny are low priority) and&lt;br&gt;\nensuring the comments (XML and in-line) are mea=\r\nningful.&lt;br&gt;\n&lt;br&gt;\nPerformance in SN1 was a primary design goal and is prett=\r\ny good I&lt;br&gt;\nthink. I ran it through a profiler and homed in and rewrote so=\r\nme of&lt;br&gt;\nthe less efficient sections - neural net decoding and activation =\r\nbeing&lt;br&gt;\nthe main areas I can recall, oh and genome comparison was sped up=\r\n 100x&lt;br&gt;\nor so at one point. SN2 hasn&#39;t been through a profiler yet bu=\r\nt I&#39;ve&lt;br&gt;\nbeen writing pretty tight code IMO and taking lessons and co=\r\nde from&lt;br&gt;\nSN1. Even so it always pays to run code through a profiler in c=\r\nase&lt;br&gt;\nsomething has been missed or some unintended things are going on - =\r\nnew&lt;br&gt;\nthinsg like k-means algorithm migth need extra work (e.g.&lt;br&gt;\nmulti=\r\nthreading).&lt;br&gt;\n&lt;br&gt;\nThere probably are a few points where events would mak=\r\ne sense and this&lt;br&gt;\nis something that can be layered on now that the core =\r\ncode is settled,&lt;br&gt;\nhowever, events in high frequency code such as mutatio=\r\nns could hit&lt;br&gt;\nperformance so care should be taken. My main aim here is t=\r\no get the&lt;br&gt;\ncore stuff right, others can then take the code and bend it t=\r\no their&lt;br&gt;\nparticular needs.&lt;br&gt;\n&lt;br&gt;\nFxCop I have used briefly. IMO the d=\r\nefault checks aren&#39;t quite aligned&lt;br&gt;\nto what I&#39;m trying to achiev=\r\ne, that is, I&#39;m not aiming for a&lt;br&gt;\nfixed/pre-compiled API for commerc=\r\nial use by the masses. There&#39;s also&lt;br&gt;\nsome degree of personal opinion=\r\n on what checks to make - I personally&lt;br&gt;\ndisagree with /some/ of the defa=\r\nult checks, but its worth taking a&lt;br&gt;\nfresh look at and maybe tweaking som=\r\ne of the rules.&lt;br&gt;\n&lt;br&gt;\nIf you have any more thoughts on the SN2 code then=\r\n let me know, IMO&lt;br&gt;\nreleasing source code into the wild is how good quali=\r\nty code gets&lt;br&gt;\nwritten, the more pairs of eyes the better, and at the end=\r\n of the day&lt;br&gt;\nif people disagree strongly with the direction it&#39;s goi=\r\nng then it&#39;s&lt;br&gt;\nopen source.&lt;br&gt;\n&lt;br&gt;\nHope that all makes sense,&lt;br&gt;\n&lt;=\r\nbr&gt;\nColin&lt;br&gt;\n&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color: rgb(255=\r\n, 255, 255); min-height: 0pt;&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/d=\r\niv&gt;&lt;br&gt;\n\r\n--00151774051c7c45f704797aea0e--\r\n\n"}}