{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"r0K-JJOxKAWF4Mr9kbukPxSWpLpQxgQD8QuHOYm7c5qejrmALpgrE7Wro2ZjYdAbFdHgzi3nwb2SE3n3s43j2qIasCA1ygBGXg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Phased Searching and Double Pole Balancing","postDate":"1120262187","msgId":2026,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyQzVEODJCLjMwMzAxMDdAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PDQyQzI2NEZELjIwOTA5MDdAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDE5YjEwZDUxMDUwNjI4MTUyMTUzMzAzNjJmQG1haWwuZ21haWwuY29tPiA8NDJDMjY0RkQuMjA5MDkwN0Bkc2wucGlwZXguY29tPg=="},"prevInTopic":2022,"nextInTopic":2027,"prevInTime":2025,"nextInTime":2027,"topicId":2021,"numMessagesInTopic":4,"msgSnippet":"... Ok a bit more on this one. The short answer is no, I haven t experimented with phased searching on the double pole problem. Double pole is (or should be)","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 77968 invoked from network); 1 Jul 2005 23:56:19 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m26.grp.scd.yahoo.com with QMQP; 1 Jul 2005 23:56:19 -0000\r\nReceived: from unknown (HELO astro.systems.pipex.net) (62.241.163.6)\n  by mta3.grp.scd.yahoo.com with SMTP; 1 Jul 2005 23:56:19 -0000\r\nReceived: from [10.0.0.10] (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby astro.systems.pipex.net (Postfix) with ESMTP id 0735AE0000DA\n\tfor &lt;neat@yahoogroups.com&gt;; Sat,  2 Jul 2005 00:56:14 +0100 (BST)\r\nMessage-ID: &lt;42C5D82B.3030107@...&gt;\r\nDate: Sat, 02 Jul 2005 00:56:27 +0100\r\nUser-Agent: Mozilla Thunderbird 1.0.2 (Windows/20050317)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;19b10d5105062815215330362f@...&gt; &lt;42C264FD.2090907@...&gt;\r\nIn-Reply-To: &lt;42C264FD.2090907@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] Phased Searching and Double Pole Balancing\r\nX-Yahoo-Group-Post: member; u=127853030; y=4A2OYX-obAdh7GAgW85E5FYYuxopG66gspCD8kDIWFFR6S2DUOxK\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nColin Green wrote:\n\n&gt;Hi Derek,\n&gt;\n&gt;Derek James wrote:\n&gt;  \n&gt;\n&gt;&gt;This question is directed at Colin, but I thought I would mention it\n&gt;&gt;in front of the group in case anyone else was interested.\n&gt;&gt;\n&gt;&gt;Colin, did you happen to carry out the phased searching approach with\n&gt;&gt;double pole balancing?  What would be your recommendations for the\n&gt;&gt;mean population complexity threshold for this experiment? \n&gt;&gt;    \n&gt;&gt;\n&gt;I&#39;ll get back to you w.r.t. pruning in problem (3).\n&gt;  \n&gt;\nOk a bit more on this one. The short answer is no, I haven&#39;t \nexperimented with phased searching on the double pole problem. Double \npole is (or should be) sufficiently simple as to not require phased \nsearching.  In fact douple pole (DP) and DP and no velocity (DPNV) can \nboth be solved without any hidden nodes and/or recurrent connections - \nso a single activation and 2 or three connections from input layer to \noutput layer is all that is required.\n\nThe tricky(er) problem is that of DPNV with punishment for pole-wiggling \n(bad jokes on a postcard...), let&#39;s call it DPNV/AW, which is the \nproblem tackled by Ken in his(& Risto&#39;s) 2002 GECCO paper. If you punish \nwiggling then you get far nicer solutions where the poles end up almost \nperfectly balanced and upright, but of course this problem is harder to \nsolve.\n\nLooking back at this I realised that I never got a satisfactory result \nto DPNV/AW and from looking through the code I can see the reason for \nthis is that my fitness function was broken. So perhaps if you had been \nlooking at SharpNEAT&#39;s performance on this then you may have come to the \nconclusion that it is a more difficult problem than it actually is. Ken \nreported finding a solution in 286 gens and 33,184 evaluations, I&#39;m now \nusing my own fixed-up home-brew fitness function (because it was easier \nto hack together) and I just found a solution in 205 gens and 166k \nevaluations. So I&#39;m back in the same ball park at least. Mean population \ncompexity is at about 16, so nowhere near the default of 50 above the \nstarting complexity required to trigger a pruning phase.\n\nI should also point out that Ken&#39;s published solution to DPNV/AW \ncontained only one hidden node and 6 connections, so this really isn&#39;t a \nproblem that requires a lot of complexity to solve.\n\nRegards,\n\nColin\n\n\n\n\n"}}