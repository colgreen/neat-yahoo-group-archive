{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"IqJbEgZQUSRNoEyymd2n82jIkq9cgxt9s33wFE8fELIq5Nn7jmMzrkr-ezrRE689_JJLaOSaRtlYZFNQ6-AqGd84fwm2W7DOq8TPzxNdCTXZ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: An improvement over object evolution with CPPNs","postDate":"1226616590","msgId":4452,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdmaWF1ZSs5aWEyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGdmaTlidCtlZmFqQGVHcm91cHMuY29tPg=="},"prevInTopic":4450,"nextInTopic":4455,"prevInTime":4451,"nextInTime":4453,"topicId":4444,"numMessagesInTopic":14,"msgSnippet":"Peter, DCPPN_.exe seems to have a bug.  It crashes when I try to run it.  It says, the application configuration is incorrect when it crashes. Can you","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 20851 invoked from network); 13 Nov 2008 22:49:52 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m1.grp.re1.yahoo.com with QMQP; 13 Nov 2008 22:49:52 -0000\r\nX-Received: from unknown (HELO n14.bullet.mail.re1.yahoo.com) (69.147.103.141)\n  by mta17.grp.scd.yahoo.com with SMTP; 13 Nov 2008 22:49:52 -0000\r\nX-Received: from [68.142.230.29] by n14.bullet.mail.re1.yahoo.com with NNFMP; 13 Nov 2008 22:49:52 -0000\r\nX-Received: from [69.147.65.149] by t2.bullet.re2.yahoo.com with NNFMP; 13 Nov 2008 22:49:52 -0000\r\nX-Received: from [66.218.66.83] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 13 Nov 2008 22:49:51 -0000\r\nDate: Thu, 13 Nov 2008 22:49:50 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;gfiaue+9ia2@...&gt;\r\nIn-Reply-To: &lt;gfi9bt+efaj@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: An improvement over object evolution with CPPNs\r\nX-Yahoo-Group-Post: member; u=54567749; y=o0v2f9898WAJ3BdS9UfK_km3J1wF74gb0SZh8FdY56s_MIU7td1Y\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nPeter, DCPPN_.exe seems to have a bug.  It crashes when I try to run\nit.  I=\r\nt says, &quot;the application configuration is incorrect&quot; when it\ncrashes.\n\nCan =\r\nyou explain a little more the coordinate explosion.  How many\ncoordinates a=\r\nre there once development is done?  \n\nken\n\n--- In neat@yahoogroups.com, &quot;pe=\r\ntar_chervenski&quot; &lt;petar_chervenski@...&gt;\nwrote:\n&gt;\n&gt; The executable is located=\r\n in the Files section with the name \n&gt; &quot;DCPPN_3.exe&quot;.\n&gt; \n&gt; Yes I have the s=\r\name opinion, that the links should be created after \n&gt; development. But how=\r\n should I deal with the &quot;coordinate explosion&quot; \n&gt; then? Because I don&#39;t rea=\r\nlly know how big the phenotype can get. There \n&gt; is some limit, of course, =\r\nbut I am looking for an elegant way to solve \n&gt; the problem. Rescaling to [=\r\n-1..1] is more of a hack than a solution.\n&gt; \n&gt; Peter\n&gt; \n&gt; --- In neat@yahoo=\r\ngroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Peter, sounds inte=\r\nresting.  I&#39;ll be interested to see the executable\n&gt; &gt; version to get an in=\r\ntuition of the kinds of structures your method\n&gt; &gt; creates.  \n&gt; &gt; \n&gt; &gt; Abou=\r\nt the links:  My guess is that it&#39;s best to compute their values\n&gt; &gt; at the=\r\n end of development since that is the &quot;final geometry&quot; of the\n&gt; &gt; brain tha=\r\nt I believe makes sense to exploit.  In other words, it \n&gt; gives\n&gt; &gt; the br=\r\nain the opportunity to exploit the changes occur over\n&gt; &gt; development.  Oth=\r\nerwise, it would seem that those changes and the\n&gt; &gt; genes that encode them=\r\n are not really being used for any purpose.\n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt; &gt; --- In ne=\r\nat@yahoogroups.com, &quot;petar_chervenski&quot; &lt;petar_chervenski@&gt;\n&gt; &gt; wrote:\n&gt; &gt; &gt;=\r\n\n&gt; &gt; &gt; Hi all!\n&gt; &gt; &gt; \n&gt; &gt; &gt; For those of you who are not familiar with this=\r\n particular \n&gt; subject, it \n&gt; &gt; &gt; is about physical object evolution with C=\r\nPPNs. There are some \n&gt; problems \n&gt; &gt; &gt; when trying to use CPPNs directly t=\r\no map onto 2/3D objects with \n&gt; &gt; &gt; finite, though variable (among individu=\r\nals) size. I am \n&gt; particularly\n&gt; &gt; interested in this issue because it als=\r\no holds the key to the \n&gt; &gt; &gt; automatic generation of HyperNEAT substrates =\r\nas well. And perhaps \n&gt; it \n&gt; &gt; &gt; may open up new ways to have content gene=\r\nration in games, too. And \n&gt; &gt; &gt; Artificial Life, of course.\n&gt; &gt; &gt; \n&gt; &gt; &gt; I=\r\n remember that Ken suggested that animal morphologies and such \n&gt; things \n&gt;=\r\n &gt; &gt; may be easier to describe in higher dimensional space and then \n&gt; mapp=\r\ned \n&gt; &gt; &gt; back to 2D/3D, just like in HyperNEAT. Day after day I was trying=\r\n \n&gt; to \n&gt; &gt; &gt; find such a higher-dimensional description of something that =\r\nhas \n&gt; &gt; &gt; limbs, joints, all with variable numbers and size. Even in the \n=\r\n&gt; most \n&gt; &gt; &gt; simplistic 2D case, I never got even close to such an elegant=\r\n \n&gt; &gt; &gt; solution. \n&gt; &gt; &gt; \n&gt; &gt; &gt; Suppose I want to have a 2D creature with r=\r\nectangular limbs. But \n&gt; how \n&gt; &gt; &gt; many of them is unknown. How they are c=\r\nonnected - too. A limb is  \n&gt; &gt; &gt; represented as position in 2D and width/h=\r\neight and an angle of \n&gt; &gt; &gt; orientation. This makes 5D space in which I ha=\r\nve to query all \n&gt; possible \n&gt; &gt; &gt; things and ask the CPPN if there is a li=\r\nmb or not. Sounds too \n&gt; &gt; &gt; expensive, and more, even if I do that, there =\r\nare \n&gt; &gt; &gt; algorithmic/implementation issues that are just too hard. \n&gt; &gt; &gt;=\r\n \n&gt; &gt; &gt; The problem I had is, actually, that I missed the fact that a CPPN =\r\n\n&gt; is \n&gt; &gt; &gt; an infinite mathematical description of the phenotype. Any use=\r\n of \n&gt; a \n&gt; &gt; &gt; CPPN involves approximating the phenotype with some kind of=\r\n level \n&gt; of \n&gt; &gt; &gt; detail. The CPPN makes no difference if I use it for 16=\r\nx16 visual \n&gt; &gt; &gt; substrate or 65536x65536, for example (note: I mean not i=\r\nn \n&gt; phenotype \n&gt; &gt; &gt; evaluation). So there must be a way to have such leve=\r\nl of detail \n&gt; &gt; &gt; scaling in animal morphologies as well. \n&gt; &gt; &gt; \n&gt; &gt; &gt; So=\r\n I went back to the cellular growth approach, looking for what I \n&gt; &gt; &gt; mis=\r\nsed before. The biggest unsolved problem with my previous \n&gt; system is \n&gt; &gt;=\r\n &gt; that coordinates may grow to infinite and the activation functions \n&gt; ar=\r\ne \n&gt; &gt; &gt; actually best suited to work in [-1..1] substrates (given the fact=\r\n \n&gt; I \n&gt; &gt; &gt; have fixed CPPN weight range and mutation powers). Plus, the C=\r\nPPN \n&gt; is \n&gt; &gt; &gt; requeried on each cell on each timestep in the process of =\r\n\n&gt; development. \n&gt; &gt; &gt; Too expensive and as the phenotype gets bigger, deve=\r\nlopment slows \n&gt; down \n&gt; &gt; &gt; to a rate that is not acceptable. And more, it=\r\n is not clear how \n&gt; &gt; &gt; scaling could work if I want to, say, have the sam=\r\ne object, the \n&gt; same \n&gt; &gt; &gt; shape, much bigger, but the cell size and the =\r\ncoordinate frames - \n&gt; &gt; &gt; still fixed. Something was terribly wrong with t=\r\nhat model. But I \n&gt; think \n&gt; &gt; &gt; I have finally found a solution! Or at lea=\r\nst something very close \n&gt; to \n&gt; &gt; &gt; it.\n&gt; &gt; &gt; \n&gt; &gt; &gt; The CPPN already enco=\r\ndes all the development of a phenotype with \n&gt; any \n&gt; &gt; &gt; precision via com=\r\nposing coordinate frames. A whole phenotype with \n&gt; all \n&gt; &gt; &gt; its patterns=\r\n with infinite (well at least huge) precision can be \n&gt; fit \n&gt; &gt; &gt; into jus=\r\nt the patch of [-1 .. 1] in Cartesian space. Assume I will \n&gt; be \n&gt; &gt; &gt; tal=\r\nking about 2D space only for simplicity. That patch [-1 .. 1] \n&gt; in \n&gt; &gt; &gt; =\r\nboth X and Y I call &quot;the Egg&quot;. \n&gt; &gt; &gt; \n&gt; &gt; &gt; The first approach I took with=\r\n the idea of the egg was too simple, \n&gt; but \n&gt; &gt; &gt; it is interesting to kno=\r\nw about. After the CPPN &quot;paints&quot; the egg \n&gt; with \n&gt; &gt; &gt; cell color and stuf=\r\nf, then it is re-queried again, this time the \n&gt; &gt; &gt; outputs are 2D vectors=\r\n. The magnitude of these vectors was re-\n&gt; scaled \n&gt; &gt; &gt; to be within [0 ..=\r\n MAX_DISTANCE]. So the entire phenotype building \n&gt; &gt; &gt; procedure became ve=\r\nry simple - first build the egg, then send each \n&gt; &gt; &gt; cell where its vecto=\r\nr points. Well that looks so ugly in practice, \n&gt; &gt; &gt; with empty holes and.=\r\n. eh.. forget that! This is not anything more \n&gt; &gt; &gt; advanced than just pai=\r\nnting the CPPN output directly like in \n&gt; &gt; &gt; Picbreeder, just a fancy way =\r\nof doing the same. \n&gt; &gt; &gt; \n&gt; &gt; &gt; Then I realized that these &quot;cells&quot; can be =\r\nalso thought of an \n&gt; &gt; &gt; abstractions of &quot;masses/groups of cells&quot;. In natu=\r\nre, cells don&#39;t \n&gt; just \n&gt; &gt; &gt; go &quot;that way&quot; moving through each other, but=\r\n stick together. \n&gt; Entire \n&gt; &gt; &gt; tissues develop fast as a mass of cells d=\r\nivides and increases \n&gt; size. So \n&gt; &gt; &gt; I had this insight. I changed the c=\r\noncept of a cell and improved \n&gt; over \n&gt; &gt; &gt; the previous model. A cell is =\r\na circle with a radius, has a color \n&gt; and \n&gt; &gt; &gt; has mass. It also has mor=\r\ne properties but more on that after a few \n&gt; &gt; &gt; other words. \n&gt; &gt; &gt; \n&gt; &gt; &gt;=\r\n This is the key idea. In my previous model, the CPPN was \n&gt; instructing a =\r\n\n&gt; &gt; &gt; big mass of many cells on the fly, during development time. It \n&gt; to=\r\nok \n&gt; &gt; &gt; advantage of using time as input, so the development was like a \n=\r\n&gt; &gt; &gt; spatial pattern in 4D. But it suffered from the coordinates and \n&gt; ot=\r\nher \n&gt; &gt; &gt; problems I mentioned above. In this model, the CPPN does not \n&gt; =\r\noperate \n&gt; &gt; &gt; on the cells during development. The CPPN predetermines the =\r\nfate \n&gt; of \n&gt; &gt; &gt; each cell right in the egg, before development begins. Ev=\r\nerything \n&gt; else \n&gt; &gt; &gt; during development is a consequence of the cell&#39;s f=\r\nate and the \n&gt; &gt; &gt; internal 2D physics world in which the phenotype develop=\r\ns. So, in \n&gt; &gt; &gt; simpler words, the CPPN is programming the egg.\n&gt; &gt; &gt; \n&gt; &gt;=\r\n &gt; A cell has the following properties that are determined by the \n&gt; CPPN:\n=\r\n&gt; &gt; &gt; - Color (of course :)\n&gt; &gt; &gt; - Growth rate. How fast it increases size=\r\n in % of circle area. \n&gt; &gt; &gt; - Time to begin growth. It is a value in [0 ..=\r\n 1] where 1 is the \n&gt; total \n&gt; &gt; &gt; number of time steps allocated for devel=\r\nopment.\n&gt; &gt; &gt; - Growth time duration. Between some min and max value.\n&gt; &gt; &gt;=\r\n - Angle for division splitting. Between [-1 .. 1], during \n&gt; development \n=\r\n&gt; &gt; &gt; rescaled to [0 .. pi]\n&gt; &gt; &gt; \n&gt; &gt; &gt; As cells grow, they will inevitabl=\r\ny overlap each other. This issue \n&gt; is \n&gt; &gt; &gt; handled by the internal simpl=\r\ne 2D physics engine that adds forces \n&gt; if \n&gt; &gt; &gt; the circles overlap. So t=\r\nhey eventually will converge to a state \n&gt; that \n&gt; &gt; &gt; they only touch each=\r\n other, and the whole phenotype bigger of \n&gt; course. \n&gt; &gt; &gt; Cells can divid=\r\ne. Division is automatic. If a cell&#39;s radius \n&gt; reaches a \n&gt; &gt; &gt; a fixed tr=\r\neshold value, it is split into 2 cells, each one having \n&gt; &gt; &gt; exactly half=\r\n the area of the mother cell. The mother cell is split \n&gt; &gt; &gt; along a prede=\r\ntermined angle, so the CPPN can control the overall \n&gt; &gt; &gt; directions of gr=\r\nowth for the phenotype. The 2 children overlap in \n&gt; the \n&gt; &gt; &gt; beginning, =\r\nbut as time progresses, they are pulled apart by the \n&gt; &gt; &gt; physics. Childr=\r\nen cells inherit the properties of the mother, but \n&gt; &gt; &gt; change their posi=\r\ntions and reset their lifetime timers. The cells \n&gt; in \n&gt; &gt; &gt; the egg count=\r\n their children and their grandchildren as well. No \n&gt; more \n&gt; &gt; &gt; than 3 g=\r\nenerations of division can occur, in order to keep the \n&gt; number \n&gt; &gt; &gt; of =\r\ncells relatively small for performance considerations. Though \n&gt; this \n&gt; &gt; =\r\n&gt; value can be changed. \n&gt; &gt; &gt; \n&gt; &gt; &gt; In order to keep the phenotype solid,=\r\n not torn apart from internal \n&gt; &gt; &gt; velocities, a mass-spring grid mesh is=\r\n created in the egg before \n&gt; &gt; &gt; development. Cell divisions update the me=\r\nsh. The mass-spring mesh \n&gt; plus \n&gt; &gt; &gt; the cell-to-cell overlapping preven=\r\ntion forces act together as the \n&gt; &gt; &gt; phenotype increases in size and numb=\r\ner of cells. Eventually it \n&gt; will \n&gt; &gt; &gt; become more stiff, where large gr=\r\noup of recently divided cells are \n&gt; &gt; &gt; packed together. I don&#39;t know if t=\r\nhat is a bug or a feature :) \n&gt; &gt; &gt; \n&gt; &gt; &gt; There is one insight I had after=\r\n seeing the results. Watching the \n&gt; mesh \n&gt; &gt; &gt; develops, and some with in=\r\nteresting shapes and configurations, \n&gt; makes \n&gt; &gt; &gt; me think this approach=\r\n is very well suited to evolve HyperNEAT \n&gt; &gt; &gt; substrates as well. In fact=\r\n I am about to add brains to these \n&gt; &gt; &gt; creatures right this evening :) B=\r\nut I don&#39;t know, if the links \n&gt; should \n&gt; &gt; &gt; be determined from the begin=\r\nning right in the egg or after \n&gt; &gt; &gt; development. Any suggestions? \n&gt; &gt; &gt; =\r\n\n&gt; &gt; &gt; Well this is it. I hope this may be some advance into the field. I \n=\r\n&gt; &gt; &gt; will be happy to see any thoughts about this stuff. I&#39;ll post an \n&gt; &gt;=\r\n &gt; executable compiled with VS2008 in the files section now, so you \n&gt; will=\r\n \n&gt; &gt; &gt; see it in action. Note however, that it is just a demo of \n&gt; develo=\r\npment, \n&gt; &gt; &gt; not evolution. There is no doubt that this thing combined wit=\r\nh \n&gt; NEAT \n&gt; &gt; &gt; will make at least something very very cool. :) \n&gt; &gt; &gt; \n&gt; =\r\n&gt; &gt; Peter\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}