{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"wNeAWcBVxvabHneXd_nqLVtXHQs9IcAvCvNDCpG4uGspRvOVI6jaMoBeX_ktguYNGbllvRSQT0r4I2PGgwsFfHGXA5jLjp0XootDl7g2GzG2","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Recurrency flag","postDate":"1080773046","msgId":597,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM0ZmhqbStraGtyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQwNkI0NTY4LjcwMzA3MDRAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":596,"nextInTopic":0,"prevInTime":596,"nextInTime":598,"topicId":596,"numMessagesInTopic":2,"msgSnippet":"... I ... sure ... to ... case is ... placed ... 1 ... middle ... links ... if ... Hi Colin, yes this is generally true; however, there is one rare exception","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 55746 invoked from network); 31 Mar 2004 22:44:12 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m19.grp.scd.yahoo.com with QMQP; 31 Mar 2004 22:44:12 -0000\r\nReceived: from unknown (HELO n9.grp.scd.yahoo.com) (66.218.66.93)\n  by mta5.grp.scd.yahoo.com with SMTP; 31 Mar 2004 22:44:06 -0000\r\nReceived: from [66.218.67.179] by n9.grp.scd.yahoo.com with NNFMP; 31 Mar 2004 22:44:06 -0000\r\nDate: Wed, 31 Mar 2004 22:44:06 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c4fhjm+khkr@...&gt;\r\nIn-Reply-To: &lt;406B4568.7030704@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2280\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.93\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Recurrency flag\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n--- In neat@yahoogroups.com, Colin Green &lt;cgreen@d...&gt; wrote:\n&gt; I&#39;d like to re-put my question about the recurrency flag in NEAT if\nI \n&gt; may. What precisely does it describe?  I&#39;ve had a look at the \n&gt; mutate_add_mode() function in original NEAT code and I&#39;m not 100%\nsure \n&gt; but it looks like a recurrent connection is one that links a neuron\nto \n&gt; itself, is this correct?  Elsewhere though I get the feeling that a \n&gt; recurrent connection is one that links &#39;backwards&#39;, thus causing \n&gt; recurrency but via a chain of 2 or more neurons. If this second\ncase is \n&gt; true then how is &#39;backwards&#39; determined since the neurons aren&#39;t\nplaced \n&gt; into layers?\n&gt; \n&gt; Is it the case that the neurons are considered to be in a chain (in\n1 \n&gt; dimension), e.g. with inputs on the left, hidden neurons in the\nmiddle \n&gt; and outputs on the right. Thus a recurrent connection is one that\nlinks \n&gt; back to a neuron earlier in the chain, right-to-left. And therefore\nif \n&gt; we prevent recurrent connections we are guaranteed of finding only \n&gt; feedforward networks.\n&gt; \n&gt; \n\nHi Colin, yes this is generally true; however, there is one rare\nexception that I didn&#39;t handle.\n\nBasically, the way NEAT works is to check every time a new connection\nis added whether that connection creates a loop.  If so, the\nconnection will either be labeled recurrent, or not allowed (when\nrecurrency is turned off).  Thus, you should in principle get only\nfeedforward networks.\n\nHowever, if two significantly disparate topologies crossover, it is\npossible for a loop to occur in the new context where there was none\nbefore.  Thus, there is a slight chance a recurrent connection can\nexist undetected.  NEAT realizes this when it says &quot;LOOP DETECTED ON\nRECURRENCY CHECK,&quot; but it doesn&#39;t do any further analysis to figure\nout *which* connection is actually recurrent.  \n\nSo the basic answer is, in general, if you check for recurrency the\nway I did, then in general you can prevent it, but once in a while it\nmight creep in through e.g. an interspecies mating event.\n\nThere may be better ways to do all this...as I mentioned in a previous\nmessage, I think Mat Buckland used a totally different method for\nanalyzing both layering and recurrency, and I need to reread the NEAT\nchapter in his book again to remind myself.\n\nken\n\n\n"}}