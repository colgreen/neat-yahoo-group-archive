{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"J-_fq3JCyI2aLluhy1KpD4-qnKuY7jRt8ku624MmtIRugQnaOHj44vlIpZd0PJVYjINu3PcbAtaxxEGCpHPLBo7ynbIw-ll0XoI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Paper on evolving modular neural networks","postDate":"1081808399","msgId":644,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUuMS4wLjE0LjAuMjAwNDA0MTIyMjU5NTMuMDBhNzNjYTBAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PFBpbmUuTE5YLjQuNTguMDQwNDA5MDEzMTIzMC40MTgwQG9yYW5nZS1wZWtvZS5jcy51dGV4YXMuZWQgdT4=","referencesHeader":"PDUuMi4xLjEuMC4yMDA0MDQwNjEyMjE0MS4wMWJmNmVlOEBwb3AubWFpbC55YWhvby5jby51az4gPDUuMi4xLjEuMC4yMDA0MDQwNTExMTkxMy4wMTgzNmVhOEBwb3AubWFpbC55YWhvby5jby51az4gPDUuMi4xLjEuMC4yMDA0MDQwNTExMTkxMy4wMTgzNmVhOEBwb3AubWFpbC55YWhvby5jby51az4gPDUuMi4xLjEuMC4yMDA0MDQwNjEyMjE0MS4wMWJmNmVlOEBwb3AubWFpbC55YWhvby5jby51az4="},"prevInTopic":640,"nextInTopic":1195,"prevInTime":643,"nextInTime":645,"topicId":535,"numMessagesInTopic":47,"msgSnippet":"... In that case I misunderstood the paper, because I was under the impression that every stone dropped on one side became black, and every stone dropped on","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 91230 invoked from network); 12 Apr 2004 22:15:56 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m1.grp.scd.yahoo.com with QMQP; 12 Apr 2004 22:15:56 -0000\r\nReceived: from unknown (HELO cmailm4.svr.pol.co.uk) (195.92.193.211)\n  by mta4.grp.scd.yahoo.com with SMTP; 12 Apr 2004 22:15:55 -0000\r\nReceived: from modem-630.monkey.dialup.pol.co.uk ([217.135.210.118] helo=giles.yahoo.co.uk)\n\tby cmailm4.svr.pol.co.uk with esmtp (Exim 4.14)\n\tid 1BD9ib-0004nk-8u\n\tfor neat@yahoogroups.com; Mon, 12 Apr 2004 23:15:53 +0100\r\nMessage-Id: &lt;5.1.0.14.0.20040412225953.00a73ca0@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 5.1\r\nDate: Mon, 12 Apr 2004 23:19:59 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;Pine.LNX.4.58.0404090131230.4180@...\n u&gt;\r\nReferences: &lt;5.2.1.1.0.20040406122141.01bf6ee8@...&gt;\n &lt;5.2.1.1.0.20040405111913.01836ea8@...&gt;\n &lt;5.2.1.1.0.20040405111913.01836ea8@...&gt;\n &lt;5.2.1.1.0.20040406122141.01bf6ee8@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 195.92.193.211\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Paper on evolving modular neural networks\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 01:48 09/04/2004 -0500, you wrote:\n&gt; &gt; Really?  I would have thought it easier, just because of the &quot;which stones\n&gt; &gt; are mine&quot; angle.\n&gt;\n&gt;Actually this isn&#39;t a problem: White stones give input 1, black stones\n&gt;give -1, and empty space gives 0. Thus the network is easily able to\n&gt;distinguish between the two groups of stones.\n\nIn that case I misunderstood the paper, because I was under the impression \nthat every stone dropped on one side became black, and every stone dropped \non the other side became white.  Thus the network&#39;s stones and the \noriginally seeded stones would always be the same colour when they fell on \nthe same half.\n\nObviously I misunderstood that, how did it work?\n\n&gt; &gt; I don&#39;t see how it can distinguish its own stones, because (i) initial\n&gt; &gt; stones may be anywhere, (ii) initial and own stones give same input, (iii)\n&gt; &gt; no memory?\n&gt;\n&gt;See above.\n&gt;\n&gt; &gt; And both more likely than (1,1)-&gt;(4,5) ?\n&gt;\n&gt;Ideally, yes, with a gaussian position mutation. I think for the\n&gt;conference paper, all position mutations were uniform (although they did\n&gt;take into account the topology of the board explicitly).\n&gt;\n&gt; &gt; For example, if I have learned the board geometry, then I can play any game\n&gt; &gt; on the board and exploit the geometry in the same way.\n&gt;\n&gt;Exactly. And this also implies that there is a reduction in the amount of\n&gt;low level computation required to analyze any part of the board, since its\n&gt;basically the same, or similar computation that is applied to another\n&gt;part. It seems that developmental systems would be particularly well\n&gt;suited to this, because there is an inherint sense of &quot;reuse with slight\n&gt;modification&quot; ... meaning that we have animals with repeating segments,\n&gt;that are similar, and things like wings/legs/halteres that are derived\n&gt;from the same gene groups, but have different morphologies.\n\nHmm, yes, but I think it is unclear whether the brain&#39;s ability to exploit \ndata with slight modifications (such as the same game state translated \naround the board) is in any way derived from any developmental programming \nwhich instantiates neurone structures with slight modifications...\n\n&gt; &gt; All of these have the weakness that they sort of imply the existance of\n&gt; &gt; multiplexers and databuses in my head.  e.g. in order that GSMod can\n&gt; &gt; process data before NewMod sees it, first the data has to be routed to\n&gt; &gt; GSMod, then transferred into GSMod, then the results routed to NewMod,\n&gt; &gt; transferred to it...\n&gt;\n&gt;This kind of idea may work, I think, but it would require a lot of\n&gt;engineering to get it right.\n\nI wasn&#39;t suggesting it was necessarily the case.  Just that the abilities \nof the brain, if analysed in a fairly naive way, could be explained by some \nsuch system (whilst giving us no clue as to _how_ such a system would be \nimplemented) -- and I&#39;ve not seen a satisfactory alternative theory for how \nthe brain manages it&#39;s &quot;integrative&quot; abilities (i.e. applying one learned \nthing to another learned thing).\n\n&gt;  Instead, I&#39;d like to think that there is some\n&gt;kind of search-space operator that is able to collapse a solution space\n&gt;that has symmetries down into one that does not. Then something that is\n&gt;learned for one half, or one quarter, etc of the board would instantly be\n&gt;know for all halves, quarters, etc.\n\nRight.  But you are skipping what is IMHO the big question, which is how do \nI apply the symmetry which I already learnt on game-A to game-B?  Hence my \ndiscussion of busses and multiplexers.  I don&#39;t for a minute think that&#39;s \nhow the brain works, but I never saw any other theory for how old-learning, \npresumably stored in one part of the brain, gets applied to new-learning, \nhappening elsewhere...\n\n&gt;This is exactly the kind of reduction\n&gt;that a developmental system performs, i.e. a lot of metazoans have\n&gt;bilateral symmetry, this allows a mutation affecting one half to always\n&gt;balance out across both halves, making it easier for non-destructive\n&gt;mutations to occur.\n&gt;\n&gt; &gt; I often speculate whether brain-modules have &quot;general purpose connectors&quot;,\n&gt; &gt; who&#39;s only properties are that (i) they contain a lot of channels, and (ii)\n&gt; &gt; that they contain the same channels (at the same &quot;positions&quot;) on every\n&gt; &gt; module.  Think of them as 100x100 pin plugs and sockets.  Initially, no pin\n&gt; &gt; has any meaning, and modules use an arbitrary selection of pins for input\n&gt; &gt; and output.  When modules need to learn to work together, they learn\n&gt; &gt; one-anothers input and output pin patterns.  If two modules are variations\n&gt; &gt; on the same thing, then they frequently connect to the same other modules,\n&gt; &gt; and their pin patterns are forced to converge.  Thus a certain pattern of\n&gt; &gt; pin usage becomes a de facto standard for a particular type of\n&gt; &gt; information.  I regard this as a strong example of extraction of semantics,\n&gt; &gt; certain pins have come to &quot;mean&quot; certain types of data, and they only did\n&gt; &gt; that because it was a type of data that modules needed to exchange...\n&gt;\n&gt;You may want to look at some research done in the V1 visual cortex,\n&gt;especially with receptor fields. There are basically sheets of parallel\n&gt;processing neurons for interpreting light data from your retina at various\n&gt;stages. We know for instance that there is a sheet for extracting edge\n&gt;orientation data, etc. This data is then fed into the next stage in the\n&gt;&quot;pipeline.&quot; So in other words you kind of have a biological data bus.\n\nI know about that in general terms, and it&#39;s part of what inspired my \noriginal speculations, because I see how it can work for a pre-set evolved \nstructure, such as the visual cortex, but I can&#39;t imagine how the same \nprinciple is applied to a new game which I am learning during one \nlifetime.  Unless, that is, the only reason we can exploit symmetry in \ngames at all is that the visual cortex is already set-up to understand all \nsorts of symmetries, and really does act as a pre-processor to do what both \nyou and I have suggested, and collapse the data into a non-symmetric \nform.  (Of course, something has to store the removed symmetries and mix it \nback into the output...)\n\n&gt; &gt; I wouldn&#39;t call this a severe critique, but I do immediately wonder how\n&gt; &gt; much a &quot;move module on board&quot; mutation would change the results....\n&gt;\n&gt;In my opinion, I don&#39;t think it would help that much. It might add a small\n&gt;percentage increase in the algorithm&#39;s ability to find solutions, but I\n&gt;don&#39;t think it would be earth shattering.\n\nSince you were looking for re-use, I&#39;d think it would make a total \ndifference between modules getting reused on different parts of one board \nand them not doing...\n\n&gt; &gt; &gt;Yeah. Actually my original design was much more flexible, allowing for\n&gt; &gt; &gt;module hierarchies, and more complex configurations. It seemed too\n&gt; &gt; &gt;arbitrary though, having to specify exactly how module interactions had to\n&gt; &gt; &gt;take place.\n&gt; &gt;\n&gt; &gt; I didn&#39;t mean you specifying the interactions, I meant letting it evolve as\n&gt; &gt; part of the framework.  E.g. the evolution of the frameworks would be very\n&gt; &gt; akin to NEAT evolution of a single network, with the exception that each\n&gt; &gt; connection needs to specify which output(s) to connect to which input(s).\n&gt;\n&gt;Right. The implementation of this seemed to complex and arbitrary for me.\n&gt;For example: module A&#39;s output is connected to module B&#39;s input, then they\n&gt;have to have corresponding input and output sizes, otherwise you have to\n&gt;work out some scheme for allocating multiple outputs to one input, or\n&gt;vice-versa. Extrapolate from there with more complex interactions, and you\n&gt;see what I mean.\n\nNo, you just wire one output from module-X into one input of \nmodule-Y.  Other inputs to module-Y may be from modules Z, Q and W...\n\nBut you are right, without some means of specifying a &quot;language&quot; of module \nto module communications there may be no hope of modules ever evolving to \n&quot;understand&quot; one another.  Also your model-world might be too simple to \nreally show such high-level effects.  Or we might just all die of old age \nbefore the effects happen :)\n\n         Regards,\n\n                 Ian Badcoe\n\n\n\nhttp://livingathome.sourceforge.net/ - evolution for the desktop\n\n\n"}}