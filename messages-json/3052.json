{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"LIyi7_qywT4BBbEyJOYZB2T-GKfw1JOYR1N7Nq1wPBdXYyHxt--hzZLBiBdQRwkuMi2B4U0-CgxN9on2v_UB-fnT8WfQ_KCgO8g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: HyperNEAT: Creating Neural Networks with CPPNs","postDate":"1175031398","msgId":3052,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIxMzM1NTE3NTAxODU4QG1haWwuaWRuZXQubmV0LnVrPg==","inReplyToHeader":"PGV1OW04cCtkamg0QGVHcm91cHMuY29tPg==","referencesHeader":"PDIwNDYzMzI3NzI2MzIyQG1haWwuaWRuZXQubmV0LnVrPiA8ZXU5bThwK2RqaDRAZUdyb3Vwcy5jb20+"},"prevInTopic":3051,"nextInTopic":3053,"prevInTime":3051,"nextInTime":3053,"topicId":3028,"numMessagesInTopic":34,"msgSnippet":"Hi, Ken, I d like to reply to your posts in which you makes the case that a functional mapping is equivalent to a developmental system in the context of a","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 34577 invoked from network); 27 Mar 2007 21:37:05 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m35.grp.scd.yahoo.com with QMQP; 27 Mar 2007 21:37:05 -0000\r\nReceived: from unknown (HELO mail.idnet.net.uk) (212.69.36.63)\n  by mta10.grp.scd.yahoo.com with SMTP; 27 Mar 2007 21:37:04 -0000\r\nReceived: from [212.69.55.164] by mail.idnet.net.uk (GMS\n 11.01.3365/NU3963.00.7ca42f0c) with ESMTP id aghyktaa for\n neat@yahoogroups.com; Tue, 27 Mar 2007 22:33:55 +0100\r\nX-Mailer: QUALCOMM Windows Eudora Version 7.1.0.9\r\nDate: Tue, 27 Mar 2007 22:36:38 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;eu9m8p+djh4@...&gt;\r\nReferences: &lt;20463327726322@...&gt;\n &lt;eu9m8p+djh4@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nMessage-Id: &lt;21335517501858@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: HyperNEAT: Creating Neural Networks with CPPNs\r\nX-Yahoo-Group-Post: member; u=7192225; y=5yfjPQVsc2hNyGVqHkPmS4DZaZeEKW0gQa3VirKEzLpdtyzsFA\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nHi,\n\tKen, I&#39;d like to reply to your posts in which you makes the case \nthat a functional mapping is equivalent to a developmental system in \nthe context of a computer where we can define a coordinate system to \ntrivialize finding where we are.\n\n\tI think you are wrong on this particular point.  Or rather, I think \nyou have hit on a great short-cut, that will nicely side-step a whole \nclass of issues, but that eventually you will have to come back to \ndevelopmental ideas.\n\n\tThe reason I think this is for reasons of evolvability.  The \nfunctional approach relies on features remaining in the same places \nso that other functions can find them.  Any mutation that requires a \nfeature to move will need all the parts of the CPPN that reference \nthat feature to be changed in synchrony.  In other words it will \nrequire multiple concerted mutations, and that is too improbable.\n\n\tNow, you might argue that feature-moving mutations were of no \nsignificance.  But other very important classes of change suffer the \nsame problems.  e.g. if we mutate part of the CPPN to produce a \nduplication of a previously existing structure:\n\n\tsin(x) -&gt; sin(2 * x)\n\n\tThen we need to separately do the same thing to the other parts of \nthe CPPN that also want to reference that structure.  In a \ndevelopmental approach, such a change might be something like a \nsimple duplication:\n\n\t...; CreateSomeNeurones(label:=47, pattern:=...); ... -&gt;\n\n\t...; CreateSomeNeurones(label:=47, pattern:=...); \nCreateSomeNeurones(label:=47, pattern:=...); ...\n\n\tAnd because all future rules that attach to that structure will be \ndoing it via recognizing the label, they will already be doing the \nright thing to both of the new structures...\n\n\t(OK OK they&#39;ll not be doing a totally wrong thing)\n\n\tBut as I said, HyperNEAT _is_ a great step forwards, but possibly \nnot the whole story.\n\n\tIan\n\n\n"}}