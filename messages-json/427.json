{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"hNy80fJkpbp0aFsfqYJ854NoWxyLg5BHRD_QFpdt4sPjdzbah-N8TemBVPhr7jhO3-IwUNLAJUoFzwIP4xBjbhyc4CnqYOtxVw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Standard network XML dialect.","postDate":"1077577653","msgId":427,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwM0E4N0I1LjQwODAyMDlAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PDIwMDQwMjIzMjEzNTU5Ljg1NjcxLnFtYWlsQHdlYjYwNTA1Lm1haWwueWFob28uY29tPg==","referencesHeader":"PDIwMDQwMjIzMjEzNTU5Ljg1NjcxLnFtYWlsQHdlYjYwNTA1Lm1haWwueWFob28uY29tPg=="},"prevInTopic":426,"nextInTopic":428,"prevInTime":426,"nextInTime":428,"topicId":408,"numMessagesInTopic":19,"msgSnippet":"... Ultimately I think it makes sense to put all commonly used NEAT parameters into a config file to lessen the need to edit & recompile source code. Also the","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 37698 invoked from network); 23 Feb 2004 23:07:28 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m8.grp.scd.yahoo.com with QMQP; 23 Feb 2004 23:07:28 -0000\r\nReceived: from unknown (HELO shockwave.systems.pipex.net) (62.241.160.9)\n  by mta4.grp.scd.yahoo.com with SMTP; 23 Feb 2004 23:07:27 -0000\r\nReceived: from dsl.pipex.com (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby shockwave.systems.pipex.net (Postfix) with ESMTP id 304711C001D5\n\tfor &lt;neat@yahoogroups.com&gt;; Mon, 23 Feb 2004 23:07:27 +0000 (GMT)\r\nMessage-ID: &lt;403A87B5.4080209@...&gt;\r\nDate: Mon, 23 Feb 2004 23:07:33 +0000\r\nUser-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.5) Gecko/20031007\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;20040223213559.85671.qmail@...&gt;\r\nIn-Reply-To: &lt;20040223213559.85671.qmail@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 62.241.160.9\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] Re: Standard network XML dialect.\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nDerek James wrote:\n\n&gt;--- Colin Green &lt;cgreen@...&gt; wrote:\n&gt;  \n&gt;\n&gt;&gt;I have defined 2 dialects, although they share some\n&gt;&gt;structure -  a \n&gt;&gt;&#39;neat-run-config&#39; that can be used to initialise a\n&gt;&gt;neat run, and a \n&gt;&gt;&#39;neat-run-output&#39; that represents the output from a\n&gt;&gt;run. \n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;This is probably a good idea...to have an XML format\n&gt;for loading parameters (we&#39;re not doing this\n&gt;currently).\n&gt;  \n&gt;\nUltimately I think it makes sense to put all commonly used NEAT \nparameters into a config file to lessen the need to edit & recompile \nsource code. Also the number of parameters probably makes it cumbersome \nto pass them through the command line - in this case the temptation is \nto put cmd line parameters into a script/batch file, which gives you the \nsame benefits as putting them into an XML file I suppose. There&#39;s no \nreason why both techniques can&#39;t sit side-by-side if necessary.\n\n&gt;Our parameters file has grown quite a bit.  I don&#39;t\n&gt;know if your examples were meant to be comprehensive,\n&gt;but obviously there&#39;s stuff like the compatibility\n&gt;coefficients and speciation compatibility threshold\n&gt;values.\n&gt;  \n&gt;\nNoted. Apart for the standard NEAT parameters though are there any \nothers that I should be including in a standard dialect? or are they \nparameters specific to particular domains and evaluation techniques? \nPerhaps it would be a good idea to define an open ended tag such as:\n\n&lt;dynamic-parameter id=&quot;myparameter1&gt;myparamvalue&lt;/dynamic-parameter&gt;\n\n\n&gt;We make a distinction between the domain (Tic-Tac-Toe)\n&gt;and the fitness function (direct evolution against\n&gt;random players, round-robin coevolution, etc.).  And\n&gt;then for game domains there are all sorts of\n&gt;additional parameters (win/loss/tie value, etc.).\n&gt;  \n&gt;\nActually I may scrap the environment/domain part of the \n&lt;neat-run-config&gt;. I think I&#39;m correct in saying that the types of NEAT \nproject currently in use tend to have the domain and evaluation code \ntightly coupled with the more generic NEAT code - so e.g. requiring a \nrecompile to switch over to another domain. It still makes sense to have \nthe tags I described in the output so you know which domain the output \ndata corresponds to, but it&#39;s mostly useless in the config file. All you \ncould really do is test that the currently linked domain is the same as \nthe one defined in the config and bail out if it doesn&#39;t match.\n\nIf at some future date we have a standard code interface for domains and \nfitness functions we would then be able to keep a library of domains \nthat can be loaded dynamically using a &#39;domain-id&#39;.\n\n&gt;&gt;   &lt;generation id=&quot;1&quot;&gt;\n&gt;&gt;      &lt;generation-info&gt;\n&gt;&gt;         &lt;save-time&gt;&quot;2004-02-24\n&gt;&gt;00:00:12&quot;&lt;/save-time&gt;\n&gt;&gt;         &lt;max-fitness&gt;234&lt;/max-fitness&gt;\n&gt;&gt;         &lt;min-fitness&gt;123&lt;/min-fitness&gt;\n&gt;&gt;         &lt;avg-fitness&gt;222&lt;/avg-fitness&gt;\n&gt;&gt;         &lt;species-count&gt;5&lt;/species-count&gt;\n&gt;&gt;      &lt;/generation-info&gt;\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Having a species-count tag in generation info is a bit\n&gt;redundant, but not terribly.\n&gt;  \n&gt;\nThe idea here is that you can configure the frequecy at which data is \nlogged and also the amount of detail that is logged. I need to clarify \nthis area but in this case the &lt;species-count&gt; is nice to have if we \nchose to only log the &lt;generation-info&gt; block, and not all of the \nassociated &lt;specie&gt; and &lt;genome&gt; tags. It allows us to build those nice \ngraphs showing how the size and number of species changes without having \nto store megabytes of genome data.\n\n&gt;&gt;&lt;connection id=&quot;4&quot; src=&quot;0&quot; tgt=&quot;3&quot; \n&gt;&gt;weight=&quot;-1.3731676929130425&quot; enabled=&quot;1&quot;\n&gt;&gt;innov-id=&quot;12&quot;/&gt;\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Why have an &quot;id&quot; and an &quot;innovation-id&quot;?  They should\n&gt;be the same thing.\n&gt;  \n&gt;\nWell spotted :)\n\n&gt;Other than that, it definitely looks like a good start\n&gt;for XML for loading parameters and reviewing stats\n&gt;during and after a run.  \n&gt;\n&gt;As I put in my previous mail, we currently use two\n&gt;types of XML to represent individuals: chromosome.xml\n&gt;and network.xml, basically mapping to the genotype and\n&gt;phenotype respectively.  I think this dichotomy is a\n&gt;good idea, especially as indirect encoding is used. \n&gt;In such cases, there will not be a one-to-one mapping\n&gt;of genotype to phenotype...agreed?\n&gt;  \n&gt;\nUmm well does NEAT implement indirect encoding? I would say it was \ndirect because each gene is expressed directly within a a network. \nHaving said that you cannot determine exactly what the original genome \nwas for a given network, especially where disabled genes are in use. The \nbest approach is to save the genome data in the output file since it can \nalways be translated to network.xml - the reverse is not true. So yes I \nagree.\n\n&gt;Thus, there&#39;s no real need to represent recurrent\n&gt;connections in genotype XML...\n&gt;\nAgreed. It can be determined by analysing the connections.\n\n&gt;likewise, there&#39;s no\n&gt;reason to represent disabled genes in phenotype XML.  \n&gt;  \n&gt;\nYup.\n\nOK thanks for the feedback. I&#39;ll make a few changes and post an update soon.\n\nColin.\n\n\n\n\n"}}