{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"VrpklznALrn9PQ9erc6uB3uHQ15VxmFwlJlvkVl45X-JakDeof60OX8nvYRsSU-oEntkEFcXMy8wevoGFh1dOLtbMycjT8LT97vqd8wb9K0-","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Double Pole Balancing Questions","postDate":"1121386509","msgId":2086,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRiNnY2ZCthdjNlQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQyRDZGNUQ1LjYwMDAyMDhAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":2085,"nextInTopic":0,"prevInTime":2085,"nextInTime":2087,"topicId":2049,"numMessagesInTopic":11,"msgSnippet":"It s not necessarily that important to know why a particular fitness function is used in a benchmark among all the possibilities as long as it makes a good","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 34084 invoked from network); 15 Jul 2005 00:15:12 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m28.grp.scd.yahoo.com with QMQP; 15 Jul 2005 00:15:12 -0000\r\nReceived: from unknown (HELO n11a.bulk.scd.yahoo.com) (66.94.237.16)\n  by mta2.grp.scd.yahoo.com with SMTP; 15 Jul 2005 00:15:12 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.5] by n11.bulk.scd.yahoo.com with NNFMP; 15 Jul 2005 00:15:12 -0000\r\nReceived: from [66.218.66.82] by mailer5.bulk.scd.yahoo.com with NNFMP; 15 Jul 2005 00:15:12 -0000\r\nDate: Fri, 15 Jul 2005 00:15:09 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;db6v6d+av3e@...&gt;\r\nIn-Reply-To: &lt;42D6F5D5.6000208@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3778\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Double Pole Balancing Questions\r\nX-Yahoo-Group-Post: member; u=54567749; y=yvs2JzQlLiE4YAKAHz4H-jJguGmYccJOSgDRiyLpUd01jnYMl-gd\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nIt&#39;s not necessarily that important to know why a particular fitness \nfunction is used in a benchmark among all the possibilities as long \nas it makes a good comparison metric for diverse methods.  So I \nwouldn&#39;t get too bogged down in trying to understand Gruau&#39;s \nmotivations.  More concerning to me is the fact that Gruau&#39;s \ngeneralization test is not well correlated to his fitness function.  \nIn other words, you can optimize really well on his fitness function \nand still fail the generalization test, which really screws up the \nutility of the benchmark.  I&#39;ve found for example if you are *too* \nfast at optimizing you skip the sweet spot period where you have \ngood generalization.  But that seems orthogonal to the goal of \ncomparing methods on their optimization capabilities.  There has \nnever been an interesting contrast revealed among methods regarding \ntheir generalization performance with Gruau&#39;s criteria.\n\nken\n\n--- In neat@yahoogroups.com, Colin Green &lt;cgreen@d...&gt; wrote:\n&gt; Derek James wrote:\n&gt; \n&gt; &gt;Thanks for the answers and input so far...I&#39;ll comment on some of \nthem\n&gt; &gt;a bit more later.\n&gt; &gt;\n&gt; &gt;But another quick question:\n&gt; &gt;\n&gt; &gt;One of the reasons for penalizing oscillations in the double pole\n&gt; &gt;balancing task is to make it more difficult, right?  Since the\n&gt; &gt;solution does not involve the network having to compute the \nvelocities\n&gt; &gt;itself.\n&gt; &gt;  \n&gt; &gt;\n&gt; That is the explanation given by Graua in &quot;A comparison between \ncellular \n&gt; encoding and direct encoding for genetic neural neytworks&quot;:\n&gt; \n&gt; \nhttp://citeseer.ist.psu.edu/cache/papers/cs/13526/http:zSzzSzearth.cs\n.ttu.eduzSz~pyeattzSzpaperszSzgp96.pdf/gruau96comparison.pdf\n&gt; \n&gt; Check the last paragraph on page 1.\n&gt; \n&gt; I suspect though that fast movement in such a simulation may allow \nthe \n&gt; simulation to cheat the laws of physics somewhat because of the \nlarge \n&gt; amount of movement between timesteps, and this /may/ make a \nsolution \n&gt; easier. This is just speculation but certainly the accuracy of the \n&gt; simulation is less if the cart and poles are moving at higher \nspeeds.\n&gt; \n&gt; &gt;But if it were a real-world system we wouldn&#39;t care what the \nnetwork\n&gt; &gt;did or didn&#39;t have to compute, right?  If anything, if it could \nsolve\n&gt; &gt;the problem more effectively without extra computation, that&#39;s a \ngood\n&gt; &gt;thing.\n&gt; &gt;  \n&gt; &gt;\n&gt; Yes, I&#39;d go along with that.\n&gt; \n&gt; &gt;One of the real-world constraints we *do* care about is the \namount of\n&gt; &gt;energy the system uses.  In Risto Miikkulainen&#39;s Evolving Neural\n&gt; &gt;Networks workshop at GECCO this year he showed one of the \nresulting 2d\n&gt; &gt;pole balancing solutions that solve the problem, but would have\n&gt; &gt;consumed enormous amounts of energy if it were actually \nimplemented in\n&gt; &gt;a real-world controller.\n&gt; &gt;  \n&gt; &gt;\n&gt; &gt;So wouldn&#39;t it make more sense to penalize the amount of movement \nof\n&gt; &gt;the cart?  Wouldn&#39;t this be not only a simpler penalty to \nimplement,\n&gt; &gt;but be functionally very close to what you want to achieve?\n&gt; &gt;  \n&gt; &gt;\n&gt; This is effectively what the anti-wiigle function is doing, albeit \nin an \n&gt; inprecise way. It just totals the absolute value of the cart and \npole 1 \n&gt; velocities and positions, which are all centered around 0 and \ntries to \n&gt; minimise them. You could try just minimizing the cart velocity, or \nsome \n&gt; other combination of cart and pole variables. An alternative would \nbe to \n&gt; limit the maximum force that the network can apply, but that /may/ \nleave \n&gt; your networks stranded in local optima. On the other hand the \ncurrent \n&gt; anti-wiggle approach often tends to find high energy wiggling \nsolutions \n&gt; and then must try and find its way across the search space to an \n&gt; no-wiggling solution - which could be just as difficult.\n&gt; \n&gt; Perhaps some experimentation is required to settle this matter!\n&gt; \n&gt; Colin.\n\n\n\n"}}