{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":37465196,"authorName":"Ken Lloyd","from":"&quot;Ken Lloyd&quot; &lt;kalloyd@...&gt;","profile":"kalloyd2","replyTo":"LIST","senderId":"B4-xg5PIznoYCsc_p9urqfXGREh2QT0sNgVqjDEvXuDrPKIwY_CkbFg7cS30NU7LSegulmIrUR79lA0pVf8CbEE8l-E-p8MO","spamInfo":{"isSpam":false,"reason":"3"},"subject":"RE: [neat] Re: Evolving Coordinated Quadruped Gaits with the HyperNEAT Generative Encoding","postDate":"1234715907","msgId":4556,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwNDZGOUEzRUZFMTRFNTFCRTk5RjgyOUE2ODA5QzM1QHdhdHRwND4=","inReplyToHeader":"PGduNTU5OCsxMDNwaEBlR3JvdXBzLmNvbT4=","referencesHeader":"PDU2NDAyMzJBQTNGMjQzQURBMTg4MkZCRUQ5RkZENzgxQHdhdHRwND4gPGduNTU5OCsxMDNwaEBlR3JvdXBzLmNvbT4="},"prevInTopic":4555,"nextInTopic":4557,"prevInTime":4555,"nextInTime":4557,"topicId":4550,"numMessagesInTopic":42,"msgSnippet":"Hi Jason, The process of porting the code is an interesting (to me) discussion. The central issue (some might call pitfall) is partitioning for parallel ","rawEmail":"Return-Path: &lt;kalloyd@...&gt;\r\nX-Sender: kalloyd@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 47505 invoked from network); 15 Feb 2009 16:38:36 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m42.grp.scd.yahoo.com with QMQP; 15 Feb 2009 16:38:36 -0000\r\nX-Received: from unknown (HELO wattsys.com) (209.43.123.15)\n  by mta15.grp.scd.yahoo.com with SMTP; 15 Feb 2009 16:38:35 -0000\r\nX-Received: from wattp4 (c-76-113-124-2.hsd1.nm.comcast.net [76.113.124.2])\n\tby wattsys.com (8.11.6/8.11.6) with ESMTP id n1FGcWc32434\n\tfor &lt;neat@yahoogroups.com&gt;; Sun, 15 Feb 2009 11:38:33 -0500\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nReferences: &lt;5640232AA3F243ADA1882FBED9FFD781@wattp4&gt; &lt;gn5598+103ph@...&gt;\r\nDate: Sun, 15 Feb 2009 09:38:27 -0700\r\nMessage-ID: &lt;5046F9A3EFE14E51BE99F829A6809C35@wattp4&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_00B3_01C98F51.2D2AEA80&quot;\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5579\r\nIn-Reply-To: &lt;gn5598+103ph@...&gt;\r\nThread-Index: AcmOQBbmrr/E0SysR7G/hK412YGDLQBQafYg\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: &quot;Ken Lloyd&quot; &lt;kalloyd@...&gt;\r\nSubject: RE: [neat] Re: Evolving Coordinated Quadruped Gaits with the HyperNEAT Generative Encoding\r\nX-Yahoo-Group-Post: member; u=37465196; y=FcPLyy9E1nQPYYzgT5hSpDHzmZ3pawC2ueQAznvmwShgOB8\r\nX-Yahoo-Profile: kalloyd2\r\n\r\n\r\n------=_NextPart_000_00B3_01C98F51.2D2AEA80\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\nHi Jason,\n \nThe process of porting the code is an interesting (to me) discussion. The\ncentral issue (some might call pitfall) is partitioning for parallel\nprocessing - of tasks and data. If I were smart, I would have used NEAT to\ndiscover better partitioning patterns than I could have discovered myself.\nI didn&#39;t. But that would be an interesting experiment.\n \nHowever, the partitioning problems I saw related to three interrelated\nconcerns. 1 - Running NEAT on CUDA as a stand-alone implementation (I\ngenerate .cu code (an extension of C) from a Factory Class which is then\ncompiled by the nvcc compiler. The CUDA Kernel allows mapping between device\nmemory (GPU) and host memory (CPU) DRAM ). I will provide some sample CUDA\ncode (.cu files) that you can compile and run on a standalone\nimplementation.  Which existing experiment(s) would you like? This would\ngive you the practical implementation to study - much like what you guy&#39;s\nhave given me in C++ and C#. 2 - Running NEAT on a cluster of CUDA enabled\nservers (CUDA Roll) and integrating results. 3 - The effect of analyzing and\nrefining new information (patterns) from the NEAT solution models to the\nproblem space - which requires a Message Passing Interface through the\nnode&#39;s CPU from the computations through the GPU.  \n \nNEAT can often find an optimal solution to a given problem - simple or\ncomplex.  NEAT can also find solutions to problems in an ensemble of various\ncontexts (not equivalent to CUDA Contexts which equate to the CPU mappings).\nOften we assume that the optimal solution to one problem will translate to\nan optimum (or even adequate) solution of that problem in different contexts\n- which I found is on very shaky ground (by using HyperNEAT).\n \nNEAT on clusters produces many models, relating the genotypes to phenotypes\nand solution spaces to problem spaces!  The application of Bayesian forward\nand inverse refinement is equally important to my work in refining fitness -\nwhich is not intuitive - and in the study of the sample experiments provided\nshow that an acceptable robust generalization is sometimes different than\noptimized specific solutions.  My apologies to William of Occam (however, it\nis often the simplest BEST or CORRECT answer - if you know what is BEST or\nCORRECT - which often I don&#39;t)\n \nObviously, this is different that BLAS or FFT functions that are\ndeterministic approximations and better understood. The problem I have now\nis that I need to better understand the probabilistic nature of this\nheterogeneous system - which relates data and models.  I&#39;ll be happy to\nshare my findings with you and the NEAT forum. \n \nKen Lloyd\n\n\n  _____  \n\nFrom: neat@yahoogroups.com [mailto:neat@yahoogroups.com] On Behalf Of Jason\nGauci\nSent: Friday, February 13, 2009 6:04 PM\nTo: neat@yahoogroups.com\nSubject: [neat] Re: Evolving Coordinated Quadruped Gaits with the HyperNEAT\nGenerative Encoding\n\n\n\nI&#39;ve been thinking of adding CUDA support to my HyperNEAT\nimplementation. Can you elaborate on the process of porting the code\nto the GPU? Did you find any pitfalls and, if so, how did you resolve\nthem? One of the things I can think of offhand is that CUDA does not\nsupport 4d arrays so you can&#39;t hold a sheet of connections in a single\ntexture.\n\nJason G.\n\n--- In neat@yahoogroups. &lt;mailto:neat%40yahoogroups.com&gt; com, &quot;Ken Lloyd&quot;\n&lt;kalloyd@...&gt; wrote:\n&gt;\n&gt; Jeff,\n&gt; \n&gt; Cool! Thanks for sharing the paper and video&#39;s. I&#39;ve given the paper a\n&gt; quick read, but I really need to spend more time on it.\n&gt; \n&gt; I hope to be able to produce a paper from research we are conducting\nin a\n&gt; bio-med test environment. We are running a compute fabric on a\nLinux Rocks\n&gt; cluster implementing a CUDA Roll. HyperNEAT is implemented on the\nGPU warps\n&gt; with Bayesian forward and inverse refinement running on the CPU&#39;s\n(wefts)\n&gt; using MPI to share info.\n&gt; \n&gt; We&#39;ll see how quickly we can resolve and refine myriad patterned\nmodels from\n&gt; large datasets.\n&gt; \n&gt; Ken Lloyd\n&gt; Watt Systems Technologies\n&gt; \n&gt; \n&gt; _____ \n&gt; \n&gt; From: neat@yahoogroups. &lt;mailto:neat%40yahoogroups.com&gt; com\n[mailto:neat@yahoogroups. &lt;mailto:neat%40yahoogroups.com&gt; com] On Behalf\nOf Jeff\n&gt; Clune\n&gt; Sent: Friday, February 13, 2009 3:29 PM\n&gt; To: neat@yahoogroups. &lt;mailto:neat%40yahoogroups.com&gt; com\n&gt; Subject: [neat] Evolving Coordinated Quadruped Gaits with the HyperNEAT\n&gt; Generative Encoding\n&gt; \n&gt; \n&gt; \n&gt; Hello all-\n&gt; \n&gt; Ever since I first understood HyperNEAT I have wanted to see how it\nwould\n&gt; perform at controlling legged robots.\n&gt; \n&gt; A paper I wrote on that subject was just accepted, so I can share it\nwith\n&gt; you now. \n&gt; \n&gt; A copy of the paper, and videos of the simulated robots, can be obtained\n&gt; here:\n&gt; \n&gt; http://devolab.\n&gt;\n&lt;http://devolab.\n&lt;http://devolab.msu.edu/SupportDocs/EvolvingCoordinatedGaitsWithHyperNEAT&gt;\nmsu.edu/SupportDocs/EvolvingCoordinatedGaitsWithHyperNEAT&gt;\n&gt; msu.edu/SupportDocs/EvolvingCoordinatedGaitsWithHyperNEAT\n&gt; \n&gt; I hope you find it interesting. Please let me know what you think,\nor if you\n&gt; have any questions.\n&gt; \n&gt; Here is the cite and abstract:\n&gt; \n&gt; Clune, J., Beckmann, B. E., Ofria, C., & Pennock, R. T.\n&gt; Evolving coordinated gaits with the HyperNEAT generative encoding.\n&gt; \n&gt; Proceedings of the IEEE Congress on Evolutionary Computing Special\nSection\n&gt; on Evolutionary Robotics, 2009. Trondheim, Norway. To appear.\n&gt; \n&gt; Legged robots show promise for complex mobility tasks, such as\nnavigating\n&gt; rough terrain, but the design of their control software is both\nchallenging\n&gt; and laborious. Traditional evolutionary algorithms can produce these\n&gt; controllers, but require manual decomposition or other problem\n&gt; simplification because conventionally-used direct encodings have trouble\n&gt; taking advantage of a problem&#39;s regularities and symmetries. Such active\n&gt; intervention is time consuming, limits the range of potential\nsolutions, and\n&gt; requires the user to possess a deep understanding of the problem&#39;s\n&gt; structure. This paper demonstrates that HyperNEAT, a new and promising\n&gt; generative encoding for evolving neural networks, can evolve\nquadruped gaits\n&gt; without manually decomposing the problem. Analyses suggest that\nHyperNEAT is\n&gt; successful because it employs a generative encoding that can more easily\n&gt; reuse phenotypic modules. It is also one of the first neuroevolutionary\n&gt; algorithms that exploits a problem&#39;s geometric symmetries, which may\naid its\n&gt; performance. We compare HyperNEAT to FT-NEAT, a direct encoding\ncontrol, and\n&gt; find that HyperNEAT is able to evolve impressive quadruped gaits and\nvastly\n&gt; outperforms FT-NEAT. Comparative analyses reveal that HyperNEAT\nindividuals\n&gt; are more holistically affected by genetic operators, resulting in better\n&gt; coordination of the quadruped&#39;s legs. Overall, the results suggest that\n&gt; HyperNEAT is a powerful algorithm for evolving control systems for\ncomplex,\n&gt; yet regular, devices, such as robots.\n&gt; \n&gt; Cheers,\n&gt; Jeff Clune\n&gt; \n&gt; Digital Evolution Lab, Michigan State University\n&gt; \n&gt; jclune@... &lt;mailto:jclune%40msu.edu&gt;\n&gt;\n\n\n\n\n\n\r\n------=_NextPart_000_00B3_01C98F51.2D2AEA80\r\nContent-Type: text/html;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.=\r\nw3c.org/TR/1999/REC-html401-19991224/loose.dtd&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;\n&lt;META http-eq=\r\nuiv=3DContent-Type content=3D&quot;text/html; charset=3Dus-ascii&quot;&gt;\n&lt;META content=\r\n=3D&quot;MSHTML 6.00.6000.16809&quot; name=3DGENERATOR&gt;&lt;/HEAD&gt;\n&lt;BODY style=3D&quot;BACKGRO=\r\nUND-COLOR: #ffffff&quot;&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=\r\n=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;Hi Jason,&lt;/SPAN&gt;&lt;/FON=\r\nT&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff siz=\r\ne=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=\r\n=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclas=\r\ns=3D921172615-15022009&gt;The process of porting the code is an interesting (t=\r\no \nme) discussion.&nbsp;The central issue (some might call pitfall)&nbsp;is=\r\n \npartitioning for parallel processing - of&nbsp;tasks and data.&nbsp;If I =\r\nwere \nsmart, I would have used NEAT to discover better partitioning&nbsp;pa=\r\ntterns than \nI could have discovered myself.&nbsp; I didn&#39;t. But that would=\r\n be \nan&nbsp;interesting experiment.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr ali=\r\ngn=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172=\r\n615-15022009&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT f=\r\nace=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;Howe=\r\nver, the partitioning problems I saw related to \nthree interrelated&nbsp;co=\r\nncerns. 1 - Running NEAT on&nbsp;CUDA as a stand-alone \nimplementation (I g=\r\nenerate .cu code (an extension of C)&nbsp;from a Factory \nClass&nbsp;which =\r\nis then&nbsp;compiled by the&nbsp;nvcc compiler. The CUDA \nKernel allows ma=\r\npping between device memory (GPU) and host memory (CPU) \nDRAM&nbsp;). &lt;FONT=\r\n face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;I =\r\nwill provide some sample CUDA code (.cu files) that \nyou can compile and ru=\r\nn on a standalone implementation.&nbsp; Which existing \nexperiment(s) would=\r\n you like? This would give you the practical implementation \nto study - muc=\r\nh like what you guy&#39;s have given me in C++ and C#. \n&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/=\r\nFONT&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-1=\r\n5022009&gt;2 - Running NEAT on a cluster of CUDA enabled servers \n(CUDA Roll)&=\r\nnbsp;and integrating results. 3 - The effect of analyzing and \nrefining new=\r\n&nbsp;information (patterns)&nbsp;from the NEAT solution models to \nthe pro=\r\nblem space - which requires a Message Passing Interface through the \nnode&#39;s=\r\n&nbsp;CPU from the computations&nbsp;through the GPU.&nbsp; \n&lt;/SPAN&gt;&lt;/FONT&gt;=\r\n&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=\r\n=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=\r\n=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclas=\r\ns=3D921172615-15022009&gt;NEAT can often&nbsp;find an optimal solution to a gi=\r\nven \nproblem - simple or complex.&nbsp; NEAT can also find solutions to pro=\r\nblems in \nan ensemble of various contexts (not equivalent to CUDA&nbsp;Cont=\r\nexts which \nequate to the CPU mappings).&nbsp; Often we assume that the opt=\r\nimal solution to \none problem will translate to&nbsp;an optimum (or even ad=\r\nequate)&nbsp;solution \nof that problem in different contexts - which I foun=\r\nd is on very shaky ground \n(by using HyperNEAT).&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV d=\r\nir=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \ncl=\r\nass=3D921172615-15022009&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3D=\r\nleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-1=\r\n5022009&gt;NEAT on clusters&nbsp;produces many models, relating \nthe genotypes=\r\n to&nbsp;phenotypes&nbsp;and solution spaces to problem \nspaces!&nbsp; The =\r\napplication of Bayesian forward and inverse refinement is \nequally importan=\r\nt to my work in refining fitness - which is not intuitive - and \nin the stu=\r\ndy of the sample experiments provided show that an \nacceptable&nbsp;robust =\r\ngeneralization is sometimes different than optimized \nspecific solutions.&n=\r\nbsp; My apologies to William of Occam (however, it is often \nthe simplest B=\r\nEST or CORRECT&nbsp;answer - if you know what is BEST or CORRECT - \nwhich o=\r\nften I don&#39;t)&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT face=3D=\r\nArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;&lt;/SPAN&gt;&lt;/F=\r\nONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#00=\r\n00ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009&gt;Obviously, this is differen=\r\nt that BLAS or FFT functions \nthat are deterministic&nbsp;approximations an=\r\nd&nbsp;better understood. The \nproblem I have now is that I need to better =\r\nunderstand the probabilistic nature \nof this heterogeneous system&nbsp;- wh=\r\nich relates&nbsp;data and \nmodels.&nbsp;&nbsp;I&#39;ll be happy to share my fin=\r\ndings with you and the NEAT \nforum.&nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dlt=\r\nr align=3Dleft&gt;&lt;FONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D9=\r\n21172615-15022009&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;F=\r\nONT face=3DArial color=3D#0000ff size=3D2&gt;&lt;SPAN \nclass=3D921172615-15022009=\r\n&gt;Ken Lloyd&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;BR&gt;\n&lt;BLOCKQUOTE dir=3Dltr \nstyle=3D&quot;PADDING-=\r\nLEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #0000ff 2px solid; MARGIN-RIGHT: =\r\n0px&quot;&gt;\n  &lt;DIV class=3DOutlookMessageHeader lang=3Den-us dir=3Dltr align=3Dle=\r\nft&gt;\n  &lt;HR tabIndex=3D-1&gt;\n  &lt;FONT face=3DTahoma size=3D2&gt;&lt;B&gt;From:&lt;/B&gt; neat@y=\r\nahoogroups.com \n  [mailto:neat@yahoogroups.com] &lt;B&gt;On Behalf Of &lt;/B&gt;Jason G=\r\nauci&lt;BR&gt;&lt;B&gt;Sent:&lt;/B&gt; \n  Friday, February 13, 2009 6:04 PM&lt;BR&gt;&lt;B&gt;To:&lt;/B&gt; \n  =\r\nneat@yahoogroups.com&lt;BR&gt;&lt;B&gt;Subject:&lt;/B&gt; [neat] Re: Evolving Coordinated \n  =\r\nQuadruped Gaits with the HyperNEAT Generative Encoding&lt;BR&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/DIV&gt;=\r\n\n  &lt;DIV&gt;&lt;/DIV&gt;\n  &lt;DIV id=3Dygrp-text&gt;\n  &lt;P&gt;I&#39;ve been thinking of adding CUD=\r\nA support to my \n  HyperNEAT&lt;BR&gt;implementation. Can you elaborate on the pr=\r\nocess of porting the \n  code&lt;BR&gt;to the GPU? Did you find any pitfalls and, =\r\nif so, how did you \n  resolve&lt;BR&gt;them? One of the things I can think of off=\r\nhand is that CUDA does \n  not&lt;BR&gt;support 4d arrays so you can&#39;t hold a shee=\r\nt of connections in a \n  single&lt;BR&gt;texture.&lt;BR&gt;&lt;BR&gt;Jason G.&lt;BR&gt;&lt;BR&gt;--- In &lt;=\r\nA \n  href=3D&quot;mailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.&lt;WBR&gt;com&lt;/A&gt;, =\r\n&quot;Ken \n  Lloyd&quot; &lt;kalloyd@...&lt;WBR&gt;&gt; wrote:&lt;BR&gt;&gt;&lt;BR&gt;&gt; Jeff,&lt;BR&gt;&gt=\r\n; &lt;BR&gt;&gt; \n  Cool! Thanks for sharing the paper and video&#39;s. I&#39;ve given th=\r\ne paper a&lt;BR&gt;&gt; \n  quick read, but I really need to spend more time on it=\r\n.&lt;BR&gt;&gt; &lt;BR&gt;&gt; I \n  hope to be able to produce a paper from research we=\r\n are conducting&lt;BR&gt;in \n  a&lt;BR&gt;&gt; bio-med test environment. We are running=\r\n a compute fabric on \n  a&lt;BR&gt;Linux Rocks&lt;BR&gt;&gt; cluster implementing a CUD=\r\nA Roll. HyperNEAT is \n  implemented on the&lt;BR&gt;GPU warps&lt;BR&gt;&gt; with Bayesi=\r\nan forward and inverse \n  refinement running on the CPU&#39;s&lt;BR&gt;(wefts)&lt;BR&gt;&gt=\r\n; using MPI to share \n  info.&lt;BR&gt;&gt; &lt;BR&gt;&gt; We&#39;ll see how quickly we can=\r\n resolve and refine myriad \n  patterned&lt;BR&gt;models from&lt;BR&gt;&gt; large datase=\r\nts.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Ken \n  Lloyd&lt;BR&gt;&gt; Watt Systems Technologies&lt;BR&gt;&gt;=\r\n &lt;BR&gt;&gt; &lt;BR&gt;&gt; _____ \n  &lt;BR&gt;&gt; &lt;BR&gt;&gt; From: &lt;A \n  href=3D&quot;mailto:ne=\r\nat%40yahoogroups.com&quot;&gt;neat@yahoogroups.&lt;WBR&gt;com&lt;/A&gt; [mailto:&lt;A \n  href=3D&quot;m=\r\nailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.&lt;WBR&gt;com&lt;/A&gt;] On \n  Behalf&lt;B=\r\nR&gt;Of Jeff&lt;BR&gt;&gt; Clune&lt;BR&gt;&gt; Sent: Friday, February 13, 2009 3:29 \n  PM&lt;=\r\nBR&gt;&gt; To: &lt;A \n  href=3D&quot;mailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.&lt;=\r\nWBR&gt;com&lt;/A&gt;&lt;BR&gt;&gt; \n  Subject: [neat] Evolving Coordinated Quadruped Gaits=\r\n with the \n  HyperNEAT&lt;BR&gt;&gt; Generative Encoding&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt=\r\n; &lt;BR&gt;&gt; Hello \n  all-&lt;BR&gt;&gt; &lt;BR&gt;&gt; Ever since I first understood Hyp=\r\nerNEAT I have wanted to \n  see how it&lt;BR&gt;would&lt;BR&gt;&gt; perform at controlli=\r\nng legged robots.&lt;BR&gt;&gt; \n  &lt;BR&gt;&gt; A paper I wrote on that subject was j=\r\nust accepted, so I can share \n  it&lt;BR&gt;with&lt;BR&gt;&gt; you now. &lt;BR&gt;&gt; &lt;BR&gt;&g=\r\nt; A copy of the paper, and videos \n  of the simulated robots, can be obtai=\r\nned&lt;BR&gt;&gt; here:&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;A \n  href=3D&quot;http://devolab.&quot;&gt;http://de=\r\nvolab.&lt;/A&gt;&lt;BR&gt;&gt;&lt;BR&gt;&lt;&lt;A \n  href=3D&quot;http://devolab.msu.edu/SupportDocs/=\r\nEvolvingCoordinatedGaitsWithHyperNEAT&quot;&gt;http://devolab.&lt;WBR&gt;msu.edu/SupportD=\r\n&lt;WBR&gt;ocs/EvolvingCoor&lt;WBR&gt;dinatedGaitsWith&lt;WBR&gt;HyperNEAT&lt;/A&gt;&gt;&lt;BR&gt;&gt; \n =\r\n msu.edu/SupportDocs&lt;WBR&gt;/EvolvingCoordin&lt;WBR&gt;atedGaitsWithHyp&lt;WBR&gt;erNEAT&lt;B=\r\nR&gt;&gt; \n  &lt;BR&gt;&gt; I hope you find it interesting. Please let me know what =\r\nyou \n  think,&lt;BR&gt;or if you&lt;BR&gt;&gt; have any questions.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Her=\r\ne is the \n  cite and abstract:&lt;BR&gt;&gt; &lt;BR&gt;&gt; Clune, J., Beckmann, B. E.,=\r\n Ofria, C., \n  &amp; Pennock, R. T.&lt;BR&gt;&gt; Evolving coordinated gaits with=\r\n the HyperNEAT \n  generative encoding.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Proceedings of the =\r\nIEEE Congress on \n  Evolutionary Computing Special&lt;BR&gt;Section&lt;BR&gt;&gt; on Ev=\r\nolutionary Robotics, \n  2009. Trondheim, Norway. To appear.&lt;BR&gt;&gt; &lt;BR&gt;&gt=\r\n; Legged robots show \n  promise for complex mobility tasks, such as&lt;BR&gt;navi=\r\ngating&lt;BR&gt;&gt; rough \n  terrain, but the design of their control software i=\r\ns \n  both&lt;BR&gt;challenging&lt;BR&gt;&gt; and laborious. Traditional evolutionary al=\r\ngorithms \n  can produce these&lt;BR&gt;&gt; controllers, but require manual decom=\r\nposition or \n  other problem&lt;BR&gt;&gt; simplification because conventionally-=\r\n&lt;WBR&gt;used direct \n  encodings have trouble&lt;BR&gt;&gt; taking advantage of a pr=\r\noblem&#39;s regularities \n  and symmetries. Such active&lt;BR&gt;&gt; intervention is=\r\n time consuming, limits the \n  range of potential&lt;BR&gt;solutions, and&lt;BR&gt;&gt;=\r\n requires the user to possess a \n  deep understanding of the problem&#39;s&lt;BR&gt;&=\r\ngt; structure. This paper demonstrates \n  that HyperNEAT, a new and promisi=\r\nng&lt;BR&gt;&gt; generative encoding for evolving \n  neural networks, can evolve&lt;=\r\nBR&gt;quadruped gaits&lt;BR&gt;&gt; without manually \n  decomposing the problem. Ana=\r\nlyses suggest that&lt;BR&gt;HyperNEAT is&lt;BR&gt;&gt; \n  successful because it employs=\r\n a generative encoding that can more \n  easily&lt;BR&gt;&gt; reuse phenotypic mod=\r\nules. It is also one of the first \n  neuroevolutionary&lt;BR&gt;&gt; algorithms t=\r\nhat exploits a problem&#39;s geometric \n  symmetries, which may&lt;BR&gt;aid its&lt;BR&gt;&=\r\ngt; performance. We compare HyperNEAT to \n  FT-NEAT, a direct encoding&lt;BR&gt;c=\r\nontrol, and&lt;BR&gt;&gt; find that HyperNEAT is able \n  to evolve impressive qua=\r\ndruped gaits and&lt;BR&gt;vastly&lt;BR&gt;&gt; outperforms \n  FT-NEAT. Comparative anal=\r\nyses reveal that HyperNEAT&lt;BR&gt;individuals&lt;BR&gt;&gt; are \n  more holistically =\r\naffected by genetic operators, resulting in better&lt;BR&gt;&gt; \n  coordination =\r\nof the quadruped&#39;s legs. Overall, the results suggest \n  that&lt;BR&gt;&gt; Hyper=\r\nNEAT is a powerful algorithm for evolving control systems \n  for&lt;BR&gt;complex=\r\n,&lt;BR&gt;&gt; yet regular, devices, such as robots.&lt;BR&gt;&gt; &lt;BR&gt;&gt; \n  Cheers,=\r\n&lt;BR&gt;&gt; Jeff Clune&lt;BR&gt;&gt; &lt;BR&gt;&gt; Digital Evolution Lab, Michigan \n  Sta=\r\nte University&lt;BR&gt;&gt; &lt;BR&gt;&gt; jclune@... \n  &lt;mailto:jclune%&lt;WBR&gt;40msu.e=\r\ndu&gt;&lt;BR&gt;&gt;&lt;BR&gt;&lt;BR&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;!--End group email --&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_00B3_01C98F51.2D2AEA80--\r\n\n"}}