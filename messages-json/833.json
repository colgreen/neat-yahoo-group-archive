{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"m1fKpk51oeBFagAu_VI8xV1XRlYfa2tw3qOzoUZV-mH_VkUosk6aozCS2Sf6RYUt65Ng7l76dGHqB83aao_4qV9q2z92O6hcCVE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] discreet memory","postDate":"1085430398","msgId":833,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUuMS4wLjE0LjAuMjAwNDA1MjQyMTE2MDguMDBhODhlYTBAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PDIwMDQwNTIxMTcxMTQ2LjQ3OTg3LnFtYWlsQHdlYjYwODA4Lm1haWwueWFob28uY29tPg==","referencesHeader":"PDYuMS4wLjYuMC4yMDA0MDUyMTE0MDcxNC4wMjRmY2YwOEBwb3AubWFpbC55YWhvby5jby51az4="},"prevInTopic":821,"nextInTopic":840,"prevInTime":832,"nextInTime":834,"topicId":807,"numMessagesInTopic":8,"msgSnippet":"... This is very interesting experimental design.  Did you also consider inputting the start sequence with indices (e.g. M inputs for data and N inputs for","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 98595 invoked from network); 24 May 2004 20:25:53 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m3.grp.scd.yahoo.com with QMQP; 24 May 2004 20:25:53 -0000\r\nReceived: from unknown (HELO cmailg2.svr.pol.co.uk) (195.92.195.172)\n  by mta5.grp.scd.yahoo.com with SMTP; 24 May 2004 20:25:53 -0000\r\nReceived: from modem-128.orangutan.dialup.pol.co.uk ([217.135.224.128] helo=giles.yahoo.co.uk)\n\tby cmailg2.svr.pol.co.uk with esmtp (Exim 4.14)\n\tid 1BSM19-0003IE-6Q\n\tfor neat@yahoogroups.com; Mon, 24 May 2004 21:25:51 +0100\r\nMessage-Id: &lt;5.1.0.14.0.20040524211608.00a88ea0@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 5.1\r\nDate: Mon, 24 May 2004 21:26:38 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;20040521171146.47987.qmail@...&gt;\r\nReferences: &lt;6.1.0.6.0.20040521140714.024fcf08@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 195.92.195.172\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] discreet memory\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\n\n&gt;The inputs will be a sequence of N random binary\n&gt;patterns of M bits each.  N & M will be parameters and\n&gt;we will begin with very small values, then raise them.\n&gt;  The patterns will be presented sequentially, i.e.,\n&gt;not simultaneously.  There is at least one additional\n&gt;input which is a control input to let the net know\n&gt;that the sequence has ended.  Hence there are M+1\n&gt;binary inputs.  After the sequence has ended then the\n&gt;net is expected to repeat it.  Don&#39;t forget that a\n&gt;recurrent ANN can be a signal generator; that&#39;s what\n&gt;is supposed to happen here.  The ANN will generate a\n&gt;sequence of outputs that is supposed to reproduce the\n&gt;input sequence.\n&gt;\n&gt;There are also M+1 outputs.  M of these are supposed\n&gt;to replicate one of the input patterns during the\n&gt;&quot;recall&quot; phase.  The other output is a &quot;ready&quot; line\n&gt;indicating that the output is valid or that the net\n&gt;has completed its processing.  During the initial\n&gt;presentation of the sequence the ready output is used\n&gt;to indicate that the net is ready to accept the next\n&gt;pattern.  The other outputs are ignored during this\n&gt;phase.  In the second, or &quot;recall&quot; phase, the ready\n&gt;output signals that the pattern is ready to be read\n&gt;from the pattern outputs.\n\nThis is very interesting experimental design.  Did you also consider \ninputting the start sequence with indices (e.g. M inputs for data and N \ninputs for &quot;address&quot; -- probably just setting one address-line high, not \nfull binary numbers) and then ask for the data back by repeating the \naddress sequence.\n\nOne other question, you say start small and scale up, but to get back to a \nthread from a couple of weeks ago, do you have any way of carrying progress \nover from a net evolved for small examples to larger ones?\n\n&gt;This is very similar to what is done by my 4Play\n&gt;program, except 4Play did more complex logic than just\n&gt;repeating memorize values.\n\nI&#39;d say this was asking for a more complex net, however...\n\nIan Badcoe\n\n\n\nhttp://livingathome.sourceforge.net/ - evolution for the desktop\n\n\n\n"}}