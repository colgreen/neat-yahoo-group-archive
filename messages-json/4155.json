{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":230385553,"authorName":"Cesar G. Miguel","from":"&quot;Cesar G. Miguel&quot; &lt;cesar.gomes@...&gt;","profile":"fdital","replyTo":"LIST","senderId":"KsTz6NEHtUr2RUNlLEM0HhBwhB67JG8hzJ9J15d4UxfBBi8HWL5ODlwwaToeeejIuroPoFRrBhcp2K66bhGk8TK_d4RbOS_pZP5JUdDUFaU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] NEAT Python?","postDate":"1214260053","msgId":4155,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRkZjEwMDc4MDgwNjIzMTUyN3ExMmRjMmVjMng4OGJlYWJiYmQ1ODQ5OWEwQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGczb29ncCs0dTltQGVHcm91cHMuY29tPg==","referencesHeader":"PGRkZjEwMDc4MDgwNjE5MDgyMHcxODFhZTVlZHUxNzY4M2FiOGE3NGM2NDdmQG1haWwuZ21haWwuY29tPgkgPGczb29ncCs0dTltQGVHcm91cHMuY29tPg=="},"prevInTopic":4151,"nextInTopic":4156,"prevInTime":4154,"nextInTime":4156,"topicId":4146,"numMessagesInTopic":12,"msgSnippet":"Hi Ken, ... We started our own Python implementation because we felt that s easier to extend and develop. I ve also taken a look at PyNEAT (another older NEAT","rawEmail":"Return-Path: &lt;cesar.gomes@...&gt;\r\nX-Sender: cesar.gomes@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 53083 invoked from network); 23 Jun 2008 22:27:34 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m43.grp.scd.yahoo.com with QMQP; 23 Jun 2008 22:27:34 -0000\r\nX-Received: from unknown (HELO wr-out-0506.google.com) (64.233.184.229)\n  by mta16.grp.scd.yahoo.com with SMTP; 23 Jun 2008 22:27:34 -0000\r\nX-Received: by wr-out-0506.google.com with SMTP id c46so2090939wra.18\n        for &lt;neat@yahoogroups.com&gt;; Mon, 23 Jun 2008 15:27:33 -0700 (PDT)\r\nX-Received: by 10.90.71.15 with SMTP id t15mr10663831aga.109.1214260053543;\n        Mon, 23 Jun 2008 15:27:33 -0700 (PDT)\r\nX-Received: by 10.90.94.4 with HTTP; Mon, 23 Jun 2008 15:27:33 -0700 (PDT)\r\nMessage-ID: &lt;ddf100780806231527q12dc2ec2x88beabbbd58499a0@...&gt;\r\nDate: Mon, 23 Jun 2008 19:27:33 -0300\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;g3oogp+4u9m@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;ddf100780806190820w181ae5edu17683ab8a74c647f@...&gt;\n\t &lt;g3oogp+4u9m@...&gt;\r\nX-Google-Sender-Auth: b97804ab7a3bb2bb\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nX-eGroups-From: &quot;Cesar G. Miguel&quot; &lt;cesargm@...&gt;\r\nFrom: &quot;Cesar G. Miguel&quot; &lt;cesar.gomes@...&gt;\r\nSubject: Re: [neat] NEAT Python?\r\nX-Yahoo-Group-Post: member; u=230385553; y=BMvAzx6bto0at3vyhbJ2fGhBOpREm88s-0QIyA26mz3L\r\nX-Yahoo-Profile: fdital\r\n\r\nHi Ken,\n\n&gt; Could you tell me a little more about your NEAT Python project? I\n&gt; have heard a bit about it but I don&#39;t know what it&#39;s being used for or\n&gt; whether it is intended to be a general-purpose tool for the public?\n\nWe started our own Python implementation because we felt that&#39;s easier\nto extend and develop. I&#39;ve also taken a look at PyNEAT (another older\nNEAT Python version) but I couldn&#39;t make it work. It seems that it&#39;s\nnot being developed any longer.\n\nOur version is closely based on your C++ sources and the great\nSimmerson&#39;s Java version. But our approach was a modular one. Well,\nany OOP based version is modular enough, but we&#39;ve tried to separate\nthe concept of the experiment from the main code, meaning that you\nbasically need to import the libraries, specify the config parameters\nand write a fitness function.\n\nAlthough everything seems to be working (including the XOR example),\nit&#39;s not &quot;officially&quot; released since I need to finish the FAQ and add\na basic tutorial. But it&#39;s rather simple to checkout from the SVN\nrepository and play with the XOR example. The only requirement is\nPython 2.5 (you still need some other libraries in order to plot the\nresults).\n\nThe NEAT-Python project URL is: http://code.google.com/p/neat-python\n(licensed under GPLv3)\n\nThe name &quot;NEAT-Python&quot; is not a a very good one, I&#39;d really like to\nhave something similar to PyNEAT, but that&#39;s already taken.\nSuggestions are welcome!\n\nBy the way, Peter B. has been working with NEAT-Python for a while now\n(he&#39;s on this group).\n\n&gt; If so, would you like me to link it from the NEAT Users page and my\n&gt; homepage?\n\nSure, that will help the project to reach a wider audience :-)\n\nThanks,\nCesar\n\n&gt; --- In neat@yahoogroups.com, &quot;Cesar G. Miguel&quot; &lt;cesar.gomes@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; Derek,\n&gt;&gt;\n&gt;&gt; A friend of mine has implemented an InF module (as well as the\n&gt;&gt; Izhikevich spiking model) for our NEAT Python project. I&#39;m not very\n&gt;&gt; familiar with them, but she&#39;s been working with these models in her\n&gt;&gt; research.\n&gt;&gt;\n&gt;&gt; You can browse the source code of our project here:\n&gt;&gt; http://code.google.com/p/neat-python/source/browse -- what you want is\n&gt;&gt; in /trunk/neat/ifnn. The code is a mix of Python and C++, but there is\n&gt;&gt; a &quot;pure python&quot; version of the InF and some C++ bindings. You can\n&gt;&gt; easily understand the sources since Python is &quot;almost&quot; like\n&gt;&gt; pseudo-code :-)\n&gt;&gt;\n&gt;&gt; Hope it helps!\n&gt;&gt;\n&gt;&gt; Cesar\n&gt;&gt;\n&gt;&gt; On Thu, Jun 19, 2008 at 1:45 AM, Derek James &lt;djames@...&gt; wrote:\n&gt;&gt; &gt; Hey all,\n&gt;&gt; &gt;\n&gt;&gt; &gt; I&#39;ve just recently started working with leaky integrate-and-fire (LIF)\n&gt;&gt; &gt; neurons, and since I don&#39;t have any prior experience with them and I&#39;m\n&gt;&gt; &gt; relying on written resources, I thought I&#39;d post a quick question here\n&gt;&gt; &gt; to see if anybody else had done much work with them. I have a few\n&gt;&gt; &gt; questions regarding their implementation, as well as spike-time\n&gt;&gt; &gt; dependent plasticity (STDP).\n&gt;&gt; &gt;\n&gt;&gt; &gt; We&#39;ve got almost 400 members now in the group...anybody have any\n&gt;&gt; &gt; experience implementing these things?\n&gt;&gt; &gt;\n&gt;&gt; &gt; Thanks,\n&gt;&gt; &gt; Derek\n&gt;&gt;\n&gt;\n&gt; \n\n\n\n-- \n::: Entropy:\nNot just a fad, it&#39;s the future.\n\n"}}