{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115403844,"authorName":"John Arrowwood","from":"&quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;","profile":"jarrowwx","replyTo":"LIST","senderId":"SNzdmm7AjrGyJOu8skPXFd20GHSuPXcBM0NhnF63KmDcSqDPL5volgeER-3jFatWtgZQ1S6GEHuS_PJUcCic6LR7l9DEHmRf0YkyZyp9","spamInfo":{"isSpam":false,"reason":"0"},"subject":"IEX update...to version 2...in test","postDate":"1089877625","msgId":1208,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTItRjE5R2txaFprMU1YcTQwMDA3MDc3YkBob3RtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":1209,"prevInTime":1207,"nextInTime":1209,"topicId":1208,"numMessagesInTopic":2,"msgSnippet":"All, This is mostly an FYI, for those that might be interested. I ve completely re-written most of my image enlargement experiment code. It s still under test,","rawEmail":"Return-Path: &lt;jarrowwx@...&gt;\r\nX-Sender: jarrowwx@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 1884 invoked from network); 15 Jul 2004 07:47:18 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m22.grp.scd.yahoo.com with QMQP; 15 Jul 2004 07:47:18 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.247.19)\n  by mta4.grp.scd.yahoo.com with SMTP; 15 Jul 2004 07:47:18 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Thu, 15 Jul 2004 00:47:06 -0700\r\nReceived: from 67.170.177.71 by by2fd.bay2.hotmail.msn.com with HTTP;\n\tThu, 15 Jul 2004 07:47:05 GMT\r\nX-Originating-Email: [jarrowwx@...]\r\nX-Sender: jarrowwx@...\r\nTo: neat@yahoogroups.com\r\nBcc: \r\nDate: Thu, 15 Jul 2004 00:47:05 -0700\r\nMime-Version: 1.0\r\nContent-Type: text/plain; format=flowed\r\nMessage-ID: &lt;BAY2-F19GkqhZk1MXq40007077b@...&gt;\r\nX-OriginalArrivalTime: 15 Jul 2004 07:47:06.0024 (UTC) FILETIME=[ECB8E280:01C46A3F]\r\nX-eGroups-Remote-IP: 65.54.247.19\r\nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\r\nReply-To: john@...\r\nSubject: IEX update...to version 2...in test\r\nX-Yahoo-Group-Post: member; u=115403844\r\nX-Yahoo-Profile: jarrowwx\r\n\r\nAll,\n\nThis is mostly an FYI, for those that might be interested.\n\nI&#39;ve completely re-written most of my image enlargement experiment code.  \nIt&#39;s still under test, but the improvements are phenomenal.  I eliminated \ntons of stuff:\n\n- instead of the server generating source code customized for each sample, \nit generates code once per generation, and that code has extra code that \ntakes care of doing the pre-calculation of the static portions of each \nnetwork.  That code is orders of magnitude bigger, though, so it&#39;s good that \nit is only being transferred across the network once per generation.  If you \nwant an idea of what that code looks like, grab \nhttp://www.hanlonsrazor.com:81/neat/iex2/iex_evaluate.bz2.  As a result of \nthis, the server goes from 90% busy and barely able to keep up with existing \nclients to virtually idle except during epochs.  So now, it can also be an \neffective client, too.\n\n- the client is re-writen and uses a makefile so that only if the generation \nchanges between iterations of the loop will a recompile take place.\n\n- instead of decompressing a jpeg for every sample, I pre-decompressed every \njpeg in my archive and created an image cache.  Much more disk space that \nway, but a whole lot faster access for extracting test samples.\n\n- the test sample extractor is written in C.  And it is very minimalistic, \nso that it can do the work it needs to do with the absolute minimum of CPU \ntime.\n\n- instead of passing a bunch of source code for each sample, I actually \ntransfer the sample bits, in binary, compressed with bzip2.\n\n- the work-packet size has been increased.  Instead of taking one image \nsample and making 16 work packets out of it (rotated/mirrored/inverted \nversions of the original), the client now takes care of that.  The returned \nfitness value per network represents the average fitness for all 16 \nvariations of the sample.\n\n- the fitness evaluation now has a short-circuit feature that helps keep the \nnumber of activations down.  Worst case, there are 1005720 activations per \nnetwork, times 500 networks, times 16 sample variations, or over 8 billion \nactivations.  Exactly how many actually happen per packet varies, but it is \nsignificantly less.  I&#39;m tracking exactly how many.\n\n- I&#39;ve changed/improved/added to the stuff that I&#39;m tracking and logging and \nhow I go about it.  The reports should be more accurate.  Once they are \nwritten, that is...\n\nWhich brings me to the stuff still to do:\n\n* leave my server running as the only client for a while, to make sure that \nit doesn&#39;t have a bunch of errors, and it seems to make progress, etc.\n\n* re-create the various graphs and make new ones that report on the other \ninfo I&#39;m tracking\n\nAll told, it&#39;s a very significant improvement.  I&#39;ll let you know when it \ngoes live.\n\n-- John\n\n\n\n"}}