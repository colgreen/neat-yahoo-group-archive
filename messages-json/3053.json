{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"rgNh_WuE-F2vlrUeSow3BE_S1sVERN5CsRJz4by0pCgrKAWguFWkKMSaZ7WflSFwVUGWOOzv2NqoYohwBFa8rHxL9vuh18LVR2PwIn46Z6Mn1SmkqBQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: HyperNEAT: Creating Neural Networks with CPPNs","postDate":"1175033086","msgId":3053,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGV1YzRkdSt1NW5iQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDIxMzM1NTE3NTAxODU4QG1haWwuaWRuZXQubmV0LnVrPg=="},"prevInTopic":3052,"nextInTopic":3054,"prevInTime":3052,"nextInTime":3054,"topicId":3028,"numMessagesInTopic":34,"msgSnippet":"May I note something about it? ... It is important where this mutation occurs. If the CPPN s connections go to a linear node that does just a multiplication","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 83455 invoked from network); 27 Mar 2007 22:05:44 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m31.grp.scd.yahoo.com with QMQP; 27 Mar 2007 22:05:44 -0000\r\nReceived: from unknown (HELO n25.bullet.sp1.yahoo.com) (209.131.38.225)\n  by mta5.grp.scd.yahoo.com with SMTP; 27 Mar 2007 22:05:44 -0000\r\nReceived: from [216.252.122.217] by n25.bullet.sp1.yahoo.com with NNFMP; 27 Mar 2007 22:04:47 -0000\r\nReceived: from [209.73.164.86] by t2.bullet.sp1.yahoo.com with NNFMP; 27 Mar 2007 22:04:47 -0000\r\nReceived: from [66.218.66.78] by t8.bullet.scd.yahoo.com with NNFMP; 27 Mar 2007 22:04:47 -0000\r\nDate: Tue, 27 Mar 2007 22:04:46 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;euc4du+u5nb@...&gt;\r\nIn-Reply-To: &lt;21335517501858@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: HyperNEAT: Creating Neural Networks with CPPNs\r\nX-Yahoo-Group-Post: member; u=283334584; y=0m2iJt8ttCatyMJdhRwMKz5wbACiOOSSvFFQo1hqEavJtbzV2k_USx4zcw\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nMay I note something about it? \n\n&gt; if we mutate part of the CPPN to produce=\r\n a \n&gt; duplication of a previously existing structure:\n&gt; \n&gt; sin(x) -&gt; sin(2 =\r\n* x)\n&gt; \n&gt; Then we need to separately do the same thing to the other parts o=\r\nf \n&gt; the CPPN that also want to reference that structure.\n\nIt is important =\r\nwhere this mutation occurs. If the CPPN&#39;s connections \ngo to a linear node =\r\nthat does just a multiplication and then feeds \nthe output to the sin(x) no=\r\nde, it&#39;s just the same. I may be wrong in \nthis, but the weight of the conn=\r\nection itself does the multiplication \nof x.. \n\nAnd don&#39;t forget about spec=\r\niation, which preserves new genomes to \nhave time to optimize their structu=\r\nre. \n\n\n--- In neat@yahoogroups.com, Ian Badcoe &lt;ian_badcoe@...&gt; wrote:\n&gt;\n&gt; =\r\nHi,\n&gt; \tKen, I&#39;d like to reply to your posts in which you makes the \ncase \n&gt;=\r\n that a functional mapping is equivalent to a developmental system \nin \n&gt; t=\r\nhe context of a computer where we can define a coordinate system \nto \n&gt; tri=\r\nvialize finding where we are.\n&gt; \n&gt; \tI think you are wrong on this particula=\r\nr point.  Or rather, I \nthink \n&gt; you have hit on a great short-cut, that wi=\r\nll nicely side-step a \nwhole \n&gt; class of issues, but that eventually you wi=\r\nll have to come back to \n&gt; developmental ideas.\n&gt; \n&gt; \tThe reason I think th=\r\nis is for reasons of evolvability.  The \n&gt; functional approach relies on fe=\r\natures remaining in the same places \n&gt; so that other functions can find the=\r\nm.  Any mutation that requires \na \n&gt; feature to move will need all the part=\r\ns of the CPPN that reference \n&gt; that feature to be changed in synchrony.  I=\r\nn other words it will \n&gt; require multiple concerted mutations, and that is =\r\ntoo improbable.\n&gt; \n&gt; \tNow, you might argue that feature-moving mutations we=\r\nre of no \n&gt; significance.  But other very important classes of change suffe=\r\nr \nthe \n&gt; same problems.  e.g. if we mutate part of the CPPN to produce a \n=\r\n&gt; duplication of a previously existing structure:\n&gt; \n&gt; \tsin(x) -&gt; sin(2 * x=\r\n)\n&gt; \n&gt; \tThen we need to separately do the same thing to the other \nparts of=\r\n \n&gt; the CPPN that also want to reference that structure.  In a \n&gt; developme=\r\nntal approach, such a change might be something like a \n&gt; simple duplicatio=\r\nn:\n&gt; \n&gt; \t...; CreateSomeNeurones(label:=3D47, pattern:=3D...); ... -&gt;\n&gt; \n&gt; =\r\n\t...; CreateSomeNeurones(label:=3D47, pattern:=3D...); \n&gt; CreateSomeNeurone=\r\ns(label:=3D47, pattern:=3D...); ...\n&gt; \n&gt; \tAnd because all future rules that=\r\n attach to that structure \nwill be \n&gt; doing it via recognizing the label, t=\r\nhey will already be doing the \n&gt; right thing to both of the new structures.=\r\n..\n&gt; \n&gt; \t(OK OK they&#39;ll not be doing a totally wrong thing)\n&gt; \n&gt; \tBut as I =\r\nsaid, HyperNEAT _is_ a great step forwards, but \npossibly \n&gt; not the whole =\r\nstory.\n&gt; \n&gt; \tIan\n&gt;\n\n\n\n"}}