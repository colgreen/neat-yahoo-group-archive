{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":230385553,"authorName":"Cesar G. M.","from":"&quot;Cesar G. M.&quot; &lt;cesar.gomes@...&gt;","profile":"fdital","replyTo":"LIST","senderId":"j2VNHjjHPUXLQk76MrGTz8iDgmfuCm04J8TtpXk-JCyoYtcscF-BeSa8jnKSMU6jz4MyNcFHmlBIibRO-G9PU2XG2557D8C__Nu1JQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: rtNEAT: max_depth() in an endless loop","postDate":"1225741251","msgId":4413,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRkZjEwMDc4MDgxMTAzMTE0MGkxZjk5NTM4Y2o4ODJhZmY0YjRkYmNhYzg0QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQ5MEY1MTU0LjQwODA4MDhAeWFob28uY29tPg==","referencesHeader":"PGdlbmI1ZitxZ3BzQGVHcm91cHMuY29tPiA8NDkwRjRCODIuNjAzMDgwNkB5YWhvby5jb20+CSA8MTI4MGNmNmEwODExMDMxMTE2dTE4YTBjN2ZidmZkNWRkYzlkNmYzNjg0MUBtYWlsLmdtYWlsLmNvbT4JIDw0OTBGNTE1NC40MDgwODA4QHlhaG9vLmNvbT4="},"prevInTopic":4412,"nextInTopic":4414,"prevInTime":4412,"nextInTime":4414,"topicId":4396,"numMessagesInTopic":16,"msgSnippet":"... This is the same with NEAT-Python implementation, there s no concept of depth. The nodes are activated only once in the right order (the order is defined","rawEmail":"Return-Path: &lt;cesar.gomes@...&gt;\r\nX-Sender: cesar.gomes@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 11688 invoked from network); 3 Nov 2008 19:40:55 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m43.grp.scd.yahoo.com with QMQP; 3 Nov 2008 19:40:55 -0000\r\nX-Received: from unknown (HELO ey-out-1920.google.com) (74.125.78.144)\n  by mta16.grp.scd.yahoo.com with SMTP; 3 Nov 2008 19:40:54 -0000\r\nX-Received: by ey-out-1920.google.com with SMTP id 4so822924eyk.40\n        for &lt;neat@yahoogroups.com&gt;; Mon, 03 Nov 2008 11:40:51 -0800 (PST)\r\nX-Received: by 10.103.226.20 with SMTP id d20mr249265mur.10.1225741251694;\n        Mon, 03 Nov 2008 11:40:51 -0800 (PST)\r\nX-Received: by 10.103.241.10 with HTTP; Mon, 3 Nov 2008 11:40:51 -0800 (PST)\r\nMessage-ID: &lt;ddf100780811031140i1f99538cj882aff4b4dbcac84@...&gt;\r\nDate: Mon, 3 Nov 2008 17:40:51 -0200\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;490F5154.4080808@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;genb5f+qgps@...&gt; &lt;490F4B82.6030806@...&gt;\n\t &lt;1280cf6a0811031116u18a0c7fbvfd5ddc9d6f36841@...&gt;\n\t &lt;490F5154.4080808@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Cesar G. M.&quot; &lt;cesar.gomes@...&gt;\r\nSubject: Re: [neat] Re: rtNEAT: max_depth() in an endless loop\r\nX-Yahoo-Group-Post: member; u=230385553; y=IvEJJoW6PWLhzdEwJTOXHcaYrXwRoAlfVj_n6grvFcHY\r\nX-Yahoo-Profile: fdital\r\n\r\n&gt; My implementation has no notion of depth. It flattens the ANN into a single\n&gt; array of nodes each activated once and only once from left to right (where\n&gt; left to right is defined by node dependency and then by age). So, if there\n&gt; are 12 nodes, regardless of recurrent connections, there is exactly 12 node\n&gt; activation recalculations. When a node is recalculated, it grabs the list of\n&gt; nodes upon which it depends (which can include itself and nodes yet to be\n&gt; recalculated during this pass), recalculates its value and stores it.\n\nThis is the same with NEAT-Python implementation, there&#39;s no concept\nof depth. The nodes are activated only once in the right order (the\norder is defined based on the mutations).\n\nBut rtNEAT applies a different method and that can be hard to avoid\nrecurrent connections.  It could also be less efficient since you have\nto activate each node &quot;depth&quot; times. But as Ken&#39;s pointed out, it only\nhappens with feedforward topologies, and I think that most of us here\nare mainly interested in recurrent networks.\n\nCesar\n\n"}}