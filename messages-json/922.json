{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":186569417,"authorName":"Karl Lewin","from":"Karl Lewin &lt;lewinke67@...&gt;","profile":"lewinke67","replyTo":"LIST","senderId":"WjfJE8dMA1cFLIN1U0o4_L34Ii42gO5b9xaWZq3sQXk_dFsrF6LJLmf0qmnHETjXQianMBYAUlg7oqpWoXsV8GRhWqC6xu8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Command-line NEAT","postDate":"1085977755","msgId":922,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDQwNTMxMDQyOTE1LjYwMTMxLnFtYWlsQHdlYjIxMTAzLm1haWwueWFob28uY29tPg==","inReplyToHeader":"PGM5ZTlkOCtxaXF2QGVHcm91cHMuY29tPg=="},"prevInTopic":921,"nextInTopic":0,"prevInTime":921,"nextInTime":923,"topicId":909,"numMessagesInTopic":8,"msgSnippet":"Re: Perl implementation I ve just completed an implementation of NEAT in python and I m satisfied with the speed.  I m probably going to drop the network","rawEmail":"Return-Path: &lt;lewinke67@...&gt;\r\nX-Sender: lewinke67@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 67758 invoked from network); 31 May 2004 04:29:39 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m25.grp.scd.yahoo.com with QMQP; 31 May 2004 04:29:39 -0000\r\nReceived: from unknown (HELO web21103.mail.yahoo.com) (216.136.227.105)\n  by mta1.grp.scd.yahoo.com with SMTP; 31 May 2004 04:29:39 -0000\r\nMessage-ID: &lt;20040531042915.60131.qmail@...&gt;\r\nReceived: from [64.81.112.228] by web21103.mail.yahoo.com via HTTP; Sun, 30 May 2004 21:29:15 PDT\r\nDate: Sun, 30 May 2004 21:29:15 -0700 (PDT)\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;c9e9d8+qiqv@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=us-ascii\r\nX-eGroups-Remote-IP: 216.136.227.105\r\nFrom: Karl Lewin &lt;lewinke67@...&gt;\r\nSubject: Re: [neat] Re: Command-line NEAT\r\nX-Yahoo-Group-Post: member; u=186569417\r\nX-Yahoo-Profile: lewinke67\r\n\r\nRe: Perl implementation\n\nI&#39;ve just completed an implementation of NEAT in\npython and I&#39;m satisfied with the speed.  I&#39;m probably\ngoing to drop the network activation parts down into C\nor C++ but the speciation and evolutionary code runs\nplenty fast so I would think a perl implementation\nwould be fine.\n\n--- Kenneth Stanley &lt;kstanley@...&gt; wrote:\n&gt; --- In neat@yahoogroups.com, &quot;John Arrowwood&quot;\n&gt; &lt;jarrowwx@h...&gt; wrote:\n&gt; &gt; &gt;From: &quot;Kenneth Stanley&quot; &lt;kstanley@c...&gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;John, note that one complication in doing this is\n&gt; that you would \n&gt; lose\n&gt; &gt; &gt;the continuity of the species numbers and sizes\n&gt; with current \n&gt; versions\n&gt; &gt; &gt;of NEAT.  What should be done is that species\n&gt; numbers get recorded\n&gt; &gt; &gt;such that they can be restored, and also the\n&gt; compat_thresh needs \n&gt; to be\n&gt; &gt; &gt;remembered in the case of dynamic thresholding.\n&gt; &gt; \n&gt; &gt; Good point.  I think I&#39;m confused about how\n&gt; speciation happens.  \n&gt; For some \n&gt; &gt; reason, I was under the impression that you assign\n&gt; every specimen \n&gt; to a \n&gt; &gt; species for every generation.  I wasn&#39;t aware that\n&gt; anything needed \n&gt; to be \n&gt; &gt; maintained between generations.  Can you give me a\n&gt; link to a paper \n&gt; that \n&gt; &gt; discusses speciation in more detail?\n&gt; &gt; \n&gt; \n&gt; Well it only takes a few words to explain so you\n&gt; probably just \n&gt; didn&#39;t notice it, e.g. in our Evolutionary\n&gt; Computation and JAIR \n&gt; papers (on my homepage).  Each say, &quot;Each genome is\n&gt; placed into the \n&gt; first species from the *previous generation* where\n&gt; this condition is \n&gt; satisfied...&quot; (section 3.3 in the JAIR paper).  In\n&gt; other words, \n&gt; there is continuity between generations.  In terms\n&gt; of implmentation, \n&gt; NEAT assigns every new species a number and that\n&gt; number stays with \n&gt; the species over generations until it goes extinct\n&gt; or until the end \n&gt; of the run.  Doing so allows some nice things: you\n&gt; can track \n&gt; individual species throughout the run and you can\n&gt; detect \n&gt; stagnation.   \n&gt; \n&gt; &gt; &gt;Otherwise, species\n&gt; &gt; &gt;will be renumbered on each generation, and you\n&gt; will forget what \n&gt; your\n&gt; &gt; &gt;threshold is.\n&gt; &gt; \n&gt; &gt; What effect does that have?\n&gt; &gt; \n&gt; \n&gt; The effect is (1) you can no longer track the\n&gt; progress of species \n&gt; throughout the run.  For example, see figure 7 in\n&gt; our EC paper, \n&gt; which is a speciation visualization.  (2) You can&#39;t\n&gt; detect \n&gt; stagnation.  For example, if a species has not\n&gt; improved in 100 \n&gt; generations, you won&#39;t know about it.  NEAT\n&gt; penalizes species that \n&gt; haven&#39;t improved in a long time.  (3) Losing track\n&gt; of the \n&gt; compatibility threshold value means that species\n&gt; will not be the \n&gt; exact same size and membership as they were in the\n&gt; previous \n&gt; generation, since the threshold determines\n&gt; membership requirements.\n&gt; \n&gt; Note that the threshold is a single number which\n&gt; could easily be \n&gt; passed along by your command-line function.\n&gt; \n&gt; &gt; &gt;So are you saying you intend to write NEAT in\n&gt; Perl or just modify \n&gt; an\n&gt; &gt; &gt;existing NEAT and connect it to Perl?\n&gt; &gt; \n&gt; &gt; Either way.  If I can use somebody else&#39;s NEAT as\n&gt; a command-line \n&gt; tool, that \n&gt; &gt; would be my first choice.\n&gt; &gt; \n&gt; &gt; &gt;Either way it&#39;s an interesting\n&gt; &gt; &gt;idea, but is Perl fast enough to be the main body\n&gt; of NEAT?\n&gt; &gt; \n&gt; &gt; Wasn&#39;t it you that argued that the NEAT part was\n&gt; usually only a \n&gt; small part \n&gt; &gt; of the CPU time of an experiment?  So even if it\n&gt; takes two or \n&gt; three times as \n&gt; &gt; long to generate the next generation of a\n&gt; population, that doesn&#39;t \n&gt; add much \n&gt; &gt; to overall run time, does it?\n&gt; &gt; \n&gt; \n&gt; Yeah you&#39;re right...it should be fine in Perl.  The\n&gt; only part I&#39;d \n&gt; question is network activation, since it happens so\n&gt; often during \n&gt; evaluation.  But as has recently been discussed, in\n&gt; some domains \n&gt; this doesn&#39;t matter.  But still, what language will\n&gt; the actual \n&gt; domain simulation be written in?\n&gt; \n&gt; Anyway, I think Perl will be fine.\n&gt; \n&gt; &gt; Perhaps I should ask:  How long DOES it take if,\n&gt; for example, you \n&gt; have a \n&gt; &gt; fairly large genome and a population of, say, 1000\n&gt; individuals?  \n&gt; For your \n&gt; &gt; C++ code, that is.  If it does it in under a\n&gt; second, then I&#39;m sure \n&gt; Perl is \n&gt; &gt; &#39;fast enough.&#39;  If it takes more like a minute,\n&gt; then it may not \n&gt; be.  What&#39;s \n&gt; &gt; your experience?\n&gt; &gt; \n&gt; \n&gt; It depends what large is.  You will find the\n&gt; compatibility \n&gt; computations taking longer as genomes get larger. \n&gt; However, there \n&gt; shouldn&#39;t be that many compatibility checks if it&#39;s\n&gt; implemented \n&gt; right so it may not matter.  I&#39;m pretty sure the\n&gt; main epoch loop of \n&gt; NEAT will be fine in Perl.\n&gt; \n&gt; ken\n&gt; \n&gt; \n&gt; \n\n\n\n\t\n\t\t\n__________________________________\nDo you Yahoo!?\nFriends.  Fun.  Try the all-new Yahoo! Messenger.\nhttp://messenger.yahoo.com/ \n\n"}}