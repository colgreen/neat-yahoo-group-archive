{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":281645563,"authorName":"afcarl2","from":"&quot;afcarl2&quot; &lt;a.carl@...&gt;","profile":"afcarl2","replyTo":"LIST","senderId":"P1qE3bAWwbWw0StbuwG7AzRcl4MDgNh50-gY-ol4qbnAPxC24w0Um2gmPpaGpSfoujxYJswaVx9jrqkAhFlNqAU","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Tile Coding and HyperNEAT","postDate":"1179078071","msgId":3277,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYyN2lqbituODBhQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGYyNmFpMisydGFtQGVHcm91cHMuY29tPg=="},"prevInTopic":3276,"nextInTopic":3287,"prevInTime":3276,"nextInTime":3278,"topicId":3214,"numMessagesInTopic":27,"msgSnippet":"Ken, I m not knocking HyperNEAT. I m merely stating that before the dust settles on HyperNEAT, it will employ co-evolution of design space partition to reach","rawEmail":"Return-Path: &lt;a.carl@...&gt;\r\nX-Sender: a.carl@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 86324 invoked from network); 13 May 2007 17:42:14 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m50.grp.scd.yahoo.com with QMQP; 13 May 2007 17:42:14 -0000\r\nReceived: from unknown (HELO n18.bullet.sp1.yahoo.com) (69.147.64.215)\n  by mta13.grp.scd.yahoo.com with SMTP; 13 May 2007 17:42:14 -0000\r\nReceived: from [216.252.122.219] by n18.bullet.sp1.yahoo.com with NNFMP; 13 May 2007 17:41:11 -0000\r\nReceived: from [66.218.69.2] by t4.bullet.sp1.yahoo.com with NNFMP; 13 May 2007 17:41:11 -0000\r\nReceived: from [66.218.66.85] by t2.bullet.scd.yahoo.com with NNFMP; 13 May 2007 17:41:11 -0000\r\nDate: Sun, 13 May 2007 17:41:11 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;f27ijn+n80a@...&gt;\r\nIn-Reply-To: &lt;f26ai2+2tam@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;afcarl2&quot; &lt;a.carl@...&gt;\r\nSubject: Re: Tile Coding and HyperNEAT\r\nX-Yahoo-Group-Post: member; u=281645563; y=_n3TZBh0jeKLrgXTVVe0YsGSeM5qLdghVMztCRzXcfUnPA\r\nX-Yahoo-Profile: afcarl2\r\n\r\nKen,\n\n   I&#39;m not knocking HyperNEAT. I&#39;m merely stating that before the \ndu=\r\nst settles on HyperNEAT, it will employ co-evolution of design \nspace parti=\r\ntion to reach its full potential.\n\n   Ideas have consequences. Sharing idea=\r\ns broadens the scope and \nimpact of ideas. The essence of NEAT and HyperNEA=\r\nT, ideas you have \nshared, have broader applicability than demonstrated to =\r\ndate.\n\n   The position re: tile-coding&#39;s division of the design space, \nwit=\r\nhout acknowledgement of the utility of design space partition to \nfacilitat=\r\ne solution of practical real-world problems, given \nHyperNEAT&#39;s current lac=\r\nk of provision for performing same, whether or \nnot currently exercised, al=\r\nso seems like &quot;jumping the gun.&quot;\n\n   The &quot;idea&quot; of &quot;HyperNEAT,&quot; is pregnant=\r\n in at least a couple of \ndifferent directions, and has taken on a life of =\r\nit&#39;s own. I have to \nassume that this is both a consequence and objective o=\r\nf sharing these \nideas in this forum.\n\nThanks,\n   Andy Carl\n\n\n\n\n--- In neat=\r\n@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt; wrote:\n&gt;\n&gt; --- In neat@y=\r\nahoogroups.com, &quot;afcarl2&quot; &lt;a.carl@&gt; wrote:\n&gt; &gt;\n&gt; &gt; The extreme cited was yo=\r\nur referenced example of cutting up a \nchess \n&gt; &gt; board. I completely agree=\r\n with your statement that the divisions \n&gt; &gt; should occur at the discontinu=\r\nities. It just appears that you are \n&gt; &gt; focusing on extremes to prove your=\r\n point, but at the same time \n&gt; &gt; appears to undermine your position. &quot;Tile=\r\n coding&quot; focuses on \n&gt; &gt; partitioning the design space to facilitate the fu=\r\nnctional \n&gt; &gt; representation. You seem to acknowledge the need to make \ndiv=\r\nisions \n&gt; at \n&gt; &gt; discontinuities in the design space. It appears that you =\r\ntake \nissue \n&gt; &gt; as to the degree or multiplicity of divisions, or the rati=\r\nonal \nupon \n&gt; &gt; which the divisions were based upon. Yet the example proble=\r\nms \n&gt; &gt; referenced to date for HyperNEAT exclusively deal with lower \n&gt; &gt; d=\r\nimensional geometry which appear to not contain the types of \n&gt; &gt; discontin=\r\nuities which would necessitate different functional \n&gt; &gt; representation in =\r\ndifferent sub-regions of the design space. \n&gt; &gt; Furthermore, to date, no me=\r\nchanism appears to be implemented \nwhich \n&gt; &gt; would permit co-evolution of =\r\ndiffering functional representations \n&gt; &gt; along with their necessary mappin=\r\ng functions/data that would \n&gt; identify \n&gt; &gt; the applicable sub-portion of =\r\nthe design space addressed by a \ngiven \n&gt; &gt; sub-region functional represent=\r\nation.\n&gt; &gt; \n&gt; &gt; Now I realize that it is early on in the development cycle =\r\nfor \n&gt; &gt; HyperNEAT, and that the simple examples provided in the papers \nwe=\r\nre \n&gt; &gt; selected to best illustrate the ability and importance of \ngeometri=\r\nc \n&gt; &gt; information, but it appears to be premature to degrade an \napproach =\r\n\n&gt; &gt; which focuses on divisions and HyperNEAT focuses on simplistic \nsub-\n&gt;=\r\n &gt; regions without capacity for divisions.\n&gt; &gt; \n&gt; \n&gt; Let&#39;s not confuse expe=\r\nriments that have yet to be attempted for a \n&gt; lack of capability; that wou=\r\nld be bad scientific practice and \njumping \n&gt; the gun.  \n&gt; \n&gt; &gt; Your point =\r\nis well taken that divisions should occur at \n&gt; &gt; discontinuities. Equally =\r\nimportant is the ability handle \ndivisions \n&gt; &gt; within the design space. I&#39;=\r\nm just of the opinion that it is not \nas \n&gt; &gt; black and white as you have r=\r\nepresented. If &quot;tile coding&quot; is \nguilty \n&gt; &gt; of irrational division, HyperN=\r\nEAT is guilty of simplistic \n&gt; &gt; representation by omission of division, th=\r\nus far.\n&gt; &gt; \n&gt; \n&gt; When you say that a methodology is guilty &quot;thus far&quot; you =\r\nare \napplying \n&gt; the &quot;guilty until proven innocent&quot; brand of justice.  We s=\r\nhould \ngive \n&gt; new methods a chance to prove themselves before knocking the=\r\nm for \n&gt; their initial results not demonstrating everything at one time.\n&gt; =\r\n\n&gt; In any case, the problems with tile coding are just as serious \n&gt; regard=\r\nless of what HyperNEAT ends up doing.  Of course, admittedly, \nI \n&gt; am impl=\r\nying that HyperNEAT is anti-tile-coding, but even if it \n&gt; wasn&#39;t, tile cod=\r\ning would still be no better off for it.\n&gt; \n&gt; ken\n&gt; \n&gt; &gt; \n&gt; &gt; --- In neat@y=\r\nahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; I&#39;m not ce=\r\nrtain what &quot;the extreme cited&quot; refers to, but we \nshould \n&gt; &gt; not \n&gt; &gt; &gt; co=\r\nnfuse tile coding with the classic &quot;divide and conquer&quot; \n&gt; approach \n&gt; &gt; to=\r\n \n&gt; &gt; &gt; problem solving.  No one who follows divide and conquer cuts a \n&gt; &gt;=\r\n &gt; problem up into completely arbitrary chunks.  In fact, divide \nand \n&gt; &gt; =\r\n&gt; conquer is based on the idea that when you do divide, you \ndivide \n&gt; &gt; *a=\r\nt* \n&gt; &gt; &gt; the discontinuities that occur along dimensions of design.  \nThus=\r\n \n&gt; it \n&gt; &gt; &gt; implies an initial assessment of the overall geometry of the =\r\n\n&gt; &gt; &gt; problem.  Once again, that&#39;s exactly what tile coding throws \naway.\n=\r\n&gt; &gt; &gt; \n&gt; &gt; &gt; By the way, &quot;geometry&quot; does not imply a necessary analogue wit=\r\nh \n&gt; the \n&gt; &gt; &gt; dimensions of physical space.  It only implies that there a=\r\nre \n&gt; &gt; indeed \n&gt; &gt; &gt; orthogonal dimensions.  So the &quot;higher design space \n=\r\n&gt; dimensionality&quot; \n&gt; &gt; &gt; is part of the geometry.\n&gt; &gt; &gt; \n&gt; &gt; &gt; ken\n&gt; &gt; &gt; \n&gt;=\r\n &gt; &gt; --- In neat@yahoogroups.com, &quot;afcarl2&quot; &lt;a.carl@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n&gt; IMHO, it appears that the extreme cited dismisses an element \n&gt; that \n&gt; &gt;=\r\n &gt; &gt; holds value. The sole focus on geometry (i.e. 1d, 2d or 3d), \nis \n&gt; a =\r\n\n&gt; &gt; &gt; &gt; simplified subset of a problem dimensionality. Most useful \n&gt; &gt; pr=\r\noblems \n&gt; &gt; &gt; &gt; have a higher design space dimensionality in which global \n=\r\n&gt; &gt; functions \n&gt; &gt; &gt; &gt; are comprised of a collection of regional &quot;global fu=\r\nnctions&quot; \n&gt; &gt; along \n&gt; &gt; &gt; &gt; with their individual application sub-domain d=\r\nefinitions, \nwhich \n&gt; &gt; &gt; taken \n&gt; &gt; &gt; &gt; together makeup the whole.\n&gt; &gt; &gt; &gt;=\r\n \n&gt; &gt; &gt; &gt; An approach which works well within a regional sub-domain \nisn&#39;t =\r\n\n&gt; &gt; bad \n&gt; &gt; &gt; &gt; because it cannot adequately address all of the design sp=\r\nace, \n&gt; &gt; &gt; unless \n&gt; &gt; &gt; &gt; of course it can co-evolve different functions =\r\nin different \nsub-\n&gt; &gt; &gt; &gt; regions along with the corresponding regional \n&gt;=\r\n &gt; application /mapping \n&gt; &gt; &gt; &gt; between them.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Also, as yo=\r\nur example illustrates, it would be seriously \n&gt; &gt; &gt; &gt; counterproductive to=\r\n throw away proximity-based information, \n&gt; &gt; &gt; whether \n&gt; &gt; &gt; &gt; geometry o=\r\nr other higher dimensional information.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Many useful proble=\r\nms are comprised of discontinuities that \nhave \n&gt; &gt; to \n&gt; &gt; &gt; be \n&gt; &gt; &gt; &gt; d=\r\nealt with individually. &quot;Divide-and-conquer&quot; is a powerful \n&gt; &gt; &gt; approach =\r\n\n&gt; &gt; &gt; &gt; when properly applied.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; --- In neat@yahoo=\r\ngroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; \n&gt; wrote:\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Joe=\r\n, I agree this is a revealing discussion.  Tile coding \nto \n&gt; me \n&gt; &gt; a \n&gt; =\r\n&gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; a telling example of a significant misdirection of effo=\r\nrt \nin \n&gt; &gt; &gt; &gt; machine \n&gt; &gt; &gt; &gt; &gt; learning right now.  \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt;=\r\n &gt; Most of what you said is factually true.  But the spin you \n&gt; put \n&gt; &gt; o=\r\nn \n&gt; &gt; &gt; &gt; it \n&gt; &gt; &gt; &gt; &gt; is wrong.  It is correct that tile coding breaks u=\r\np the \n&gt; &gt; &gt; &gt; state/action \n&gt; &gt; &gt; &gt; &gt; space into little pieces to make the=\r\n right behavior for \neach \n&gt; &gt; &gt; little \n&gt; &gt; &gt; &gt; &gt; region easier to compute=\r\n.  As you put it, &quot;subtiles can \n&gt; better \n&gt; &gt; &gt; fit \n&gt; &gt; &gt; &gt; &gt; the value f=\r\nunction being learned. Note that there is very \n&gt; &gt; little \n&gt; &gt; &gt; &gt; &gt; gener=\r\nalization desired here.&quot;  You say that like it&#39;s a \ngood \n&gt; &gt; &gt; thing.\n&gt; &gt; =\r\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; However, the fact that there is a need to do something lik=\r\ne \n&gt; &gt; that \n&gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; more a symptom of a serious disease in RL =\r\nthan an \n&gt; &gt; accomplishment \n&gt; &gt; &gt; we \n&gt; &gt; &gt; &gt; &gt; should be congratulating o=\r\nurselves for.  It&#39;s like using \n&gt; &gt; cocaine \n&gt; &gt; &gt; to \n&gt; &gt; &gt; &gt; &gt; stay awake=\r\n at work and claiming that it was a good idea \n&gt; because \n&gt; &gt; &gt; you \n&gt; &gt; &gt; =\r\n&gt; &gt; were more alert.  The fact is the whole approach is sick to \n&gt; &gt; begin =\r\n\n&gt; &gt; &gt; &gt; &gt; with if it needs cocaine to function properly.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; =\r\n&gt; &gt; And that&#39;s what tile coding is really indicating: Much of \nRL \n&gt; is \n&gt; =\r\n&gt; &gt; &gt; DOA.  \n&gt; &gt; &gt; &gt; &gt; Tile coding is a symptom of a larger sickness.  You =\r\nsaid it \n&gt; &gt; &gt; &gt; &gt; yourself: &quot;[most] RL is inherently incapable of performi=\r\nng \n&gt; &gt; model \n&gt; &gt; &gt; &gt; &gt; selection.&quot;  Well, if what that means is that you =\r\ncan&#39;t \n&gt; exploit \n&gt; &gt; &gt; &gt; &gt; geometry, it&#39;s all a dead end.  I am not certai=\r\nn that RL \n&gt; (aside \n&gt; &gt; &gt; &gt; from \n&gt; &gt; &gt; &gt; &gt; NEAT+Q-type stuff) is really i=\r\nncapable of optimizing the \n&gt; model \n&gt; &gt; &gt; &gt; &gt; because who knows what we mi=\r\nght realize how to do in the \n&gt; &gt; future.  \n&gt; &gt; &gt; &gt; &gt; However, for now, RL =\r\nis falling back on tile coding because \n&gt; it \n&gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; moving in t=\r\nhe wrong direction.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Here is what is really going on:  =\r\nEach variable in the \n&gt; &gt; &gt; state/action \n&gt; &gt; &gt; &gt; &gt; space is a dimension al=\r\nong which the value function \nvaries.  \n&gt; A \n&gt; &gt; &gt; good \n&gt; &gt; &gt; &gt; &gt; learning=\r\n algorithm would represent how the value function \n&gt; &gt; varies \n&gt; &gt; &gt; &gt; with=\r\n \n&gt; &gt; &gt; &gt; &gt; respect to each state variable.  However, such variation \nmay \n=\r\n&gt; be \n&gt; &gt; &gt; &gt; &gt; complex, i.e. the function could be pretty complicated.  \nT=\r\nhe \n&gt; &gt; &gt; &gt; learning \n&gt; &gt; &gt; &gt; &gt; methods (i.e. supervised function approxima=\r\ntors) inside RL \n&gt; are \n&gt; &gt; &gt; &gt; &gt; sufficiently bad that they cannot handle =\r\napproximating \n&gt; &gt; functions \n&gt; &gt; &gt; &gt; like \n&gt; &gt; &gt; &gt; &gt; that.  So what do we =\r\ndo?  We break the whole space into \n&gt; &gt; chunks.  \n&gt; &gt; &gt; &gt; Now \n&gt; &gt; &gt; &gt; &gt; th=\r\ne appropriate action for each little chunk requires a \nmuch \n&gt; &gt; &gt; &gt; simple=\r\nr \n&gt; &gt; &gt; &gt; &gt; function, so we have a chance with our poor learning \n&gt; algori=\r\nthm \n&gt; &gt; to \n&gt; &gt; &gt; &gt; &gt; maybe get all these little simple functions right in=\r\nstead \nof \n&gt; &gt; only \n&gt; &gt; &gt; a \n&gt; &gt; &gt; &gt; &gt; few big complicated functions.  \n&gt; =\r\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; In other words, we have a poor algorithm and the cure is=\r\n to \n&gt; &gt; &gt; destroy \n&gt; &gt; &gt; &gt; &gt; what variational structure there was to begin=\r\n with so that \nwe \n&gt; &gt; can \n&gt; &gt; &gt; &gt; &gt; look at every little bit of the probl=\r\nem separately.   So we \n&gt; &gt; have \n&gt; &gt; &gt; &gt; now \n&gt; &gt; &gt; &gt; &gt; lost the ability t=\r\no exploit all the useful relationships \nthat \n&gt; &gt; &gt; &gt; &gt; initially existed i=\r\nn the space.  States that are related \nare \n&gt; &gt; now \n&gt; &gt; &gt; &gt; &gt; broken apart=\r\n and must be learned separately, that is, the \n&gt; &gt; &gt; geometry \n&gt; &gt; &gt; &gt; &gt; ha=\r\ns been destroyed! The fact that many see such an \noperation \n&gt; as \n&gt; &gt; a \n&gt;=\r\n &gt; &gt; &gt; &gt; step in the right direction is symptomatic of serious \n&gt; &gt; &gt; misdi=\r\nrection \n&gt; &gt; &gt; &gt; in \n&gt; &gt; &gt; &gt; &gt; the field.  If that&#39;s the best we can do to =\r\nmake RL easier, \n&gt; &gt; than \n&gt; &gt; &gt; RL \n&gt; &gt; &gt; &gt; &gt; is in serious trouble!\n&gt; &gt; &gt;=\r\n &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Think of it like this:  Take a game like chess, which I \n&gt; =\r\nlearned \n&gt; &gt; &gt; as \n&gt; &gt; &gt; &gt; a \n&gt; &gt; &gt; &gt; &gt; little kid.  Now take the 64 square=\r\ns and cut each piece out \n&gt; of \n&gt; &gt; &gt; the \n&gt; &gt; &gt; &gt; &gt; board individually.  N=\r\now sprinkle them all randomly all \nover \n&gt; &gt; your \n&gt; &gt; &gt; &gt; &gt; living room.  =\r\nEach square still represents the same \nlocation \n&gt; it \n&gt; &gt; &gt; was \n&gt; &gt; &gt; &gt; &gt;=\r\n originally taken from in the board.  It&#39;s just you can&#39;t \nsee \n&gt; &gt; &gt; where=\r\n \n&gt; &gt; &gt; &gt; &gt; they were anymore.  Now place the chess pieces in the right \n&gt; =\r\n&gt; &gt; &gt; starting \n&gt; &gt; &gt; &gt; &gt; squares and teach a little kid to play chess.  Th=\r\nink he or \n&gt; she \n&gt; &gt; &gt; &gt; would \n&gt; &gt; &gt; &gt; &gt; learn anything at all?\n&gt; &gt; &gt; &gt; &gt;=\r\n \n&gt; &gt; &gt; &gt; &gt; Well, that&#39;s exactly what tile coding is!  A method that \n&gt; lea=\r\nrns \n&gt; &gt; &gt; &gt; chess \n&gt; &gt; &gt; &gt; &gt; (or anything else that has implicit or explic=\r\nit geometry) \n&gt; needs \n&gt; &gt; &gt; to \n&gt; &gt; &gt; &gt; &gt; know how the positions relate to=\r\n each other geometrically \n&gt; &gt; because \n&gt; &gt; &gt; &gt; &gt; there is massive regulari=\r\nty being lost without that \n&gt; &gt; information.  \n&gt; &gt; &gt; &gt; &gt; What kind of crazy=\r\n algorithm would purposely put a chess \n&gt; board \n&gt; &gt; &gt; into \n&gt; &gt; &gt; &gt; a \n&gt; &gt;=\r\n &gt; &gt; &gt; meaningless order before learning begins?  A method \n&gt; &gt; &gt; that &quot;ben=\r\nefits&quot; \n&gt; &gt; &gt; &gt; &gt; from such an approach is clearly DOA.  RL researchers \nsh=\r\nould \n&gt; be \n&gt; &gt; &gt; &gt; &gt; seriously concerned about tile coding being necessary=\r\n at \nall, \n&gt; &gt; not \n&gt; &gt; &gt; &gt; &gt; happy about it.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; So I sti=\r\nck to my position: Tile coding is anti-geometry and \n&gt; &gt; anti-\n&gt; &gt; &gt; &gt; &gt; re=\r\npresentation.  It deserves no credit whatsoever \n&gt; &gt; &gt; for &quot;respecting&quot; \n&gt; =\r\n&gt; &gt; &gt; &gt; anything.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; ken\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; --- In neat=\r\n@yahoogroups.com, Joseph Reisinger &lt;joeraii@&gt; \n&gt; wrote:\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;=\r\n &gt; &gt; I&#39;ve been aching to reply to this post for a while, and I \n&gt; &gt; &gt; &gt; fin=\r\nally  \n&gt; &gt; &gt; &gt; &gt; &gt; have enough free time to do so. I think we could have a =\r\n\n&gt; &gt; really  \n&gt; &gt; &gt; &gt; &gt; &gt; interesting discussion here, hopefully at least m=\r\nore \n&gt; &gt; &gt; interesting \n&gt; &gt; &gt; &gt; &gt; than  \n&gt; &gt; &gt; &gt; &gt; &gt; the NFL tangent.\n&gt; &gt; &gt;=\r\n &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; &gt;&gt; Sure, but tile-coding does respect at least one form=\r\n \nof \n&gt; &gt; &gt; &gt; geometry:\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;&gt; Nearby elements in the state space a=\r\nre known to be \n&gt; nearby, \n&gt; &gt; &gt; and \n&gt; &gt; &gt; &gt; &gt; thus\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;&gt; are gro=\r\nuped in the same tile.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; I have to dispute this c=\r\nharacterization of tile coding\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; as &quot;respecting at least one fo=\r\nrm of geometry.&quot; I think \n&gt; you \n&gt; &gt; are\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; being unnecessarily =\r\nequitable toward tile coding.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; What you are sayi=\r\nng is that in effect taking a nice \n&gt; &gt; sculpture \n&gt; &gt; &gt; &gt; and\n&gt; &gt; &gt; &gt; &gt; &gt; =\r\n&gt; cutting it into pieces &quot;respects&quot; its geometry because \n&gt; &gt; those \n&gt; &gt; &gt; =\r\n&gt; &gt; little\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; pieces are not broken up any further than that. It=\r\n&#39;s \nlike \n&gt; &gt; &gt; saying\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; that someone who cut your head off &quot;re=\r\nspected&quot; your \nhead \n&gt; by \n&gt; &gt; &gt; &gt; &gt; keeping\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; its internal int=\r\negrity intact. In fact, tile coding is \n&gt; &gt; &gt; &gt; peforming a\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; g=\r\nrievous violation against the existing geometry of the \n&gt; &gt; &gt; domain, \n&gt; &gt; =\r\n&gt; &gt; &gt; and\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; does not deserve to be credited with respecting geo=\r\nmetry\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; whatsoever. I&#39;m hard pressed to imagine how one could \n=\r\ndo \n&gt; &gt; worse\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; beyond cutting things up into even tinier and t=\r\ninier \n&gt; bits; \n&gt; &gt; &gt; but \n&gt; &gt; &gt; &gt; &gt; even\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; then, those bits st=\r\nill contain &quot;nearby elements in the \n&gt; state\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; space.&quot; So that =\r\nisn&#39;t saying much.\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Yeah, from the way your framing=\r\n this argument, e.g. tile-\n&gt; &gt; coding \n&gt; &gt; &gt; &gt; &gt; used  \n&gt; &gt; &gt; &gt; &gt; &gt; in the =\r\nGA model-selection sense, you&#39;re absolutely right. \n&gt; &gt; I&#39;ll \n&gt; &gt; &gt; &gt; get  =\r\n\n&gt; &gt; &gt; &gt; &gt; &gt; back to exactly what I mean by that in a bit. For now \nlets \n&gt;=\r\n &gt; try \n&gt; &gt; &gt; &gt; to  \n&gt; &gt; &gt; &gt; &gt; &gt; reframe the issue from an RL perspective, =\r\nwhich is where \n&gt; tile-\n&gt; &gt; &gt; &gt; &gt; codings  \n&gt; &gt; &gt; &gt; &gt; &gt; are predominantly u=\r\nsed. In RL, the tile-coding is just a  \n&gt; &gt; &gt; &gt; &gt; &gt; representation for a fu=\r\nnction approximator (in a sense \nits \n&gt; &gt; sort \n&gt; &gt; &gt; &gt; of  \n&gt; &gt; &gt; &gt; &gt; &gt; li=\r\nke a really simple spline cure) that learns in a \n&gt; supervised \n&gt; &gt; &gt; &gt; &gt; m=\r\nanner.  \n&gt; &gt; &gt; &gt; &gt; &gt; Tile coding makes a lot of sense in this domain becaus=\r\ne \nyou \n&gt; &gt; &gt; can  \n&gt; &gt; &gt; &gt; &gt; &gt; calculate with a good deal of precision how=\r\n much some \n&gt; &gt; &gt; particular \n&gt; &gt; &gt; &gt; &gt; tile  \n&gt; &gt; &gt; &gt; &gt; &gt; differs from the=\r\n expected value of the function being \n&gt; &gt; &gt; &gt; approximated  \n&gt; &gt; &gt; &gt; &gt; &gt; (=\r\nin this case the Bellman error).\n&gt; &gt; &gt; &gt; &gt; &gt; Tiles hat is cover a broad are=\r\na where the value function \n&gt; &gt; &gt; changes \n&gt; &gt; &gt; &gt; a  \n&gt; &gt; &gt; &gt; &gt; &gt; lot (&quot;ha=\r\nve bad fit&quot;, &quot;are too general&quot;, etc) are then \nsplit \n&gt; &gt; so \n&gt; &gt; &gt; &gt; &gt; tha=\r\nt  \n&gt; &gt; &gt; &gt; &gt; &gt; the subtiles can better fit the value function being \n&gt; lea=\r\nrned. \n&gt; &gt; &gt; &gt; Note  \n&gt; &gt; &gt; &gt; &gt; &gt; that there is very little generalization =\r\ndesired here; \nthe \n&gt; &gt; best \n&gt; &gt; &gt; &gt; &gt; thing  \n&gt; &gt; &gt; &gt; &gt; &gt; given infinite =\r\ncomputational resources would be to have a \n&gt; &gt; whole \n&gt; &gt; &gt; &gt; &gt; ton  \n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; of itty-bitty tiles that fit the value function perfectly.\n&gt; &gt; &gt; &gt; =\r\n&gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Anyway, since we&#39;re in the standard RL framework, there \ni=\r\ns \n&gt; &gt; &gt; really \n&gt; &gt; &gt; &gt; &gt; no  \n&gt; &gt; &gt; &gt; &gt; &gt; way of learning the &quot;geometry&quot; =\r\nof a value function (well, \n&gt; &gt; &gt; &gt; &gt; technically  \n&gt; &gt; &gt; &gt; &gt; &gt; there is, b=\r\nut thats a long tangent towards a really \n&gt; &gt; &gt; interesting  \n&gt; &gt; &gt; &gt; &gt; &gt; r=\r\nesearch area). Maybe if the geometry was given by the \n&gt; &gt; &gt; &gt; &gt; experiment=\r\ner  \n&gt; &gt; &gt; &gt; &gt; &gt; beforehand (this would also lead to an interesting \n&gt; exte=\r\nnsion \n&gt; &gt; of \n&gt; &gt; &gt; &gt; &gt; tile- \n&gt; &gt; &gt; &gt; &gt; &gt; codings that you might like a l=\r\nittle better). But in any \n&gt; &gt; case, \n&gt; &gt; &gt; &gt; &gt; since  \n&gt; &gt; &gt; &gt; &gt; &gt; all we&#39;=\r\nre trying to do in RL is supervised function \n&gt; &gt; &gt; &gt; approximation,  \n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; the lack of geometry isn&#39;t bad.\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt;=\r\n &gt; &gt; I&#39;m obviously not a big fan of tile coding :) I&#39;m not \n&gt; really\n&gt; &gt; &gt; =\r\n&gt; &gt; &gt; &gt; concerned whether it might do better in some cases; the \n&gt; &gt; &gt; prob=\r\nlem \n&gt; &gt; &gt; &gt; &gt; with\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; it is that it is a dead end for future pr=\r\nogress because \n&gt; it \n&gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; about\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; ruining our abi=\r\nlity to exploit geometric relationships.\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Ok, this =\r\nis where the discussion gets really interesting. \n&gt; &gt; &gt; &gt; Remember  \n&gt; &gt; &gt; =\r\n&gt; &gt; &gt; when I mentioned GA&#39;s &quot;performing model selection&quot; or \n&gt; &gt; something =\r\n\n&gt; &gt; &gt; &gt; &gt; like  \n&gt; &gt; &gt; &gt; &gt; &gt; that before? Thats a fundamental difference i=\r\nn the GA \n&gt; &gt; approach \n&gt; &gt; &gt; &gt; and  \n&gt; &gt; &gt; &gt; &gt; &gt; RL. So what do I mean by =\r\nmodel selection: roughly \nspeaking, \n&gt; &gt; in  \n&gt; &gt; &gt; &gt; &gt; &gt; Bayesian inferenc=\r\ne you have this idea of some separation \nof \n&gt; &gt; &gt; the  \n&gt; &gt; &gt; &gt; &gt; &gt; parame=\r\nters you are optimizing (e.g. the weights in an NN) \n&gt; and \n&gt; &gt; &gt; &gt; the  \n&gt;=\r\n &gt; &gt; &gt; &gt; &gt; model that generates those parameters (e.g. the topology \nof \n&gt; =\r\n&gt; the \n&gt; &gt; &gt; &gt; &gt; NN,  \n&gt; &gt; &gt; &gt; &gt; &gt; or even whether you use an NN or decisio=\r\nn tree or \n&gt; something). \n&gt; &gt; &gt; RL \n&gt; &gt; &gt; &gt; &gt; is  \n&gt; &gt; &gt; &gt; &gt; &gt; inherently i=\r\nncapable of performing model selection (at \n&gt; least \n&gt; &gt; &gt; &gt; &gt; outside  \n&gt; =\r\n&gt; &gt; &gt; &gt; &gt; of NEAT+Q and some others). Once you start learning with  \na \n&gt; &gt;=\r\n &gt; &gt; given  \n&gt; &gt; &gt; &gt; &gt; &gt; value function representation, you can no longer s=\r\nwitch \nto \n&gt; a  \n&gt; &gt; &gt; &gt; &gt; &gt; different representation without throwing away=\r\n everything \n&gt; &gt; &gt; you&#39;ve \n&gt; &gt; &gt; &gt; &gt; just  \n&gt; &gt; &gt; &gt; &gt; &gt; learned.  GAs on th=\r\ne other hand learn one parameterized \n&gt; model \n&gt; &gt; &gt; &gt; per  \n&gt; &gt; &gt; &gt; &gt; &gt; in=\r\ndividual. This is an important distinction.\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Now, w=\r\nhat does this have to do with tile coding and \n&gt; learning  \n&gt; &gt; &gt; &gt; &gt; &gt; geo=\r\nmetry?  When you talk about &quot;cutting up different \n&gt; &gt; variables&quot; \n&gt; &gt; &gt; &gt; =\r\n&gt; you  \n&gt; &gt; &gt; &gt; &gt; &gt; are inherently making an argument from the standpoint o=\r\nf \n&gt; &gt; model  \n&gt; &gt; &gt; &gt; &gt; &gt; selection: i.e. what is the best representation =\r\nfor this \n&gt; &gt; &gt; &gt; learning  \n&gt; &gt; &gt; &gt; &gt; &gt; problem? This is a valid question =\r\nin the GA world, and I \n&gt; &gt; agree \n&gt; &gt; &gt; &gt; &gt; with  \n&gt; &gt; &gt; &gt; &gt; &gt; you tile co=\r\nding wouldn&#39;t work at all for learning good  \n&gt; &gt; &gt; &gt; &gt; &gt; representations t=\r\nhat allow good future learning. But from \n&gt; the \n&gt; &gt; &gt; RL  \n&gt; &gt; &gt; &gt; &gt; &gt; sta=\r\nndpoint, since all tile-coding is used for is \nfunction  \n&gt; &gt; &gt; &gt; &gt; &gt; appro=\r\nximation, I don&#39;t think they are as problematic as \nyou \n&gt; &gt; &gt; &gt; imagine.\n&gt;=\r\n &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; -- Joe\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n=\r\n\n"}}