{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"9xmZunLrZy1crAqhmf3pdqUsb7aTY2h6B5RmdRm5eS1GL0RBpFU8BxmubgDm6k0cS3WHlZgC8GG0_m55OoilZmEZQDHo","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Node input bias in HyperNEAT","postDate":"1271615153","msgId":5209,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhxZmlyaCs4bGtkQGVHcm91cHMuY29tPg==","inReplyToHeader":"PG8yeTcyN2E0MDZjMTAwNDE4MDMzMm5kN2JhZGZmcWY1ZDljZWZiNWFkNWE2OGJAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":5207,"nextInTopic":5210,"prevInTime":5208,"nextInTime":5210,"topicId":5207,"numMessagesInTopic":3,"msgSnippet":"Colin, from your question it sounds like the FAQ was unclear about exactly how the bias determination would work.  The FAQ is now updated to be more clear.  In","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 36802 invoked from network); 18 Apr 2010 18:29:39 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m10.grp.re1.yahoo.com with QMQP; 18 Apr 2010 18:29:39 -0000\r\nX-Received: from unknown (HELO n46b.bullet.mail.sp1.yahoo.com) (66.163.168.160)\n  by mta1.grp.sp2.yahoo.com with SMTP; 18 Apr 2010 18:29:39 -0000\r\nX-Received: from [69.147.65.150] by n46.bullet.mail.sp1.yahoo.com with NNFMP; 18 Apr 2010 18:25:53 -0000\r\nX-Received: from [98.137.34.72] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 18 Apr 2010 18:25:53 -0000\r\nDate: Sun, 18 Apr 2010 18:25:53 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hqfirh+8lkd@...&gt;\r\nIn-Reply-To: &lt;o2y727a406c1004180332nd7badffqf5d9cefb5ad5a68b@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Node input bias in HyperNEAT\r\nX-Yahoo-Group-Post: member; u=54567749; y=a1VKG5ZLABa1MeJ5H9n_ckCDTRxiIvcEjYwOHAdWq66VUwt9X584\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nColin, from your question it sounds like the FAQ was unclear about exactl=\r\ny how the bias determination would work.  The FAQ is now updated to be more=\r\n clear.  In particular, what seems to have been unclear is that the bias wo=\r\nuld be determined from a *separate* output of the CPPN.  That is, the very =\r\nsame output that usually determines weights would not be used to determine =\r\nbiases.  Instead, the CPPN now has an additional bias output.\n\nBecause the =\r\nbiases would be determined by the new output, most of the conflicts you bri=\r\nng up do not occur.  For example one output determines the weight at (x1, y=\r\n1, 0, 0) (if you want it), and the other other put determines the bias at (=\r\nx1, y1, 0, 0).  So there is no problem if there is a weight and a bias spec=\r\nified by those coordinates.\n\nThis approach (i.e. having a separate bias out=\r\nput) is also principled because it means that the pattern of biases is not =\r\nfundamentally forced to be a subset of the pattern of weights, which would =\r\nmake the overall function that the CPPN needed to express more complex.  Ra=\r\nther, the bias function can be as related to the weight function as much as=\r\n HyperNEAT wants (e.g. by sharing hidden nodes), or as unrelated as it want=\r\ns.  So it lets HyperNEAT decide how much those patterns should correlate.\n\n=\r\nken\n\n--- In neat@yahoogroups.com, Colin Green &lt;colin.green1@...&gt; wrote:\n&gt;\n&gt;=\r\n Hi,\n&gt; \n&gt; Apologies in advace if I&#39;m repeating previous discussions.\n&gt; \n&gt; O=\r\nn the hyperneat users page some options are given for obtaining the\n&gt; node =\r\nbiases in ANNs generated from CPPNs.\n&gt; \n&gt; Node bias can be thought of as a =\r\nfunction node coordinate, but the\n&gt; CPPN accepts two sets of coords. Hence =\r\noption two is to establish a\n&gt; consistent way of using the CPPN with just t=\r\nwo inputs, the suggested\n&gt; approach is to use:\n&gt; \n&gt;     bias =3D f(x1, y1, =\r\n0, 0).\n&gt; \n&gt; My first thought was that it might be better to use:\n&gt; \n&gt;     b=\r\nias =3D f(0, 0, x1, y1).\n&gt; \n&gt; Because I think of the bias as being a functi=\r\non of the target node\n&gt; coord and the target is normally the second pair of=\r\n inputs to the\n&gt; CPPN, although maybe I just got that bit wrong? Anyway, ei=\r\nther way one\n&gt; downside to this is that you have to be careful not to place=\r\n another\n&gt; node at (0,0), otherwise the CPPN can&#39;t distinguish between the =\r\nreal\n&gt; connection and the bias connection. Thus I was thinking of using:\n&gt; =\r\n\n&gt;     bias =3D f(x1, y1, x1, y1).\n&gt; \n&gt; \n&gt; Huh, but that foregoes the possi=\r\nbility of defining recurrent\n&gt; connections on a node (connecting a node&#39;s o=\r\nutput directly back to its\n&gt; input), thus we can use that approach but it&#39;s=\r\n not as general a\n&gt; solution as I&#39;d initially thought.\n&gt; \n&gt; It&#39;s tempting t=\r\no &#39;solve&#39; the problem (that is, define a general scheme\n&gt; that works everyw=\r\nhere always) by adding yet another CPPN input such as\n&gt; a &#39;bias specifier&#39; =\r\ninput. Our CPPNs would now have inputs of\n&gt; (including the bias for the CPP=\r\nN):\n&gt; \n&gt;     weight =3D f(1, x1, y1, x2, y2, biasFlag)\n&gt; \n&gt; The biasFlag in=\r\ndicates that we are obtaining the weight to the bias\n&gt; node, you still have=\r\n to choose how you handle x1,y1,x2,y2 from the\n&gt; various options above but =\r\nyou don&#39;t have to worry [so much] about\n&gt; overlapping/clashing coordinates.=\r\n\n&gt; \n&gt; Thoughts?\n&gt; \n&gt; One question is how this would affect ES-HyperNEAT (de=\r\nriving node\n&gt; placement from the structure of the Hypercube). One simple op=\r\ntion is\n&gt; to just ignore the biasFlag input when determining node placement=\r\n\n&gt; (input zero, or maybe some value between o and 1 to pick up on, to\n&gt; som=\r\ne degree, any structure being generated specifically when the\n&gt; biasFlag is=\r\n on?).\n&gt; \n&gt; Cheers,\n&gt; \n&gt; Colin.\n&gt;\n\n\n\n"}}