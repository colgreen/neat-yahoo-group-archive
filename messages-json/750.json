{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":146970080,"authorName":"German Viscuso","from":"German Viscuso &lt;netquake@...&gt;","profile":"gerpsai","replyTo":"LIST","senderId":"SI_iMqwABwXBtlxId2dSHhLIVvow0ef7bXpWn_gCizjXtb37bydcVN6apEo3ExaC4CQmcUXoyZGxaGwVj8O0LzKJDZ_Rb_WM_gpRXDWm","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] differentiation","postDate":"1083816808","msgId":750,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAyYWUwMWM0MzMyMCQ4MjJjY2E0MCRmNzAwYThjMEBwYXJhc2l0ZT4=","referencesHeader":"PDEzODcwMWM0MzJlNyRmODNmNzkwMCQ3MGNiMDEwYUBtYWlsMndvcmxkLmNvbT4gPDQwOTk4MDEwLjkwMzA4MDRAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":749,"nextInTopic":772,"prevInTime":749,"nextInTime":751,"topicId":745,"numMessagesInTopic":9,"msgSnippet":"Perhaps it s possible to apply delta coding as explained in ESP to search in the vecinity of the solution space rather than freeze the resulting network (could","rawEmail":"Return-Path: &lt;netquake@...&gt;\r\nX-Sender: netquake@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 74436 invoked from network); 6 May 2004 04:13:54 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m3.grp.scd.yahoo.com with QMQP; 6 May 2004 04:13:54 -0000\r\nReceived: from unknown (HELO infomail2.infovia.com.ar) (200.51.80.54)\n  by mta2.grp.scd.yahoo.com with SMTP; 6 May 2004 04:13:53 -0000\r\nReceived: from parasite ([168.226.90.225]) by TDIMSO54.backend.tdata.com.ar\n (Sun ONE Messaging Server 6.0 Patch 1 (built Jan 28 2004))\n with ESMTPA id &lt;0HX900FH5Y1ALE40@...&gt; for\n neat@yahoogroups.com; Thu, 06 May 2004 01:05:53 -0300 (GMT)\r\nDate: Thu, 06 May 2004 01:13:28 -0300\r\nTo: neat@yahoogroups.com\r\nMessage-id: &lt;02ae01c43320$822cca40$f700a8c0@parasite&gt;\r\nMIME-version: 1.0\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2800.1409\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1409\r\nContent-type: text/plain; charset=iso-8859-1\r\nContent-transfer-encoding: 7BIT\r\nX-Priority: 3\r\nX-MSMail-priority: Normal\r\nReferences: &lt;138701c432e7$f83f7900$70cb010a@...&gt;\n &lt;40998010.9030804@...&gt;\r\nX-eGroups-Remote-IP: 200.51.80.54\r\nFrom: German Viscuso &lt;netquake@...&gt;\r\nSubject: Re: [neat] differentiation\r\nX-Yahoo-Group-Post: member; u=146970080\r\nX-Yahoo-Profile: gerpsai\r\n\r\nPerhaps it&#39;s possible to apply delta coding as explained in ESP to search in\nthe vecinity of the solution space rather than freeze the resulting network\n(could this be useful?). The approach seems to work well combined with\nincremental evolution.\n\nJust my two cents.\n\nGV\n\n----- Original Message ----- \nFrom: &quot;Colin Green&quot; &lt;cgreen@...&gt;\nTo: &lt;neat@yahoogroups.com&gt;\nSent: Wednesday, May 05, 2004 9:00 PM\nSubject: Re: [neat] differentiation\n\n\n&gt; Hi Chad,\n&gt;\n&gt; Chad Bohannan wrote:\n&gt;\n&gt; &gt; so let me try to summarize what you said.\n&gt; &gt; If I find a network that achieves some minimum fitness, adding new\n&gt; &gt; nodes and continuing the search would be the best way to minimize the\n&gt; &gt; search time.\n&gt;\n&gt; In some circumstances, yes. If we take a problem that requires a network\n&gt; with color inputs as an example, we might not find a good solution if\n&gt; the problem is too complex, in this case one technique that can be\n&gt; employed is to search for solutions to a simpler problem that is\n&gt; closesly related to the problem we are trying to solve, say, recognising\n&gt; objects in monochrome instead of in color . The resulting network can\n&gt; then be used as a seed or starting point for the more complex (color)\n&gt; problem search.\n&gt;\n&gt; &gt; I want to find a color network in a comparable amount of time to a\n&gt; &gt; monochrome network.\n&gt;\n&gt; But a color signal by its very nature conveys more information than a\n&gt; monochromatic one, therefore any network that has to process this\n&gt; information would need to be more complex and will therefore require (on\n&gt; average) longer search times.\n&gt;\n&gt; &gt; Are there ways of using previously discovered topologies to speed up\n&gt; &gt; searches?\n&gt;\n&gt;\n&gt; See above. As an example take a look at one of Ken&#39;s recent papers\n&gt; (co-authored) &quot;Evolving a Roving Eye for Go &quot;, where networks are\n&gt; evolved to play Go, firstly on a 5x5 board and then on a 7x7 board.\n&gt;\nhttp://nn.cs.utexas.edu/pub-view.php?RECORD_KEY(Pubs)=PubID&PubID(Pubs)=145\n&gt;\n&gt; Another example would be: &quot;Incremental Evolution Of Complex General\n&gt; Behavior&quot;\n&gt; http://nn.cs.utexas.edu/pub-view.php?RECORD_KEY(Pubs)=PubID&PubID(Pubs)=35\n&gt;\n&gt;\n&gt; &gt; Something that comes to mind from colins advice is to have stratified\n&gt; &gt; features, and when one stratus of inputs reaches an acceptable\n&gt; &gt; fitness, freeze evolution on those elements, and force the new stratus\n&gt; &gt; of features to evolve around the previous features. This would keep\n&gt; &gt; the dimensionality the same, and assuming that each stratus was of\n&gt; &gt; comparable size, the search time would only increase linearly to the\n&gt; &gt; number of additional inputs.\n&gt;\n&gt; Ah I see, interesting idea. So long as the new problem with an increased\n&gt; number of inputs is an extension from the original problem rather than a\n&gt; modification then such a technique probably would be faster, since it\n&gt; avoids searching the network structure and weights that already do a\n&gt; perfectly good job. On the other hand the existing structure may have\n&gt; spare functional capacity that can handle the new problem by adjusting\n&gt; weights and modifying connections, in which case searching the existing\n&gt; structure may result in a smaller network overall.\n&gt;\n&gt; Colin\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n"}}