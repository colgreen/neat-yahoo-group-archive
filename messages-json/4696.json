{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"-Y-TnE898kajxj3w1r-YonEc5SiYj4mPdrb_K5gjccrWmewqi0a-bG4zvBFHJ4oMtVf7qUI6xTtcqDBRWiy4b8vc8M4oS4qr4eeXshYMjBJZQiGXOFU","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Ideas for automatically deciding the quantity of nodes for HyperNEAT substra","postDate":"1243512177","msgId":4696,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGd2bHVoaCsyanRmQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGd2bGN2cytxOXIyQGVHcm91cHMuY29tPg=="},"prevInTopic":4695,"nextInTopic":4699,"prevInTime":4695,"nextInTime":4697,"topicId":4693,"numMessagesInTopic":6,"msgSnippet":"Hi Ken. You make a good point. My method currently increases overall density and this is a problem. But I think I found a solution. Suppose the substrate of an","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 97071 invoked from network); 28 May 2009 12:03:27 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m3.grp.re1.yahoo.com with QMQP; 28 May 2009 12:03:27 -0000\r\nX-Received: from unknown (HELO n42b.bullet.mail.sp1.yahoo.com) (66.163.168.156)\n  by mta1.grp.re1.yahoo.com with SMTP; 28 May 2009 12:03:26 -0000\r\nX-Received: from [69.147.65.172] by n42.bullet.mail.sp1.yahoo.com with NNFMP; 28 May 2009 12:02:57 -0000\r\nX-Received: from [98.137.34.184] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 28 May 2009 12:02:57 -0000\r\nDate: Thu, 28 May 2009 12:02:57 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;gvluhh+2jtf@...&gt;\r\nIn-Reply-To: &lt;gvlcvs+q9r2@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: Ideas for automatically deciding the quantity of nodes for HyperNEAT substra\r\nX-Yahoo-Group-Post: member; u=283334584; y=SmtoLQvr6zvFFYpUCG6c6o0YHjbHJUMtw2kVv8Rm7RH2mnLHlm1f-0_yPA\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nHi Ken.\n\nYou make a good point. My method currently increases overall densi=\r\nty and this is a problem. But I think I found a solution. Suppose the subst=\r\nrate of an individual is painted on a 2D plane. Now, there can co-exist ano=\r\nther 2D plane which we can call the density mutation map. It can contain fl=\r\noats in the range of [-1 .. 1]. Each generation this map is reset to contai=\r\nn only values of 0.0. When the density mutation is triggered, a random plac=\r\ne and area in the map is chosen and filled with a random value of -10% to +=\r\n10% (-0.1 .. 0.1). This process can be optionally repeated until the densit=\r\ny mutation map is filled to some extend, according to a mutation power or s=\r\nomething. Then in the next generation, the substrate is increased/decreased=\r\n in density according to its density mutation map. \n\nAnd what could be real=\r\nly cool is that the distribution of random locations in the density mutatio=\r\nn map can be predetermined by the CPPN itself. So the CPPN can actually con=\r\ntrol which locations will grow in density. As the CPPN complexifies, these =\r\nlocations can change as well.  Does it make sense? Density mutation maps ar=\r\ne trivial to crossover as well - just average them. \n\nHere is one insight I=\r\n had after a long walk in circles thinking about CPPN patterns, objects and=\r\n substrates. Before some time, I was confident that there exists a method t=\r\nhat can convert *any* pattern in space to an object/substrate. Like an alch=\r\nemist :) But now I realized the truth.\n\nAll objects we perceive, including =\r\nforms of life, are patterns in space. There is no doubt about it. They are =\r\njust spatial patterns in space that can be represented by CPPNs. What mista=\r\nke I did before, was to think that therefore all patterns in space are obje=\r\ncts. This is not true. All objects are patterns in space, but not all patte=\r\nrns in space are objects. Objects and substrates are only a tiny subset, a =\r\nsmall class of patterns in space. They can be represented by CPPNs, of cour=\r\nse. But CPPNs can do a lot more. They can represent any pattern in space. S=\r\no I realized that there is no need to do magic tricks to get my objects and=\r\n substrates evolved. \n\nThe only thing we should put our efforts in, is to f=\r\nind a way to bias the search for the particular class of patterns. And I im=\r\nmediately identified one major obstacle. Genetic defects. A genetic lineage=\r\n does not strictly follow a particular class of patterns. It is very possib=\r\nle that an object&#39;s offspring can be patterns that are not objects and vice=\r\n versa. But we can&#39;t evaluate the non-object patterns.\n\nThere is one soluti=\r\non, though. Suppose we start with a seed CPPN that  we know is producing a =\r\ngood pattern. Some kind of validity check procedure has to be developed, to=\r\n test if a CPPN produces a pattern that belongs to the desired class. When =\r\nany mutation occurs, that validity check is performed and if the resulting =\r\npattern is outside the desired class, undo the mutation and try again. Repe=\r\nat the process until a good pattern comes out of the mutation. This way the=\r\n search will strictly follow the class of patterns, without hurting evoluti=\r\non dynamics like discarding individuals during evaluation would do. \n\nBut t=\r\nhere is a higher probability for the evolution to get stuck. Suppose you wa=\r\nnt to evolve something like an insect model but to get there, the search wi=\r\nll have to pass through a space where no patterns belong to the same class,=\r\n even if the class of &quot;objects&quot; is so vast. Maybe only Novelty Search can h=\r\nandle this. \n\nI am planning to throw away the GNG approach and use some ima=\r\nge processing techniques instead. I found some very useful functions in Ope=\r\nnCV, contour extraction and polygonal approximation for example. I&#39;ll see w=\r\nhich one works better. I have an idea to test out the substrate evolution. =\r\nIt is actually the HyperNEAT food gathering task, but the inputs and output=\r\ns placement will be evolved. And there will be a hidden layer also. It is o=\r\nnly a project on paper now, but I hope I will find more time to implement i=\r\nt.\n\nPeter\n\n\n\n--- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt; =\r\nwrote:\n&gt;\n&gt; Peter, I&#39;m glad to see you&#39;re still thinking about this importan=\r\nt question.  You make some interesting observations.  I think you&#39;re probab=\r\nly right that trying to correlate node density to CPPN complexity is not th=\r\ne best approach.  On the other hand, making changes in node density correla=\r\nted somewhat with fitness seems potentially sensible.  But it still doesn&#39;t=\r\n seem to answer the big question of where within the substrate to add the n=\r\nodes?  Or would you just increase overall density uniformly?  My concern is=\r\n that biological brains did not increase in density (which for them may jus=\r\nt mean size) uniformly.  That is, some parts of the brain got bigger while =\r\nothers did not.  That would seem to imply that a substrate should be able t=\r\no add density selectively to specific regions that evolution decides on its=\r\nelf.  Or perhaps your idea incorporates that kind of regional growth someho=\r\nw already?\n&gt; \n&gt; About saturation of the sigmoid- that is indeed an importan=\r\nt issue.  Right now we are investigating some techniques to mitigate satura=\r\ntion, which I think will end up being effective and also which will facilit=\r\nate the kind of massive substrate complexification that would be really coo=\r\nl to see in the future.\n&gt; \n&gt; Still, we still do not have any elegant algori=\r\nthm to evolve the substrate, though I am confident it will be possible.\n&gt; \n=\r\n&gt; ken\n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;petar_chervenski&quot; &lt;petar_chervensk=\r\ni@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi all!\n&gt; &gt; \n&gt; &gt; I was gone for a while, but before a da=\r\ny or so I had some spare time to continue my research about automated subst=\r\nrate evolution. \n&gt; &gt; \n&gt; &gt; My latest research so far ended up with a system =\r\ncapable of approximating any spatial CPPN picture with a developing mesh ba=\r\nsed on the Growing Neural Gas algorithm. While this worked well and could b=\r\ne used for evolving substrate configurations right away, there was still a =\r\nproblem about deciding the right number of nodes for particular individuals=\r\n. With GNG, it is more like a problem of deciding when to stop development =\r\nor approximation of the CPPN picture. \n&gt; &gt; \n&gt; &gt; When we discussed the issue=\r\n some time ago, I had the idea that CPPN complexity can be directly linked =\r\nto substrate density. More complex CPPN =3D more dense substrate. This seem=\r\ns like a solution but it I think it is actually a bad idea. A CPPN containi=\r\nng many nodes and links does not always produce a complex pattern in space.=\r\n It can be an entirely white or black picture, due to genetic defects. Plus=\r\n, it is not sure that the problem requires that many nodes to be solved - t=\r\nhe CPPN may have enormous complexity but producing a simple well-shaped pic=\r\nture that solves it. \n&gt; &gt; \n&gt; &gt; So what I think now is, that substrate densi=\r\nty should be related to fitness instead. How exactly? Well here is my idea.=\r\n \n&gt; &gt; \n&gt; &gt; All individuals start with a minimal number of nodes in the subs=\r\ntrate, say 50. There will be a mutation increasing the number of nodes with=\r\n about 0%-10% or decreasing with 0%-10%. The mutation rate will vary across=\r\n species. Species that are stagnating for too long time will have the proba=\r\nbility of this mutation increased - because they may just lack the number o=\r\nf nodes to solve the problem. Or have too many nodes. \n&gt; &gt; \n&gt; &gt; You know, t=\r\nhere is a problem with having the number of nodes increasing and this is th=\r\ne over saturation of the sigmoid. Increasing the density with 2x will have =\r\nvery big impact if the weights are not altered, especially in case recurren=\r\nce is present. How can we cope with that? \n&gt; &gt; \n&gt; &gt; I don&#39;t have any experi=\r\nmental data yet, I am too busy programming some bullshit but please tell me=\r\n if this ideas make sense to you. \n&gt; &gt; \n&gt; &gt; Peter\n&gt; &gt;\n&gt;\n\n\n\n"}}