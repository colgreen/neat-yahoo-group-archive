{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"n5Hjq6Dwwn-YRmxd8R3v3hSNl7OIQJur0t726iu1u_T1prHUUj1sHOj_BGeqNq-VRLivW3omVwuOFgbUE1Kn8_A9GR6W","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Open science software/experiment repository","postDate":"1360819777","msgId":5994,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGtmaHNvMSthdmhzQGVHcm91cHMuY29tPg=="},"prevInTopic":5991,"nextInTopic":0,"prevInTime":5993,"nextInTime":5995,"topicId":5942,"numMessagesInTopic":18,"msgSnippet":"Hi Oliver, I enjoyed what you put together there.  It s a nice summary of a debate that many people probably would not even view as a debatable topic.   I","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 15676 invoked from network); 14 Feb 2013 05:29:38 -0000\r\nX-Received: from unknown (10.193.84.135)\n  by m3.grp.bf1.yahoo.com with QMQP; 14 Feb 2013 05:29:38 -0000\r\nX-Received: from unknown (HELO ng18-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.158)\n  by mta1.grp.bf1.yahoo.com with SMTP; 14 Feb 2013 05:29:38 -0000\r\nX-Received: from [98.139.164.124] by ng18.bullet.mail.bf1.yahoo.com with NNFMP; 14 Feb 2013 05:29:38 -0000\r\nX-Received: from [10.193.94.107] by tg5.bullet.mail.bf1.yahoo.com with NNFMP; 14 Feb 2013 05:29:38 -0000\r\nDate: Thu, 14 Feb 2013 05:29:37 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;kfhso1+avhs@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Open science software/experiment repository\r\nX-Yahoo-Group-Post: member; u=54567749; y=EzsT9aUQD1QLmTF78oJ2KoHXFW43WdU73qsh5qa_wAKpNhynkeoY\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nHi Oliver, I enjoyed what you put together there.  It&#39;s a nice summary of=\r\n a debate that many people probably would not even view as a debatable topi=\r\nc.   I appreciate my view getting a fair hearing.\n\nWhile I also appreciate =\r\nthat you take a neutral point of view in the article, I still wanted to com=\r\nment a bit on some of the points in favor of code sharing that you present.=\r\n One thing I notice in your summary is that some of the &quot;for&quot; arguments see=\r\nm more like arguments for sharing code as opposed to arguments for *requiri=\r\nng* sharing code.  Of course no one can be against sharing code (leaving as=\r\nide whether to require it or not) and explaining why it&#39;s a good idea is ea=\r\nsy.\n\nFor example, I think just about everyone is for eating vegetables.  Bu=\r\nt very few people would want the government to *require* us to eat vegetabl=\r\nes.  Yet no matter how persuasively you counter with evidence that vegetabl=\r\nes are good for us, it doesn&#39;t really address the real locus of the debate,=\r\n which is on the unintended consequences of being forced to eat vegetables =\r\nby the government.\n\nIf you look at your counter-arguments to the &quot;against&quot; =\r\npoints, they often hinge on the idea that the bad stuff need not come true.=\r\n  For example:\n\n&quot;the code does not need to be able to be run by a reviewer.=\r\n&quot;\n\n&quot;It doesn&#39;t even need to be particularly &quot;clean&quot; or commented&quot;\n\n&quot;There n=\r\needn&#39;t be any requirement to maintain the old code.&quot;\n\nAnd you acknowledge: =\r\n&quot;Re-implementing the model in a new piece of code provides a lot more certa=\r\ninty that the idea works as described in the paper.&quot;\n\nBut with all this stu=\r\nff that need not happen (and presumably that you are therefore saying shoul=\r\nd not happen), and the fact that reimplementation is still important even w=\r\nith all this code being provided, it raises again the question of what the =\r\npoint is of making this whole exercise a requirement anyway?  Life will har=\r\ndly be better for the community if all you are required to do is send a zip=\r\n file with some incomprehensible and uncompilable filler inside it to pass =\r\nthe &quot;code submission&quot; requirement.  Why fool ourselves into thinking otherw=\r\nise?\n\nI like how it is now where you can tell how serious an author is with=\r\n his or her code by knowing that they released it voluntarily.  If authors =\r\ndon&#39;t release code, it gives us a useful signal that someone should try rei=\r\nmplementing the idea if it sounds at all interesting, or perhaps that the a=\r\nuthors didn&#39;t think their own idea significant enough to warrant releasing =\r\nit.  Such useful signals will be gone with the new system.  Instead, everyo=\r\nne will be able to pretend they cared enough to &quot;share&quot; their code.\n\nAnyway=\r\n, when it comes to bureaucracy, I think slippery slopes look more and more =\r\nslippery the older you get.  When I was younger I wouldn&#39;t have thought abo=\r\nut it as much, but now that I&#39;ve been on so many committees and boards I ca=\r\nn see that adding new rules is almost a force of nature.  Just in my fallib=\r\nle opinion, if you ever decide to implement a rule but feel a need to prefa=\r\nce it with a number of caveats about what it &quot;need not&quot; imply, get ready fo=\r\nr all those need nots to come true.  But please forgive my cynicism - I&#39;m u=\r\nsually an optimist - just not on the subject of bureaucracy.  I plan to con=\r\ntinue eating vegetables and releasing code in any case. :)\n\nBest,\n\nken\n\n---=\r\n In neat@yahoogroups.com, Oliver Coleman  wrote:\n&gt;\n&gt; Hi all, just to keep f=\r\nlogging this debate for all its worth, I wrote a blog\n&gt; post that attempts =\r\nto boil down the arguments and counter-arguments\n&gt; (presented here and my o=\r\nwn) for and against (requiring) submission of code\n&gt; along with papers:\n&gt; h=\r\nttp://ojcoleman.com/content/open-science-what-about-source-code\n&gt; \n&gt; Let me=\r\n know if you feel I&#39;ve ripped off any statements you&#39;ve made in the\n&gt; discu=\r\nssion in this group and want to be acknowledged for them in the post.\n&gt; :) =\r\nMost of the arguments against are from Ken, and they&#39;re the most\n&gt; blatantl=\r\ny copied. (I&#39;ve linked to this thread from the post so people can\n&gt; easily =\r\nfind the source of an argument and read it in the authors words.)\n&gt; \n&gt; T: 0=\r\n421 972 953\n&gt; E: oliver.coleman@...\n&gt; W: http://ojcoleman.com\n&gt; \n&gt; \n&gt; \n&gt; On=\r\n 19 January 2013 14:37, Ken  wrote:\n&gt; \n&gt; &gt; **\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; By the wa=\r\ny, I want to emphasize that I am very much in favor of releasing\n&gt; &gt; code v=\r\noluntarily and agree with Jean-Baptise that it is often very helpful.\n&gt; &gt; I=\r\n just don&#39;t want a universal requirement.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --- In neat@yahoogrou=\r\nps.com, &quot;Ken&quot; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Maybe I can elaborate a little=\r\n more on why I don&#39;t think code submission\n&gt; &gt; should be a requirement. I a=\r\nppear to be on the minority side of this issue\n&gt; &gt; so I know it&#39;s an uphill=\r\n battle but here&#39;s my reasoning:\n&gt; &gt; &gt;\n&gt; &gt; &gt; As soon as you make something =\r\na requirement, you are adding to\n&gt; &gt; bureaucracy. Inevitably, someone will =\r\nbe charged with checking that you\n&gt; &gt; satisfied the requirement. Even if we=\r\n start out saying you &quot;only&quot; have to\n&gt; &gt; submit the code but no one has to =\r\nrun it, eventually an incident will be\n&gt; &gt; exposed when someone submitted i=\r\nncorrect or even fraudulent code, and then\n&gt; &gt; the code checks will become =\r\nincreasingly onerous. And it&#39;s likely those\n&gt; &gt; code checks will be done by=\r\n reviewers, which means that people who already\n&gt; &gt; don&#39;t spend enough time=\r\n reading our papers will now spend even less time as\n&gt; &gt; they have to dedic=\r\nate new effort to looking at a giant impenetrable volume\n&gt; &gt; of spaghetti c=\r\node.\n&gt; &gt; &gt;\n&gt; &gt; &gt; I&#39;ve sat on enough executive committees and editorial boar=\r\nds at this\n&gt; &gt; point to know that things will only get stricter and more ou=\r\nt of control.\n&gt; &gt; Requirements never get lighter, they only get heavier. Th=\r\nese committees\n&gt; &gt; often make decisions with broad implications after short=\r\n, rancorous\n&gt; &gt; arguments that ratchet up the paranoia about how someone mi=\r\nght cheat the\n&gt; &gt; system, leading to more and more burdensome checks and re=\r\nquirements. As\n&gt; &gt; Jeff points out, as if having to write 15-page project d=\r\nescription wasn&#39;t\n&gt; &gt; enough, now NSF requires proposals to include an addi=\r\ntional 2-page data\n&gt; &gt; management plan. Not to mention the new proliferatio=\r\nn of endless plagiarism\n&gt; &gt; checks throughout the academic world. So once w=\r\ne open this Pandora&#39;s box,\n&gt; &gt; don&#39;t think that someone won&#39;t ultimately be=\r\n trying to run your code and\n&gt; &gt; blaming you if it doesn&#39;t work for them.\n&gt;=\r\n &gt; &gt;\n&gt; &gt; &gt; As far as the upsides, such as Jeff&#39;s example of how helpful it =\r\nis to\n&gt; &gt; have the code to reproduce results, if you really think about it,=\r\n it&#39;s not\n&gt; &gt; so clear cut. In fact, Jeff, it&#39;s conceivable that you (or so=\r\nmeone like\n&gt; &gt; you) would not have made your discovery had the code been av=\r\nailable to\n&gt; &gt; begin with, because you would have simply run it and seen (m=\r\nisleadingly)\n&gt; &gt; that it works. It&#39;s only because it wasn&#39;t available and y=\r\nou thereby were\n&gt; &gt; forced to try to reproduce the concept for yourself tha=\r\nt you learned the\n&gt; &gt; concept doesn&#39;t work as advertised. It may even be th=\r\ne case that having\n&gt; &gt; specific experimental code universally available lea=\r\nds the community to\n&gt; &gt; more deception (and thus to be more naive) because =\r\nwe would trust results\n&gt; &gt; that ultimately depend on obscure idiosyncrasies=\r\n hidden in arcane code\n&gt; &gt; bases rather than on the supposed main idea. Aft=\r\ner all, we all know you can\n&gt; &gt; get virtually anything to &quot;work&quot; if you fin=\r\nesse it enough.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Not only that, but more deeply it seems like ma=\r\nking code a requirement\n&gt; &gt; is wishful thinking: We&#39;re trying to get a quic=\r\nk fix for a problem (i.e.\n&gt; &gt; deciding whether an idea is promising) that i=\r\ns only really solved by good\n&gt; &gt; old fashioned time and effort. That is, wh=\r\nat really validates a method is\n&gt; &gt; not the one time it was run to give a p=\r\nublished result, but rather the\n&gt; &gt; numerous reimplementations by independe=\r\nnt parties over many subsequent\n&gt; &gt; years. The main reason you can trust NE=\r\nAT is not because you can download\n&gt; &gt; my original pole balancing experimen=\r\nt and run it, but because of all the\n&gt; &gt; excellent independent packages lik=\r\ne SharpNEAT, ANJI, and many others in\n&gt; &gt; which I had no hand at all.\n&gt; &gt; &gt;=\r\n\n&gt; &gt; &gt; Moreover, why should we even care about the code if the idea is\n&gt; &gt; =\r\nuninspiring anyway? By forcing everyone to submit code we are implicitly\n&gt; =\r\n&gt; suggesting that what matters is simply that something worked rather than\n=\r\n&gt; &gt; that it is an interesting idea. In my view the biggest problem in revie=\r\nwing\n&gt; &gt; today is not some kind of systematic flaw in experimental design b=\r\nut rather\n&gt; &gt; an unhealthy obsession with experimental results to the compl=\r\nete exclusion\n&gt; &gt; of the main idea. Jeff, you say that &quot;reviewers tend to b=\r\ne pretty good\n&gt; &gt; about this&quot; when it comes to unfairly demanding excessive=\r\n comparisons, but\n&gt; &gt; if that&#39;s true, it&#39;s only in our own community. In th=\r\ne larger machine\n&gt; &gt; learning community, reviewers are biased against EC an=\r\nd would love another\n&gt; &gt; excuse simply to say, &quot;Why didn&#39;t you compare to X=\r\n&quot; as a way of avoiding\n&gt; &gt; actually needing to understand the central idea.=\r\n We will be perpetuating\n&gt; &gt; that kind of culture and hence our own ostraci=\r\nzation and defunding.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Let&#39;s leave it voluntary and stop the sen=\r\nseless proliferation of endless\n&gt; &gt; requirements that technology tempts us =\r\nto perpetuate upon ourselves. We are\n&gt; &gt; ultimately only hurting ourselves =\r\nas we forget that well-intended\n&gt; &gt; requirements steal from the precious li=\r\nttle time in life we have to\n&gt; &gt; actually sit and think, which is the most =\r\nimportant thing we do as\n&gt; &gt; scientists.\n&gt; &gt; &gt;\n&gt; &gt; &gt; ken\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n--- In neat@yahoogroups.com, Jeff Clune wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Hello all,\n&gt;=\r\n &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I agree with JBM that code should be submitted, and I don&#39;t =\r\nmind it\n&gt; &gt; being a requirement. Submitting the code does not mean it has t=\r\no compile\n&gt; &gt; the day after submission, be maintained, or even be clean/com=\r\nmented. It&#39;s\n&gt; &gt; just a written record of what happened in the experiment. =\r\nIf you are\n&gt; &gt; publishing the experiment and trying to describe exactly wha=\r\nt you did, the\n&gt; &gt; code is the equivalent of a very detailed explanation of=\r\n the experiment\n&gt; &gt; that allows others to replicate it if they wish.\n&gt; &gt; &gt; =\r\n&gt;\n&gt; &gt; &gt; &gt; For example, Jean-Baptiste and I tried and failed to replicate th=\r\ne\n&gt; &gt; results of a famous, high-impact study. It was hard for us to know if=\r\n there\n&gt; &gt; were bugs in our code, if we had the wrong parameters, or if the=\r\n result\n&gt; &gt; itself was suspicious (e.g. a bug in their code). Eventually we=\r\n got the\n&gt; &gt; code from the authors and we suddenly were able to replicate t=\r\nhe results\n&gt; &gt; and learn under which conditions the effect in question occu=\r\nrs. That never\n&gt; &gt; would have happened without their code. In our case the =\r\nauthors were still\n&gt; &gt; alive and willing to share their code, but both of t=\r\nhose conditions don&#39;t\n&gt; &gt; hold in a lot of cases (especially with older wor=\r\nk). I think science is\n&gt; &gt; better of if we&#39;re able to see exactly how a res=\r\nult came to be.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I do agree that there may be some disincent=\r\nive for businesses to\n&gt; &gt; publish. But how many businesses publish papers a=\r\nbout things they don&#39;t\n&gt; &gt; really want to share completely? I don&#39;t run int=\r\no too many influential\n&gt; &gt; papers like that. And maybe those businesses can=\r\n publish in other journals,\n&gt; &gt; or get an exception from the editors.\n&gt; &gt; &gt;=\r\n &gt;\n&gt; &gt; &gt; &gt; As for the accumulation of a lot of worthless code, is that real=\r\nly a\n&gt; &gt; big problem? If they papers are worthless, they&#39;re already\n&gt; &gt; acc=\r\numulating=85this is just a link in the paper that can be ignored, no?\n&gt; &gt; &gt;=\r\n &gt;\n&gt; &gt; &gt; &gt; I do agree that it may create a pressure on future papers to inc=\r\nlude\n&gt; &gt; previous algorithms more as controls, because the reviewers can sa=\r\ny &quot;the\n&gt; &gt; code is posted, why didn&#39;t you use it?&quot; I think we just have to =\r\nresist that\n&gt; &gt; as reviewers=85because everyone knows what a pain it is to =\r\nget someone else&#39;s\n&gt; &gt; code running in their domain. Reviewers tend to be p=\r\nretty good about this.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; In any case, it&#39;s an interesting dis=\r\ncussion=85.and likely the future\n&gt; &gt; whether we like it or not. My guess is=\r\n that a lot of journals will follow\n&gt; &gt; the lead of the top journals (plus =\r\nthe NSF now requires such archiving,\n&gt; &gt; which is what is really driving it=\r\n in a lot of cases).\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Best regards,\n&gt; &gt; &gt; &gt; Jeff Clune\n&gt; &gt; &gt;=\r\n &gt;\n&gt; &gt; &gt; &gt; Assistant Professor\n&gt; &gt; &gt; &gt; Computer Science\n&gt; &gt; &gt; &gt; University =\r\nof Wyoming\n&gt; &gt; &gt; &gt; jclune@\n&gt; &gt; &gt; &gt; jeffclune.com\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; On Jan 18,=\r\n 2013, at 7:21 AM, wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Hi Ken,\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; M=\r\nore practically,\n&gt; &gt; &gt; &gt; &gt; &gt; it will mean that reviewers will start rejecti=\r\nng papers based on\n&gt; &gt; supposed\n&gt; &gt; &gt; &gt; &gt; &gt; code glitches in required code =\r\nsubmissions. That will give\n&gt; &gt; reviewers a\n&gt; &gt; &gt; &gt; &gt; &gt; whole new justifica=\r\ntion for completely ignoring the main of idea\n&gt; &gt; of the\n&gt; &gt; &gt; &gt; &gt; &gt; paper.=\r\n\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Students will also become overwhelmed with code em=\r\nergencies (since\n&gt; &gt; &gt; &gt; &gt; &gt; publication will depend now upon strangers run=\r\nning your code) and\n&gt; &gt; code\n&gt; &gt; &gt; &gt; &gt; &gt; cleanups demanded by random strang=\r\ners who may themselves be at\n&gt; &gt; fault or\n&gt; &gt; &gt; &gt; &gt; &gt; simply ignorant. Furt=\r\nhermore, in a few years we will have massive\n&gt; &gt; &gt; &gt; &gt; &gt; repositories of ju=\r\nnk code (think of the hundreds of papers\n&gt; &gt; published only\n&gt; &gt; &gt; &gt; &gt; &gt; at =\r\nGECCO in one year) that is so out of date that it requires\n&gt; &gt; deprecated\n&gt;=\r\n &gt; &gt; &gt; &gt; &gt; compilers and computing platforms even to run. But we will be\n&gt; =\r\n&gt; required to\n&gt; &gt; &gt; &gt; &gt; &gt; maintain these repositories, which will become in=\r\ncreasingly\n&gt; &gt; ignored,\n&gt; &gt; &gt; &gt; &gt; &gt; simply to maintain the appearance of ri=\r\ngor.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; I think there is a large difference between review=\r\ning the code and\n&gt; &gt; &gt; &gt; &gt; requesting that the authors make it available. I=\r\n don&#39;t expect\n&gt; &gt; reviewers to\n&gt; &gt; &gt; &gt; &gt; run the code when it&#39;s available. =\r\nFirst, re-launching experiments may\n&gt; &gt; &gt; &gt; &gt; require weeks of computations=\r\n on large clusters. Second, I fully\n&gt; &gt; &gt; &gt; &gt; understand that releasing &quot;cl=\r\nean code&quot; is a huge job and not our\n&gt; &gt; main job\n&gt; &gt; &gt; &gt; &gt; (Science).\n&gt; &gt; &gt;=\r\n &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; However, I view the code as the detailed, technical descript=\r\nion of a\n&gt; &gt; &gt; &gt; &gt; paper. It contains all the parameters and all the implem=\r\nentation\n&gt; &gt; details,\n&gt; &gt; &gt; &gt; &gt; including those that the authors thought we=\r\nre not important (but\n&gt; &gt; that may\n&gt; &gt; &gt; &gt; &gt; be actually important). We don=\r\n&#39;t need to be able to compile the code\n&gt; &gt; in\n&gt; &gt; &gt; &gt; &gt; the future, we only=\r\n need to be able to read it.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; When I reuse an algorithm =\r\ndescribed in a paper, I often re-implement\n&gt; &gt; it.\n&gt; &gt; &gt; &gt; &gt; It&#39;s a good ex=\r\nercise and it helps keeping my framework clean and\n&gt; &gt; &gt; &gt; &gt; consistent. Bu=\r\nt I always find very helpful to have have access to the\n&gt; &gt; &gt; &gt; &gt; source co=\r\nde so that I can understand the small details and see the\n&gt; &gt; &gt; &gt; &gt; &quot;tricks=\r\n&quot; used by the authors. For instance, I&#39;m very happy that\n&gt; &gt; Sebastian\n&gt; &gt; =\r\n&gt; &gt; &gt; and you released the source code of the node placement algorithm for\n=\r\n&gt; &gt; &gt; &gt; &gt; HyperNEAT: thanks to it, we were able to reimplement it in our\n&gt; =\r\n&gt; framework\n&gt; &gt; &gt; &gt; &gt; in a few hours/days. Otherwise, it would have been mu=\r\nch more\n&gt; &gt; difficult.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Best regards,\n&gt; &gt; &gt; &gt; &gt; -- JBM\n&gt;=\r\n &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;  \n&gt; &gt;\n&gt;\n\n\n\n"}}