{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":135782082,"authorName":"tansey4","from":"&quot;tansey4&quot; &lt;tansey4@...&gt;","profile":"tansey4","replyTo":"LIST","senderId":"-wkT8YjeC5p4YFUEnUaJmvRcy1AqL5eole3EKCdqHJYiN6giLLpY-fZZ4J4FZes9MRIqBKmR3vNLNRW9H9OqyXp4DYI","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Questions about NEAT mutation implementations","postDate":"1172632599","msgId":2991,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVzMnM2bitlajg0QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVzMm9vaCs1aDllQGVHcm91cHMuY29tPg=="},"prevInTopic":2990,"nextInTopic":2992,"prevInTime":2990,"nextInTime":2992,"topicId":2988,"numMessagesInTopic":6,"msgSnippet":"One more follow-up question about mutate_add_node.  When the method inserts the new node and creates 2 new connections, why does the first link inherit the","rawEmail":"Return-Path: &lt;tansey4@...&gt;\r\nX-Sender: tansey4@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 99049 invoked from network); 28 Feb 2007 03:16:53 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m47.grp.scd.yahoo.com with QMQP; 28 Feb 2007 03:16:53 -0000\r\nReceived: from unknown (HELO n25.bullet.scd.yahoo.com) (66.94.237.54)\n  by mta9.grp.scd.yahoo.com with SMTP; 28 Feb 2007 03:16:53 -0000\r\nReceived: from [66.218.69.5] by n25.bullet.scd.yahoo.com with NNFMP; 28 Feb 2007 03:16:39 -0000\r\nReceived: from [66.218.66.86] by t5.bullet.scd.yahoo.com with NNFMP; 28 Feb 2007 03:16:39 -0000\r\nDate: Wed, 28 Feb 2007 03:16:39 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;es2s6n+ej84@...&gt;\r\nIn-Reply-To: &lt;es2ooh+5h9e@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;tansey4&quot; &lt;tansey4@...&gt;\r\nSubject: Re: Questions about NEAT mutation implementations\r\nX-Yahoo-Group-Post: member; u=135782082; y=ds5sdFbAPbd0pA0LetUMw7l9ORKjlruAnLccolejiPFfsg\r\nX-Yahoo-Profile: tansey4\r\n\r\nOne more follow-up question about mutate_add_node.  When the method\ninserts=\r\n the new node and creates 2 new connections, why does the first\nlink inheri=\r\nt the recurrent flag and not the second link?\n\nThe way I see it, you have 2=\r\n nodes (A and B), and the chosen link\nbetween them is recurrent.  You inser=\r\nt a new node (C) inbetween A and\nB, so now instead of the link being B-&gt;A, =\r\nit&#39;s B-&gt;C-&gt;A.  It seems like\nyou should label the C-&gt;A link as recurrent.  =\r\nOr does this not even\nmatter?\n\nThanks,\nWesley\n\n--- In neat@yahoogroups.com,=\r\n &quot;tansey4&quot; &lt;tansey4@...&gt; wrote:\n&gt;\n&gt; Thanks for the response Ken.  I realize=\r\n you haven&#39;t worked on the code\n&gt; in a long time, so I&#39;ll try to keep my qu=\r\nestions as conceptual as\n&gt; possible.\n&gt; \n&gt; To that end, I have one more ques=\r\ntion.  The mutate_add_node method\n&gt; tries to find an eligible link to inser=\r\nt a new node into.  To\n&gt; determine eligibility, it looks at 2 criteria:\n&gt; 1=\r\n. Is the link enabled\n&gt; 2. Is the input node of the link a bias node\n&gt; \n&gt; W=\r\nhy does criteria #2 exclude the link from having a node inserted\ninto it?\n&gt;=\r\n \n&gt; Thanks,\n&gt; Wesley\n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;k=\r\nstanley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hmm let me try to recall the reasoning I had sever=\r\nal years ago when \n&gt; &gt; I wrote that function :) \n&gt; &gt; \n&gt; &gt; First, I should n=\r\note that I rarely ever use mutate_toggle_enable \n&gt; &gt; (its probability is us=\r\nually set to zero in my runs).  I have found \n&gt; &gt; it to be mainly just disr=\r\nuptive.  However, others here have \n&gt; &gt; developed more principled ways of p=\r\nruning networks which probably \n&gt; &gt; work better than my random toggler.\n&gt; &gt;=\r\n \n&gt; &gt; In any case, I believe that you are correct- if you really want to \n&gt;=\r\n &gt; keep everything together in the network then it would be necessary \n&gt; &gt; =\r\nto check both the in-node and out-node.  \n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt; &gt; --- In neat=\r\n@yahoogroups.com, &quot;tansey4&quot; &lt;tansey4@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Hi all,\n&gt; &gt; &gt; \n&gt; =\r\n&gt; &gt; I&#39;m working on my own implementation of NEAT using the rtNEAT code \n&gt; &gt;=\r\n as\n&gt; &gt; &gt; a starting point.  I am on the mutation operators and had a \n&gt; &gt; =\r\nquestion\n&gt; &gt; &gt; about  Genome::mutate_toggle_enable(int times).  When the me=\r\nthod \n&gt; &gt; finds\n&gt; &gt; &gt; a gene to disable (if the gene is enabled), it does a=\r\n check to see \n&gt; &gt; if\n&gt; &gt; &gt; it can do this without fragmenting the network.=\r\n  The comment says:\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; We need to make sure that another gene c=\r\nonnects out of the in-\n&gt; &gt; node\n&gt; &gt; &gt; &gt; Because if not a section of network=\r\n will break off and become \n&gt; &gt; isolated\n&gt; &gt; &gt; \n&gt; &gt; &gt; My question is does i=\r\nt only check the in_nodes and not the \n&gt; &gt; out_nodes?\n&gt; &gt; &gt;  If we don&#39;t ch=\r\neck out_nodes, wouldn&#39;t it be possible for the \n&gt; &gt; outputs\n&gt; &gt; &gt; to become=\r\n disconnected from the network?  If you have a network of \n&gt; &gt; 1\n&gt; &gt; &gt; inpu=\r\nt and 2 output nodes, where the input is connected to both\n&gt; &gt; &gt; outputs, w=\r\nouldn&#39;t this method consider it valid to disable one of \n&gt; &gt; the\n&gt; &gt; &gt; conn=\r\nections?\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}