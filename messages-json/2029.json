{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":151231063,"authorName":"Joseph Reisinger","from":"Joseph Reisinger &lt;joeraii@...&gt;","profile":"joeraii","replyTo":"LIST","senderId":"WmGu5tO6yPgI37EI1Nv7MkszT4sQiSPwo3zS_udnSmmkdTkmtX6Wt6DVQykZ8qShx6rKK7V38QUUAIRoASRBHXSV3FmnXCrzIpvyOPA3NQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Benchmarks?","postDate":"1120579956","msgId":2029,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuTE5YLjQuNjMuMDUwNzA1MTA1NzQ4MC4yNjkzMkBvcmFuZ2UtcGVrb2UuY3MudXRleGFzLmVkdT4=","inReplyToHeader":"PDE5YjEwZDUxMDUwNzA1MDg0MjE4MjQ0ZDA5QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDE5YjEwZDUxMDUwNzA1MDg0MjE4MjQ0ZDA5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":2028,"nextInTopic":2034,"prevInTime":2028,"nextInTime":2032,"topicId":2028,"numMessagesInTopic":33,"msgSnippet":"... I haven t really seen any simple control tasks in the literature that would /require/ many hidden nodes -- maybe Ken can answer this better. This seems to","rawEmail":"Return-Path: &lt;joeraii@...&gt;\r\nX-Sender: joeraii@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 17556 invoked from network); 5 Jul 2005 16:13:04 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m29.grp.scd.yahoo.com with QMQP; 5 Jul 2005 16:13:04 -0000\r\nReceived: from unknown (HELO nobodaddy.cs.utexas.edu) (128.83.120.154)\n  by mta3.grp.scd.yahoo.com with SMTP; 5 Jul 2005 16:13:03 -0000\r\nReceived: from orange-pekoe.cs.utexas.edu (joeraii@... [128.83.120.122])\n\tby nobodaddy.cs.utexas.edu (8.13.4/8.13.4) with ESMTP id j65GCaai010030\n\tfor &lt;neat@yahoogroups.com&gt;; Tue, 5 Jul 2005 11:12:36 -0500 (CDT)\r\nReceived: (from joeraii@localhost)\n\tby orange-pekoe.cs.utexas.edu (8.13.4/8.13.4/Submit) id j65GCaXs027147;\n\tTue, 5 Jul 2005 11:12:36 -0500\r\nDate: Tue, 5 Jul 2005 11:12:36 -0500 (CDT)\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;19b10d51050705084218244d09@...&gt;\r\nMessage-ID: &lt;Pine.LNX.4.63.0507051057480.26932@...&gt;\r\nReferences: &lt;19b10d51050705084218244d09@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Joseph Reisinger &lt;joeraii@...&gt;\r\nSubject: Re: [neat] Benchmarks?\r\nX-Yahoo-Group-Post: member; u=151231063; y=SY9ytZdB0lx4EhxZF-g26I0t2R6pT9fXCGBX-eEdn91eYQ\r\nX-Yahoo-Profile: joeraii\r\n\r\n&gt; Do people on this list see these or other approaches as viable\n&gt; benchmarks?  Are there others in the literature that people know about\n&gt; that would work better?\n\nI haven&#39;t really seen any simple control tasks in the literature that \nwould /require/ many hidden nodes -- maybe Ken can answer this better. \nThis seems to be the big problem with benchmarking things in general: \nyou&#39;re optimizing your algorihtm on simple problems since the results are \neasy to understand, but then you are expecting it to scale up to the \nharder stuff. But optimizing for simple benchmarks may impede \nperformance on more difficult tasks.\n\nAnyway, one of the benchmarks I played around with when I was writing \nmodular NEAT was tesselated XOR (i.e. 10 inputs, 5 outputs, each pair of \nconsecutive inputs should map XOR to one output). That was mainly to test \nmodular substructure reuse, but I think it might be a fitting benchmark \ntask for phased search and other algorithms that require more complex \nproblems. Tesselated logic functions have two main benefits:\n\n1) They are just as easy to understand as basic XOR, so you can actually \nlook at the resulting networks and figure out whats going on.\n2) They are scalably complex, i.e. you can keep making the task bigger (40 \ninputs, 20 outputs) until your algorithm or computer chokes. This way they \nhelp test algorithm scalability.\n\nIf you&#39;re interested I can probably dig out the tesselated XOR code from \nmodular NEAT, but I doubt you&#39;d have any trouble implementing it yourself \nfrom scratch ;)\n\nJoe\n\n-- \n\nJoseph Reisinger\nhttp://www.cs.utexas.edu/users/joeraii\n\n"}}