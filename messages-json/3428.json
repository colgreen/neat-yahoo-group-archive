{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":275211662,"authorName":"Cesar G. Miguel","from":"&quot;Cesar G. Miguel&quot; &lt;cesargm@...&gt;","profile":"fdital","replyTo":"LIST","senderId":"As2pFwtQctrFYKsV3eXGCpOr9glCm1Qq53tAV9P6fVA0HpQRizkjeZa39Po-sTctRi_zHsmMSz5ApQzxr2VOct2vj0QcLWJrag","spamInfo":{"isSpam":false,"reason":"0"},"subject":"ANNs updating methods and differences","postDate":"1182816759","msgId":3428,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRkZjEwMDc4MDcwNjI1MTcxMnEyN2QyNDRlYXMzMGE4ODcxNzRlM2Y4Y2RjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":3429,"prevInTime":3427,"nextInTime":3429,"topicId":3428,"numMessagesInTopic":4,"msgSnippet":"Hi, Something s been bothering me lately. There are two methods for updating the neural network state: asynchronous and synchronous. These two methods gives","rawEmail":"Return-Path: &lt;cesar.gomes@...&gt;\r\nX-Sender: cesar.gomes@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 442 invoked from network); 26 Jun 2007 00:12:44 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m43.grp.scd.yahoo.com with QMQP; 26 Jun 2007 00:12:44 -0000\r\nReceived: from unknown (HELO an-out-0708.google.com) (209.85.132.245)\n  by mta9.grp.scd.yahoo.com with SMTP; 26 Jun 2007 00:12:44 -0000\r\nReceived: by an-out-0708.google.com with SMTP id b6so401845ana\n        for &lt;neat@yahoogroups.com&gt;; Mon, 25 Jun 2007 17:12:40 -0700 (PDT)\r\nDKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;\n        d=gmail.com; s=beta;\n        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition:x-google-sender-auth;\n        b=aM4OvCTEkBqSTWv4aGlUCD5FDNELSZy4br0wjeLx79+cGr+63aHBdrN4qexZt8xARlPjeQuSbUCweYpiF5/+qEDMyNfjZxUI8wx72o5m8OFpVgFOCbNyYJGq9MVeG5dqsXsKwCxMM/KziTgoyanocv874GOPw40nxcMfCGkezM8=\r\nReceived: by 10.100.190.8 with SMTP id n8mr3474500anf.1182816760052;\n        Mon, 25 Jun 2007 17:12:40 -0700 (PDT)\r\nReceived: by 10.100.9.13 with HTTP; Mon, 25 Jun 2007 17:12:39 -0700 (PDT)\r\nMessage-ID: &lt;ddf100780706251712q27d244eas30a887174e3f8cdc@...&gt;\r\nDate: Mon, 25 Jun 2007 21:12:39 -0300\r\nTo: neat@yahoogroups.com\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-Google-Sender-Auth: fbdfbe1806257e57\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Cesar G. Miguel&quot; &lt;cesargm@...&gt;\r\nSubject: ANNs updating methods and differences\r\nX-Yahoo-Group-Post: member; u=275211662; y=RU2saiZj3wTPmjtAkiULkTnPUot2pesjAarj3EZY5fHw\r\nX-Yahoo-Profile: fdital\r\n\r\nHi,\n\nSomething&#39;s been bothering me lately. There are two methods for\nupdating the neural network state: asynchronous and synchronous.\n\nThese two methods gives different results, so we need to consider them\nwhen implementing a general neural network class (in NEAT or in a\ngeneral purpose application).\n\nThe synchronous mode (or parallel) is just a matrix-vector\nmultiplication, where the matrix represents the network weights and\nconnectivity and the vector is the state of the network at time t. In\nthis mode, all neurons are updated at the same time, only requiring\ninformation from the last time. You also need to set an initial\ncondition (state vector at time t=0), even if the network topology is\nfeed-forward.\n\nBut if we also update the state vector every time a neuron output is\ncomputed we have a &quot;real-time&quot; or asynchronous updating. This is\nachieved by choosing a random neuron from the network or following a\ncertain pattern (update all neurons going from the input to the output\nlike in feed-forward topology). A neuron output is computed using the\nmost recent information from the network (not only its last state).\n\nFor instance, as far as I could check, Matt Simmerson&#39;s NEAT\nimplementation (NEAT4J) uses asynchronous updating: from the output\nneuron it recursively updates all the necessary nodes down to the\ninput. If there are any recurrent\nlinks, its first output (initial state) is set to zero or any real\nvalue you wish.\n\n1. Since the network&#39;s dynamics is affected by these two different\nmethods, which one to choose?\n2. How to choose an initial state vector for recurrent links ensuring\noverall network stability?\n\nI know that the last question is a difficult one since we&#39;re working\nwith a discrete dynamical system, but what really bothers me is the\nfirst one.\n\nJust to make things clearer, I have an example where the network&#39;s\ninput is set to {1} and the initial state is {0,0}:\n\nhttp://www.ime.usp.br/~cesargm/updating.png\n\nCesar\n\n"}}