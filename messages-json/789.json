{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":130107745,"authorName":"Chad Bohannan","from":"&quot;Chad Bohannan&quot; &lt;chad@...&gt;","profile":"tailboom22","replyTo":"LIST","senderId":"_rOHJwqhsU8HziSNwh9mw0E_bmAX3UMjNenHBtIcS0Kvj7i2mvBcaxzQNAZ7moTcn5H2Vch95dNQupAH2YTRjXfGQyjRg7WuqbY","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: multi-agent net inputs","postDate":"1084741534","msgId":789,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGQ1ZjIwMWM0M2I4OSQ4N2E3MTk1MCQ2Y2NiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":788,"nextInTopic":790,"prevInTime":788,"nextInTime":790,"topicId":780,"numMessagesInTopic":11,"msgSnippet":"These suggestions about calculating where the other targets are are great. That will take lots less power than scanning arcs with a ray seeing if it hit","rawEmail":"Return-Path: &lt;chad@...&gt;\r\nX-Sender: chad@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 80531 invoked from network); 16 May 2004 21:11:27 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m18.grp.scd.yahoo.com with QMQP; 16 May 2004 21:11:27 -0000\r\nReceived: from unknown (HELO mwde08la.mail2world.com) (66.28.189.182)\n  by mta4.grp.scd.yahoo.com with SMTP; 16 May 2004 21:11:27 -0000\r\nReceived: from mail pickup service by mwde08la.mail2world.com with Microsoft SMTPSVC;\n\t Sun, 16 May 2004 14:05:35 -0700\r\nauth-sender:chad@...\r\nReceived: from 10.1.203.108 unverified ([10.1.203.108]) by mwde08la.mail2world.com with Mail2World SMTP Server,\n\tSun 16 May 2004 14:05:34 -07:00\r\nReceived: from [151.144.178.38] by bohannan.net with HTTP; 5/16/2004 2:05:34 PM PST\r\nthread-index: AcQ7iYenUFnZKcqAR0C0eq+r9zn6pA==\r\nThread-Topic: [neat] Re: multi-agent net inputs\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nDate: Sun, 16 May 2004 14:05:34 -0700\r\nMessage-ID: &lt;d5f201c43b89$87a71950$6ccb010a@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_D5F3_01C43B4E.DB484150&quot;\r\nX-Mailer: Microsoft CDO for Exchange 2000\r\nContent-Class: urn:content-classes:message\r\nImportance: normal\r\nPriority: normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nX-OriginalArrivalTime: 16 May 2004 21:05:35.0632 (UTC) FILETIME=[8849E900:01C43B89]\r\nX-eGroups-Remote-IP: 66.28.189.182\r\nFrom: &quot;Chad Bohannan&quot; &lt;chad@...&gt;\r\nSubject: Re: [neat] Re: multi-agent net inputs\r\nX-Yahoo-Group-Post: member; u=130107745\r\nX-Yahoo-Profile: tailboom22\r\n\r\n\r\n------=_NextPart_000_D5F3_01C43B4E.DB484150\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\nThese suggestions about calculating where the other targets are are\ngreat. That will take lots less power than scanning arcs with a ray\nseeing if it hit anything. \nHowever, I want to include environment variables in the simulation. To\nanalogy with the tag game, I don&#39;t want to bias the behaviour by saying\nit&#39;s a good thing to be far from whoever is &#39;it&#39;. If there is an\nobstical, it may be better to be close to &#39;it&#39; but on the far side of\nthe obstical. I would preffer to use a function of time spent as not\n&#39;it&#39;. I was thinking this is where color information would be nice. I\ncould have a terrain obstical with a neutral color, and two team colors.\nI&#39;m thinking the size of the object would be static, and how many arcs\nit fell into would be a function of it&#39;s size and distance. Anything\nelse in those arcs that are farther away wouldn&#39;t appear.\nIs there a shortcut for doing a simulated vision system? I&#39;m using\nopenGL, is it possible to take a low resolution &#39;picture&#39; into a buffer,\nwithout effecting final rendering? It might be more computationaly\ncomplex, but it would be more accurate, and somewhat scalable, I would\nthink. Can it be done?\nchad\n\n&lt;-----Original Message-----&gt; \nFrom: Mattias Fagerlund\nSent: 5/15/2004 2:20:14 AM\nTo: neat@yahoogroups.com\nSubject: Re: [neat] Re: multi-agent net inputs\n\n&gt; ken posted while I was typing, now I feel silly...\n&gt; I should have asked the same question earlier. How do you detect if\n&gt; something is inside the radar arc? I think ODE lets me draw a ray in\n&gt; space, and I can see if and where that ray intersects with something.\n&gt; Is\n&gt; that how to do it?\n&gt; This sounds exactly like a vision system, and it sounds easier than I\n&gt; thought to write.\n\nUsing ODE to simulate sensors is probably overkill. Determine the \ndistance and direction to each and every opponent that&#39;s within range. \nIf there&#39;s a _great_ number of opponents, you&#39;ll need some form of \nspacial partitioning so you don&#39;t get a O(N^2) system. Use the distance \nand direction to sort the hits into your sensors. Trivial and only takes\na minute of coding.\n\nfor each opponent\ndir = arctan(dx/dy) // or is it the other way around?\ndist2 = dx^2 + dy^2\nfor each sensor\nif dir\ndir&gt;sensor.ang-sensor.width and\ndist2 &lt;sensor.dist2 then\nbegin\nsensor.dist2 = dist2\nsensor.opponent = opponent\nend\n\nfor each sensor\nsensor.dist = sqrt(sensor.dist2)\n\n(the dist2 thing is merely to save sqrt that will be dropped anyway)\n\ncheers,\nm\n\n\n\n\n\nYahoo! Groups Links\n\n\n\n\n\n. \n\r\n------=_NextPart_000_D5F3_01C43B4E.DB484150\r\nContent-Type: text/html\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;HTML&gt;\n&lt;BODY&gt;\nThese suggestions about calculating where the other targets are are great. That will take lots less power than scanning arcs with a ray seeing if it hit anything. &lt;br&gt;\nHowever, I want to include environment variables in the simulation. To analogy with the tag game, I don&#39;t want to bias the behaviour by saying it&#39;s a good thing to be far from whoever is &#39;it&#39;.  If there is an obstical, it may be better to be close to &#39;it&#39; but on the far side of the obstical. I would preffer to use a function of time spent as not &#39;it&#39;. I was thinking this is where color information would be nice. I could have a  terrain obstical with a neutral color, and two team colors. &lt;br&gt;\nI&#39;m thinking the size of the object would be static, and how many arcs it fell into would be a function of it&#39;s size and distance. Anything else in those arcs that are farther away wouldn&#39;t appear.&lt;br&gt;\nIs there a shortcut for doing a simulated vision system? I&#39;m using openGL, is it possible to take a low resolution &#39;picture&#39; into a buffer, without effecting final rendering? It might be more computationaly complex, but it would be more accurate, and somewhat scalable, I would think. Can it be done?&lt;br&gt;\nchad&lt;br&gt;\n&lt;br&gt;\n&lt;-----Original Message-----&gt; &lt;br&gt;\nFrom: Mattias Fagerlund&lt;br&gt;\nSent: 5/15/2004 2:20:14 AM&lt;br&gt;\nTo: neat@yahoogroups.com&lt;br&gt;\nSubject: Re: [neat] Re: multi-agent net inputs&lt;br&gt;\n&lt;br&gt;\n&gt; ken posted while I was typing, now I feel silly...&lt;br&gt;\n&gt; I should have asked the same question earlier. How do you detect if&lt;br&gt;\n&gt; something is inside the radar arc? I think ODE lets me draw a ray in&lt;br&gt;\n&gt; space, and I can see if and where that ray intersects with something.&lt;br&gt;\n&gt; Is&lt;br&gt;\n&gt; that how to do it?&lt;br&gt;\n&gt; This sounds exactly like a vision system, and it sounds easier than I&lt;br&gt;\n&gt; thought to write.&lt;br&gt;\n&lt;br&gt;\nUsing ODE to simulate sensors is probably overkill. Determine the &lt;br&gt;\ndistance and direction to each and every opponent that&#39;s within range. &lt;br&gt;\nIf there&#39;s a _great_ number of opponents, you&#39;ll need some form of &lt;br&gt;\nspacial partitioning so you don&#39;t get a O(N^2) system. Use the distance &lt;br&gt;\nand direction to sort the hits into your sensors. Trivial and only takes &lt;br&gt;\na minute of coding.&lt;br&gt;\n&lt;br&gt;\nfor each opponent&lt;br&gt;\n  dir = arctan(dx/dy) // or is it the other way around?&lt;br&gt;\n  dist2 = dx^2 + dy^2&lt;br&gt;\n  for each sensor&lt;br&gt;\n    if dir&lt;sensor.ang+sensor.width and &lt;br&gt;\n       dir&gt;sensor.ang-sensor.width and&lt;br&gt;\n       dist2 &lt;sensor.dist2 then&lt;br&gt;\n    begin&lt;br&gt;\n      sensor.dist2 = dist2&lt;br&gt;\n      sensor.opponent = opponent&lt;br&gt;\n    end&lt;br&gt;\n&lt;br&gt;\nfor each sensor&lt;br&gt;\n  sensor.dist = sqrt(sensor.dist2)&lt;br&gt;\n&lt;br&gt;\n(the dist2 thing is merely to save sqrt that will be dropped anyway)&lt;br&gt;\n&lt;br&gt;\ncheers,&lt;br&gt;\nm&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n &lt;br&gt;\nYahoo! Groups Links&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To visit your group on the web, go to:&lt;br&gt;\n     http://groups.yahoo.com/group/neat/&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; To unsubscribe from this group, send an email to:&lt;br&gt;\n     neat-unsubscribe@yahoogroups.com&lt;br&gt;\n&lt;br&gt;\n&lt;*&gt; Your use of Yahoo! Groups is subject to:&lt;br&gt;\n     http://docs.yahoo.com/info/terms/&lt;br&gt;\n &lt;br&gt;\n&lt;br&gt;\n.\n&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_D5F3_01C43B4E.DB484150--\r\n\n"}}