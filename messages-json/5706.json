{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":159465226,"authorName":"Matthew_Hausknecht","from":"&quot;Matthew_Hausknecht&quot; &lt;matthew_hausknecht@...&gt;","profile":"Matthew_Hausknecht","replyTo":"LIST","senderId":"CU9UMDiI7zFIHrmJySA5tt16UN3gKG1yCuAnaLMDzKrLgDPQdVyFCnjHg__abrK_46E5mIHZI14NUdS5CV7DBW0dhvwrKNRxBxATGHA-gvv8PO2sAs06Pwb5","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Hyperneat Network Output Layer All Zero","postDate":"1321986551","msgId":5706,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGphZ3BsbittMTZjQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGphZ2RwYitnYmltQGVHcm91cHMuY29tPg=="},"prevInTopic":5705,"nextInTopic":0,"prevInTime":5705,"nextInTime":5707,"topicId":5699,"numMessagesInTopic":7,"msgSnippet":"Wow, this works! I m confused but happy, anyone know why this change from Output to Output_Input_Output make such a difference? Thanks very much for the","rawEmail":"Return-Path: &lt;matthew_hausknecht@...&gt;\r\nX-Sender: matthew_hausknecht@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 42392 invoked from network); 22 Nov 2011 18:29:14 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m7.grp.sp2.yahoo.com with QMQP; 22 Nov 2011 18:29:14 -0000\r\nX-Received: from unknown (HELO ng10-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.78)\n  by mta4.grp.sp2.yahoo.com with SMTP; 22 Nov 2011 18:29:14 -0000\r\nX-Received: from [98.139.164.124] by ng10.bullet.mail.bf1.yahoo.com with NNFMP; 22 Nov 2011 18:29:13 -0000\r\nX-Received: from [69.147.65.147] by tg5.bullet.mail.bf1.yahoo.com with NNFMP; 22 Nov 2011 18:29:13 -0000\r\nX-Received: from [98.137.34.51] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 22 Nov 2011 18:29:13 -0000\r\nDate: Tue, 22 Nov 2011 18:29:11 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;jagpln+m16c@...&gt;\r\nIn-Reply-To: &lt;jagdpb+gbim@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Matthew_Hausknecht&quot; &lt;matthew_hausknecht@...&gt;\r\nSubject: Re: Hyperneat Network Output Layer All Zero\r\nX-Yahoo-Group-Post: member; u=159465226; y=a9Be2G5ENR5vcXf0h8irdJf8YZlTy0ZhLtbVxqQcdd3G1oq2ye2bQQuQQ_fC\r\nX-Yahoo-Profile: Matthew_Hausknecht\r\n\r\nWow, this works! I&#39;m confused but happy, anyone know why this change from &quot;=\r\nOutput&quot; to &quot;Output_Input_Output&quot; make such a difference? Thanks very much f=\r\nor the suggestion! \n\n--- In neat@yahoogroups.com, &quot;yyyyaun&quot; &lt;yyyyaun@...&gt; w=\r\nrote:\n&gt;\n&gt; \n&gt; \n&gt; I had the same problem. Try changing the output node name:\n=\r\n&gt; genes.push_back(GeneticNodeGene(&quot;Output_Input_Output&quot;,&quot;NetworkOutputNode&quot;=\r\n,1,false,ACTIVATION_FUNCTION_SIGMOID)); \n&gt; \n&gt; --- In neat@yahoogroups.com, =\r\n&quot;Matthew_Hausknecht&quot; &lt;matthew_hausknecht@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi, I&#39;m trying to=\r\n run Hyperneat on a simple Atari game and was starting out by replicating s=\r\nome of the experiment examples. My code compiles and runs, but the value of=\r\n the output node in the network always seems to be zero. I suspect I am doi=\r\nng something wrong in the initalization/update step, but I&#39;m not sure what.=\r\n.. Code is as follows:\n&gt; &gt; \n&gt; &gt; #include &quot;HCUBE_Defines.h&quot;\n&gt; &gt; \n&gt; &gt; #includ=\r\ne &quot;Experiments/HCUBE_AtariExperiment.h&quot;\n&gt; &gt; #include &lt;boost/foreach.hpp&gt;\n&gt; =\r\n&gt; \n&gt; &gt; using namespace NEAT;\n&gt; &gt; \n&gt; &gt; enum GamePositionValue {\n&gt; &gt;   EMPTY,=\r\n\n&gt; &gt;   CHICKEN,\n&gt; &gt;   VEHICLE\n&gt; &gt; };\n&gt; &gt; \n&gt; &gt; namespace HCUBE\n&gt; &gt; {\n&gt; &gt;   A=\r\ntariExperiment::AtariExperiment(string _experimentName,int _threadID):\n&gt; &gt; =\r\n    Experiment(_experimentName,_threadID)\n&gt; &gt;   {\n&gt; &gt;     layerInfo =3D NEA=\r\nT::LayeredSubstrateInfo();\n&gt; &gt;     layerInfo.layerSizes.push_back(Vector2&lt;i=\r\nnt&gt;(8,8));\n&gt; &gt;     layerInfo.layerIsInput.push_back(true);\n&gt; &gt;     layerInf=\r\no.layerLocations.push_back(Vector3&lt;float&gt;(0,0,0));\n&gt; &gt;     layerInfo.layerN=\r\names.push_back(&quot;Input&quot;);\n&gt; &gt; \n&gt; &gt;     layerInfo.layerSizes.push_back(Vector=\r\n2&lt;int&gt;(8,8));\n&gt; &gt;     layerInfo.layerIsInput.push_back(false);\n&gt; &gt;     laye=\r\nrInfo.layerLocations.push_back(Vector3&lt;float&gt;(0,4,0));\n&gt; &gt;     layerInfo.la=\r\nyerNames.push_back(&quot;Output&quot;);\n&gt; &gt; \n&gt; &gt;     layerInfo.layerAdjacencyList.pus=\r\nh_back(std::pair&lt;string,string&gt;(&quot;Input&quot;,&quot;Output&quot;));\n&gt; &gt; \n&gt; &gt;     layerInfo.=\r\nnormalize =3D true;\n&gt; &gt;     layerInfo.useOldOutputNames =3D false;\n&gt; &gt;     =\r\nlayerInfo.layerValidSizes =3D layerInfo.layerSizes;\n&gt; &gt; \n&gt; &gt;     substrate =\r\n=3D NEAT::LayeredSubstrate&lt;float&gt;();\n&gt; &gt;     substrate.setLayerInfo(layerIn=\r\nfo);\n&gt; &gt;   }\n&gt; &gt; \n&gt; &gt;   NEAT::GeneticPopulation* AtariExperiment::createIni=\r\ntialPopulation(int populationSize) {\n&gt; &gt;     GeneticPopulation *population =\r\n=3D new GeneticPopulation();\n&gt; &gt;     vector&lt;GeneticNodeGene&gt; genes;\n&gt; &gt; \n&gt; =\r\n&gt;     genes.push_back(GeneticNodeGene(&quot;Bias&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; &gt;=\r\n     genes.push_back(GeneticNodeGene(&quot;X1&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; &gt;   =\r\n  genes.push_back(GeneticNodeGene(&quot;X2&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; &gt;     g=\r\nenes.push_back(GeneticNodeGene(&quot;Y1&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; &gt;     gene=\r\ns.push_back(GeneticNodeGene(&quot;Y2&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; &gt;     genes.p=\r\nush_back(GeneticNodeGene(&quot;Output&quot;,&quot;NetworkOutputNode&quot;,1,false,ACTIVATION_FU=\r\nNCTION_SIGMOID));\n&gt; &gt; \n&gt; &gt;     for (int a=3D0;a&lt;populationSize;a++) {\n&gt; &gt;  =\r\n     shared_ptr&lt;GeneticIndividual&gt; individual(new GeneticIndividual(genes,t=\r\nrue,1.0));\n&gt; &gt;       for (int b=3D0;b&lt;0;b++) {\n&gt; &gt;         individual-&gt;test=\r\nMutate();\n&gt; &gt;       }\n&gt; &gt;       population-&gt;addIndividual(individual);\n&gt; &gt; =\r\n    }\n&gt; &gt; \n&gt; &gt;     cout &lt;&lt; &quot;Finished creating population&#92;n&quot;;\n&gt; &gt;     return=\r\n population;\n&gt; &gt;   }\n&gt; &gt; \n&gt; &gt;   void AtariExperiment::populateSubstrate(sha=\r\nred_ptr&lt;NEAT::GeneticIndividual&gt; individual) {\n&gt; &gt;     if (currentSubstrate=\r\nIndividual =3D=3D individual)\n&gt; &gt;       return;\n&gt; &gt; \n&gt; &gt;     currentSubstra=\r\nteIndividual =3D individual;\n&gt; &gt;     substrate.populateSubstrate(individual=\r\n);\n&gt; &gt;   }\n&gt; &gt; \n&gt; &gt;   void AtariExperiment::processGroup(shared_ptr&lt;NEAT::G=\r\neneticGeneration&gt; generation)\n&gt; &gt;   {\n&gt; &gt;     shared_ptr&lt;NEAT::GeneticIndiv=\r\nidual&gt; individual =3D group.front();\n&gt; &gt;     //You get 10 points just for b=\r\neing processed, wahooo!\n&gt; &gt;     individual-&gt;setFitness(10);\n&gt; &gt;     populat=\r\neSubstrate(individual);\n&gt; &gt;     runAtariEpisode(individual);\n&gt; &gt;   }\n&gt; &gt; \n&gt;=\r\n &gt;   void AtariExperiment::runAtariEpisode(shared_ptr&lt;NEAT::GeneticIndividu=\r\nal&gt; individual) {\n&gt; &gt;     GamePositionValue gameState[8][8];\n&gt; &gt; \n&gt; &gt;     i=\r\nnt chic_x =3D 4, chic_y =3D 7;\n&gt; &gt;     float total_reward =3D 0.0;\n&gt; &gt;     =\r\n\n&gt; &gt;     // Initialize Game\n&gt; &gt;     for (int x=3D0;x&lt;8;x++) {\n&gt; &gt;       for=\r\n (int y=3D0;y&lt;8;y++) {\n&gt; &gt;         gameState[x][y] =3D EMPTY;\n&gt; &gt;       }\n&gt;=\r\n &gt;     }\n&gt; &gt;     gameState[chic_x][chic_y] =3D CHICKEN;\n&gt; &gt; \n&gt; &gt;     // Run=\r\n simulation for t timesteps\n&gt; &gt;     int num_timesteps =3D 10;\n&gt; &gt;     for (=\r\nint t=3D0; t&lt;num_timesteps; t++) {\n&gt; &gt;       substrate.getNetwork()-&gt;reinit=\r\nialize();\n&gt; &gt;       substrate.getNetwork()-&gt;dummyActivation();\n&gt; &gt; \n&gt; &gt;    =\r\n   // Set substrate values\n&gt; &gt;       for (int x=3D0; x&lt;8; ++x) {\n&gt; &gt;       =\r\n  for (int y=3D0; y&lt;8; ++y) {\n&gt; &gt;           // if (gameState[x][y] =3D=3D C=\r\nHICKEN) {\n&gt; &gt;           //   substrate.setValue((Node(x,y,0)), 1.0);\n&gt; &gt;   =\r\n        // } else if (gameState[x][y] =3D=3D VEHICLE) {\n&gt; &gt;           //   =\r\nsubstrate.setValue((Node(x,y,0)), -1.0);            \n&gt; &gt;           // } els=\r\ne {\n&gt; &gt;           //   substrate.setValue((Node(x,y,0)), 0.0);            \n=\r\n&gt; &gt;           // }\n&gt; &gt;           substrate.setValue((Node(x,y,0)), (float)(=\r\n(7.0-y)/7.0));\n&gt; &gt;         }\n&gt; &gt;       }\n&gt; &gt; \n&gt; &gt;       substrate.getNetwor=\r\nk()-&gt;update();\n&gt; &gt; \n&gt; &gt;       for (int x=3D0; x&lt;8; ++x) {\n&gt; &gt;         for (=\r\nint y=3D0; y&lt;8; ++y) {\n&gt; &gt;           float val =3D substrate.getValue((Node=\r\n(x,y,1)));\n&gt; &gt;           if (val !=3D 0)\n&gt; &gt;             printf(&quot;Got Nonzer=\r\no val %f at %d,%d&#92;n&quot;,val,x,y);\n&gt; &gt;         }\n&gt; &gt;       }\n&gt; &gt;       float ch=\r\nicken_val =3D substrate.getValue((Node(chic_x,chic_y,1)));\n&gt; &gt;       float =\r\ndown_val =3D (chic_y =3D=3D 7) ? chicken_val : substrate.getValue((Node(chi=\r\nc_x,chic_y+1,1)));\n&gt; &gt;       float up_val =3D (chic_y =3D=3D 0) ? chicken_v=\r\nal : substrate.getValue((Node(chic_x,chic_y-1,1)));\n&gt; &gt; \n&gt; &gt;       int acti=\r\non;\n&gt; &gt;       if (chicken_val &gt;=3D up_val) {\n&gt; &gt;         if (chicken_val &gt;=\r\n=3D down_val) {\n&gt; &gt;           action =3D 0;\n&gt; &gt;         } else {\n&gt; &gt;       =\r\n    action =3D +1;\n&gt; &gt;         }\n&gt; &gt;       } else {\n&gt; &gt;         if (up_val =\r\n&gt;=3D down_val) {\n&gt; &gt;           action =3D -1;\n&gt; &gt;         } else {\n&gt; &gt;     =\r\n      action =3D 1;\n&gt; &gt;         }\n&gt; &gt;       }\n&gt; &gt; \n&gt; &gt;       // Update game=\r\n state with action\n&gt; &gt;       gameState[chic_x][chic_y] =3D EMPTY;\n&gt; &gt;      =\r\n gameState[chic_x][chic_y+action] =3D CHICKEN;\n&gt; &gt;       chic_y +=3D action=\r\n;\n&gt; &gt; \n&gt; &gt;       // Compute reward\n&gt; &gt;       if (chic_y =3D=3D 0) {\n&gt; &gt;    =\r\n     total_reward +=3D 1.0;\n&gt; &gt;         // Reset the sim\n&gt; &gt;         gameSt=\r\nate[chic_x][chic_y] =3D EMPTY;\n&gt; &gt;         gameState[chic_x][7] =3D CHICKEN=\r\n;\n&gt; &gt;         chic_y =3D 7;\n&gt; &gt;       }\n&gt; &gt;     }\n&gt; &gt;     //cout &lt;&lt; &quot;Got to=\r\ntal reward: &quot; &lt;&lt; total_reward &lt;&lt; endl;\n&gt; &gt;     individual-&gt;reward(total_rew=\r\nard);\n&gt; &gt;   }\n&gt; &gt;\n&gt;\n\n\n\n"}}