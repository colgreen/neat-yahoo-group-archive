{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":151231063,"authorName":"Joseph Reisinger","from":"Joseph Reisinger &lt;joeraii@...&gt;","profile":"joeraii","replyTo":"LIST","senderId":"0-inwoi7gN7GS1rqssPsvJIh3n9NHQ5qYKBikTZNaXuTyx8butI8OZs6G8g6hLUl3XNEv2mPsA_cduawNDrSZ5R62H5D1hGOQhF5pNohcA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: New HyperNEAT Paper in the Domain of Checkers","postDate":"1208481931","msgId":3958,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk0RTRDMzIwLTYxQTUtNEY1MS1CN0Q5LUM0RTIzMDU0NzQ4OUBjcy51dGV4YXMuZWR1Pg==","inReplyToHeader":"PDE5YjEwZDUxMDgwNDE3MTEzN2g3YjlmZTA1N2o4MDZiNGMyMzQ5MTUwMDc3QG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGZ0cXM1ZytuNDIwQGVHcm91cHMuY29tPiA8QzQyRDBFODQuMjIzQzElamNsdW5lQG1zdS5lZHU+IDwxOWIxMGQ1MTA4MDQxNzExMzdoN2I5ZmUwNTdqODA2YjRjMjM0OTE1MDA3N0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":3957,"nextInTopic":3959,"prevInTime":3957,"nextInTime":3959,"topicId":3942,"numMessagesInTopic":27,"msgSnippet":"... Thanks for the link, Derek. Its true that MC methods are a (randomized) variant of brute-force search, but the real meat of the MoGo algorithm is the use","rawEmail":"Return-Path: &lt;joeraii@...&gt;\r\nX-Sender: joeraii@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 26785 invoked from network); 18 Apr 2008 01:25:31 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m56.grp.scd.yahoo.com with QMQP; 18 Apr 2008 01:25:31 -0000\r\nX-Received: from unknown (HELO spunkymail-a2.g.dreamhost.com) (208.97.132.119)\n  by mta17.grp.scd.yahoo.com with SMTP; 18 Apr 2008 01:25:31 -0000\r\nX-Received: from [10.0.1.188] (i118-20-72-228.s04.a013.ap.plala.or.jp [118.20.72.228])\n\t(using TLSv1 with cipher AES128-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby spunkymail-a2.g.dreamhost.com (Postfix) with ESMTP id 7713B880A8\n\tfor &lt;neat@yahoogroups.com&gt;; Thu, 17 Apr 2008 18:25:31 -0700 (PDT)\r\nMessage-Id: &lt;94E4C320-61A5-4F51-B7D9-C4E230547489@...&gt;\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;19b10d510804171137h7b9fe057j806b4c2349150077@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: 7bit\r\nMime-Version: 1.0 (Apple Message framework v919.2)\r\nDate: Thu, 17 Apr 2008 20:25:31 -0500\r\nReferences: &lt;ftqs5g+n420@...&gt; &lt;C42D0E84.223C1%jclune@...&gt; &lt;19b10d510804171137h7b9fe057j806b4c2349150077@...&gt;\r\nX-Mailer: Apple Mail (2.919.2)\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Joseph Reisinger &lt;joeraii@...&gt;\r\nSubject: Re: [neat] Re: New HyperNEAT Paper in the Domain of Checkers\r\nX-Yahoo-Group-Post: member; u=151231063; y=lTCg9l1_hnUeEuclha8XhPdju072Fkqj9pNyPh-QyZxLGg\r\nX-Yahoo-Profile: joeraii\r\n\r\n&gt; On a related note, I just saw today that the Go program MoGo beat a\n&gt; 5th Dan Go professional in 9x9 play:\n&gt;\n&gt; http://www.hpcwire.com/hpc/2278450.html\n&gt;\n&gt; MoGo uses Monte Carlo methods, which from what I understand is a\n&gt; variant of brute-force search, which I don&#39;t think sheds much light on\n&gt; how humans solve such problems and won&#39;t scale or generalize very\n&gt; well.\n\nThanks for the link, Derek. Its true that MC methods are a  \n(randomized) variant of brute-force search, but the real meat of the  \nMoGo algorithm is the use of UCT for representing position values and  \nthe various learned heuristics used to bias the collection of MC  \nsamples. This paper is particularly fascinating:\n\nhttp://www.machinelearning.org/proceedings/icml2007/papers/387.pdf\n\nI&#39;d recommend it to anyone interested in the problem of getting  \ncomputers to play games; a UCT-based algorithm also won the AAAI  \ngeneral game playing competition last year, and several others placed  \nhighly.\n\nAnyway, I&#39;m curious to know why you believe such methods won&#39;t scale  \nor generalize well? (sorry I know that sounds like a totally loaded  \nquestion now, but I&#39;m genuinely interested in hearing your opinion --  \nI&#39;ve been keeping an eye on the UCT literature for a while and its  \nhard to see the world without UCT-colored glasses anymore :P)\n\n"}}