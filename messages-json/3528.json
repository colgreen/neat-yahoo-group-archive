{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":281645563,"authorName":"afcarl2","from":"&quot;afcarl2&quot; &lt;a.carl@...&gt;","profile":"afcarl2","replyTo":"LIST","senderId":"lU5QIHXlQOelYiy-8eW8LsvQgtHLgY73B4LZDFaC7ZEDHwqx2NE8Vhny9IYiWRWtfQPVpA65LQ3jfziyjKBRAdQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Need Help","postDate":"1187303050","msgId":3528,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZhMmlxYStwYjNpQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDZiZjMyZWEzMDcwODE2MTQ0OWgyNzM2NDZlYWkyYmIzZjBlNTI3OGQ2ZDkxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":3527,"nextInTopic":3530,"prevInTime":3527,"nextInTime":3529,"topicId":3524,"numMessagesInTopic":5,"msgSnippet":"Sorry, please try the below link: http://www.programmersheaven.com/ (confirmed located under c/c++ ATREE , version 2.7, not as fast as version 2.0; google","rawEmail":"Return-Path: &lt;a.carl@...&gt;\r\nX-Sender: a.carl@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 88093 invoked from network); 16 Aug 2007 22:26:37 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m45.grp.scd.yahoo.com with QMQP; 16 Aug 2007 22:26:37 -0000\r\nReceived: from unknown (HELO n25c.bullet.scd.yahoo.com) (66.218.67.216)\n  by mta11.grp.scd.yahoo.com with SMTP; 16 Aug 2007 22:26:37 -0000\r\nReceived: from [209.73.164.86] by n25.bullet.scd.yahoo.com with NNFMP; 16 Aug 2007 22:24:11 -0000\r\nReceived: from [66.218.66.76] by t8.bullet.scd.yahoo.com with NNFMP; 16 Aug 2007 22:24:11 -0000\r\nDate: Thu, 16 Aug 2007 22:24:10 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;fa2iqa+pb3i@...&gt;\r\nIn-Reply-To: &lt;6bf32ea30708161449h273646eai2bb3f0e5278d6d91@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;afcarl2&quot; &lt;a.carl@...&gt;\r\nSubject: Re: Need Help\r\nX-Yahoo-Group-Post: member; u=281645563; y=UtJ5oVotkh1dv9WoUIcrZkhU6YQoqAbK-ggNigNNjYP2lg\r\nX-Yahoo-Profile: afcarl2\r\n\r\nSorry, please try the below link:\n\nhttp://www.programmersheaven.com/ (confi=\r\nrmed located under \nc/c++ &quot;ATREE&quot;, version 2.7, not as fast as version 2.0;=\r\n google &quot;ALN&quot; \n& &quot;Adaptive Logic Network&quot;)\n\n\n--- In neat@yahoogroups.com, &quot;=\r\nWael Malek&quot; &lt;lepacha@...&gt; wrote:\n&gt;\n&gt; hi,\n&gt; \n&gt; thnx for your email, that unf=\r\nortunately did not give me enough \ninfo. the\n&gt; second link doesn&#39;t work\n&gt; \n=\r\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; On 16/08/07, afcarl2 &lt;a.carl@...&gt; wrote:\n&gt; &gt;\n&gt; &gt;   W=\r\nael,\n&gt; &gt;\n&gt; &gt; Take a look at ALN&#39;s (&quot;Adaptive Logic Network&quot;) at the below t=\r\nwo \nweb\n&gt; &gt; links.\n&gt; &gt;\n&gt; &gt; http://www.dendronic.com/main.htm\n&gt; &gt;\n&gt; &gt; http:/=\r\n/www.cs.cmu.edu/afs/cs/project/ai-\n&gt; &gt; repository/ai/areas/neural/systems/a=\r\ntree/0.html\n&gt; &gt;\n&gt; &gt; --- In neat@yahoogroups.com &lt;neat%40yahoogroups.com&gt;, &quot;=\r\nWael&quot; \n&lt;lepacha@&gt;\n&gt; &gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; I am developing an ANN for a smart=\r\n card platform, which is from\n&gt; &gt; &gt; experience, the worst to work with, its=\r\n tedious and very\n&gt; &gt; restricted. I\n&gt; &gt; &gt; am trying to implement an ANN to =\r\nlearn the XOR function, i can \nonly\n&gt; &gt; &gt; use shorts or integers. i designe=\r\nd it on a pc, and it used to \nwork\n&gt; &gt; &gt; fine until i changed everything to=\r\n integer, it stopped giving \nthe\n&gt; &gt; &gt; right results. it should learn the X=\r\nOR function which it used \nto do\n&gt; &gt; &gt; with double or float weights. i am u=\r\nsing a tanh activation \nfunction,\n&gt; &gt; &gt; which i know will not work with the=\r\n Integer weights. Below is my\n&gt; &gt; code\n&gt; &gt; &gt; its short, can any one help pl=\r\nease with this. i think i need the\n&gt; &gt; right\n&gt; &gt; &gt; activation function. or =\r\nmay be i have some other bugs, please \nlet me\n&gt; &gt; &gt; know if u can spot any.=\r\n...\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; import java.lang.Math;\n&gt; &gt; &gt; import java.util.*;\n&gt; &gt; =\r\n&gt; import java.io.*;\n&gt; &gt; &gt; import java.lang.*;\n&gt; &gt; &gt;\n&gt; &gt; &gt; public class Java=\r\nMLP\n&gt; &gt; &gt; {\n&gt; &gt; &gt;\n&gt; &gt; &gt; //user defineable variables\n&gt; &gt; &gt; public static int=\r\n numEpochs =3D 500; //number of training cycles\n&gt; &gt; &gt; public static int num=\r\nInputs =3D 3; //number of inputs - this\n&gt; &gt; &gt; includes the input bias\n&gt; &gt; &gt;=\r\n public static int numHidden =3D 4; //number of hidden units\n&gt; &gt; &gt; public s=\r\ntatic int numPatterns =3D 4; //number of training patterns\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; =\r\n&gt; //process variables\n&gt; &gt; &gt; public static int patNum;\n&gt; &gt; &gt; public static i=\r\nnt errThisPat;\n&gt; &gt; &gt; public static int outPred;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //t=\r\nraining data\n&gt; &gt; &gt;\n&gt; &gt; &gt; public static int [] Inputs =3D new int [12];\n&gt; &gt; =\r\n&gt;\n&gt; &gt; &gt; public static int [] Output =3D new int[numPatterns];\n&gt; &gt; &gt;\n&gt; &gt; &gt; /=\r\n/the outputs of the hidden neurons\n&gt; &gt; &gt; public static int [] hiddnValue =\r\n=3D new int [numHidden];\n&gt; &gt; &gt;\n&gt; &gt; &gt; //the weights\n&gt; &gt; &gt; public static int =\r\n[] weghtsInH =3D new int [12];\n&gt; &gt; &gt;\n&gt; &gt; &gt; public static int [] weghtsOutH =\r\n=3D new int [numHidden];\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D\n&gt; &gt; &gt; //********** THIS IS THE MAIN PROGRAM ************************=\r\n**\n&gt; &gt; &gt; //=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n&gt; &gt; &gt;\n&gt; &gt; &gt; public static =\r\nvoid main(String[] args) throws IOException {\n&gt; &gt; &gt; BufferedReader in =3D n=\r\new BufferedReader(new\n&gt; &gt; &gt; InputStreamReader(System.in));\n&gt; &gt; &gt;\n&gt; &gt; &gt; // i=\r\nntialize user&#39;s secret data\n&gt; &gt; &gt;\n&gt; &gt; &gt; //initiate the weights\n&gt; &gt; &gt; initWe=\r\nights();\n&gt; &gt; &gt;\n&gt; &gt; &gt; //load in the data\n&gt; &gt; &gt; initData();\n&gt; &gt; &gt;\n&gt; &gt; &gt; //tra=\r\nin the network\n&gt; &gt; &gt; for(int j =3D 0;j &lt;=3D numEpochs;j++)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; fo=\r\nr(int i =3D 0;i&lt;numPatterns;i++)\n&gt; &gt; &gt; {\n&gt; &gt; &gt;\n&gt; &gt; &gt; //select a pattern at =\r\nrandom\n&gt; &gt; &gt; patNum =3D (int)((Math.random()*numPatterns)-0.001);\n&gt; &gt; &gt; //S=\r\nystem.out.println( &quot;************&quot; +patNum +\n&gt; &gt; &gt; &quot;*****************&quot;);\n&gt; &gt;=\r\n &gt;\n&gt; &gt; &gt; //calculate the current network output\n&gt; &gt; &gt; //and error for this =\r\npattern\n&gt; &gt; &gt; calcNet();\n&gt; &gt; &gt;\n&gt; &gt; &gt; //change network weights\n&gt; &gt; &gt; WeightC=\r\nhangesOutH();\n&gt; &gt; &gt; WeightChangesInH();\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; /=\r\n/training has finished\n&gt; &gt; &gt; //display the results\n&gt; &gt; &gt; displayResults();\n=\r\n&gt; &gt; &gt;\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; //=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n&gt; &gt; &gt; //******=\r\n**** END OF THE MAIN PROGRAM **************************\n&gt; &gt; &gt; //=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //******************************=\r\n******\n&gt; &gt; &gt; public static void calcNet()\n&gt; &gt; &gt; {\n&gt; &gt; &gt; int t =3D 0;\n&gt; &gt; &gt; =\r\n//calculate the outputs of the hidden neurons\n&gt; &gt; &gt; //the hidden neurons ar=\r\ne tanh\n&gt; &gt; &gt; for(int i =3D 0;i&lt;numHidden;i++)\n&gt; &gt; &gt; {\n&gt; &gt; &gt;\n&gt; &gt; &gt; hiddnValu=\r\ne[i] =3D 0;\n&gt; &gt; &gt;\n&gt; &gt; &gt; for(int j =3D 0;j&lt;numInputs;j++)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; t =\r\n=3D ((3*i)+j);\n&gt; &gt; &gt; hiddnValue[i] =3D (int)(hiddnValue[i] +\n&gt; &gt; &gt; (int)((I=\r\nnputs[(patNum*3)+j] * weghtsInH[t])));\n&gt; &gt; &gt; }\n&gt; &gt; &gt; hiddnValue[i] =3D tanh=\r\n(hiddnValue[i]);\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; //calculate the output of the network\n=\r\n&gt; &gt; &gt; //the output neuron is linear\n&gt; &gt; &gt; outPred =3D 0;\n&gt; &gt; &gt;\n&gt; &gt; &gt; for(in=\r\nt i =3D 0;i&lt;numHidden;i++)\n&gt; &gt; &gt; outPred =3D outPred + hiddnValue[i] * wegh=\r\ntsOutH[i];\n&gt; &gt; &gt;\n&gt; &gt; &gt; //calculate the error\n&gt; &gt; &gt; errThisPat =3D (int)(out=\r\nPred - Output[patNum]);\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //*****************=\r\n*******************\n&gt; &gt; &gt; public static void WeightChangesOutH()\n&gt; &gt; &gt; //ad=\r\njust the weights hidden-output\n&gt; &gt; &gt; {\n&gt; &gt; &gt; for(int k =3D 0;k&lt;numHidden;k+=\r\n+)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; int weightChange =3D 7 * errThisPat * hiddnValue[k] / 100;=\r\n\n&gt; &gt; &gt; weghtsOutH[k] =3D weghtsOutH[k] - weightChange;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //regula=\r\nrisation on the output weights\n&gt; &gt; &gt; if (weghtsOutH[k] &lt; -5)\n&gt; &gt; &gt; weghtsOu=\r\ntH[k] =3D -5;\n&gt; &gt; &gt; else if (weghtsOutH[k] &gt; 5)\n&gt; &gt; &gt; weghtsOutH[k] =3D 5;\n=\r\n&gt; &gt; &gt; }\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //************************************\n&gt; =\r\n&gt; &gt; public static void WeightChangesInH()\n&gt; &gt; &gt; //adjust the weights input-=\r\nhidden\n&gt; &gt; &gt; {\n&gt; &gt; &gt; int g=3D0;\n&gt; &gt; &gt; for(int i =3D 0;i&lt;numHidden;i++)\n&gt; &gt; =\r\n&gt; {\n&gt; &gt; &gt; for(int k =3D 0;k&lt;numInputs;k++)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; int x =3D 1 - (hid=\r\ndnValue[i] * hiddnValue[i]);\n&gt; &gt; &gt; x =3D x * weghtsOutH[i] * errThisPat * 7=\r\n / 10;\n&gt; &gt; &gt; x =3D(int) (x * Inputs[(patNum*3)+k]);\n&gt; &gt; &gt; int weightChange =\r\n=3D x;\n&gt; &gt; &gt; g=3D((3*i)+k);\n&gt; &gt; &gt; weghtsInH[g] =3D weghtsInH[g] - weightCha=\r\nnge;\n&gt; &gt; &gt;\n&gt; &gt; &gt; }\n&gt; &gt; &gt; }\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; //**************************=\r\n*********\n&gt; &gt; &gt;\n&gt; &gt; &gt; public static void initWeights()\n&gt; &gt; &gt; {\n&gt; &gt; &gt; weghts=\r\nOutH[0] =3D -4276;\n&gt; &gt; &gt; weghtsOutH[1] =3D 8910;\n&gt; &gt; &gt; weghtsOutH[2] =3D -3=\r\n127;\n&gt; &gt; &gt; weghtsOutH[3] =3D 1711;\n&gt; &gt; &gt;\n&gt; &gt; &gt; weghtsInH[0] =3D -4393;\n&gt; &gt; =\r\n&gt; weghtsInH[1] =3D -1816;\n&gt; &gt; &gt; weghtsInH[2] =3D 7144;\n&gt; &gt; &gt; weghtsInH[3] =\r\n=3D 536;\n&gt; &gt; &gt; weghtsInH[4] =3D -5010;\n&gt; &gt; &gt; weghtsInH[5] =3D -1463;\n&gt; &gt; &gt; =\r\nweghtsInH[6] =3D 6082;\n&gt; &gt; &gt; weghtsInH[7] =3D -7693;\n&gt; &gt; &gt; weghtsInH[8] =3D=\r\n 3435;\n&gt; &gt; &gt; weghtsInH[9] =3D 9213;\n&gt; &gt; &gt; weghtsInH[10]=3D 4044;\n&gt; &gt; &gt; wegh=\r\ntsInH[11]=3D 2009;\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //**********************=\r\n**************\n&gt; &gt; &gt; public static void initData()\n&gt; &gt; &gt; {\n&gt; &gt; &gt;\n&gt; &gt; &gt; Syst=\r\nem.out.println(&quot;initialising data&quot;);\n&gt; &gt; &gt;\n&gt; &gt; &gt; // the data here is the XO=\r\nR data\n&gt; &gt; &gt; // it has been rescaled to the range\n&gt; &gt; &gt; // [-1][1]\n&gt; &gt; &gt; //=\r\n an extra input valued 1 is also added\n&gt; &gt; &gt; // to act as the bias\n&gt; &gt; &gt;\n&gt; =\r\n&gt; &gt; Inputs[0] =3D 1;\n&gt; &gt; &gt; Inputs[1] =3D -1;\n&gt; &gt; &gt; Inputs[2] =3D 1;//bias\n&gt;=\r\n &gt; &gt; Output[0] =3D 1;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Inputs[3] =3D -1;\n&gt; &gt; &gt; Inputs[4] =3D 1;\n=\r\n&gt; &gt; &gt; Inputs[5] =3D 1;//bias\n&gt; &gt; &gt; Output[1] =3D 1;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Inputs[6] =\r\n=3D 1;\n&gt; &gt; &gt; Inputs[7] =3D 1;\n&gt; &gt; &gt; Inputs[8] =3D 1;//bias\n&gt; &gt; &gt; Output[2] =\r\n=3D -1;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Inputs[9] =3D -1;\n&gt; &gt; &gt; Inputs[10] =3D -1;\n&gt; &gt; &gt; Inputs=\r\n[11] =3D 1;//bias\n&gt; &gt; &gt; Output[3] =3D -1;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt;=\r\n &gt; &gt; //************************************\n&gt; &gt; &gt; public static int tanh(do=\r\nuble x)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; if (x &gt; 20)\n&gt; &gt; &gt; return 1;\n&gt; &gt; &gt; else if (x &lt; -20)\n&gt;=\r\n &gt; &gt; return -1;\n&gt; &gt; &gt; else\n&gt; &gt; &gt; {\n&gt; &gt; &gt; int a =3D (int)(Math.exp(x));\n&gt; &gt; =\r\n&gt; int b =3D (int)(Math.exp(-x));\n&gt; &gt; &gt; return (a-b)/(a+b);\n&gt; &gt; &gt; }\n&gt; &gt; &gt; }\n=\r\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; //************************************\n&gt; &gt; &gt; public stati=\r\nc void displayResults()\n&gt; &gt; &gt; {\n&gt; &gt; &gt; for(int i =3D 0;i&lt;numPatterns;i++)\n&gt; =\r\n&gt; &gt; {\n&gt; &gt; &gt; patNum =3D i;\n&gt; &gt; &gt; calcNet();\n&gt; &gt; &gt; System.out.println(&quot;pat =\r\n=3D &quot; + (patNum+1) + &quot; actual =3D &quot; +\n&gt; &gt; &gt; Output[patNum] + &quot; neural model=\r\n =3D &quot; + outPred);\n&gt; &gt; &gt; }\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; \n&gt; //*************************=\r\n**************************************/*\n&gt; &gt; &gt;\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;  \n&gt; &gt;\n=\r\n&gt; \n&gt; \n&gt; \n&gt; -- \n&gt; WILL MALEK\n&gt;\n\n\n\n"}}