{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":32323338,"authorName":"Stephen Waits","from":"Stephen Waits &lt;steve@...&gt;","profile":"stevewaits","replyTo":"LIST","senderId":"NHMN5258o9zJI0gYRkK-6ush7IOm3QPHiolPOZRj2ZB2RwBruonF9TJpo366UmIR-cZxrD1Qzx6mD6WXEBH-dG3tC9mzeA","spamInfo":{"isSpam":false,"reason":"3"},"subject":"Re: [neat] Re: Computation Time","postDate":"1176913011","msgId":3171,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDhCM0IzQjQzLTBBRjctNDlCMS05OUYxLTlGQjMyRjBENjIxOUB3YWl0cy5uZXQ+","inReplyToHeader":"PGYwNWZlYys2dmRtQGVHcm91cHMuY29tPg==","referencesHeader":"PGYwNWZlYys2dmRtQGVHcm91cHMuY29tPg=="},"prevInTopic":3170,"nextInTopic":3172,"prevInTime":3170,"nextInTime":3172,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"... That s great Shane.  I love optimizing code. You may also want to take a look at the LUT version in Jason Gauci s recently released NEAT code.  It may be","rawEmail":"Return-Path: &lt;steve@...&gt;\r\nX-Sender: steve@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 76709 invoked from network); 18 Apr 2007 16:17:10 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m42.grp.scd.yahoo.com with QMQP; 18 Apr 2007 16:17:10 -0000\r\nReceived: from unknown (HELO mx.waits.net) (66.27.52.246)\n  by mta11.grp.scd.yahoo.com with SMTP; 18 Apr 2007 16:17:10 -0000\r\nReceived: from mx.waits.net (localhost [127.0.0.1])\n\tby dspam.waits.net (Postfix) with ESMTP id A201A2AB06\n\tfor &lt;neat@yahoogroups.com&gt;; Wed, 18 Apr 2007 09:16:53 -0700 (PDT)\r\nReceived: from [192.168.0.192] (unknown [192.168.0.192])\n\tby mx.waits.net (Postfix) with ESMTP id 568B52AB05\n\tfor &lt;neat@yahoogroups.com&gt;; Wed, 18 Apr 2007 09:16:53 -0700 (PDT)\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nIn-Reply-To: &lt;f05fec+6vdm@...&gt;\r\nReferences: &lt;f05fec+6vdm@...&gt;\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-25-1037316157\r\nMessage-Id: &lt;8B3B3B43-0AF7-49B1-99F1-9FB32F0D6219@...&gt;\r\nDate: Wed, 18 Apr 2007 09:16:51 -0700\r\nTo: neat@yahoogroups.com\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-CLAMAV-Result: Clean\r\nX-DSPAM-Result: Spam\r\nX-DSPAM-Confidence: 0.5472\r\nX-DSPAM-Probability: 1.0000\r\nX-DSPAM-Signature: 4626447a70721014799858\r\nX-DSPAM-Factors: 15,\n\tSteve, 0.00032,\n\twrote, 0.00041,\n\tborder, 0.99646,\n\tsize, 0.99616,\n\tAM, 0.00421,\n\tone, 0.99289,\n\tHelvetica, 0.99139,\n\twhite, 0.99000,\n\tapple, 0.99000,\n\tnone, 0.99000,\n\tspacing+normal, 0.99000,\n\ttext+size, 0.99000,\n\tsize+adjust, 0.99000,\n\t12px, 0.99000,\n\t2+white, 0.99000\r\nX-eGroups-Msg-Info: 2:3:4:0\r\nFrom: Stephen Waits &lt;steve@...&gt;\r\nSubject: Re: [neat] Re: Computation Time\r\nX-Yahoo-Group-Post: member; u=32323338; y=dQwuF7EV4sxVKANKplrxBZmhJxBC-p8r0CSSepA2I1qMqhClHQ\r\nX-Yahoo-Profile: stevewaits\r\n\r\n\r\n--Apple-Mail-25-1037316157\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tdelsp=yes;\n\tformat=flowed\r\n\r\n\nOn Apr 18, 2007, at 9:02 AM, shanemcdonaldryan wrote:\n\n&gt; I think this approximated sigmoid will give at\n&gt; least a 50% real gain in performance for the problems I am working on\n\nThat&#39;s great Shane.  I love optimizing code.\n\nYou may also want to take a look at the LUT version in Jason Gauci&#39;s  \nrecently released NEAT code.  It may be faster yet.  I wouldn&#39;t be  \nsurprised if it&#39;s slower either though.\n\nOtherwise, one further improvement you can get in your polynomial  \nversion is to vectorize it.  GCC4 does some autovectorization, but it  \nmight be picky about its input.\n\n--Steve\r\n--Apple-Mail-25-1037316157\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Type: text/html;\n\tcharset=ISO-8859-1\r\n\r\n&lt;HTML&gt;&lt;BODY style=3D&quot;word-wrap: break-word; -khtml-nbsp-mode: space; -khtml=\r\n-line-break: after-white-space; &quot;&gt;&lt;BR&gt;&lt;DIV&gt;&lt;DIV&gt;On Apr 18, 2007, at 9:02 AM=\r\n, shanemcdonaldryan wrote:&lt;/DIV&gt;&lt;BR class=3D&quot;Apple-interchange-newline&quot;&gt;&lt;BL=\r\nOCKQUOTE type=3D&quot;cite&quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;border-col=\r\nlapse: separate; border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family:=\r\n Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font=\r\n-weight: normal; letter-spacing: normal; line-height: normal; text-align: a=\r\nuto; -khtml-text-decorations-in-effect: none; text-indent: 0px; -apple-text=\r\n-size-adjust: auto; text-transform: none; orphans: 2; white-space: normal; =\r\nwidows: 2; word-spacing: 0px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=3D&quot;f=\r\nont-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;I think this app=\r\nroximated sigmoid will give at&lt;/SPAN&gt;&lt;BR style=3D&quot;font-family: Georgia; fon=\r\nt-size: 13px; line-height: 15px; &quot;&gt;&lt;SPAN class=3D&quot;Apple-style-span&quot; style=\r\n=3D&quot;font-family: Georgia; font-size: 13px; line-height: 15px; &quot;&gt;least a 50%=\r\n real gain in performance for the problems I am working on&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/B=\r\nLOCKQUOTE&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;DIV&gt;That&#39;s great Shane.=A0 I love optimizing code.&lt;/DI=\r\nV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;You may also want t=\r\no take a look at the LUT version in Jason Gauci&#39;s recently released NEAT co=\r\nde.=A0 It may be faster yet.=A0 I wouldn&#39;t be surprised if it&#39;s slower eith=\r\ner though.&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;Other=\r\nwise, one further improvement you can get in your polynomial version is to =\r\nvectorize it.=A0 GCC4 does some autovectorization, but it might be picky ab=\r\nout its input.&lt;/DIV&gt;&lt;DIV&gt;&lt;BR class=3D&quot;khtml-block-placeholder&quot;&gt;&lt;/DIV&gt;&lt;DIV&gt;-=\r\n-Steve&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;\r\n--Apple-Mail-25-1037316157--\r\n\n"}}