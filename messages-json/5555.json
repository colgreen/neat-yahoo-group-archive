{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":434634266,"authorName":"Vassilis Vassiliades","from":"Vassilis Vassiliades &lt;vassilisvas@...&gt;","profile":"v.vassiliades","replyTo":"LIST","senderId":"c6wXdH3lMZHsNUJ8Pe2CPkka7AgiEyUlDfgH56KnZ9M80C52CgW5vRIH1jQsQ55hUfZpNFv2-ANk373MDrc99cHuOnba5X0nE_ZPiUf7rEJfmvY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: Alternative fitness sharing method","postDate":"1303141015","msgId":5555,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBTkxrVGltSGl2Y3dKVGE3dGRWdWFtRkR5KytaczZFb1FRQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGlvY2RyaituaDAzQGVHcm91cHMuY29tPg==","referencesHeader":"PEJBTkxrVGluRm09OXZCTjMtX1dUQk1aUXYzKy1ybVlaQjZRQG1haWwuZ21haWwuY29tPgk8aW9jZHJqK25oMDNAZUdyb3Vwcy5jb20+"},"prevInTopic":5553,"nextInTopic":5557,"prevInTime":5554,"nextInTime":5556,"topicId":5550,"numMessagesInTopic":7,"msgSnippet":"Hi Colin, The method you mentioned reminds me of a relatively recent algorithm in the multi-objective optimization literature called MOEA/D (Multi-Objective ","rawEmail":"Return-Path: &lt;vassilisvas@...&gt;\r\nX-Sender: vassilisvas@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 18533 invoked from network); 18 Apr 2011 15:36:58 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m8.grp.sp2.yahoo.com with QMQP; 18 Apr 2011 15:36:58 -0000\r\nX-Received: from unknown (HELO mail-wy0-f170.google.com) (74.125.82.170)\n  by mta3.grp.sp2.yahoo.com with SMTP; 18 Apr 2011 15:36:57 -0000\r\nX-Received: by wyb34 with SMTP id 34so6904301wyb.15\n        for &lt;neat@yahoogroups.com&gt;; Mon, 18 Apr 2011 08:36:56 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.216.121.130 with SMTP id r2mr4809104weh.96.1303141015962; Mon,\n 18 Apr 2011 08:36:55 -0700 (PDT)\r\nX-Received: by 10.216.10.9 with HTTP; Mon, 18 Apr 2011 08:36:55 -0700 (PDT)\r\nIn-Reply-To: &lt;iocdrj+nh03@...&gt;\r\nReferences: &lt;BANLkTinFm=9vBN3-_WTBMZQv3+-rmYZB6Q@...&gt;\n\t&lt;iocdrj+nh03@...&gt;\r\nDate: Mon, 18 Apr 2011 18:36:55 +0300\r\nMessage-ID: &lt;BANLkTimHivcwJTa7tdVuamFDy++Zs6EoQQ@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=00261883a59c59459b04a1332905\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Vassilis Vassiliades &lt;vassilisvas@...&gt;\r\nSubject: Re: [neat] Re: Alternative fitness sharing method\r\nX-Yahoo-Group-Post: member; u=434634266; y=Q5z6uWO_QsgHQPOHcJBAdVi7vmDssaB23NwTVdwl_t2SwCsrLiOE1w\r\nX-Yahoo-Profile: v.vassiliades\r\n\r\n\r\n--00261883a59c59459b04a1332905\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Colin,\n\nThe method you mentioned reminds me of a relatively recent algor=\r\nithm in the\nmulti-objective optimization literature called MOEA/D (Multi-Ob=\r\njective\nEvolutionary Algorithm based on Decomposition). The details of this=\r\n\nalgorithm might give you more food for thought. :)\n\nHere&#39;s the doi: http:/=\r\n/dx.doi.org/10.1109/TEVC.2007.892759\n\nVassilis\n\n\nOn Sat, Apr 16, 2011 at 6:=\r\n50 PM, Colin &lt;colin.green1@...&gt; wrote:\n\n&gt;\n&gt;\n&gt; --- In neat@yahoogroups=\r\n.com, Colin Green &lt;colin.green1@...&gt; wrote:\n&gt;\n&gt; &gt; Typically the x,y here co=\r\nuld be weightings given to different aspects\n&gt; &gt; of a fitness function or w=\r\ne could combine two distinct fitness\n&gt; &gt; functions with weights (which amou=\r\nnts to the same thing). So e.g.\n&gt; &gt;\n&gt; &gt; f(G, x, y) =3D (f1(G) * x) + (f2(G)=\r\n * y)\n&gt;\n&gt; On relfection this isn&#39;t quite right. One weigting would adjust t=\r\nhe balance\n&gt; between two fitness functions, e.g.\n&gt;\n&gt; f(G, x) =3D (f1(G) * x=\r\n) + (f2(G) * (1-x))\n&gt;\n&gt; So for a 2D space you&#39;d have something like:\n&gt;\n&gt; f(=\r\nG, x, y) =3D (f1(G) * x) + (f2(G) * (1-x))\n&gt; + (f3(G) * y) + (f4(G) * (1-y)=\r\n)\n&gt;\n&gt; We also need a way to make selection not become biased towards Indivi=\r\nduals\n&gt; in one part of the space because they get better fitness there - ma=\r\nybe the\n&gt; fitnesses need be normalized in some way (max in each region is t=\r\nhe same)\n&gt; but that doesn&#39;t feel quite right (needs more thought).\n&gt;\n&gt; I&#39;ll=\r\n also give an example of a domain to try and explain why this might\n&gt; work.=\r\n Consider a fitness function with just 1 dimension f(G,x) and we&#39;re\n&gt; tryig=\r\nn to evolve a bipedal walker. f1 could be a standing still test (not\n&gt; fall=\r\ning over), f2 could be the walking distance test. So you&#39;re genomes\n&gt; start=\r\n out by doing well on f1 and then some migrate over to f2 to populate\n&gt; tha=\r\nt region of the fitness space. It does mean more CPU effort having to\n&gt; eva=\r\nulate f1 and f2, and you also need to define network inputs such that you\n&gt;=\r\n can tell the biped whether to stand or walk, so it&#39;s not an entirely trivi=\r\nal\n&gt; swap in replacement of G based fitness sharing, but I&#39;m warming to the=\r\n idea\n&gt; the more I think about it.\n&gt;\n&gt; Colin.\n&gt;\n&gt;  \n&gt;\n\r\n--00261883a59c59459b04a1332905\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi Colin,&lt;br&gt;&lt;br&gt;The method you mentioned reminds me of a relatively \nrecen=\r\nt algorithm in the multi-objective optimization literature called \nMOEA/D (=\r\nMulti-Objective Evolutionary Algorithm based on Decomposition). The details=\r\n of this algorithm might give you more food for thought. :)&lt;br&gt;&lt;br&gt;Here&#39=\r\n;s the doi:\n&lt;a href=3D&quot;http://dx.doi.org/10.1109/TEVC.2007.892759&quot; target=\r\n=3D&quot;_blank&quot;&gt;http://dx.doi.org/10.1109/TEVC.2007.892759&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\nVassili=\r\ns&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On Sat, Apr 16, 2011 at 6:50 PM, Co=\r\nlin &lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:colin.green1@...&quot; target=\r\n=3D&quot;_blank&quot;&gt;colin.green1@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote cla=\r\nss=3D&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;pa=\r\ndding-left:1ex&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div style=3D&quot;background-color:#fff&quot;&gt;\n&lt;span=\r\n&gt;=C2=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;div&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;/p&gt;&lt;div&gt;=\r\n--- In &lt;a href=3D&quot;mailto:neat%40yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;neat@yah=\r\noogroups.com&lt;/a&gt;, Colin Green &lt;colin.green1@...&gt; wrote:&lt;br&gt;\n&lt;br&gt;\n&gt;=\r\n Typically the x,y here could be weightings given to different aspects&lt;br&gt;\n=\r\n&gt; of a fitness function or we could combine two distinct fitness&lt;br&gt;\n&gt=\r\n; functions with weights (which amounts to the same thing). So e.g.&lt;br&gt;\n&gt=\r\n; &lt;br&gt;\n&gt;    f(G, x, y) =3D (f1(G) * x) + (f2(G) * y)&lt;br&gt;\n&lt;br&gt;&lt;/div&gt;\nOn r=\r\nelfection this isn&#39;t quite right. One weigting would adjust the balance=\r\n between two fitness functions, e.g.&lt;br&gt;\n&lt;br&gt;\nf(G, x) =3D (f1(G) * x) + (f2=\r\n(G) * (1-x))&lt;br&gt;\n&lt;br&gt;\nSo for a 2D space you&#39;d have something like:&lt;br&gt;\n=\r\n&lt;br&gt;\nf(G, x, y) =3D (f1(G) * x) + (f2(G) * (1-x)) &lt;br&gt;\n               + (f3=\r\n(G) * y) + (f4(G) * (1-y)) &lt;br&gt;\n&lt;br&gt;\nWe also need a way to make selection n=\r\not become biased towards Individuals in one part of the space because they =\r\nget better fitness there - maybe the fitnesses need be normalized in some w=\r\nay (max in each region is the same) but that doesn&#39;t feel quite right (=\r\nneeds more thought).&lt;br&gt;\n\n\n&lt;br&gt;\nI&#39;ll also give an example of a domain t=\r\no try and explain why this might work. Consider a fitness function with jus=\r\nt 1 dimension f(G,x) and we&#39;re tryign to evolve a bipedal walker. f1 co=\r\nuld be a standing still test (not falling over), f2 could be the walking di=\r\nstance test. So you&#39;re genomes start out by doing well on f1 and then s=\r\nome migrate over to f2 to populate that region of the fitness space. It doe=\r\ns mean more CPU effort having to evaulate f1 and f2, and you also need to d=\r\nefine network inputs such that you can tell the biped whether to stand or w=\r\nalk, so it&#39;s not an entirely trivial swap in replacement of G based fit=\r\nness sharing, but I&#39;m warming to the idea the more I think about it.&lt;br=\r\n&gt;\n\n\n&lt;br&gt;\nColin.&lt;br&gt;\n&lt;br&gt;\n&lt;p&gt;&lt;/p&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;=\r\ncolor:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br=\r\n&gt;&lt;br&gt;\n\r\n--00261883a59c59459b04a1332905--\r\n\n"}}