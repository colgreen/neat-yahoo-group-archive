{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"GMEWjalIMhR_n4m0X71hCT3s7xDnxYFbu-GLNarombiwjoM5pKvK-dCmWBtmlqN2WP621e_SRqStLSd9ZJiEzMBsgjyS9a1XqNCrZrm3FxbW","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Ideas for automatically deciding the quantity of nodes for HyperNEAT substra","postDate":"1243577701","msgId":4699,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGd2bnVoNSsxMDB1aEBlR3JvdXBzLmNvbT4=","inReplyToHeader":"PGd2bHVoaCsyanRmQGVHcm91cHMuY29tPg=="},"prevInTopic":4696,"nextInTopic":4700,"prevInTime":4698,"nextInTime":4700,"topicId":4693,"numMessagesInTopic":6,"msgSnippet":"Peter, I m thinking over some of insights in your message like the mutation density map.  But one thing I don t completely understand is the point about some","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 63352 invoked from network); 29 May 2009 06:15:39 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m7.grp.re1.yahoo.com with QMQP; 29 May 2009 06:15:39 -0000\r\nX-Received: from unknown (HELO n46b.bullet.mail.sp1.yahoo.com) (66.163.168.160)\n  by mta1.grp.re1.yahoo.com with SMTP; 29 May 2009 06:15:39 -0000\r\nX-Received: from [69.147.65.171] by n46.bullet.mail.sp1.yahoo.com with NNFMP; 29 May 2009 06:15:01 -0000\r\nX-Received: from [98.137.35.15] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 29 May 2009 06:15:01 -0000\r\nDate: Fri, 29 May 2009 06:15:01 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;gvnuh5+100uh@...&gt;\r\nIn-Reply-To: &lt;gvluhh+2jtf@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Ideas for automatically deciding the quantity of nodes for HyperNEAT substra\r\nX-Yahoo-Group-Post: member; u=54567749; y=ldEhmIAhjWWJUwA3liQEaUG7AlGLAQ75TqyoT0mHVF9FLPnhs3wl\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nPeter, I&#39;m thinking over some of insights in your message like the mutation=\r\n density map.  But one thing I don&#39;t completely understand is the point abo=\r\nut some patterns not being &quot;objects.&quot;  How do you define &quot;object?&quot;  Do you =\r\nmean that some patterns are not contiguous?  It seems like you mean somethi=\r\nng deeper than that, but I&#39;m not sure I follow. Can you give some examples =\r\nof patterns that are not objects?\n\nI&#39;ll be very interested to see any exper=\r\niment you complete on substrate evolution in food gathering, especially if =\r\nyou evolve input and output placement and it works well.\n\nken\n\n--- In neat@=\r\nyahoogroups.com, &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt; wrote:\n&gt;\n&gt; Hi Ke=\r\nn.\n&gt; \n&gt; You make a good point. My method currently increases overall densit=\r\ny and this is a problem. But I think I found a solution. Suppose the substr=\r\nate of an individual is painted on a 2D plane. Now, there can co-exist anot=\r\nher 2D plane which we can call the density mutation map. It can contain flo=\r\nats in the range of [-1 .. 1]. Each generation this map is reset to contain=\r\n only values of 0.0. When the density mutation is triggered, a random place=\r\n and area in the map is chosen and filled with a random value of -10% to +1=\r\n0% (-0.1 .. 0.1). This process can be optionally repeated until the density=\r\n mutation map is filled to some extend, according to a mutation power or so=\r\nmething. Then in the next generation, the substrate is increased/decreased =\r\nin density according to its density mutation map. \n&gt; \n&gt; And what could be r=\r\neally cool is that the distribution of random locations in the density muta=\r\ntion map can be predetermined by the CPPN itself. So the CPPN can actually =\r\ncontrol which locations will grow in density. As the CPPN complexifies, the=\r\nse locations can change as well.  Does it make sense? Density mutation maps=\r\n are trivial to crossover as well - just average them. \n&gt; \n&gt; Here is one in=\r\nsight I had after a long walk in circles thinking about CPPN patterns, obje=\r\ncts and substrates. Before some time, I was confident that there exists a m=\r\nethod that can convert *any* pattern in space to an object/substrate. Like =\r\nan alchemist :) But now I realized the truth.\n&gt; \n&gt; All objects we perceive,=\r\n including forms of life, are patterns in space. There is no doubt about it=\r\n. They are just spatial patterns in space that can be represented by CPPNs.=\r\n What mistake I did before, was to think that therefore all patterns in spa=\r\nce are objects. This is not true. All objects are patterns in space, but no=\r\nt all patterns in space are objects. Objects and substrates are only a tiny=\r\n subset, a small class of patterns in space. They can be represented by CPP=\r\nNs, of course. But CPPNs can do a lot more. They can represent any pattern =\r\nin space. So I realized that there is no need to do magic tricks to get my =\r\nobjects and substrates evolved. \n&gt; \n&gt; The only thing we should put our effo=\r\nrts in, is to find a way to bias the search for the particular class of pat=\r\nterns. And I immediately identified one major obstacle. Genetic defects. A =\r\ngenetic lineage does not strictly follow a particular class of patterns. It=\r\n is very possible that an object&#39;s offspring can be patterns that are not o=\r\nbjects and vice versa. But we can&#39;t evaluate the non-object patterns.\n&gt; \n&gt; =\r\nThere is one solution, though. Suppose we start with a seed CPPN that  we k=\r\nnow is producing a good pattern. Some kind of validity check procedure has =\r\nto be developed, to test if a CPPN produces a pattern that belongs to the d=\r\nesired class. When any mutation occurs, that validity check is performed an=\r\nd if the resulting pattern is outside the desired class, undo the mutation =\r\nand try again. Repeat the process until a good pattern comes out of the mut=\r\nation. This way the search will strictly follow the class of patterns, with=\r\nout hurting evolution dynamics like discarding individuals during evaluatio=\r\nn would do. \n&gt; \n&gt; But there is a higher probability for the evolution to ge=\r\nt stuck. Suppose you want to evolve something like an insect model but to g=\r\net there, the search will have to pass through a space where no patterns be=\r\nlong to the same class, even if the class of &quot;objects&quot; is so vast. Maybe on=\r\nly Novelty Search can handle this. \n&gt; \n&gt; I am planning to throw away the GN=\r\nG approach and use some image processing techniques instead. I found some v=\r\nery useful functions in OpenCV, contour extraction and polygonal approximat=\r\nion for example. I&#39;ll see which one works better. I have an idea to test ou=\r\nt the substrate evolution. It is actually the HyperNEAT food gathering task=\r\n, but the inputs and outputs placement will be evolved. And there will be a=\r\n hidden layer also. It is only a project on paper now, but I hope I will fi=\r\nnd more time to implement it.\n&gt; \n&gt; Peter\n&gt; \n&gt; \n&gt; \n&gt; --- In neat@yahoogroups=\r\n.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Peter, I&#39;m glad to see y=\r\nou&#39;re still thinking about this important question.  You make some interest=\r\ning observations.  I think you&#39;re probably right that trying to correlate n=\r\node density to CPPN complexity is not the best approach.  On the other hand=\r\n, making changes in node density correlated somewhat with fitness seems pot=\r\nentially sensible.  But it still doesn&#39;t seem to answer the big question of=\r\n where within the substrate to add the nodes?  Or would you just increase o=\r\nverall density uniformly?  My concern is that biological brains did not inc=\r\nrease in density (which for them may just mean size) uniformly.  That is, s=\r\nome parts of the brain got bigger while others did not.  That would seem to=\r\n imply that a substrate should be able to add density selectively to specif=\r\nic regions that evolution decides on itself.  Or perhaps your idea incorpor=\r\nates that kind of regional growth somehow already?\n&gt; &gt; \n&gt; &gt; About saturatio=\r\nn of the sigmoid- that is indeed an important issue.  Right now we are inve=\r\nstigating some techniques to mitigate saturation, which I think will end up=\r\n being effective and also which will facilitate the kind of massive substra=\r\nte complexification that would be really cool to see in the future.\n&gt; &gt; \n&gt; =\r\n&gt; Still, we still do not have any elegant algorithm to evolve the substrate=\r\n, though I am confident it will be possible.\n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt; &gt; --- In n=\r\neat@yahoogroups.com, &quot;petar_chervenski&quot; &lt;petar_chervenski@&gt; wrote:\n&gt; &gt; &gt;\n&gt; =\r\n&gt; &gt; Hi all!\n&gt; &gt; &gt; \n&gt; &gt; &gt; I was gone for a while, but before a day or so I h=\r\nad some spare time to continue my research about automated substrate evolut=\r\nion. \n&gt; &gt; &gt; \n&gt; &gt; &gt; My latest research so far ended up with a system capable=\r\n of approximating any spatial CPPN picture with a developing mesh based on =\r\nthe Growing Neural Gas algorithm. While this worked well and could be used =\r\nfor evolving substrate configurations right away, there was still a problem=\r\n about deciding the right number of nodes for particular individuals. With =\r\nGNG, it is more like a problem of deciding when to stop development or appr=\r\noximation of the CPPN picture. \n&gt; &gt; &gt; \n&gt; &gt; &gt; When we discussed the issue so=\r\nme time ago, I had the idea that CPPN complexity can be directly linked to =\r\nsubstrate density. More complex CPPN =3D more dense substrate. This seems l=\r\nike a solution but it I think it is actually a bad idea. A CPPN containing =\r\nmany nodes and links does not always produce a complex pattern in space. It=\r\n can be an entirely white or black picture, due to genetic defects. Plus, i=\r\nt is not sure that the problem requires that many nodes to be solved - the =\r\nCPPN may have enormous complexity but producing a simple well-shaped pictur=\r\ne that solves it. \n&gt; &gt; &gt; \n&gt; &gt; &gt; So what I think now is, that substrate dens=\r\nity should be related to fitness instead. How exactly? Well here is my idea=\r\n. \n&gt; &gt; &gt; \n&gt; &gt; &gt; All individuals start with a minimal number of nodes in the=\r\n substrate, say 50. There will be a mutation increasing the number of nodes=\r\n with about 0%-10% or decreasing with 0%-10%. The mutation rate will vary a=\r\ncross species. Species that are stagnating for too long time will have the =\r\nprobability of this mutation increased - because they may just lack the num=\r\nber of nodes to solve the problem. Or have too many nodes. \n&gt; &gt; &gt; \n&gt; &gt; &gt; Yo=\r\nu know, there is a problem with having the number of nodes increasing and t=\r\nhis is the over saturation of the sigmoid. Increasing the density with 2x w=\r\nill have very big impact if the weights are not altered, especially in case=\r\n recurrence is present. How can we cope with that? \n&gt; &gt; &gt; \n&gt; &gt; &gt; I don&#39;t ha=\r\nve any experimental data yet, I am too busy programming some bullshit but p=\r\nlease tell me if this ideas make sense to you. \n&gt; &gt; &gt; \n&gt; &gt; &gt; Peter\n&gt; &gt; &gt;\n&gt; =\r\n&gt;\n&gt;\n\n\n\n"}}