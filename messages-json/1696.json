{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":29390171,"authorName":"Mattias Fagerlund","from":"&quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;","profile":"mattias_fagerlund","replyTo":"LIST","senderId":"6Qc-aQrJueLFa0MUHQ3iMcg5MRv2K2pM2n6H0Dd_EfazIvME0pftCnXNSVM-rPO-F0Pp42J_iymgJY0MhS3CgLh6DMVyprrpGCjMJYNX9GCSl0jpSQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Meta-NEAT algorithm progress","postDate":"1099832778","msgId":1696,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFdvcmxkQ2xpZW50LUYyMDA0MTEwNzE0MDYuQUEwNjE4MDAwOEBvY3RhZ2F0ZS5jb20+","inReplyToHeader":"PDQxODZCNUZCLjgwNTAxMDVAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDQxODYzNzM4LjgwNTAzQGRzbC5waXBleC5jb20+IDw0MTg2QjVGQi44MDUwMTA1QGRzbC5waXBleC5jb20+"},"prevInTopic":1690,"nextInTopic":0,"prevInTime":1695,"nextInTime":1697,"topicId":1667,"numMessagesInTopic":11,"msgSnippet":"... For my DelphiNEAT implementation, it takes about 16,45 generations to find a perfect solution (just ran it, averaged over 100 iterations, popsize=150). But","rawEmail":"Return-Path: &lt;mattias@...&gt;\r\nX-Sender: mattias@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 90146 invoked from network); 7 Nov 2004 13:10:35 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m22.grp.scd.yahoo.com with QMQP; 7 Nov 2004 13:10:35 -0000\r\nReceived: from unknown (HELO endeavour.mit.um.bostream.net) (81.26.227.9)\n  by mta3.grp.scd.yahoo.com with SMTP; 7 Nov 2004 13:10:35 -0000\r\nReceived: from bredin.nu (h208n6c1o285.bredband.skanova.com [81.227.101.208])\n\tby endeavour.mit.um.bostream.net (Postfix) with ESMTP id 6CF0268232\n\tfor &lt;neat@yahoogroups.com&gt;; Sun,  7 Nov 2004 14:10:24 +0100 (CET)\r\nReceived: from WorldClient by bredin.nu\n\t(MDaemon.PRO.v7.2.0.R)\n\twith ESMTP id md50000027075.msg\n\tfor &lt;neat@yahoogroups.com&gt;; Sun, 07 Nov 2004 14:06:21 +0100\r\nReceived: from [127.0.0.1] via WorldClient with HTTP;\n\tSun, 07 Nov 2004 14:06:18 +0100\r\nDate: Sun, 07 Nov 2004 14:06:18 +0100\r\nTo: neat@yahoogroups.com\r\nMIME-Version: 1.0\r\nContent-Type: text/plain\r\nMessage-ID: &lt;WorldClient-F200411071406.AA06180008@...&gt;\r\nX-Mailer: WorldClient 7.2.0\r\nIn-Reply-To: &lt;4186B5FB.8050105@...&gt;\r\nReferences: &lt;41863738.80503@...&gt; &lt;4186B5FB.8050105@...&gt;\r\nX-Authenticated-Sender: mattias@...\r\nX-Spam-Processed: bredin.nu, Sun, 07 Nov 2004 14:06:21 +0100\n\t(not processed: message from valid local sender)\r\nX-MDRemoteIP: 127.0.0.1\r\nX-Return-Path: mattias@...\r\nX-MDaemon-Deliver-To: neat@yahoogroups.com\r\nX-MDAV-Processed: bredin.nu, Sun, 07 Nov 2004 14:06:23 +0100\r\nX-eGroups-Remote-IP: 81.26.227.9\r\nFrom: &quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;\r\nSubject: Re: [neat] Meta-NEAT algorithm progress\r\nX-Yahoo-Group-Post: member; u=29390171\r\nX-Yahoo-Profile: mattias_fagerlund\r\n\r\n&gt; Quick update. I have just got the average number of gens to find a \n&gt; solution for XOR down to about 40, which is a nice result and also\n&gt; means \n&gt; I won&#39;t have to spend the next fortnight searching for bugs :) On that \n&gt; note I think I&#39;ll call it a day.\n\nFor my DelphiNEAT implementation, it takes about 16,45 generations to find\na perfect solution (just ran it, averaged over 100 iterations, popsize=150).\n\nBut your discussion brought back memories of things that went wrong with\nmy initial XOR - my fitness function wasn&#39;t identical to Kens; make sure\nthat your fitness function is 100% identical to his!\n\nSpeficically, each the error for each test is specified as the difference\nbetween the correct value (0 or 1) and the the NEAT value [0..1]. But NOT\nif the NEAT value evaluates to the same binary value as the correct value,\nthen the error is 0!\n\nIf correct=1 and NEAT = 0.2, Error=0.3\nIf correct=1 and NEAT = 0.49, Error=0.51\nIf correct=1 and NEAT = 0.51, Error=0 (!!)\nIf correct=1 and NEAT = 0.75, Error=0 (!!)\nIf correct=1 and NEAT = 1.0, Error=0 (!!)\n\nI had this error and it really hurt my evaluations, and that&#39;s because\nNEAT keeps spending time trying to improve (reduce error of) bit tests\nthat are allready evaluating to the correct binary value.\n\nAlso make sure that you&#39;re not simply summing &quot;hits&quot;/&quot;misses&quot;, but instead\nactual error sums. Because evolution needs a gradient to follow, and\ndiscrret fitness levels are hard to find a way across.\n\ncheers,\nmattias\n\n\n\n\n\n\n"}}