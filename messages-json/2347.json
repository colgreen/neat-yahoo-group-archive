{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"vIfumjFbPzWX44Y2VSn7P0cF3sIxQ9nWRr1dbaLPA6x-auPQ-9qOoFe1B_ZC02fQDYYIvIM-brH_58hL74GVoJ0Z46tnLutIxw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Continuous Species Control","postDate":"1129739926","msgId":2347,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQzNTY3Njk2LjQwMjA2MDdAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PFdvcmxkQ2xpZW50LUYyMDA1MTAxOTE2MTMuQUExMzQ2MDE0MkBvY3RhZ2F0ZS5jb20+","referencesHeader":"PDYuMi4zLjQuMC4yMDA1MTAxNzE0NDcwNi4wMjc3NDViMEBwb3AubWFpbC55YWhvby5jby51az4gPDQzNTQzRkQyLjcwMDAyMDlAZHNsLnBpcGV4LmNvbT4gPFdvcmxkQ2xpZW50LUYyMDA1MTAxOTE2MTMuQUExMzQ2MDE0MkBvY3RhZ2F0ZS5jb20+"},"prevInTopic":2346,"nextInTopic":2349,"prevInTime":2346,"nextInTime":2348,"topicId":2341,"numMessagesInTopic":11,"msgSnippet":"Hi Mattias, ... Yeh and the more complex a system becomes the more difficult it is to find bugs. Extra complexity also affects readability and maintainability ","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 39700 invoked from network); 19 Oct 2005 16:38:48 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m24.grp.scd.yahoo.com with QMQP; 19 Oct 2005 16:38:48 -0000\r\nReceived: from unknown (HELO astro.systems.pipex.net) (62.241.163.6)\n  by mta5.grp.scd.yahoo.com with SMTP; 19 Oct 2005 16:38:47 -0000\r\nReceived: from [10.0.0.10] (81-86-161-87.dsl.pipex.com [81.86.161.87])\n\tby astro.systems.pipex.net (Postfix) with ESMTP id 0940DE0003D9\n\tfor &lt;neat@yahoogroups.com&gt;; Wed, 19 Oct 2005 17:38:45 +0100 (BST)\r\nMessage-ID: &lt;43567696.4020607@...&gt;\r\nDate: Wed, 19 Oct 2005 17:38:46 +0100\r\nUser-Agent: Mozilla Thunderbird 1.0.2 (Windows/20050317)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;6.2.3.4.0.20051017144706.027745b0@...&gt; &lt;43543FD2.7000209@...&gt; &lt;WorldClient-F200510191613.AA13460142@...&gt;\r\nIn-Reply-To: &lt;WorldClient-F200510191613.AA13460142@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] Continuous Species Control\r\nX-Yahoo-Group-Post: member; u=127853030; y=sqNaF4AUDm75zarrE7WmE_dmn7XzrESHFGH6F4Q-JDfPe4tMywXv\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nHi Mattias,\n\nMattias Fagerlund wrote:\n\n&gt;\n&gt;For Delphi Neat, I used an &quot;optimized&quot; version of exp, because it was\n&gt;significantly faster. What I didn&#39;t know was that it wasn&#39;t as accurate.\n&gt;That exp function totally killed the effectiveness of NEAT, and it took me\n&gt;days before I realized it was the exp function that was causing the\n&gt;problems...\n&gt;  \n&gt;\nYeh and the more complex a system becomes the more difficult it is to \nfind bugs. Extra complexity also affects readability and maintainability \nof code, which is bad if like me you want others to re-use and possibly \nbuild on your code. It&#39;s not all doom and gloom though, often you can \nseperate out complex bits of code and place them in their own class or \nwhatever, I think this know as the strategy pattern these days. I often \nadopt this approach starting out with a slow but simple class and \nswapping in something better later, that way you have the option of \nswitching back to the simple class if things start going wrong!\n\n&gt;  \n&gt;\n&gt;&gt;Hence my train of thought moves \n&gt;&gt;to hebbian learning based algorithms - the idea of connection hardness \n&gt;&gt;gives us something like that. \n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Hardness, is that resistance to mutation, like preventing weight mutation\n&gt;and connection splitting?\n&gt;\nI&#39;m not referring to any specific piece of research here, I&#39;m just \nthinking vaguely about the idea of connections of varying hardness, but \nyes, resistance to weight mutation, deletion, splitting (actually I \nhadn&#39;t thought of that one) is the sort of thing I&#39;m thinking about.\n\n&gt; I could see potential benefits to that. Would\n&gt;hardness be related to connection age, or evolved as a separate value,\n&gt;along with the connection weight? \n&gt;  \n&gt;\nBoth of these seem sensible approaches to me at this point in time. I \ndid a little bit of experimentation when I did my phased search \nexperiments, SharpNEAT has a check box that signals NEAT to fix all \ncurrent connections following a pruning phase, which is closest to the \nidea of age based hardness (inconclusive results BTW). A third possible \nway is to adjust hardness of connections in a genome based upon the \nfitness scores achieved by that genome, so poor genomes actually get \ntheir connections softened, this is more like hebbian learning. Don&#39;t \nask me how this would work, I haven&#39;t though through the details yet!\n\n&gt;One interesting solution would be to initialize all new connections with a\n&gt;hardness of zero, then let the hardness evolve freely. Evolution should\n&gt;make essential connection hardened because mutations to them would\n&gt;decrease the survivability of the species/individual...\n&gt;  \n&gt;\nActually this idea has been banded around before. The idea of  meta-data \nin the genome that controls rates of crossover, mutation, etc. It could \nwork but I think it expands the search space complexity (dimensionailty) \nand thus makes it harder to search. Worth thinking about again though.\n\n&gt;Today, evolution fumbles blindly, changing everything around &quot;trying&quot; to\n&gt;make improvements instead of focusing on the weak parts of the current\n&gt;network. Perhaps hardness would be a way around that?\n&gt;  \n&gt;\nIndeed. I&#39;m not sure about other&#39;s NEAT implementations but sharpneat \nhas a type of mutation whereby all of the weights in a genome are \nperturbed by a small amount. This seems a bit crude to me, especially as \ngenomes increase in size. I think multi-connection mutations are useful \nbut this seems a little extreme, so maybe as you say we can foxus in on \ncertain connections.\n\n&gt;I&#39;ve often wondered what would happen if you &quot;locked&quot; nodes and\n&gt;connections after they reached a certain age, focusing evolution on coming\n&gt;up with new structures to tweak old behaviours instead of evolving all of it. \n&gt;  \n&gt;\nAs I said I actually tried this briefly, but I didn&#39;t get too deeply \ninto it. Probably because the results weren&#39;t very good, but that \ndoesn&#39;t mean it&#39;s not worth investigating, especially since I fixed some \nmajor bugs since then!\n\n&gt;Is there any research on these topics that I could look at?\n&gt;  \n&gt;\nI personally haven&#39;t really looked around yet. Anyone got any pointers?\n\nColin\n\n\n"}}