{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":471381182,"authorName":"gotnobluemilk","from":"&quot;gotnobluemilk&quot; &lt;gotnobluemilk@...&gt;","profile":"gotnobluemilk","replyTo":"LIST","senderId":"PE-DU8lvHon2v3h9JHnDbHWRB6tFzD5K7hd1q8-vWaUh-SmvmOaLrY2eaJZwUOsZyfcgkGRrANA3n4TNEQ-zjHSomHjLWHy2vXG4b5mZEYA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Example of Training based on a DataSet","postDate":"1329154236","msgId":5766,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpoYmhicyszZzdtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGpnazZpMys2ZTV2QGVHcm91cHMuY29tPg=="},"prevInTopic":5758,"nextInTopic":0,"prevInTime":5765,"nextInTime":5767,"topicId":5756,"numMessagesInTopic":4,"msgSnippet":"Major bug in my code when setting input array values: for (Int32 j = 0; j ","rawEmail":"Return-Path: &lt;gotnobluemilk@...&gt;\r\nX-Sender: gotnobluemilk@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 86395 invoked from network); 13 Feb 2012 17:30:38 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 13 Feb 2012 17:30:38 -0000\r\nX-Received: from unknown (HELO ng2-vm5.bullet.mail.gq1.yahoo.com) (98.136.219.18)\n  by mta3.grp.sp2.yahoo.com with SMTP; 13 Feb 2012 17:30:38 -0000\r\nX-Received: from [98.137.0.87] by ng2.bullet.mail.gq1.yahoo.com with NNFMP; 13 Feb 2012 17:30:37 -0000\r\nX-Received: from [69.147.65.149] by tg7.bullet.mail.gq1.yahoo.com with NNFMP; 13 Feb 2012 17:30:37 -0000\r\nX-Received: from [98.137.34.72] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 13 Feb 2012 17:30:37 -0000\r\nDate: Mon, 13 Feb 2012 17:30:36 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;jhbhbs+3g7m@...&gt;\r\nIn-Reply-To: &lt;jgk6i3+6e5v@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;7-7717703976-7528461351=:3&quot;\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;gotnobluemilk&quot; &lt;gotnobluemilk@...&gt;\r\nSubject: Re: Example of Training based on a DataSet\r\nX-Yahoo-Group-Post: member; u=471381182; y=30HEnqjPDkpZXgf3uqwm8VsOO9608J5Txm5396tfUUV442RcfidjEg\r\nX-Yahoo-Profile: gotnobluemilk\r\n\r\n\r\n--7-7717703976-7528461351=:3\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\nMajor bug in my code when setting input array values:\n\n     for (Int32 j =\r\n=3D 0; j &lt; box.InputCount; j++)\n     {\n     box.InputSignalArray[0] =3D Con=\r\nvert.ToDouble(dr[j]);\n     }\n\n\nshould be\n\n     for (Int32 j =3D 0; j &lt; box.=\r\nInputCount; j++)\n     {\n     box.InputSignalArray[j] =3D Convert.ToDouble(d=\r\nr[j]);\n     }\n\n\nSo if you are following my example, fix the bug.  The bug l=\r\neads to a\ncomplete lack of convergence.\n\n\n--- In neat@yahoogroups.com, &quot;got=\r\nnobluemilk&quot; &lt;gotnobluemilk@...&gt; wrote:\n&gt;\n&gt; I probably should have elaborate=\r\nd on MakeDecision().\n&gt;\n&gt; public void MakeDecision(DataRow dr)\n&gt; {\n&gt; // Clea=\r\nr the network\n&gt; box.ResetState();\n&gt;\n&gt; // Reset all inputs.\n&gt; inputArr.Reset=\r\n();\n&gt; // set all inputs.\n&gt; for (Int32 j =3D 0; j &lt; box.InputCount; j++)\n&gt; {=\r\n\n&gt; box.InputSignalArray[0] =3D Convert.ToDouble(dr[j]);\n&gt; }\n&gt;\n&gt; // Activate=\r\n the network\n&gt; box.Activate();\n&gt;\n&gt; }\n&gt;\n&gt;\n&gt; --- In neat@yahoogroups.com, &quot;go=\r\ntnobluemilk&quot; gotnobluemilk@ wrote:\n&gt; &gt;\n&gt; &gt; Well, I didn&#39;t expect much repon=\r\nse since the other posts about this\nsubject received no reponses. Anyway, h=\r\ne is the approach I took. I just\nput the needed changes in the Evaluate fun=\r\nction:\n&gt; &gt;\n&gt; &gt; public FitnessInfo Evaluate(IBlackBox box)\n&gt; &gt; {\n&gt; &gt; double =\r\nfitness =3D 0;\n&gt; &gt;\n&gt; &gt; foreach (DataRow dr in dtTrain.Rows)\n&gt; &gt; {\n&gt; &gt; // Ma=\r\nke decision\n&gt; &gt; MakeDecision(dr);\n&gt; &gt; if (!brainTrain.Brain.IsStateValid)\n&gt;=\r\n &gt; return FitnessInfo.Zero;\n&gt; &gt;\n&gt; &gt; // Update the fitness score of the netw=\r\nork\n&gt; &gt; fitness +=3D getScore();\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; // Update the evaluation cou=\r\nnter.\n&gt; &gt; _evalCount++;\n&gt; &gt;\n&gt; &gt; // Return the fitness score\n&gt; &gt; return new =\r\nFitnessInfo(Math.Max(0, fitness), Math.Max(0, fitness));\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; --- =\r\nIn neat@yahoogroups.com, &quot;gotnobluemilk&quot; &lt;gotnobluemilk@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; =\r\n&gt; I&#39;m using SharpNeat V2 and doing my first experiment. Lot&#39;s to\nlearn tryi=\r\nng to understand both the concept and the software.\n&gt; &gt; &gt;\n&gt; &gt; &gt; All of the =\r\nexperiments I have seen deal with robots of some sort.\nI&#39;m looking for an e=\r\nxperiment based on training off of a data set. For\nexample, I have 5,000 ca=\r\nses in an XML DataSet, I want to use 6 inputs,\npredict two outputs. I would=\r\n run through all 5,000 cases as one\ngeneration of the training and base my =\r\nfitness off of how accurately it\npredicted the correct output for the 5,000=\r\n cases.\n&gt; &gt; &gt;\n&gt; &gt; &gt; If anyone is aware of an experiment or posting that wou=\r\nld point me\nin the right direction I would appreciate it.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Thank=\r\ns.\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\r\n--7-7717703976-7528461351=:3\r\nContent-Type: text/html; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;P&gt;Major bug in my code when setting input array values:&lt;/P&gt;\n&lt;P&gt;&nbsp;&nbsp=\r\n;&nbsp; for (Int32 j =3D 0; j &lt; box.InputCount; j++)&lt;BR&gt;&nbsp;&nbsp;&nbs=\r\np; {&lt;BR&gt;&nbsp;&nbsp;&nbsp; box.InputSignalArray[0] =3D Convert.ToDouble(dr[=\r\nj]);&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&lt;/P&gt;\n&lt;P&gt;should be&lt;/P&gt;\n&lt;P&gt;&nbsp;&nbsp;&nbsp;=\r\n for (Int32 j =3D 0; j &lt; box.InputCount; j++)&lt;BR&gt;&nbsp;&nbsp;&nbsp; {&lt;BR=\r\n&gt;&nbsp;&nbsp;&nbsp; box.InputSignalArray[&lt;FONT color=3D&quot;#ff0000&quot;&gt;&lt;STRONG&gt;j&lt;=\r\n/STRONG&gt;&lt;/FONT&gt;] =3D Convert.ToDouble(dr[j]);&lt;BR&gt;&nbsp;&nbsp;&nbsp; }&lt;BR&gt;&lt;/=\r\nP&gt;\n&lt;P&gt;So if you are following my example, fix the bug.&nbsp; The bug leads =\r\nto a complete lack of convergence.&lt;/P&gt;\n&lt;P&gt;&lt;BR&gt;--- In neat@yahoogroups.com, =\r\n&quot;gotnobluemilk&quot; &lt;gotnobluemilk@...&gt; wrote:&lt;BR&gt;&gt;&lt;BR&gt;&gt; I probably=\r\n should have elaborated on MakeDecision().&lt;BR&gt;&gt; &lt;BR&gt;&gt; public void Mak=\r\neDecision(DataRow dr)&lt;BR&gt;&gt; {&lt;BR&gt;&gt; // Clear the network&lt;BR&gt;&gt; box.Re=\r\nsetState();&lt;BR&gt;&gt; &lt;BR&gt;&gt; // Reset all inputs.&lt;BR&gt;&gt; inputArr.Reset();=\r\n&lt;BR&gt;&gt; // set all inputs.&lt;BR&gt;&gt; for (Int32 j =3D 0; j &lt; box.InputCou=\r\nnt; j++)&lt;BR&gt;&gt; {&lt;BR&gt;&gt; box.InputSignalArray[0] =3D Convert.ToDouble(dr[=\r\nj]);&lt;BR&gt;&gt; }&lt;BR&gt;&gt; &lt;BR&gt;&gt; // Activate the network&lt;BR&gt;&gt; box.Activat=\r\ne();&lt;BR&gt;&gt; &lt;BR&gt;&gt; }&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; --- In neat@yahoogroups.c=\r\nom, &quot;gotnobluemilk&quot; gotnobluemilk@ wrote:&lt;BR&gt;&gt; &gt;&lt;BR&gt;&gt; &gt; Well, I=\r\n didn&#39;t expect much reponse since the other posts about this subject receiv=\r\ned no reponses. Anyway, he is the approach I took. I just put the needed ch=\r\nanges in the Evaluate function:&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; public FitnessIn=\r\nfo Evaluate(IBlackBox box)&lt;BR&gt;&gt; &gt; {&lt;BR&gt;&gt; &gt; double fitness =3D 0=\r\n;&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; foreach (DataRow dr in dtTrain.Rows)&lt;BR&gt;&gt; &=\r\ngt; {&lt;BR&gt;&gt; &gt; // Make decision&lt;BR&gt;&gt; &gt; MakeDecision(dr);&lt;BR&gt;&gt; =\r\n&gt; if (!brainTrain.Brain.IsStateValid)&lt;BR&gt;&gt; &gt; return FitnessInfo.Ze=\r\nro;&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &gt; // Update the fitness score of the network&lt;B=\r\nR&gt;&gt; &gt; fitness +=3D getScore();&lt;BR&gt;&gt; &gt; }&lt;BR&gt;&gt; &gt; &lt;BR&gt;&gt; &=\r\ngt; // Update the evaluation counter.&lt;BR&gt;&gt; &gt; _evalCount++;&lt;BR&gt;&gt; &g=\r\nt; &lt;BR&gt;&gt; &gt; // Return the fitness score&lt;BR&gt;&gt; &gt; return new Fitnes=\r\nsInfo(Math.Max(0, fitness), Math.Max(0, fitness));&lt;BR&gt;&gt; &gt; }&lt;BR&gt;&gt; &=\r\ngt; &lt;BR&gt;&gt; &gt; --- In neat@yahoogroups.com, &quot;gotnobluemilk&quot; &lt;gotnoblu=\r\nemilk@&gt; wrote:&lt;BR&gt;&gt; &gt; &gt;&lt;BR&gt;&gt; &gt; &gt; I&#39;m using SharpNeat V=\r\n2 and doing my first experiment. Lot&#39;s to learn trying to understand both t=\r\nhe concept and the software. &lt;BR&gt;&gt; &gt; &gt; &lt;BR&gt;&gt; &gt; &gt; All of t=\r\nhe experiments I have seen deal with robots of some sort. I&#39;m looking for a=\r\nn experiment based on training off of a data set. For example, I have 5,000=\r\n cases in an XML DataSet, I want to use 6 inputs, predict two outputs. I wo=\r\nuld run through all 5,000 cases as one generation of the training and base =\r\nmy fitness off of how accurately it predicted the correct output for the 5,=\r\n000 cases.&lt;BR&gt;&gt; &gt; &gt; &lt;BR&gt;&gt; &gt; &gt; If anyone is aware of an ex=\r\nperiment or posting that would point me in the right direction I would appr=\r\neciate it.&lt;BR&gt;&gt; &gt; &gt; &lt;BR&gt;&gt; &gt; &gt; Thanks.&lt;BR&gt;&gt; &gt; &gt;&lt;B=\r\nR&gt;&gt; &gt;&lt;BR&gt;&gt;&lt;BR&gt;&lt;/P&gt;\n\r\n--7-7717703976-7528461351=:3--\r\n\n"}}