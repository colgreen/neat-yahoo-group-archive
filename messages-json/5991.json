{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":234577593,"authorName":"Oliver Coleman","from":"Oliver Coleman &lt;oliver.coleman@...&gt;","profile":"olivercoleman04","replyTo":"LIST","senderId":"cS4X7AOcxgx7cewvU2Ky3ubq4SbXEfAryRwfiHdsaVW4Hd1ZS5km1bEZijmj8NPjJgtzLYYdH4yWwlnEpIZA9Eo9FdGAIf08x-TnB_XwQ2A","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: Open science software/experiment repository","postDate":"1360810215","msgId":5991,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBK2R1aW1NcE9Ka1pOTTZzTDZZWGUrYXZwOEgxNGVGV3VqUUhnVmM9cXFBY3NPaHJxUUBtYWlsLmdtYWlsLmNvbT4=","inReplyToHeader":"PGtkZDRjcyticWQyQGVHcm91cHMuY29tPg==","referencesHeader":"PGtkZDRjcyticWQyQGVHcm91cHMuY29tPg=="},"prevInTopic":5966,"nextInTopic":5994,"prevInTime":5990,"nextInTime":5992,"topicId":5942,"numMessagesInTopic":18,"msgSnippet":"Hi all, just to keep flogging this debate for all its worth, I wrote a blog post that attempts to boil down the arguments and counter-arguments (presented here","rawEmail":"Return-Path: &lt;oliver.coleman@...&gt;\r\nX-Sender: oliver.coleman@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 28321 invoked from network); 14 Feb 2013 02:50:16 -0000\r\nX-Received: from unknown (10.193.84.150)\n  by m8.grp.bf1.yahoo.com with QMQP; 14 Feb 2013 02:50:16 -0000\r\nX-Received: from unknown (HELO mail-wi0-f180.google.com) (209.85.212.180)\n  by mta2.grp.bf1.yahoo.com with SMTP; 14 Feb 2013 02:50:16 -0000\r\nX-Received: by mail-wi0-f180.google.com with SMTP id hi8so2183862wib.13\n        for &lt;neat@yahoogroups.com&gt;; Wed, 13 Feb 2013 18:50:16 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.180.83.10 with SMTP id m10mr13943936wiy.5.1360810216031;\n Wed, 13 Feb 2013 18:50:16 -0800 (PST)\r\nX-Received: by 10.194.243.193 with HTTP; Wed, 13 Feb 2013 18:50:15 -0800 (PST)\r\nIn-Reply-To: &lt;kdd4cs+bqd2@...&gt;\r\nReferences: &lt;kdd4cs+bqd2@...&gt;\r\nDate: Thu, 14 Feb 2013 13:50:15 +1100\r\nMessage-ID: &lt;CA+duimMpOJkZNM6sL6YXe+avp8H14eFWujQHgVc=qqAcsOhrqQ@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=f46d04428eb688865604d5a65115\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Oliver Coleman &lt;oliver.coleman@...&gt;\r\nSubject: Re: [neat] Re: Open science software/experiment repository\r\nX-Yahoo-Group-Post: member; u=234577593; y=L15pN4QTPKHod4P0D9UeJCaRG0vqQDmWPi18uMm1FS5hvOHisdZ2IWlQDfg2SA33w2muyd8VEg\r\nX-Yahoo-Profile: olivercoleman04\r\n\r\n\r\n--f46d04428eb688865604d5a65115\r\nContent-Type: text/plain; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi all, just to keep flogging this debate for all its worth, I wrote a blog=\r\n\npost that attempts to boil down the arguments and counter-arguments\n(prese=\r\nnted here and my own) for and against (requiring) submission of code\nalong =\r\nwith papers:\nhttp://ojcoleman.com/content/open-science-what-about-source-co=\r\nde\n\nLet me know if you feel I&#39;ve ripped off any statements you&#39;ve made in t=\r\nhe\ndiscussion in this group and want to be acknowledged for them in the pos=\r\nt.\n:) Most of the arguments against are from Ken, and they&#39;re the most\nblat=\r\nantly copied. (I&#39;ve linked to this thread from the post so people can\neasil=\r\ny find the source of an argument and read it in the authors words.)\n\nT: 042=\r\n1 972 953\nE: oliver.coleman@...\nW: http://ojcoleman.com\n\n\n\nOn 19 Janu=\r\nary 2013 14:37, Ken &lt;kstanley@...&gt; wrote:\n\n&gt; **\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; By the =\r\nway, I want to emphasize that I am very much in favor of releasing\n&gt; code v=\r\noluntarily and agree with Jean-Baptise that it is often very helpful.\n&gt; I j=\r\nust don&#39;t want a universal requirement.\n&gt;\n&gt;\n&gt; --- In neat@yahoogroups.com, =\r\n&quot;Ken&quot; wrote:\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Maybe I can elaborate a little more on why I d=\r\non&#39;t think code submission\n&gt; should be a requirement. I appear to be on the=\r\n minority side of this issue\n&gt; so I know it&#39;s an uphill battle but here&#39;s m=\r\ny reasoning:\n&gt; &gt;\n&gt; &gt; As soon as you make something a requirement, you are a=\r\ndding to\n&gt; bureaucracy. Inevitably, someone will be charged with checking t=\r\nhat you\n&gt; satisfied the requirement. Even if we start out saying you &quot;only&quot;=\r\n have to\n&gt; submit the code but no one has to run it, eventually an incident=\r\n will be\n&gt; exposed when someone submitted incorrect or even fraudulent code=\r\n, and then\n&gt; the code checks will become increasingly onerous. And it&#39;s lik=\r\nely those\n&gt; code checks will be done by reviewers, which means that people =\r\nwho already\n&gt; don&#39;t spend enough time reading our papers will now spend eve=\r\nn less time as\n&gt; they have to dedicate new effort to looking at a giant imp=\r\nenetrable volume\n&gt; of spaghetti code.\n&gt; &gt;\n&gt; &gt; I&#39;ve sat on enough executive =\r\ncommittees and editorial boards at this\n&gt; point to know that things will on=\r\nly get stricter and more out of control.\n&gt; Requirements never get lighter, =\r\nthey only get heavier. These committees\n&gt; often make decisions with broad i=\r\nmplications after short, rancorous\n&gt; arguments that ratchet up the paranoia=\r\n about how someone might cheat the\n&gt; system, leading to more and more burde=\r\nnsome checks and requirements. As\n&gt; Jeff points out, as if having to write =\r\n15-page project description wasn&#39;t\n&gt; enough, now NSF requires proposals to =\r\ninclude an additional 2-page data\n&gt; management plan. Not to mention the new=\r\n proliferation of endless plagiarism\n&gt; checks throughout the academic world=\r\n. So once we open this Pandora&#39;s box,\n&gt; don&#39;t think that someone won&#39;t ulti=\r\nmately be trying to run your code and\n&gt; blaming you if it doesn&#39;t work for =\r\nthem.\n&gt; &gt;\n&gt; &gt; As far as the upsides, such as Jeff&#39;s example of how helpful =\r\nit is to\n&gt; have the code to reproduce results, if you really think about it=\r\n, it&#39;s not\n&gt; so clear cut. In fact, Jeff, it&#39;s conceivable that you (or som=\r\neone like\n&gt; you) would not have made your discovery had the code been avail=\r\nable to\n&gt; begin with, because you would have simply run it and seen (mislea=\r\ndingly)\n&gt; that it works. It&#39;s only because it wasn&#39;t available and you ther=\r\neby were\n&gt; forced to try to reproduce the concept for yourself that you lea=\r\nrned the\n&gt; concept doesn&#39;t work as advertised. It may even be the case that=\r\n having\n&gt; specific experimental code universally available leads the commun=\r\nity to\n&gt; more deception (and thus to be more naive) because we would trust =\r\nresults\n&gt; that ultimately depend on obscure idiosyncrasies hidden in arcane=\r\n code\n&gt; bases rather than on the supposed main idea. After all, we all know=\r\n you can\n&gt; get virtually anything to &quot;work&quot; if you finesse it enough.\n&gt; &gt;\n&gt;=\r\n &gt; Not only that, but more deeply it seems like making code a requirement\n&gt;=\r\n is wishful thinking: We&#39;re trying to get a quick fix for a problem (i.e.\n&gt;=\r\n deciding whether an idea is promising) that is only really solved by good\n=\r\n&gt; old fashioned time and effort. That is, what really validates a method is=\r\n\n&gt; not the one time it was run to give a published result, but rather the\n&gt;=\r\n numerous reimplementations by independent parties over many subsequent\n&gt; y=\r\nears. The main reason you can trust NEAT is not because you can download\n&gt; =\r\nmy original pole balancing experiment and run it, but because of all the\n&gt; =\r\nexcellent independent packages like SharpNEAT, ANJI, and many others in\n&gt; w=\r\nhich I had no hand at all.\n&gt; &gt;\n&gt; &gt; Moreover, why should we even care about =\r\nthe code if the idea is\n&gt; uninspiring anyway? By forcing everyone to submit=\r\n code we are implicitly\n&gt; suggesting that what matters is simply that somet=\r\nhing worked rather than\n&gt; that it is an interesting idea. In my view the bi=\r\nggest problem in reviewing\n&gt; today is not some kind of systematic flaw in e=\r\nxperimental design but rather\n&gt; an unhealthy obsession with experimental re=\r\nsults to the complete exclusion\n&gt; of the main idea. Jeff, you say that &quot;rev=\r\niewers tend to be pretty good\n&gt; about this&quot; when it comes to unfairly deman=\r\nding excessive comparisons, but\n&gt; if that&#39;s true, it&#39;s only in our own comm=\r\nunity. In the larger machine\n&gt; learning community, reviewers are biased aga=\r\ninst EC and would love another\n&gt; excuse simply to say, &quot;Why didn&#39;t you comp=\r\nare to X&quot; as a way of avoiding\n&gt; actually needing to understand the central=\r\n idea. We will be perpetuating\n&gt; that kind of culture and hence our own ost=\r\nracization and defunding.\n&gt; &gt;\n&gt; &gt; Let&#39;s leave it voluntary and stop the sen=\r\nseless proliferation of endless\n&gt; requirements that technology tempts us to=\r\n perpetuate upon ourselves. We are\n&gt; ultimately only hurting ourselves as w=\r\ne forget that well-intended\n&gt; requirements steal from the precious little t=\r\nime in life we have to\n&gt; actually sit and think, which is the most importan=\r\nt thing we do as\n&gt; scientists.\n&gt; &gt;\n&gt; &gt; ken\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --- In neat@yahoogro=\r\nups.com, Jeff Clune wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Hello all,\n&gt; &gt; &gt;\n&gt; &gt; &gt; I agree with =\r\nJBM that code should be submitted, and I don&#39;t mind it\n&gt; being a requiremen=\r\nt. Submitting the code does not mean it has to compile\n&gt; the day after subm=\r\nission, be maintained, or even be clean/commented. It&#39;s\n&gt; just a written re=\r\ncord of what happened in the experiment. If you are\n&gt; publishing the experi=\r\nment and trying to describe exactly what you did, the\n&gt; code is the equival=\r\nent of a very detailed explanation of the experiment\n&gt; that allows others t=\r\no replicate it if they wish.\n&gt; &gt; &gt;\n&gt; &gt; &gt; For example, Jean-Baptiste and I t=\r\nried and failed to replicate the\n&gt; results of a famous, high-impact study. =\r\nIt was hard for us to know if there\n&gt; were bugs in our code, if we had the =\r\nwrong parameters, or if the result\n&gt; itself was suspicious (e.g. a bug in t=\r\nheir code). Eventually we got the\n&gt; code from the authors and we suddenly w=\r\nere able to replicate the results\n&gt; and learn under which conditions the ef=\r\nfect in question occurs. That never\n&gt; would have happened without their cod=\r\ne. In our case the authors were still\n&gt; alive and willing to share their co=\r\nde, but both of those conditions don&#39;t\n&gt; hold in a lot of cases (especially=\r\n with older work). I think science is\n&gt; better of if we&#39;re able to see exac=\r\ntly how a result came to be.\n&gt; &gt; &gt;\n&gt; &gt; &gt; I do agree that there may be some =\r\ndisincentive for businesses to\n&gt; publish. But how many businesses publish p=\r\napers about things they don&#39;t\n&gt; really want to share completely? I don&#39;t ru=\r\nn into too many influential\n&gt; papers like that. And maybe those businesses =\r\ncan publish in other journals,\n&gt; or get an exception from the editors.\n&gt; &gt; =\r\n&gt;\n&gt; &gt; &gt; As for the accumulation of a lot of worthless code, is that really =\r\na\n&gt; big problem? If they papers are worthless, they&#39;re already\n&gt; accumulati=\r\nng=85this is just a link in the paper that can be ignored, no?\n&gt; &gt; &gt;\n&gt; &gt; &gt; =\r\nI do agree that it may create a pressure on future papers to include\n&gt; prev=\r\nious algorithms more as controls, because the reviewers can say &quot;the\n&gt; code=\r\n is posted, why didn&#39;t you use it?&quot; I think we just have to resist that\n&gt; a=\r\ns reviewers=85because everyone knows what a pain it is to get someone else&#39;=\r\ns\n&gt; code running in their domain. Reviewers tend to be pretty good about th=\r\nis.\n&gt; &gt; &gt;\n&gt; &gt; &gt; In any case, it&#39;s an interesting discussion=85.and likely t=\r\nhe future\n&gt; whether we like it or not. My guess is that a lot of journals w=\r\nill follow\n&gt; the lead of the top journals (plus the NSF now requires such a=\r\nrchiving,\n&gt; which is what is really driving it in a lot of cases).\n&gt; &gt; &gt;\n&gt; =\r\n&gt; &gt; Best regards,\n&gt; &gt; &gt; Jeff Clune\n&gt; &gt; &gt;\n&gt; &gt; &gt; Assistant Professor\n&gt; &gt; &gt; Co=\r\nmputer Science\n&gt; &gt; &gt; University of Wyoming\n&gt; &gt; &gt; jclune@\n&gt; &gt; &gt; jeffclune.co=\r\nm\n&gt; &gt; &gt;\n&gt; &gt; &gt; On Jan 18, 2013, at 7:21 AM, wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Hi Ken,\n&gt; &gt;=\r\n &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; More practically,\n&gt; &gt; &gt; &gt; &gt; it will mean that reviewers will=\r\n start rejecting papers based on\n&gt; supposed\n&gt; &gt; &gt; &gt; &gt; code glitches in requ=\r\nired code submissions. That will give\n&gt; reviewers a\n&gt; &gt; &gt; &gt; &gt; whole new jus=\r\ntification for completely ignoring the main of idea\n&gt; of the\n&gt; &gt; &gt; &gt; &gt; pape=\r\nr.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Students will also become overwhelmed with code emer=\r\ngencies (since\n&gt; &gt; &gt; &gt; &gt; publication will depend now upon strangers running=\r\n your code) and\n&gt; code\n&gt; &gt; &gt; &gt; &gt; cleanups demanded by random strangers who =\r\nmay themselves be at\n&gt; fault or\n&gt; &gt; &gt; &gt; &gt; simply ignorant. Furthermore, in =\r\na few years we will have massive\n&gt; &gt; &gt; &gt; &gt; repositories of junk code (think=\r\n of the hundreds of papers\n&gt; published only\n&gt; &gt; &gt; &gt; &gt; at GECCO in one year)=\r\n that is so out of date that it requires\n&gt; deprecated\n&gt; &gt; &gt; &gt; &gt; compilers a=\r\nnd computing platforms even to run. But we will be\n&gt; required to\n&gt; &gt; &gt; &gt; &gt; =\r\nmaintain these repositories, which will become increasingly\n&gt; ignored,\n&gt; &gt; =\r\n&gt; &gt; &gt; simply to maintain the appearance of rigor.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I think t=\r\nhere is a large difference between reviewing the code and\n&gt; &gt; &gt; &gt; requestin=\r\ng that the authors make it available. I don&#39;t expect\n&gt; reviewers to\n&gt; &gt; &gt; &gt;=\r\n run the code when it&#39;s available. First, re-launching experiments may\n&gt; &gt; =\r\n&gt; &gt; require weeks of computations on large clusters. Second, I fully\n&gt; &gt; &gt; =\r\n&gt; understand that releasing &quot;clean code&quot; is a huge job and not our\n&gt; main j=\r\nob\n&gt; &gt; &gt; &gt; (Science).\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; However, I view the code as the detai=\r\nled, technical description of a\n&gt; &gt; &gt; &gt; paper. It contains all the paramete=\r\nrs and all the implementation\n&gt; details,\n&gt; &gt; &gt; &gt; including those that the a=\r\nuthors thought were not important (but\n&gt; that may\n&gt; &gt; &gt; &gt; be actually impor=\r\ntant). We don&#39;t need to be able to compile the code\n&gt; in\n&gt; &gt; &gt; &gt; the future=\r\n, we only need to be able to read it.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; When I reuse an algor=\r\nithm described in a paper, I often re-implement\n&gt; it.\n&gt; &gt; &gt; &gt; It&#39;s a good e=\r\nxercise and it helps keeping my framework clean and\n&gt; &gt; &gt; &gt; consistent. But=\r\n I always find very helpful to have have access to the\n&gt; &gt; &gt; &gt; source code =\r\nso that I can understand the small details and see the\n&gt; &gt; &gt; &gt; &quot;tricks&quot; use=\r\nd by the authors. For instance, I&#39;m very happy that\n&gt; Sebastian\n&gt; &gt; &gt; &gt; and=\r\n you released the source code of the node placement algorithm for\n&gt; &gt; &gt; &gt; H=\r\nyperNEAT: thanks to it, we were able to reimplement it in our\n&gt; framework\n&gt;=\r\n &gt; &gt; &gt; in a few hours/days. Otherwise, it would have been much more\n&gt; diffi=\r\ncult.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Best regards,\n&gt; &gt; &gt; &gt; -- JBM\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; =\r\n&gt;\n&gt;\n&gt;  \n&gt;\n\r\n--f46d04428eb688865604d5a65115\r\nContent-Type: text/html; charset=windows-1252\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;div dir=3D&quot;ltr&quot;&gt;Hi all, just to keep flogging this debate for all its wort=\r\nh, I wrote a blog post that attempts to boil down the arguments and counter=\r\n-arguments (presented here and my own) for and against (requiring) submissi=\r\non of code along with papers:=A0&lt;a href=3D&quot;http://ojcoleman.com/content/ope=\r\nn-science-what-about-source-code&quot;&gt;http://ojcoleman.com/content/open-science=\r\n-what-about-source-code&lt;/a&gt;&lt;div&gt;\n&lt;br&gt;&lt;/div&gt;&lt;div style&gt;Let me know if you fe=\r\nel I&#39;ve ripped off any statements you&#39;ve made in the discussion in =\r\nthis group and want to be acknowledged for them in the post. :) Most of the=\r\n arguments against are from Ken, and they&#39;re the most blatantly copied.=\r\n (I&#39;ve linked to this thread from the post so people can easily find th=\r\ne source of an argument and read it in the authors words.)&lt;/div&gt;\n&lt;/div&gt;&lt;div=\r\n class=3D&quot;gmail_extra&quot;&gt;&lt;br clear=3D&quot;all&quot;&gt;&lt;div&gt;&lt;div dir=3D&quot;ltr&quot;&gt;T: 0421 972 =\r\n953&lt;div&gt;E: &lt;a href=3D&quot;mailto:oliver.coleman@...&quot; target=3D&quot;_blank&quot;&gt;ol=\r\niver.coleman@...&lt;/a&gt;&lt;br&gt;&lt;div&gt;W:=A0&lt;a href=3D&quot;http://ojcoleman.com&quot; ta=\r\nrget=3D&quot;_blank&quot;&gt;http://ojcoleman.com&lt;/a&gt;&lt;br&gt;\n&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/d=\r\niv&gt;&lt;/div&gt;\n&lt;br&gt;&lt;br&gt;&lt;div class=3D&quot;gmail_quote&quot;&gt;On 19 January 2013 14:37, Ken =\r\n&lt;span dir=3D&quot;ltr&quot;&gt;&lt;&lt;a href=3D&quot;mailto:kstanley@...&quot; target=3D&quot;_=\r\nblank&quot;&gt;kstanley@...&lt;/a&gt;&gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=3D=\r\n&quot;gmail_quote&quot; style=3D&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=\r\n-left:1ex&quot;&gt;\n\n\n\n&lt;u&gt;&lt;/u&gt;\n\n\n\n\n\n\n\n\n\n\n&lt;div style&gt;\n&lt;span&gt;=A0&lt;/span&gt;\n\n\n&lt;div&gt;\n  &lt;di=\r\nv&gt;\n\n\n    &lt;div&gt;\n      \n      \n      &lt;p&gt;&lt;br&gt;\n&lt;br&gt;\nBy the way, I want to empha=\r\nsize that I am very much in favor of releasing code voluntarily and agree w=\r\nith Jean-Baptise that it is often very helpful.  I just don&#39;t want a un=\r\niversal requirement.&lt;/p&gt;&lt;div class=3D&quot;im&quot;&gt;&lt;br&gt;\n\n&lt;br&gt;\n--- In &lt;a href=3D&quot;mail=\r\nto:neat%40yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;neat@yahoogroups.com&lt;/a&gt;, &quo=\r\nt;Ken&quot;  wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Maybe I can elabo=\r\nrate a little more on why I don&#39;t think code submission should be a req=\r\nuirement.  I appear to be on the minority side of this issue so I know it&#=\r\n39;s an uphill battle but here&#39;s my reasoning:&lt;br&gt;\n\n&gt; &lt;br&gt;\n&gt; As s=\r\noon as you make something a requirement, you are adding to bureaucracy.  In=\r\nevitably, someone will be charged with checking that you satisfied the requ=\r\nirement.  Even if we start out saying you &quot;only&quot; have to submit t=\r\nhe code but no one has to run it, eventually an incident will be exposed wh=\r\nen someone submitted incorrect or even fraudulent code, and then the code c=\r\nhecks will become increasingly onerous.  And it&#39;s likely those code che=\r\ncks will be done by reviewers, which means that people who already don&#39;=\r\nt spend enough time reading our papers will now spend even less time as the=\r\ny have to dedicate new effort to looking at a giant impenetrable volume of =\r\nspaghetti code.  &lt;br&gt;\n\n&gt; &lt;br&gt;\n&gt; I&#39;ve sat on enough executive comm=\r\nittees and editorial boards at this point to know that things will only get=\r\n stricter and more out of control.  Requirements never get lighter, they on=\r\nly get heavier.  These committees often make decisions with broad implicati=\r\nons after short, rancorous arguments that ratchet up the paranoia about how=\r\n someone might cheat the system, leading to more and more burdensome checks=\r\n and requirements.  As Jeff points out, as if having to write 15-page proje=\r\nct description wasn&#39;t enough, now NSF requires proposals to include an =\r\nadditional 2-page data management plan.  Not to mention the new proliferati=\r\non of endless plagiarism checks throughout the academic world.  So once we =\r\nopen this Pandora&#39;s box, don&#39;t think that someone won&#39;t ultimat=\r\nely be trying to run your code and blaming you if it doesn&#39;t work for t=\r\nhem.&lt;br&gt;\n\n&gt; &lt;br&gt;\n&gt; As far as the upsides, such as Jeff&#39;s example =\r\nof how helpful it is to have the code to reproduce results, if you really t=\r\nhink about it, it&#39;s not so clear cut.  In fact, Jeff, it&#39;s conceiva=\r\nble that you (or someone like you) would not have made your discovery had t=\r\nhe code been available to begin with, because you would have simply run it =\r\nand seen (misleadingly) that it works.  It&#39;s only because it wasn&#39;t=\r\n available and you thereby were forced to try to reproduce the concept for =\r\nyourself that you learned the concept doesn&#39;t work as advertised.  It m=\r\nay even be the case that having specific experimental code universally avai=\r\nlable leads the community to more deception (and thus to be more naive) bec=\r\nause we would trust results that ultimately depend on obscure idiosyncrasie=\r\ns hidden in arcane code bases rather than on the supposed main idea.  After=\r\n all, we all know you can get virtually anything to &quot;work&quot; if you=\r\n finesse it enough.  &lt;br&gt;\n\n&gt; &lt;br&gt;\n&gt; Not only that, but more deeply it=\r\n seems like making code a requirement is wishful thinking:  We&#39;re tryin=\r\ng to get a quick fix for a problem (i.e. deciding whether an idea is promis=\r\ning) that is only really solved by good old fashioned time and effort.  Tha=\r\nt is, what really validates a method is not the one time it was run to give=\r\n a published result, but rather the numerous reimplementations by independe=\r\nnt parties over many subsequent years.  The main reason you can trust NEAT =\r\nis not because you can download my original pole balancing experiment and r=\r\nun it, but because of all the excellent independent packages like SharpNEAT=\r\n, ANJI, and many others in which I had no hand at all.   &lt;br&gt;\n\n&gt; &lt;br&gt;\n&g=\r\nt; Moreover, why should we even care about the code if the idea is uninspir=\r\ning anyway?  By forcing everyone to submit code we are implicitly suggestin=\r\ng that what matters is simply that something worked rather than that it is =\r\nan interesting idea.  In my view the biggest problem in reviewing today is =\r\nnot some kind of systematic flaw in experimental design but rather an unhea=\r\nlthy obsession with experimental results to the complete exclusion of the m=\r\nain idea.  Jeff, you say that &quot;reviewers tend to be pretty good about =\r\nthis&quot; when it comes to unfairly demanding excessive comparisons, but i=\r\nf that&#39;s true, it&#39;s only in our own community.  In the larger machi=\r\nne learning community, reviewers are biased against EC and would love anoth=\r\ner excuse simply to say, &quot;Why didn&#39;t you compare to X&quot; as a w=\r\nay of avoiding actually needing to understand the central idea.  We will be=\r\n perpetuating that kind of culture and hence our own ostracization and defu=\r\nnding.  &lt;br&gt;\n\n&gt; &lt;br&gt;\n&gt; Let&#39;s leave it voluntary and stop the sens=\r\neless proliferation of endless requirements that technology tempts us to pe=\r\nrpetuate upon ourselves.  We are ultimately only hurting ourselves as we fo=\r\nrget that well-intended requirements steal from the precious little time in=\r\n life we have to actually sit and think, which is the most important thing =\r\nwe do as scientists.&lt;br&gt;\n\n&gt; &lt;br&gt;\n&gt; ken&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; -=\r\n-- In &lt;a href=3D&quot;mailto:neat%40yahoogroups.com&quot; target=3D&quot;_blank&quot;&gt;neat@yaho=\r\nogroups.com&lt;/a&gt;, Jeff Clune  wrote:&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt; &gt; Hello all,&lt;=\r\nbr&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; I agree with JBM that code should be submitted=\r\n, and I don&#39;t mind it being a requirement. Submitting the code does not=\r\n mean it has to compile the day after submission, be maintained, or even be=\r\n clean/commented. It&#39;s just a written record of what happened in the ex=\r\nperiment. If you are publishing the experiment and trying to describe exact=\r\nly what you did, the code is the equivalent of a very detailed explanation =\r\nof the experiment that allows others to replicate it if they wish. &lt;br&gt;\n\n&g=\r\nt; &gt; &lt;br&gt;\n&gt; &gt; For example, Jean-Baptiste and I tried and failed to=\r\n replicate the results of a famous, high-impact study. It was hard for us t=\r\no know if there were bugs in our code, if we had the wrong parameters, or i=\r\nf the result itself was suspicious (e.g. a bug in their code). Eventually w=\r\ne got the code from the authors and we suddenly were able to replicate the =\r\nresults and learn under which conditions the effect in question occurs. Tha=\r\nt never would have happened without their code. In our case the authors wer=\r\ne still alive and willing to share their code, but both of those conditions=\r\n don&#39;t hold in a lot of cases (especially with older work). I think sci=\r\nence is better of if we&#39;re able to see exactly how a result came to be.=\r\n &lt;br&gt;\n\n&gt; &gt; &lt;br&gt;\n&gt; &gt; I do agree that there may be some disincent=\r\nive for businesses to publish. But how many businesses publish papers about=\r\n things they don&#39;t really want to share completely? I don&#39;t run int=\r\no too many influential papers like that. And maybe those businesses can pub=\r\nlish in other journals, or get an exception from the editors. &lt;br&gt;\n\n&gt; &g=\r\nt; &lt;br&gt;\n&gt; &gt; As for the accumulation of a lot of worthless code, is th=\r\nat really a big problem? If they papers are worthless, they&#39;re already =\r\naccumulating=85this is just a link in the paper that can be ignored, no?&lt;br=\r\n&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; I do agree that it may create a pressure on futu=\r\nre papers to include previous algorithms more as controls, because the revi=\r\newers can say &quot;the code is posted, why didn&#39;t you use it?&quot; I =\r\nthink we just have to resist that as reviewers=85because everyone knows wha=\r\nt a pain it is to get someone else&#39;s code running in their domain. Revi=\r\newers tend to be pretty good about this. &lt;br&gt;\n\n&gt; &gt; &lt;br&gt;\n&gt; &gt; In =\r\nany case, it&#39;s an interesting discussion=85.and likely the future wheth=\r\ner we like it or not. My guess is that a lot of journals will follow the le=\r\nad of the top journals (plus the NSF now requires such archiving, which is =\r\nwhat is really driving it in a lot of cases). &lt;br&gt;\n\n&gt; &gt; &lt;br&gt;\n&gt; &gt=\r\n; Best regards,&lt;br&gt;\n&gt; &gt; Jeff Clune&lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; Assis=\r\ntant Professor&lt;br&gt;\n&gt; &gt; Computer Science&lt;br&gt;\n&gt; &gt; University of W=\r\nyoming&lt;br&gt;\n&gt; &gt; jclune@&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div class=3D&quot;h5&quot;&gt;\n&gt; &gt; &lt;a =\r\nhref=3D&quot;http://jeffclune.com&quot; target=3D&quot;_blank&quot;&gt;jeffclune.com&lt;/a&gt;&lt;br&gt;\n&gt; =\r\n&gt; &lt;br&gt;\n&gt; &gt; On Jan 18, 2013, at 7:21 AM,  wrote:&lt;br&gt;\n&gt; &gt; &lt;br&gt;=\r\n\n&gt; &gt; &gt; Hi Ken,&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&gt; &gt; &gt; &gt; More pr=\r\nactically,&lt;br&gt;\n&gt; &gt; &gt; &gt; it will mean that reviewers will start r=\r\nejecting papers based on supposed&lt;br&gt;\n&gt; &gt; &gt; &gt; code glitches in =\r\nrequired code submissions. That will give reviewers a&lt;br&gt;\n&gt; &gt; &gt; &g=\r\nt; whole new justification for completely ignoring the main of idea of the&lt;=\r\nbr&gt;\n&gt; &gt; &gt; &gt; paper.&lt;br&gt;\n&gt; &gt; &gt; &gt;&lt;br&gt;\n&gt; &gt; &gt; &=\r\ngt; Students will also become overwhelmed with code emergencies (since&lt;br&gt;\n=\r\n&gt; &gt; &gt; &gt; publication will depend now upon strangers running your=\r\n code) and code&lt;br&gt;\n&gt; &gt; &gt; &gt; cleanups demanded by random strange=\r\nrs who may themselves be at fault or&lt;br&gt;\n&gt; &gt; &gt; &gt; simply ignoran=\r\nt. Furthermore, in a few years we will have massive&lt;br&gt;\n&gt; &gt; &gt; &gt;=\r\n repositories of junk code (think of the hundreds of papers published only&lt;=\r\nbr&gt;\n&gt; &gt; &gt; &gt; at GECCO in one year) that is so out of date that i=\r\nt requires deprecated&lt;br&gt;\n&gt; &gt; &gt; &gt; compilers and computing platf=\r\norms even to run. But we will be required to&lt;br&gt;\n&gt; &gt; &gt; &gt; mainta=\r\nin these repositories, which will become increasingly ignored,&lt;br&gt;\n&gt; &gt=\r\n; &gt; &gt; simply to maintain the appearance of rigor.&lt;br&gt;\n&gt; &gt; &gt; =\r\n&lt;br&gt;\n&gt; &gt; &gt; I think there is a large difference between reviewing t=\r\nhe code and&lt;br&gt;\n&gt; &gt; &gt; requesting that the authors make it availabl=\r\ne. I don&#39;t expect reviewers to&lt;br&gt;\n&gt; &gt; &gt; run the code when it&=\r\n#39;s available. First, re-launching experiments may&lt;br&gt;\n&gt; &gt; &gt; req=\r\nuire weeks of computations on large clusters. Second, I fully&lt;br&gt;\n&gt; &gt;=\r\n &gt; understand that releasing &quot;clean code&quot; is a huge job and no=\r\nt our main job&lt;br&gt;\n&gt; &gt; &gt; (Science).&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&gt; &=\r\ngt; &gt; However, I view the code as the detailed, technical description of=\r\n a&lt;br&gt;\n&gt; &gt; &gt; paper. It contains all the parameters and all the imp=\r\nlementation details,&lt;br&gt;\n&gt; &gt; &gt; including those that the authors th=\r\nought were not important (but that may&lt;br&gt;\n&gt; &gt; &gt; be actually impor=\r\ntant). We don&#39;t need to be able to compile the code in&lt;br&gt;\n&gt; &gt; &g=\r\nt; the future, we only need to be able to read it.&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n=\r\n&gt; &gt; &gt; When I reuse an algorithm described in a paper, I often re-i=\r\nmplement it.&lt;br&gt;\n&gt; &gt; &gt; It&#39;s a good exercise and it helps keepi=\r\nng my framework clean and&lt;br&gt;\n&gt; &gt; &gt; consistent. But I always find =\r\nvery helpful to have have access to the&lt;br&gt;\n&gt; &gt; &gt; source code so t=\r\nhat I can understand the small details and see the&lt;br&gt;\n&gt; &gt; &gt; &quot=\r\n;tricks&quot; used by the authors. For instance, I&#39;m very happy that Se=\r\nbastian&lt;br&gt;\n&gt; &gt; &gt; and you released the source code of the node pla=\r\ncement algorithm for&lt;br&gt;\n&gt; &gt; &gt; HyperNEAT: thanks to it, we were ab=\r\nle to reimplement it in our framework&lt;br&gt;\n&gt; &gt; &gt; in a few hours/day=\r\ns. Otherwise, it would have been much more difficult.&lt;br&gt;\n&gt; &gt; &gt; &lt;b=\r\nr&gt;\n&gt; &gt; &gt; Best regards,&lt;br&gt;\n&gt; &gt; &gt; -- JBM&lt;br&gt;\n&gt; &gt; &gt=\r\n; &lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;\n\n=\r\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=3D&quot;color:#fff;min-height:0&quot;&gt;&lt;/div&gt;\n\n\n=\r\n&lt;/div&gt;\n\n\n\n  \n\n\n\n\n\n\n&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;\n\r\n--f46d04428eb688865604d5a65115--\r\n\n"}}