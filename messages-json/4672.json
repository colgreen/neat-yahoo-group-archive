{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":37465196,"authorName":"Ken Lloyd","from":"&quot;Ken Lloyd&quot; &lt;kalloyd@...&gt;","profile":"kalloyd2","replyTo":"LIST","senderId":"Wf5pSvA-GvGPg9ZL-R-O-rqH9I1L6IxF9uXbDmJm0ilbS8GOGp72ZiGnRTjDZcZVnUhHuK3vmrZVhBP2vt7cFNj1mqE00EnF","spamInfo":{"isSpam":false,"reason":"3"},"subject":"RE: [neat] Doble/Single digit precision NEAT","postDate":"1242686837","msgId":4672,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEM4NkZFOEY0OEMxNzQ5QjI4RUZGQzEzRTc2MTc0MDM1QHdhdHRwND4=","inReplyToHeader":"PGd1c2xlZSt1dDU4QGVHcm91cHMuY29tPg==","referencesHeader":"PGd1c2xlZSt1dDU4QGVHcm91cHMuY29tPg=="},"prevInTopic":4671,"nextInTopic":4673,"prevInTime":4671,"nextInTime":4673,"topicId":4671,"numMessagesInTopic":7,"msgSnippet":"Nikolai, What I have done in my SourceForge implementation is simply convert Colin Green / David D Ambrosio s HyperNEAT standard library to floats.  I have ","rawEmail":"Return-Path: &lt;kalloyd@...&gt;\r\nX-Sender: kalloyd@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 82125 invoked from network); 18 May 2009 22:48:24 -0000\r\nX-Received: from unknown (69.147.108.200)\n  by m1.grp.sp2.yahoo.com with QMQP; 18 May 2009 22:48:24 -0000\r\nX-Received: from unknown (HELO wattsys.com) (209.43.123.15)\n  by mta1.grp.re1.yahoo.com with SMTP; 18 May 2009 22:48:23 -0000\r\nX-Received: from wattp4 (c-76-113-124-2.hsd1.nm.comcast.net [76.113.124.2])\n\tby wattsys.com (8.11.6/8.11.6) with ESMTP id n4IMlM115659\n\tfor &lt;neat@yahoogroups.com&gt;; Mon, 18 May 2009 18:47:22 -0400\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nReferences: &lt;guslee+ut58@...&gt;\r\nDate: Mon, 18 May 2009 16:47:17 -0600\r\nMessage-ID: &lt;C86FE8F48C1749B28EFFC13E76174035@wattp4&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_00AE_01C9D7D8.51199A70&quot;\r\nX-Mailer: Microsoft Office Outlook 11\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5579\r\nIn-Reply-To: &lt;guslee+ut58@...&gt;\r\nThread-Index: AcnYAz5jd1yJIvXOTtS29vlfUGUGpwABBneQ\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: &quot;Ken Lloyd&quot; &lt;kalloyd@...&gt;\r\nSubject: RE: [neat] Doble/Single digit precision NEAT\r\nX-Yahoo-Group-Post: member; u=37465196; y=UbR_jB-MK4c8VbScsGbBIvDtqdJvcYdZGL8oG-Jmo4CCI7g\r\nX-Yahoo-Profile: kalloyd2\r\n\r\n\r\n------=_NextPart_000_00AE_01C9D7D8.51199A70\r\nContent-Type: text/plain;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\nNikolai,\n \nWhat I have done in my SourceForge implementation is simply convert Colin\nGreen / David D&#39;Ambrosio&#39;s HyperNEAT standard library to floats.  I have\njust decided to switch the development environment and test this little\ndemonstration of HyperNEAT MPP on CUDA using Windows7 x64 and CUDA 2.2.  I&#39;m\nusing GTX-285&#39;s and 295&#39;s for my experimental work (including the\nSourceForge app - HyperNEAT4CUDA) and including some double precision\ncomparisons.    There are other solutions I have applied as well and this\nled me to radically different solutions. For example:\n \nhttp://www.mpi-inf.mpg.de/~strzodka/papers/public/GoStTu05double.pdf\n \nThere are several algorithmic solutions, like the one above. There are FPGA\nsolutions. Or, you can wait for Larrabee ... My &quot;real&quot; work is used with\nTesla C-1060&#39;s on my production cluster (floats only) which should lead you\nto believe I&#39;m using an algorithmic solution of the double precision\nproblem.\n \nThe bottom line is this:  Using good normalization techniques, under what\ncondition is double precision really necessary?  It really depends on the\narithmetic algorithms you use, and the resolution requirements of the\napplication, among other considerations.  NEAT hasn&#39;t proven to be one of\nthose fussy problems.\n \nIn other words, what is the purpose of the NEAT group?  IMO, learning about\nneurocomputation is hard enough without the clunkiness of double precision\nfloats.  But that&#39;s just my opinion.\n \nKen Lloyd\nWatt Systems Technologies Inc\n\n\n  _____  \n\nFrom: neat@yahoogroups.com [mailto:neat@yahoogroups.com] On Behalf Of\nNikolai\nSent: Monday, May 18, 2009 3:54 PM\nTo: neat@yahoogroups.com\nSubject: [neat] Doble/Single digit precision NEAT\n\n\n\n\n\nHi,\nI am porting NEAT to Nvidia GT120 based game cards (GTX 260+ series) with\nCUDA. The problem is, the GPU executes double precision operations 8 times\nslower than single precision.\n\nHow much will be the accuracy loss for large networks if we switch NEAT to\nfloats instead of doubles?\n\nNow, let&#39;s say, i go for speed and use single precision. Then as evolution\ntakes place, networks are going to be deeper and deeper, the accuracy on the\ndeepest level will be lower and lower. Right? Or will the network evolve\nautomatically and correct itself adding _direct_ links from the input level\nto the deepest levels in order to refresh the lost precision??? That would\nbe a workaround until Nvidia releases a true GPU to the market.... what do\nyou think?\n\nThanks in advance for any comment.\n\n\n\n\n\n\r\n------=_NextPart_000_00AE_01C9D7D8.51199A70\r\nContent-Type: text/html;\n\tcharset=&quot;us-ascii&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META content=3D&quot;text/html; charset=3Dus-ascii&quot; http-equiv=3DContent-Type&gt;=\r\n\n&lt;META name=3DGENERATOR content=3D&quot;MSHTML 8.00.6001.18702&quot;&gt;&lt;/HEAD&gt;\n&lt;BODY st=\r\nyle=3D&quot;BACKGROUND-COLOR: #ffffff&quot;&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=\r\n=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;Nikolai,=\r\n&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D468012422-18=\r\n052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/D=\r\nIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT colo=\r\nr=3D#0000ff \nsize=3D2 face=3DArial&gt;What I have done in my SourceForge imple=\r\nmentation&nbsp;is \nsimply&nbsp;convert Colin Green / David D&#39;Ambrosio&#39;s Hyp=\r\nerNEAT standard library \nto floats.&nbsp;&nbsp;I have just decided to switc=\r\nh the&nbsp;development \nenvironment&nbsp;and test this little demonstration=\r\n of HyperNEAT MPP on CUDA \nusing Windows7 x64&nbsp;and CUDA 2.2.&nbsp; &lt;SPA=\r\nN class=3D468012422-18052009&gt;&lt;FONT \ncolor=3D#0000ff size=3D2 face=3DArial&gt;I=\r\n&#39;m using GTX-285&#39;s and 295&#39;s for my \nexperimental work (including the Sourc=\r\neForge app - HyperNEAT4CUDA) \nand&nbsp;including some double precision \ncom=\r\nparisons.&nbsp;&nbsp;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp; There are other solutions I have =\r\n\napplied as well and this led me to radically different solutions. For \nexa=\r\nmple:&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D4680124=\r\n22-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbs=\r\np;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT=\r\n color=3D#0000ff \nsize=3D2 face=3DArial&gt;&lt;A \nhref=3D&quot;http://www.mpi-inf.mpg.=\r\nde/~strzodka/papers/public/GoStTu05double.pdf&quot;&gt;http://www.mpi-inf.mpg.de/~s=\r\ntrzodka/papers/public/GoStTu05double.pdf&lt;/A&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=\r\n=3Dltr align=3Dleft&gt;&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff =\r\n\nsize=3D2 face=3DArial&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dle=\r\nft&gt;&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3D=\r\nArial&gt;There are several algorithmic solutions, like the one above. \nThere a=\r\nre FPGA solutions. Or, you can wait for Larrabee ... My &quot;real&quot; work is \nuse=\r\nd with &lt;SPAN class=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff size=3D2 \nfac=\r\ne=3DArial&gt;Tesla C-1060&#39;s on my production cluster (floats only) which shoul=\r\nd \nlead you to believe I&#39;m using an algorithmic solution of the double prec=\r\nision \nproblem.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dle=\r\nft&gt;&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3D=\r\nArial&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D=\r\n468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;The bottom =\r\nline is this:&nbsp; Using good normalization \ntechniques, under what condit=\r\nion is double precision really necessary?&nbsp; It \nreally&nbsp;depends on =\r\nthe arithmetic algorithms you use, and the resolution \nrequirements of the =\r\napplication, among other considerations.&nbsp; NEAT hasn&#39;t \nproven to be on=\r\ne of those fussy problems.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;=\r\n&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DAri=\r\nal&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D468=\r\n012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;In other words=\r\n, what is the purpose of the NEAT group?&nbsp; \nIMO, learning about neuroco=\r\nmputation is hard enough without the clunkiness of \ndouble precision floats=\r\n.&nbsp; But that&#39;s just my opinion.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr alig=\r\nn=3Dleft&gt;&lt;SPAN class=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 f=\r\nace=3DArial&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN cl=\r\nass=3D468012422-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;Ken L=\r\nloyd&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV dir=3Dltr align=3Dleft&gt;&lt;SPAN class=3D46801242=\r\n2-18052009&gt;&lt;FONT color=3D#0000ff \nsize=3D2 face=3DArial&gt;Watt Systems Techno=\r\nlogies Inc&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR&gt;\n&lt;BLOCKQUOTE \nstyle=3D&quot;BORDER-LEFT: #0000=\r\nff 2px solid; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; MARGIN-RIGHT: 0px&quot; \ndir=\r\n=3Dltr&gt;\n  &lt;DIV dir=3Dltr lang=3Den-us class=3DOutlookMessageHeader align=3D=\r\nleft&gt;\n  &lt;HR tabIndex=3D-1&gt;\n  &lt;FONT size=3D2 face=3DTahoma&gt;&lt;B&gt;From:&lt;/B&gt; neat=\r\n@yahoogroups.com \n  [mailto:neat@yahoogroups.com] &lt;B&gt;On Behalf Of &lt;/B&gt;Nikol=\r\nai&lt;BR&gt;&lt;B&gt;Sent:&lt;/B&gt; \n  Monday, May 18, 2009 3:54 PM&lt;BR&gt;&lt;B&gt;To:&lt;/B&gt; \n  neat@ya=\r\nhoogroups.com&lt;BR&gt;&lt;B&gt;Subject:&lt;/B&gt; [neat] Doble/Single digit precision \n  NEA=\r\nT&lt;BR&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;/DIV&gt;\n  &lt;DIV id=3Dygrp-text&gt;\n  &lt;P&gt;Hi,&lt;BR&gt;I a=\r\nm porting NEAT to Nvidia GT120 based game cards (GTX 260+ series) \n  with C=\r\nUDA. The problem is, the GPU executes double precision operations 8 \n  time=\r\ns slower than single precision.&lt;BR&gt;&lt;BR&gt;How much will be the accuracy loss \n=\r\n  for large networks if we switch NEAT to floats instead of doubles?&lt;BR&gt;&lt;BR=\r\n&gt;Now, \n  let&#39;s say, i go for speed and use single precision. Then as evolut=\r\nion takes \n  place, networks are going to be deeper and deeper, the accurac=\r\ny on the deepest \n  level will be lower and lower. Right? Or will the netwo=\r\nrk evolve automatically \n  and correct itself adding _direct_ links from th=\r\ne input level to the deepest \n  levels in order to refresh the lost precisi=\r\non??? That would be a workaround \n  until Nvidia releases a true GPU to the=\r\n market.... what do you \n  think?&lt;BR&gt;&lt;BR&gt;Thanks in advance for any comment.=\r\n&lt;BR&gt;&lt;BR&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;!--End group email --&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_00AE_01C9D7D8.51199A70--\r\n\n"}}