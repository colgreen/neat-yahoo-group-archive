{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":151231063,"authorName":"Joseph Reisinger","from":"Joseph Reisinger &lt;joeraii@...&gt;","profile":"joeraii","replyTo":"LIST","senderId":"q9WA1habItESYtunRinsccDnEZNCYpxDSz-kUje9zEoFNK5T_JJTWnJ7xnVR-uIa00sOS_Fr4wx5HJeuNX3MBp4cz2y9o9wv1oXB9qu1Ew","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Paper on evolving modular neural networks","postDate":"1081493300","msgId":640,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuTE5YLjQuNTguMDQwNDA5MDEzMTIzMC40MTgwQG9yYW5nZS1wZWtvZS5jcy51dGV4YXMuZWR1Pg==","inReplyToHeader":"PDUuMi4xLjEuMC4yMDA0MDQwNjEyMjE0MS4wMWJmNmVlOEBwb3AubWFpbC55YWhvby5jby51az4=","referencesHeader":"PDUuMi4xLjEuMC4yMDA0MDQwNTExMTkxMy4wMTgzNmVhOEBwb3AubWFpbC55YWhvby5jby51az4gPDUuMi4xLjEuMC4yMDA0MDQwNTExMTkxMy4wMTgzNmVhOEBwb3AubWFpbC55YWhvby5jby51az4gPDUuMi4xLjEuMC4yMDA0MDQwNjEyMjE0MS4wMWJmNmVlOEBwb3AubWFpbC55YWhvby5jby51az4="},"prevInTopic":626,"nextInTopic":644,"prevInTime":639,"nextInTime":641,"topicId":535,"numMessagesInTopic":47,"msgSnippet":"... Actually this isn t a problem: White stones give input 1, black stones give -1, and empty space gives 0. Thus the network is easily able to distinguish","rawEmail":"Return-Path: &lt;joeraii@...&gt;\r\nX-Sender: joeraii@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 10715 invoked from network); 9 Apr 2004 06:48:20 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m24.grp.scd.yahoo.com with QMQP; 9 Apr 2004 06:48:20 -0000\r\nReceived: from unknown (HELO mail.cs.utexas.edu) (128.83.139.10)\n  by mta5.grp.scd.yahoo.com with SMTP; 9 Apr 2004 06:48:20 -0000\r\nReceived: from orange-pekoe.cs.utexas.edu (joeraii@... [128.83.120.122])\n\tby mail.cs.utexas.edu (8.12.11/8.12.11) with ESMTP id i396mK2W022315\n\tfor &lt;neat@yahoogroups.com&gt;; Fri, 9 Apr 2004 01:48:20 -0500 (CDT)\r\nReceived: (from joeraii@localhost)\n\tby orange-pekoe.cs.utexas.edu (8.12.11/8.12.11/Submit) id i396mKd5004377;\n\tFri, 9 Apr 2004 01:48:20 -0500\r\nDate: Fri, 9 Apr 2004 01:48:20 -0500 (CDT)\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;5.2.1.1.0.20040406122141.01bf6ee8@...&gt;\r\nMessage-ID: &lt;Pine.LNX.4.58.0404090131230.4180@...&gt;\r\nReferences: &lt;5.2.1.1.0.20040405111913.01836ea8@...&gt;\n &lt;5.2.1.1.0.20040405111913.01836ea8@...&gt;\n &lt;5.2.1.1.0.20040406122141.01bf6ee8@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII\r\nX-eGroups-Remote-IP: 128.83.139.10\r\nFrom: Joseph Reisinger &lt;joeraii@...&gt;\r\nSubject: Re: [neat] Paper on evolving modular neural networks\r\nX-Yahoo-Group-Post: member; u=151231063\r\nX-Yahoo-Profile: joeraii\r\n\r\n&gt; Really?  I would have thought it easier, just because of the &quot;which stones\n&gt; are mine&quot; angle.\n\nActually this isn&#39;t a problem: White stones give input 1, black stones\ngive -1, and empty space gives 0. Thus the network is easily able to\ndistinguish between the two groups of stones.\n\n&gt; I don&#39;t see how it can distinguish its own stones, because (i) initial\n&gt; stones may be anywhere, (ii) initial and own stones give same input, (iii)\n&gt; no memory?\n\nSee above.\n\n&gt; And both more likely than (1,1)-&gt;(4,5) ?\n\nIdeally, yes, with a gaussian position mutation. I think for the\nconference paper, all position mutations were uniform (although they did\ntake into account the topology of the board explicitly).\n\n&gt; For example, if I have learned the board geometry, then I can play any game\n&gt; on the board and exploit the geometry in the same way.\n\nExactly. And this also implies that there is a reduction in the amount of\nlow level computation required to analyze any part of the board, since its\nbasically the same, or similar computation that is applied to another\npart. It seems that developmental systems would be particularly well\nsuited to this, because there is an inherint sense of &quot;reuse with slight\nmodification&quot; ... meaning that we have animals with repeating segments,\nthat are similar, and things like wings/legs/halteres that are derived\nfrom the same gene groups, but have different morphologies.\n\n&gt; All of these have the weakness that they sort of imply the existance of\n&gt; multiplexers and databuses in my head.  e.g. in order that GSMod can\n&gt; process data before NewMod sees it, first the data has to be routed to\n&gt; GSMod, then transferred into GSMod, then the results routed to NewMod,\n&gt; transferred to it...\n\nThis kind of idea may work, I think, but it would require a lot of\nengineering to get it right. Instead, I&#39;d like to think that there is some\nkind of search-space operator that is able to collapse a solution space\nthat has symmetries down into one that does not. Then something that is\nlearned for one half, or one quarter, etc of the board would instantly be\nknow for all halves, quarters, etc. This is exactly the kind of reduction\nthat a developmental system performs, i.e. a lot of metazoans have\nbilateral symmetry, this allows a mutation affecting one half to always\nbalance out across both halves, making it easier for non-destructive\nmutations to occur.\n\n&gt; I often speculate whether brain-modules have &quot;general purpose connectors&quot;,\n&gt; who&#39;s only properties are that (i) they contain a lot of channels, and (ii)\n&gt; that they contain the same channels (at the same &quot;positions&quot;) on every\n&gt; module.  Think of them as 100x100 pin plugs and sockets.  Initially, no pin\n&gt; has any meaning, and modules use an arbitrary selection of pins for input\n&gt; and output.  When modules need to learn to work together, they learn\n&gt; one-anothers input and output pin patterns.  If two modules are variations\n&gt; on the same thing, then they frequently connect to the same other modules,\n&gt; and their pin patterns are forced to converge.  Thus a certain pattern of\n&gt; pin usage becomes a de facto standard for a particular type of\n&gt; information.  I regard this as a strong example of extraction of semantics,\n&gt; certain pins have come to &quot;mean&quot; certain types of data, and they only did\n&gt; that because it was a type of data that modules needed to exchange...\n\nYou may want to look at some research done in the V1 visual cortex,\nespecially with receptor fields. There are basically sheets of parallel\nprocessing neurons for interpreting light data from your retina at various\nstages. We know for instance that there is a sheet for extracting edge\norientation data, etc. This data is then fed into the next stage in the\n&quot;pipeline.&quot; So in other words you kind of have a biological data bus.\n\n&gt; I wouldn&#39;t call this a severe critique, but I do immediately wonder how\n&gt; much a &quot;move module on board&quot; mutation would change the results....\n\nIn my opinion, I don&#39;t think it would help that much. It might add a small\npercentage increase in the algorithm&#39;s ability to find solutions, but I\ndon&#39;t think it would be earth shattering.\n\n&gt; &gt;Yeah. Actually my original design was much more flexible, allowing for\n&gt; &gt;module hierarchies, and more complex configurations. It seemed too\n&gt; &gt;arbitrary though, having to specify exactly how module interactions had to\n&gt; &gt;take place.\n&gt;\n&gt; I didn&#39;t mean you specifying the interactions, I meant letting it evolve as\n&gt; part of the framework.  E.g. the evolution of the frameworks would be very\n&gt; akin to NEAT evolution of a single network, with the exception that each\n&gt; connection needs to specify which output(s) to connect to which input(s).\n\nRight. The implementation of this seemed to complex and arbitrary for me.\nFor example: module A&#39;s output is connected to module B&#39;s input, then they\nhave to have corresponding input and output sizes, otherwise you have to\nwork out some scheme for allocating multiple outputs to one input, or\nvice-versa. Extrapolate from there with more complex interactions, and you\nsee what I mean.\n\n\n-- \n\nJoseph Reisinger\nhttp://www.cs.utexas.edu/users/joeraii\n\n"}}