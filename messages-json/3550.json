{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":314468368,"authorName":"bigblockfw","from":"&quot;bigblockfw&quot; &lt;bigblockfw@...&gt;","profile":"bigblockfw","replyTo":"LIST","senderId":"h9ewVnB5nQnJAPuN9O-1mcNwVzLLeRnv9XEUFh9hVwjSXzafyC0TIumQ2WswNaj0h2MI50QcwuyNkEWg3shMeqvaxkVOFaBgZjo","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Yacc neat","postDate":"1189177092","msgId":3550,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZicm91NCttdTJzQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":0,"prevInTime":3549,"nextInTime":3551,"topicId":3550,"numMessagesInTopic":1,"msgSnippet":"Hello, I m new to neat and this idea may not be sound but here it is anyway. I ve been working on a utility that will take in a folder full of source code","rawEmail":"Return-Path: &lt;bigblockfw@...&gt;\r\nX-Sender: bigblockfw@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 35941 invoked from network); 7 Sep 2007 15:00:30 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m51.grp.scd.yahoo.com with QMQP; 7 Sep 2007 15:00:30 -0000\r\nReceived: from unknown (HELO n27b.bullet.sp1.yahoo.com) (209.131.38.244)\n  by mta7.grp.scd.yahoo.com with SMTP; 7 Sep 2007 15:00:30 -0000\r\nReceived: from [216.252.122.219] by n27.bullet.sp1.yahoo.com with NNFMP; 07 Sep 2007 14:58:14 -0000\r\nReceived: from [66.218.69.4] by t4.bullet.sp1.yahoo.com with NNFMP; 07 Sep 2007 14:58:14 -0000\r\nReceived: from [66.218.66.87] by t4.bullet.scd.yahoo.com with NNFMP; 07 Sep 2007 14:58:14 -0000\r\nDate: Fri, 07 Sep 2007 14:58:12 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;fbrou4+mu2s@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;bigblockfw&quot; &lt;bigblockfw@...&gt;\r\nSubject: Yacc neat\r\nX-Yahoo-Group-Post: member; u=314468368; y=3Ca1w6KQHcd9nmr6Yd4Xb1GdfaYGHB07LSnFiqPUVpBkmhEiWw\r\nX-Yahoo-Profile: bigblockfw\r\n\r\nHello,\nI&#39;m new to neat and this idea may not be sound but here it is anyway=\r\n.\nI&#39;ve been working on a utility that will take in a folder full of\nsource =\r\ncode samples and reverse engineer a grammer for the programming\nlanguage us=\r\ned in the samples. \nThe grammer is then used in a tool like yacc or antlr t=\r\no build a compiler.\nI&#39;ve had limited success so far but it still seems very=\r\n doable.\n(although that could be a result of not fully understanding the\nco=\r\nmplexity of the problem)\n\nI hope that neat will be able to help move this a=\r\nlong but I&#39;m willing\nto accept that it won&#39;t.\nI noticed that there has been=\r\n some work toward natural language\nprocessing with neat and my thinking is =\r\nthat \n&quot;programming language&quot; processing should be trivial by comparison. \n\n=\r\nWhat I&#39;ve been doing so far is validating the samples of code with a\nfuncti=\r\nonal compiler to make sure there are no compile errors. I ignore\nbest pract=\r\nices and whether the code actually works the way it was\nintended to and onl=\r\ny care if it compiles. (At this stage I&#39;m just\ntrying to suck out a valid g=\r\nrammer for the language.) If it compiles\nthen the rules for the language ha=\r\nve not been violated so anything in\nthere should be ok.\n\nNext I track down =\r\na list of reserved words for the language and some\nother basic information.=\r\n \nIs the language case sensitive? \nWhat does a comment look like? \nWhat typ=\r\nes of numbers are acceptable? (int double etc.)\nAs well as a few other basi=\r\ncs that have to be determined whether you\nhand code the grammer or auto-evo=\r\nlve it.\nWhat&#39;s a line end look like, etc. \n\nNow for preprocessing...\n\nThere=\r\n&#39;s not really much that can happen in a programming language.\nVery generall=\r\ny speaking you&#39;ve got words, numbers, and symbols.\nSo...\n1)load a sample\n\n2=\r\n)strip out comments because we already know what they look like and\nthey ju=\r\nst muck up the rest of the process.\n\n3)split it into logical lines using th=\r\ne line end symbol already\ndefined.&quot;;&quot;\n\n4)Tokenize the sample and compare fo=\r\nund words to reserve words. \nIf found word is reserved word accept it as is=\r\n where is. \nIf the word is not in the list of reserved words a regex will r=\r\neplace\nit with &quot;Identifier&quot;.\n\n5)Same goes for numbers. When a number is fou=\r\nnd it&#39;s replaced with\n&quot;Integer&quot;, &quot;Double&quot;, etc.\n\n6)Symbols are taken at fac=\r\ne value where they are.\n\nNow the sample code line looks something like this=\r\n example\n\nIf Identifier + integer =3D Identifier then Identier();\n\nThis lin=\r\ne is then placed into the &quot;DangNearValidRules&quot; table and the\nprocess contin=\r\nues.\n\nOnce all of the samples have gone through this process the reduction\n=\r\nbegins.\nAgain I&#39;m using a simple Regex to find substrings.\n\nThe process goe=\r\ns like this.\nStart with &lt;rule1&gt; and see if any shorter rules are found with=\r\nin it. \nIf a shorter rule is found it&#39;s plugged in to rule1 and the process=\r\n\ncontinues until reductionfound =3D false.\n\nAt this point the &quot;rule&quot; exampl=\r\ne from above might look like \nIf &lt;Rule367&gt; then &lt;Rule9&gt; ;\nor maybe not....\n=\r\n\nNaturally this results in a &quot;human hostile&quot; grammer since it&#39;s not\nvery re=\r\nadable but if it works in the end I can live with that.\n\nMy hope is that Ne=\r\nat can greatly improve on this approach.\n\nAn interesting side effect of a t=\r\nool that could do this would be a\nWYSIWYG language designer.\nWrite up a bun=\r\nch of samples that are intuitive to the end user and\nthen turn this tool lo=\r\nose to figure out how to implement the grammer\nfor it. (That would surely b=\r\ne worth a gold star or two).\n\nA further...much further...use for it might b=\r\ne to auto-evolve a\n&quot;grammer&quot; for various waveforms like the sounds whales m=\r\nake or the EEG\nreadings from sensors duct taped to your head. \nGo ahead and=\r\n try to tell me that wouldn&#39;t be the shiznet :-).\nBut I&#39;m getting ahead of =\r\nmyself here. \nBeing able to generate a grammer for any code samples you fee=\r\nd into\nthis thing would certainly be grand.\n\nAm I nuts?\nDon&#39;t answer that. =\r\n\nAnswer this instead. \nIs there a better way to do this?\nIs there already a=\r\n tool that can do this?\nIf there is where can I get it?\n\nKelly\n\n\n"}}