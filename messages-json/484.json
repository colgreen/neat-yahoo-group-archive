{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"BC2krizMjp9qaDZ40DYcwGccfFIgLezDnrCKIYh2I6s2IgMQxBJVefr90flEFy4fOLlZP1oBJ990nLeoLMUml1PCCBBIYYQC25pmtzSsdK5C","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Distributing NEAT (WAS:Re: Idea concerning image enlargement...)","postDate":"1078877322","msgId":484,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGMybG1hYStvdWE1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PEJBWTItRjE3MERidFhJTmhQbXEwMDAyOTcwZkBob3RtYWlsLmNvbT4="},"prevInTopic":483,"nextInTopic":529,"prevInTime":483,"nextInTime":485,"topicId":469,"numMessagesInTopic":32,"msgSnippet":"Making NEAT distributed definitely sounds like a good idea and should be relatively straightforward.  I m wondering, has anyone else here tried or done any","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 85932 invoked from network); 10 Mar 2004 00:08:53 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m1.grp.scd.yahoo.com with QMQP; 10 Mar 2004 00:08:53 -0000\r\nReceived: from unknown (HELO n26.grp.scd.yahoo.com) (66.218.66.82)\n  by mta2.grp.scd.yahoo.com with SMTP; 10 Mar 2004 00:08:53 -0000\r\nReceived: from [66.218.66.142] by n26.grp.scd.yahoo.com with NNFMP; 10 Mar 2004 00:08:42 -0000\r\nDate: Wed, 10 Mar 2004 00:08:42 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c2lmaa+oua5@...&gt;\r\nIn-Reply-To: &lt;BAY2-F170DbtXINhPmq0002970f@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3926\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.82\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Distributing NEAT (WAS:Re: Idea concerning image enlargement...)\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nMaking NEAT distributed definitely sounds like a good idea and should\nbe relatively straightforward.  I&#39;m wondering, has anyone else here\ntried or done any work towards a distributed NEAT?  I know it&#39;s come\nup once in a while, but I wonder if anyone has actually tried it.\n\nken\n\n--- In neat@yahoogroups.com, &quot;John Arrowwood&quot; &lt;jarrowwx@h...&gt; wrote:\n&gt; &gt;From: &quot;Kenneth Stanley&quot; &lt;kstanley@c...&gt;\n&gt; \n&gt; &gt;John, does this mean you will be using JNEAT?  Or are you going to\n&gt; &gt;write your own, or perhaps use another Java version of NEAT?\n&gt; \n&gt; I&#39;m thinking hybrid.  I want to do a more passive system, like\nSETI@home, \n&gt; where clients ping the server to get work to do.  That way, I can\nput \n&gt; computers to work that are outside my firewall.\n&gt; \n&gt; I&#39;m actually thinking of making the client/worker component a java\napplet in \n&gt; a web page.  The page contains the network topology and input/output\nsample \n&gt; embedded as parameters to the applet.  The applet runs until it\nproduces a \n&gt; result, and then that result is posted back to the server via a\nsubmit form \n&gt; that is automatically activated as soon as the evaluation is done. \nOne \n&gt; reason for this is that the applet is (hopefully) automatically\nupdated on \n&gt; every client as soon as I update it on the server.\n&gt; \n&gt; I&#39;m picturing an applet that shows 6 squares (all the same size). \nOne is \n&gt; the original input sample, shown at, say, 3 inches square.  The next\nis the \n&gt; higher-resolution expected output, also 3&quot;x3&quot; but with more pixels.\n In a \n&gt; third square, the output of the network is painted into the\ncorresponding \n&gt; location in the square, thus it is always changing.  The fourth\nsquare is \n&gt; the difference between the actual output and the expected output\n(the error \n&gt; image).  The fifth and sixth squares are spatial error\ntransformations \n&gt; performed on the error image.  They will highlight certain kinds of\nerrors, \n&gt; like stairstepping and halos.\n&gt; \n&gt; Then, on the form in the web page is a field that holds the current\nrunning \n&gt; fitness value.  With each completion of a pass (at different levels\nof \n&gt; enlargement), it will update the spatial error images and then use\nthem to \n&gt; help with creating a fitness value.  Once the process is complete,\na \n&gt; JavaScript function will automatically post/submit the form, and the\nresults \n&gt; are sent back to the server.  The reply, of course, is the next \n&gt; network/sample to evaluate.  And the graphics are mostly eye-candy\nto keep \n&gt; it interesting.  It would probably be faster without it, but\nbecause it \n&gt; provides feedback on how good it is (or is not) doing, it helps with\nthe \n&gt; patience factor.\n&gt; \n&gt; When the data is sent to the server, it is received by a perl or php\nscript \n&gt; which dumps it into a database (sql or xml or file or something). \nIt then \n&gt; checks to see if all of the networks have been evaluated against\nthat \n&gt; particular sample.  If so, it then calls out to an external NEAT\nexecutable \n&gt; that evaluates the scores and determines which specimens would\nreproduce, \n&gt; and whether enough evaluation has been done so far, and all that\njazz.  If \n&gt; we have done enough, it generates a new population.  Either way, it\nproduces \n&gt; a new input/output sample.  Future requests then evaluate against a\nnew \n&gt; input/output sample and possibly a new generation of specimens.\n&gt; \n&gt; The back-end will probably be a mix of perl or php and either C++ or\nJava.   \n&gt; The one part is modified existing NEAT code that does the checks to\nsee who \n&gt; should reproduce, and does the actual creation of the next\ngeneration from \n&gt; the current generation based on fitness values.  Everything else is\ndone \n&gt; using whatever gets the job done fastest.  Meaning, easiest to\nwrite.\n&gt; \n&gt; _________________________________________________________________\n&gt; Create a Job Alert on MSN Careers and enter for a chance to win\n$1000! \n&gt;\nhttp://msn.careerbuilder.com/promo/kaday.htm?sitei\nd=CBMSN_1K&sc_extcmp=JS_JASweep_MSNHotm2\n\n\n"}}