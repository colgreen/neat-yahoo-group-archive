{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":480914583,"authorName":"ashishjain87","from":"&quot;ashishjain87&quot; &lt;ashishjain.mit@...&gt;","profile":"ashishjain87","replyTo":"LIST","senderId":"W3gWzz1-E5GV1LiX4eG5dOoRVa5nfjXBXtdJM1QD7wvUv6yzh8wRJCdTpKErNcAFY8J42vxujSfx59KklVxCZLXSykF4-QDk_zA5sYyimrM","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: neat C++: stuck: calculating network depth in the XOR experiment","postDate":"1323524987","msgId":5737,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpidm8xcis1OGU2QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGpidmllMCt2azBjQGVHcm91cHMuY29tPg=="},"prevInTopic":5736,"nextInTopic":0,"prevInTime":5736,"nextInTime":5738,"topicId":5735,"numMessagesInTopic":3,"msgSnippet":"Dear All, I think a hack for solving this problem is to reduce the check condition in NNode::depth(arguments) from 100 to 10 i.e. if (d ","rawEmail":"Return-Path: &lt;ashishjain.mit@...&gt;\r\nX-Sender: ashishjain.mit@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 19555 invoked from network); 10 Dec 2011 13:49:50 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m16.grp.sp2.yahoo.com with QMQP; 10 Dec 2011 13:49:50 -0000\r\nX-Received: from unknown (HELO ng12-ip1.bullet.mail.ne1.yahoo.com) (98.138.215.207)\n  by mta3.grp.sp2.yahoo.com with SMTP; 10 Dec 2011 13:49:50 -0000\r\nX-Received: from [98.138.217.178] by ng12.bullet.mail.ne1.yahoo.com with NNFMP; 10 Dec 2011 13:49:49 -0000\r\nX-Received: from [69.147.65.150] by tg3.bullet.mail.ne1.yahoo.com with NNFMP; 10 Dec 2011 13:49:49 -0000\r\nX-Received: from [98.137.34.32] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 10 Dec 2011 13:49:48 -0000\r\nDate: Sat, 10 Dec 2011 13:49:47 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;jbvo1r+58e6@...&gt;\r\nIn-Reply-To: &lt;jbvie0+vk0c@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;ashishjain87&quot; &lt;ashishjain.mit@...&gt;\r\nSubject: Re: neat C++: stuck: calculating network depth in the XOR experiment\r\nX-Yahoo-Group-Post: member; u=480914583; y=nyU6d6CLpRH40cY40AS7wBzZz_nwcTZc5JV5lWaej-1ZNSw26OR1\r\nX-Yahoo-Profile: ashishjain87\r\n\r\nDear All,\n\n\nI think a hack for solving this problem is to reduce the check =\r\ncondition in NNode::depth(arguments) from 100 to 10 i.e.\n\nif (d &lt; 10) {\n  c=\r\nout &lt;&lt; &quot;Too much depth!! Stopping&quot;;\n  return 10;\n}\n\ninstead of \nif (d &lt; 100=\r\n) {\n...\n}\n\n\nI guess I felt that figuring out the depth of the network shoul=\r\nd not be hard, and therefore, the program should not get stuck trying to co=\r\nmpute the depth of the network. As a result, I started this thread thinking=\r\n that something is wrong with the code. That said, I feel that the current =\r\nmethod for figuring out the depth is not good, and it should be switched to=\r\n depth first search or breadth first search. This will take care of the loo=\r\nps, etc. The current version will take too much time in case of loops which=\r\n was what I was observing. \n\nIf I get time, I&#39;ll implement the suggested fu=\r\nnction, and report back.\n\n\nCheers,\n\nAshish\n\n\n--- In neat@yahoogroups.com, &quot;=\r\nashishjain87&quot; &lt;ashishjain.mit@...&gt; wrote:\n&gt;\n&gt; I confirmed using a log file =\r\nthat it is getting stuck in a loop.\n&gt; \n&gt; I also noticed that the function h=\r\nas changed from NEATv1.1 and the latest C++ version NEATv.1.2.1.\n&gt; \n&gt; In pa=\r\nrticular, erkin changed the following fragment of the code which seems righ=\r\nt to me.\n&gt; \n&gt; NEATv1.2.1: if (cur_depth&gt;max) max=3Dcur_depth;\n&gt; NEATv1.1  :=\r\n if (cur_depth&gt;d) max=3Dcur_depth;\n&gt; \n&gt; \n&gt; I again request you to please le=\r\nt me know what needs to be done to correct this bug.\n&gt; \n&gt; \n&gt; --- In neat@ya=\r\nhoogroups.com, &quot;ashishjain87&quot; &lt;ashishjain.mit@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Dear All,\n&gt; =\r\n&gt; \n&gt; &gt; \n&gt; &gt; I have tried to run the xor experiment several times for severa=\r\nl number of generations.\n&gt; &gt; \n&gt; &gt; 1) xor_test(5), works every time.\n&gt; &gt; 2) =\r\nxor_test(10), works every time\n&gt; &gt; 3) xor_test(100), worked only once out o=\r\nf 10 or so trials.\n&gt; &gt; \n&gt; &gt; I tried to investigate further. It seems that t=\r\nhe program is getting stuck while trying to calculate the network depth ins=\r\nide the function xor_evaluate() [experiments.cpp]\n&gt; &gt; \n&gt; &gt; Line 158:  net=\r\n=3Dorg-&gt;net;\n&gt; &gt; Line 159:  numnodes=3D((org-&gt;gnome)-&gt;nodes).size();\n&gt; &gt; Li=\r\nne 160:\n&gt; &gt; Line 161:  net_depth=3Dnet-&gt;max_depth(); // GETTING STUCK HERE\n=\r\n&gt; &gt; \n&gt; &gt; I tried to look deeper. The function Network::depth(arguments) is =\r\nitself pretty simple. It is actually getting stuck inside NNode::depth(argu=\r\nments) which is a function defined in nnode.cpp on line 399. This is a recu=\r\nrsive function. It is getting stuck even when the recursion is off.\n&gt; &gt; \n&gt; =\r\n&gt; Kindly advise. \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Ashish\n&gt; &gt;\n&gt;\n\n\n\n"}}