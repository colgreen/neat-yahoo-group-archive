{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":200957992,"authorName":"Jason Gauci","from":"&quot;Jason Gauci&quot; &lt;jgmath2000@...&gt;","profile":"jgmath2000","replyTo":"LIST","senderId":"4psxIHfMFDrjAOYI5th1MqEO2WdWDn0bBv9ofLgAyUOdr1_fvxEnchbqIIH76lBlarwXbmwQq8MlGgO2A8WOvD87yF8FeV7Z38xk","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: HyperNEAT release site change and more info","postDate":"1176423235","msgId":3130,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGV2bWkwMytwcXU4QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDNFRDlBNDFGLURGMEYtNDFGOS1BMzIxLUUyRDgyODVFOUYzNEB3YWl0cy5uZXQ+"},"prevInTopic":3129,"nextInTopic":3132,"prevInTime":3129,"nextInTime":3131,"topicId":3121,"numMessagesInTopic":16,"msgSnippet":"Maybe I misunderstood what you are trying to do. In the example you provided, there is only one update.  As you pointed out, recurrent links cannot have an","rawEmail":"Return-Path: &lt;jgmath2000@...&gt;\r\nX-Sender: jgmath2000@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 20868 invoked from network); 13 Apr 2007 00:17:28 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m49.grp.scd.yahoo.com with QMQP; 13 Apr 2007 00:17:28 -0000\r\nReceived: from unknown (HELO n26a.bullet.sp1.yahoo.com) (209.131.38.240)\n  by mta8.grp.scd.yahoo.com with SMTP; 13 Apr 2007 00:17:28 -0000\r\nReceived: from [216.252.122.217] by n26.bullet.sp1.yahoo.com with NNFMP; 13 Apr 2007 00:13:57 -0000\r\nReceived: from [66.218.69.5] by t2.bullet.sp1.yahoo.com with NNFMP; 13 Apr 2007 00:13:57 -0000\r\nReceived: from [66.218.66.73] by t5.bullet.scd.yahoo.com with NNFMP; 13 Apr 2007 00:13:57 -0000\r\nDate: Fri, 13 Apr 2007 00:13:55 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;evmi03+pqu8@...&gt;\r\nIn-Reply-To: &lt;3ED9A41F-DF0F-41F9-A321-E2D8285E9F34@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Jason Gauci&quot; &lt;jgmath2000@...&gt;\r\nSubject: Re: HyperNEAT release site change and more info\r\nX-Yahoo-Group-Post: member; u=200957992; y=7aUvZtD17dacrbiaZPK8RJhfm1r1jstg6hVml4RIt9FudoZvZw\r\nX-Yahoo-Profile: jgmath2000\r\n\r\nMaybe I misunderstood what you are trying to do.\n\nIn the example you provid=\r\ned, there is only one update.  As you \npointed out, recurrent links cannot =\r\nhave an effect in a single update \n(assuming that the network starts out wi=\r\nth each node having a value \nof 0), but rather in the subsequent updates.\n\n=\r\nSo, even using your method, you have to decide how many times you \nwould li=\r\nke to update the network, and that number will change the \nvalue of the out=\r\nput.\n\nThe two methods I know of are to update the network a fixed amount of=\r\n \ntimes, or to update the network until a condition has been reached.  \nFor=\r\n example, one could update the network &quot;at least 10 times and \nuntil the ch=\r\nange in the output node&#39;s value is less than 0.5&quot;.  The \nsecond method soun=\r\nds difficult to implement in a robust way, so I \ndecided to go with the fir=\r\nst method.\n\n--- In neat@yahoogroups.com, Stephen Waits &lt;steve@...&gt; wrote:\n&gt;=\r\n\n&gt; \n&gt; On Apr 12, 2007, at 6:20 AM, Jason Gauci wrote:\n&gt; \n&gt; &gt; I think that t=\r\nhe\n&gt; &gt; reason why I don&#39;t set it up so my nodes are only evaluated once \nis=\r\n\n&gt; &gt; because it becomes more difficult as you add recurrent \nconnections.\n&gt;=\r\n \n&gt; But recurrent connections &quot;just work&quot;, right?  I think so anyway.   \n&gt; =\r\nNodes do not need to remember a prior activation.  Instead, each \nnode  \n&gt; =\r\nmust simply store an activation value.  Whether that activation is  \n&gt; for =\r\nthe current or prior update depends on whether that Node has \nbeen  \n&gt; upda=\r\nted.  Therefore, if you&#39;re updating a Node, and asks for the  \n&gt; current ac=\r\ntivation from a node later in the update list, it&#39;s \ngetting  \n&gt; that node&#39;=\r\ns prior activation.\n&gt; \n&gt; This is important, as network evaluation is certai=\r\nnly the \nbottleneck  \n&gt; in any NEAT implementation (that&#39;s doing real work =\r\nanyway).  If  \n&gt; you&#39;re going to do work hard to make networks evaluate fas=\r\nt, \nthere&#39;s  \n&gt; going to be no bigger gain than simply reducing the number =\r\nof \nupdates  \n&gt; to each network.\n&gt; \n&gt; An example...\n&gt; \n&gt; Let&#39;s imagine a si=\r\nmple network.  It has one Input (I), one Output  \n&gt; (O), and two Hidden nod=\r\nes (H0, H1).  We&#39;ll connect the network \nthusly:\n&gt; \n&gt;      I =3D&gt; H0\n&gt;     =\r\n I =3D&gt; H1\n&gt;      H0 =3D&gt; O\n&gt;      H1 =3D&gt; H0 # recurrent\n&gt;      H1 =3D&gt; O\n=\r\n&gt; \n&gt; In words, the input node connects to both hidden nodes.  The first  \n&gt;=\r\n hidden node connects to the output.  The second hidden node \nconnects  \n&gt; =\r\nto the first hidden node (recurrent) and the output.\n&gt; \n&gt; Let&#39;s pretend Nod=\r\nes are objects, and have a GetActivation method \nand  \n&gt; an Update method. =\r\n Update sums all of the inputs and sets an  \n&gt; activation member variable i=\r\nn the Node.\n&gt; \n&gt; When we sort this network (based on the digraph), we get:\n=\r\n&gt; \n&gt;      [I, H0, H1, O]\n&gt; \n&gt; Now let&#39;s step through the network update.  W=\r\ne&#39;ll assume that all  \n&gt; connection weights are 1.0, for the sake of clarit=\r\ny..\n&gt; \n&gt;      I.SetActivation =3D input data\n&gt; \n&gt;      H0.Update\n&gt;         =\r\n activation =3D I.GetActivation + H1.GetActivation (note: H1  \n&gt; hasn&#39;t bee=\r\nn Update&#39;d yet)\n&gt;      H1.Update\n&gt;          activation =3D I.GetActivation\n=\r\n&gt;      O.Update\n&gt;          activation =3D H0.GetActivation + H1.GetActivati=\r\non\n&gt; \n&gt;      result =3D O.GetActivation\n&gt; \n&gt; Doesn&#39;t this work?  Or, am I m=\r\nissing something?\n&gt; \n&gt; --Steve\n&gt;\n\n\n\n"}}