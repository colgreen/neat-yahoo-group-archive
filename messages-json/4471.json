{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211599040,"authorName":"Jeff Clune","from":"Jeff Clune &lt;jclune@...&gt;","profile":"jeffreyclune","replyTo":"LIST","senderId":"DGYz1_tubRknZqUwbn5LfUyeryDlxBaggSAqsd7mMNjT7wtc0FnITW-xCbbn--d0cxojYhHpKYBK8Tl4jrbbAAUb","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: HyperNEAT C++ Crossover","postDate":"1226894150","msgId":4471,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEM1NDY1NTc2LjI2N0M4JWpjbHVuZUBtc3UuZWR1Pg==","inReplyToHeader":"PGdmazNwMSsxMnJoQGVHcm91cHMuY29tPg=="},"prevInTopic":4458,"nextInTopic":0,"prevInTime":4470,"nextInTime":4472,"topicId":4441,"numMessagesInTopic":8,"msgSnippet":"... Hi Jason. I in no way meant to imply that I thought a direct encoding would do well on checkers. I was simply using checkers as an example substrate ","rawEmail":"Return-Path: &lt;jclune@...&gt;\r\nX-Sender: jclune@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 17035 invoked from network); 17 Nov 2008 03:55:55 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m56.grp.scd.yahoo.com with QMQP; 17 Nov 2008 03:55:55 -0000\r\nX-Received: from unknown (HELO mail-gx0-f15.google.com) (209.85.217.15)\n  by mta18.grp.scd.yahoo.com with SMTP; 17 Nov 2008 03:55:55 -0000\r\nX-Received: by gxk8 with SMTP id 8so610905gxk.15\n        for &lt;neat@yahoogroups.com&gt;; Sun, 16 Nov 2008 19:55:54 -0800 (PST)\r\nX-Received: by 10.65.200.8 with SMTP id c8mr3353508qbq.57.1226894154704;\n        Sun, 16 Nov 2008 19:55:54 -0800 (PST)\r\nReturn-Path: &lt;jclune@...&gt;\r\nX-Received: from ?192.168.2.3? (c-98-209-38-75.hsd1.mi.comcast.net [98.209.38.75])\n        by mx.google.com with ESMTPS id 27sm5771119qbw.0.2008.11.16.19.55.52\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Sun, 16 Nov 2008 19:55:53 -0800 (PST)\r\nUser-Agent: Microsoft-Entourage/12.13.0.080930\r\nDate: Sun, 16 Nov 2008 22:55:50 -0500\r\nTo: &quot;neat@yahoogroups.com&quot; &lt;neat@yahoogroups.com&gt;\r\nMessage-ID: &lt;C5465576.267C8%jclune@...&gt;\r\nThread-Topic: [neat] Re: HyperNEAT C++ Crossover\r\nThread-Index: AclIaGEfpKi2258tDEaJfAgSIsd/Tg==\r\nIn-Reply-To: &lt;gfk3p1+12rh@...&gt;\r\nMime-version: 1.0\r\nContent-type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-transfer-encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Jeff Clune &lt;jclune@...&gt;\r\nSubject: Re: [neat] Re: HyperNEAT C++ Crossover\r\nX-Yahoo-Group-Post: member; u=211599040; y=VgxYIX5XJXMfIbjHyqPhrxriGCPLwC9VueL1_j-vCPFeifSMNN1H\r\nX-Yahoo-Profile: jeffreyclune\r\n\r\n&gt; The problem with trying to use P-NEAT on checkers is tied to the\n&gt; direct encoding of genes.  If P-NEAT was to run on the 4100-connection\n&gt; substrate that HyperNEAT encodes, it would not be possible to defeat\n&gt; the simplech heuristic within 20 generations as HyperNEAT does.  I do\n&gt; not believe that anything besides an extraordinary amount of luck\n&gt; would allow the weights to behave in concert to form even something as\n&gt; simple as a piece counter (which actually, by itself, is not complex\n&gt; enough to defeat the heuristic).\n&gt; \n\nHi Jason. I in no way meant to imply that I thought a direct encoding would\ndo well on checkers. I was simply using checkers as an example substrate\nbecause it is easy to visualize. My point was simply that double-crossover\ncould be much better than uniform crossover, all else being equal. As you\nsay, however, on many problems that amount of crossover will not remedy the\nvast performance difference between P-NEAT and HyperNEAT.\n\nMy comments could apply to HyperNEAT as well. I would not be surprised if\ntwo-point crossover performed better in HyperNEAT than uniform crossover.\n\nThat said... (see below)\n&gt; Ignoring the evolution speed difference between HyperNEAT and P-NEAT,\n&gt; the other problem is generalization.  Because P-NEAT is a direct\n&gt; encoding, it can only learn weights that it has needed for a single\n&gt; game of checkers in a single generation.  Even with a deterministic\n&gt; opponent, mutating a few links in the substrate causes radical changes\n&gt; in the following generation&#39;s evaluation because picking a different\n&gt; move once causes simplech to pick a different move and this in turn\n&gt; causes a snowball effect that results in a completely different game.\n&gt; With a direct encoding, all of the link weights have a chance of being\n&gt; mutated, even ones that had no bearing on fitness.  This means that as\n&gt; the games keep changing their focus on different configurations,\n&gt; P-NEAT is potentially destroying valid connections in mutation.\n\nCan you expand on this idea? I don&#39;t get why the problems you mention apply\nto a direct encoding and not a generative encoding. A generative encoding,\neven more so than a direct encoding, is likely to change all of the links in\na resultant substrate. While I do agree that a generative encoding is better\nat generalizing from one region of the substrate to another (like in your\n2007 paper, where it could discover one motif and repeat it), I don&#39;t see\nhow it is better at dealing with the issues you raise here.\n\nCheers,\njeff\n\n\n\n"}}