{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"pBAViZi8ZmS8WQEMN1BsJoCOemo0Es8Cw4mVSUzkXagO_E67xxCqGGtXIgGpT4PSmEjU2ijK0JflQ-L-JsFFtiylFinlwvAf_tg1r350c-4g","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: ANN: New SharpNEAT release (with single pole balancing)","postDate":"1083201985","msgId":724,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM2cGxrMStnMTl2QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQwOEQ4MUVDLjIwMjAxMDZAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":720,"nextInTopic":0,"prevInTime":723,"nextInTime":725,"topicId":705,"numMessagesInTopic":4,"msgSnippet":"Colin, thanks for the details.  Mainly I was trying to see if there might be some major differences that could explain why oNEAT seems to be 10 times faster or","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 6878 invoked from network); 29 Apr 2004 01:27:27 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m21.grp.scd.yahoo.com with QMQP; 29 Apr 2004 01:27:27 -0000\r\nReceived: from unknown (HELO n39.grp.scd.yahoo.com) (66.218.66.107)\n  by mta6.grp.scd.yahoo.com with SMTP; 29 Apr 2004 01:27:27 -0000\r\nReceived: from [66.218.67.143] by n39.grp.scd.yahoo.com with NNFMP; 29 Apr 2004 01:26:27 -0000\r\nDate: Thu, 29 Apr 2004 01:26:25 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c6plk1+g19v@...&gt;\r\nIn-Reply-To: &lt;408D81EC.2020106@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 5544\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.107\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: ANN: New SharpNEAT release (with single pole balancing)\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nColin, thanks for the details.  Mainly I was trying to see if there\nmight be some major differences that could explain why oNEAT seems to\nbe 10 times faster or more than SharpNEAT on pole balancing.  Here is\nwhat I notice from your explanation:\n\n\n&gt; &gt;\n&gt; err, no that&#39;s not right, the two text boxes got switched around \n&gt; following a slight disaster in the form designer. So add_connection\nis \n&gt; at 20% and weight mutation at 77%, does that sound about right?\n&gt; \n\nAh..that does make more sense.  Although 20% is a bit high probably\nfor adding connections.  Maybe 10% or 5% would be better.  Those boxes\nprobably screwed me up a bit because I was trying to &quot;fix&quot; the\nsettings but probably since they were switched I actually made it\nworse.\n\n&gt; &gt;-What is &quot;elitism proportion?&quot; The standard NEAT use of elitism is \n&gt; &gt;to just keep one clone of the champ of every species that has been \n&gt; &gt;alotted over 5 offspring in the next generation.  So it is species-\n&gt; &gt;based elitism.  But what does yours do?\n&gt; &gt;  \n&gt; &gt;\n&gt; \n&gt; Not sure I follow there. Do you mean you take each species&#39; best\nand \n&gt; create 5 offspring from it? or just keep it in the next gen\nunchanged?\n&gt; \n\nIn oNEAT, just the champ of each species is kept unchanged.  But for\nspecies that are getting less than 5 offspring, they don&#39;t get elitism\nat all.\n\n&gt; SharpNeat also implements species based elitism. It&#39;s probably\neasiest \n&gt; to describe the whole process:\n&gt; \n&gt; 1) Using p_selection_proportion create a offspring per species and\nstore \n&gt; them all in a seperate list away from the main population.\n&gt; 2) Cull the weakest n% of each species, where n = 100-p_elitism\n&gt; 3) Add the offspring into the population.\n&gt; 4) Back to 1\n&gt; \n&gt; I happen to create precisely the correct amount of offsprng to make\nup \n&gt; for the genomes that are lost by the culling. So the population\nsize \n&gt; remains constant(ish) - there is some variation because the size of\neach \n&gt; species is calculated indepedently and therefore you may get a few\nmore \n&gt; or less offspring in the popualtion as a whole due to rounding.\n&gt; \n&gt; Another point here is that you can choose to set p_elitism to be\nlarger \n&gt; or smaller than p_selection_proportion. If you set it larger then\nyou \n&gt; are creating offspring from the same set of elite genomes until\nsome \n&gt; better genomes come along.  I do however sort the species by fitness\nand \n&gt; then by age, so older good genomes are more likely to be culled than\nnew \n&gt; ones.\n&gt; \n&gt; Also if eleitism is a very small value (or even 0) then I will\nalways \n&gt; leave a minimum of 1 genome in a species. Therefore I think maybe\nthat \n&gt; setting p_elitism to zero would make SharpNeat equivalent to\norigianl \n&gt; NEAT in this area.\n&gt; \n\nOk I get it now.  Yeah, I&#39;d try setting elitism to 0 to make it more\nlike oNEAT, just to see if maybe excessive elitism (which means\ngreediness) is causing SharpNEAT to get stuck.  Though I&#39;m not sure.\n\n&gt; &gt;-The selection proportion of 0.1 is very low and will likely cause \n&gt; &gt;premature convergence.\n&gt; &gt;  \n&gt; &gt;\n&gt; Ok, I need to experiment with this value. What sort of range are\npeople \n&gt; using?\n&gt; \n\nI&#39;d say 0.2 is greedy and 0.4 is more explorative (is that a word?). \n0.1 seems a bit too extreme.  \n\n&gt; &gt;-My version of NEAT generally solves the single pole balancing \n&gt; &gt;problem (with velocities) in under 1000 evaluations...so some of\nthe \n&gt; &gt;differences between the implementations probably are worth looking \n&gt; &gt;into.  It looks like it takes maybe 10 times longer or more in \n&gt; &gt;SharpNEAT.\n&gt; &gt;  \n&gt; &gt;\n&gt; \n&gt; I have seen SharpNEAT spontaneously jump to a perfect solution\nafter \n&gt; only 30 gens or so, but in general yes it can take a while.  I\nactually \n&gt; ported pole balancing precisely so that I could compare with\norigianl \n&gt; NEAT (I&#39;ll call it oNEAT for short), so this is good feedback. Also\nI&#39;m \n&gt; going to try and compile NEAT here (thanks Darren) so I can make\nmore \n&gt; detailed comparisons.\n&gt; \n\nThere is definitely a very significant difference in performance so\nits worth comparing.\n\n&gt; &gt;-What is the weight mutation power and rate, i.e. how much do you \n&gt; &gt;perturb weights and how likely is it any particular weight will be \n&gt; &gt;perturbed?  Also, is there a max weight?\n&gt; &gt;  \n&gt; &gt;\n&gt; Following your posting I did implement weight capping - currently\nset to \n&gt; +-3.0.\n&gt; \n\nNote that in my pole balancing experiments, I didn&#39;t use weight\ncapping.  I doubt it is hurting to cap the weights, but who knows. \nThe thing is with single pole balancing, the problem is so easy that\nweight caps aren&#39;t really necessary since the runs don&#39;t last long\nenough to bloat the weights too much.  Although- it seems with\nSharpNEAT in its present state runs do occasionally take a while.\nJust something to keep in mind.\n\n&gt; The weight mutation does currently differ from oNEAT.  I do use \n&gt; pColdGaussian /pGaussian roughly as in oNEAT. 10% of the time 30% of\nthe \n&gt; weights are reset to random values (-3 to 3), but normally only 10%\nof \n&gt; weights are reset.\n&gt; \n&gt; All of the of the other weights are &#39;jiggled&#39;, for this I use a\nfunction \n&gt; that generates numbers from a standard distribution curve.\nCurrently I \n&gt; use a sigma of 0.025 which generates weight-delta&#39;s between about\n-0.1 \n&gt; and 0.1, bu the bulk of the deltas are between +-0.05\n&gt; \n&gt; Oh and in total only 20% of the weights in a genome affected,\nwhereas I \n&gt; /think/ oNEAT mutates 100%.\n&gt; \n\nYeah..maybe you could try mutating more than 20%....although again who\nknows what&#39;s best.\n\n&gt; Hope that all made sense, you did ask :) \n&gt; \n\nYes absolutely, thanks!  (Just trying to make sure SharpNEAT is as\ngood as it can be!)\n\nken\n\n\n"}}