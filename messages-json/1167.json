{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"AoUlPk98bTyFF4rqkkn1tBoutmU123t_cNOkGb-vc6fpZ8V4kd2MTnS_B1NC-yLTDsD5Uf-_HnkJ9ST37FRGE_FTMStC0RB7_Vk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Computation Time","postDate":"1088527556","msgId":1167,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMS4wLjYuMC4yMDA0MDYyOTE3MTkzNC4wMjUzNjk5OEBwb3AubWFpbC55YWhvby5jby51az4=","inReplyToHeader":"PEJBWTItRjIwaVAzRkpWUkE0a0IwMDAxNTIzY0Bob3RtYWlsLmNvbT4=","referencesHeader":"PEJBWTItRjIwaVAzRkpWUkE0a0IwMDAxNTIzY0Bob3RtYWlsLmNvbT4="},"prevInTopic":1166,"nextInTopic":1168,"prevInTime":1166,"nextInTime":1168,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"... You won t get identical results.  But you may get ones which are different but as good. ... This: 1.0f is a float literal constant, whereas this: 1.0 is","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 54169 invoked from network); 29 Jun 2004 16:40:58 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m19.grp.scd.yahoo.com with QMQP; 29 Jun 2004 16:40:58 -0000\r\nReceived: from unknown (HELO smtp005.mail.ukl.yahoo.com) (217.12.11.36)\n  by mta4.grp.scd.yahoo.com with SMTP; 29 Jun 2004 16:40:57 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp005.mail.ukl.yahoo.com with SMTP; 29 Jun 2004 16:40:40 -0000\r\nMessage-Id: &lt;6.1.0.6.0.20040629171934.02536998@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.1.0.6\r\nDate: Tue, 29 Jun 2004 17:45:56 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;BAY2-F20iP3FJVRA4kB0001523c@...&gt;\r\nReferences: &lt;BAY2-F20iP3FJVRA4kB0001523c@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.36\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Computation Time\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\n\n&gt;I&#39;ll have to do some poking around to see if I can get away with floats\n&gt;instead of doubles...  I&#39;ll try making a copy of one and converting all\n&gt;&#39;double&#39; to &#39;float&#39; and seeing if it outputs identical results.\n\nYou won&#39;t get &quot;identical&quot; results.  But you may get ones which are \ndifferent but as good.\n\n&gt;   If so, then\n&gt;yeah, I&#39;ll change it.  But that does pose an interesting question:  if I\n&gt;have too many digits in my generated source code, will the compiler\n&gt;automatically reduce it to the size of a float, or will it do the math as a\n&gt;double and then convert at the end?\n\nThis:\n\n1.0f\n\nis a float literal constant, whereas this:\n\n1.0\n\nis a double.\n\nLike I said before, your numbers already have far too many decimal places, \neven for double.\n\nGenerally the compiler has to do the maths using the highest precision of \nany component in the expression, then cast it back to whatever the result \nwants it to be.\n\n&gt;   How could I tell which way it chooses\n&gt;to do it?\n\nA rule like the one I gave above is part of the standard, so the compiler \nwill follow it exactly.\n\n&gt;One source file does the evaluations for a single 9x9 input -&gt; 144x144\n&gt;output.  Thus, the pixel data is the same for every activation.  So, I\n&gt;pre-calculate as much as I can before I generate the code.  The references\n&gt;to the pixel data are encapsulated in the first number in the calculation.\n&gt;Once the networks have hidden nodes that reference one of the variable\n&gt;inputs, then the activation functions will start to get more complicated.\n&gt;\n&gt;Of course, I can&#39;t do that once I use it for actual enlargement, but for the\n&gt;fitness evaluations, every little bit helps.\n\nI see, that&#39;s very sneaky :)\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n\n"}}