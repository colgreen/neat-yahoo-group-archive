{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":203001720,"authorName":"Wesley Tansey","from":"Wesley Tansey &lt;tansey@...&gt;","profile":"tansey4","replyTo":"LIST","senderId":"46liI9ix7KCPxBdAmjNHeyxMhAGmzu_1SRhSQkqaFUsE_lpTDWeJelV6DN2fUFFqsbCIg1AaTwNpksBvfrnqSPZEDZ4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] How to get a smooth output distribution?","postDate":"1253462526","msgId":4856,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDRBQjY1MUZFLjkwNjAyMDBAdnQuZWR1Pg==","inReplyToHeader":"PGg5NTg3aCt2bG1jQGVHcm91cHMuY29tPg==","referencesHeader":"PGg5NTg3aCt2bG1jQGVHcm91cHMuY29tPg=="},"prevInTopic":4855,"nextInTopic":4862,"prevInTime":4855,"nextInTime":4857,"topicId":4855,"numMessagesInTopic":3,"msgSnippet":"Hi Chris, You could try using sum of squared errors instead. I ll use your example of 6 As, 3 Bs, and 1 C. For a distribution of 1/0/0 you would get: 6 * (1 -","rawEmail":"Return-Path: &lt;tansey@...&gt;\r\nX-Sender: tansey@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 98125 invoked from network); 20 Sep 2009 16:02:38 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m2.grp.re1.yahoo.com with QMQP; 20 Sep 2009 16:02:38 -0000\r\nX-Received: from unknown (HELO cdptpa-omtalb.mail.rr.com) (75.180.132.122)\n  by mta3.grp.sp2.yahoo.com with SMTP; 20 Sep 2009 16:02:38 -0000\r\nX-Received: from [192.168.1.2] (really [76.88.116.144])\n          by cdptpa-omta01.mail.rr.com with ESMTP\n          id &lt;20090920160213591.MVKQ6569@...&gt;\n          for &lt;neat@yahoogroups.com&gt;; Sun, 20 Sep 2009 16:02:13 +0000\r\nMessage-ID: &lt;4AB651FE.9060200@...&gt;\r\nDate: Sun, 20 Sep 2009 09:02:06 -0700\r\nUser-Agent: Thunderbird 2.0.0.23 (Windows/20090812)\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;h9587h+vlmc@...&gt;\r\nIn-Reply-To: &lt;h9587h+vlmc@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Wesley Tansey &lt;tansey@...&gt;\r\nSubject: Re: [neat] How to get a smooth output distribution?\r\nX-Yahoo-Group-Post: member; u=203001720; y=mUzHq8Neovy_kXnvXpLC9LrbwuQld3f3ikq4i2pUCo3a1A\r\nX-Yahoo-Profile: tansey4\r\n\r\nHi Chris,\n\nYou could try using sum of squared errors instead.\n\nI&#39;ll use your example of 6 As, 3 Bs, and 1 C. For a distribution of \n1/0/0 you would get:\n\n6 * (1 - 1) ^2+ 3 * (1 - 0)^2 + 1 * (1-0)^2\n= 6 * 0 + 3 * 1 + 1 * 1\n= 4\n\nUsing the optimal distribution of 0.6/0.3/0.1, you would get:\n\n6 * (1 - 0.6)^2 + 3 * (1 - 0.3)^2 + 1 * (1 - 0.1)^2\n= 6 * 0.16 + 3 * 0.49 + 1 * 0.81\n= 0.96 + 1.47 + 0.81\n= 3.24\n\nSo minimizing this function should favor the distribution you&#39;re looking \nfor over the one you&#39;re currently getting.\n\n\nWesley\n\nchhofchhof wrote:\n&gt;  \n&gt;\n&gt; Hello,\n&gt;\n&gt; no matter what experiment I try, I have always the same problem:\n&gt;\n&gt; Let&#39;s say there are three output neurons, in my training data there is \n&gt; only one output neuron valid. So there is no example where one output \n&gt; neuron is active with an other output neuron. But I still want to get \n&gt; a percentage distribution.\n&gt;\n&gt; Now I expected to get a output distribution like:\n&gt;\n&gt; 33%, 33%, 33%\n&gt;\n&gt; But most of the time I get:\n&gt;\n&gt; 100%, 0%, 0%\n&gt; 0%, 100%, 0%\n&gt; 0%, 0%, 100%\n&gt;\n&gt; I think it is a matter of the fitness function.\n&gt;\n&gt; I use the following method:\n&gt;\n&gt; The fitness for one training data is the sum of the correct decisions.\n&gt; So when neuron A is correct and neat says A 100%, it gets 1.0 fitness \n&gt; for this test data. If it says it is B, then it gets 0 fitness. I sum \n&gt; this up and divide it by the example count. So when it says it is 50% \n&gt; A, then it would get 0.5 fitness and so on.\n&gt;\n&gt; But the network still only favorites one decision.\n&gt; I tried to favorites correct decisions log(hit ratio), but this does \n&gt; not change anything.\n&gt;\n&gt; When the input data is exactly the same and I have 6 times A, 3 times \n&gt; B and 1 time C as correct output, then I want 60%, 30%, 10% and not \n&gt; always 100% for A.\n&gt;\n&gt; What can I change to achieve such a percentage distribution?\n&gt; I think it has nothing to do with other neat parameters but the \n&gt; fitness function. With my fitness function the fitness would be the \n&gt; same if it says always 100%, 0%, 0% or if it says 60%, 30%, 10%.\n&gt;\n&gt; What shall I do?\n&gt;\n&gt; Thanks,\n&gt;\n&gt; Chris\n&gt;\n&gt; \n\n"}}