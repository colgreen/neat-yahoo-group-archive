{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":130107745,"authorName":"Chad Bohannan","from":"&quot;Chad Bohannan&quot; &lt;chad@...&gt;","profile":"tailboom22","replyTo":"LIST","senderId":"hLeJRTGGWa0V1gtl8LtDWoEumibNEttwEpSIAYbf9DTrTJiqXRO5SXP36UjX1arlFcp1QMLVureohodQyc1hj5oOMKCdYxl-xTQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: 3D cross product domain","postDate":"1091770914","msgId":1338,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUwNmMwMWM0N2I3OCQxNDZmY2RlMCQ3NGNiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":1337,"nextInTopic":1339,"prevInTime":1337,"nextInTime":1339,"topicId":1298,"numMessagesInTopic":17,"msgSnippet":"... each ... that :) nope. Is there any advantage in all this compared to just directly subtracting the error from zero? I get the asymtotic curve, with a","rawEmail":"Return-Path: &lt;chad@...&gt;\r\nX-Sender: chad@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 11023 invoked from network); 6 Aug 2004 05:49:40 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m24.grp.scd.yahoo.com with QMQP; 6 Aug 2004 05:49:40 -0000\r\nReceived: from unknown (HELO mwde08la.mail2world.com) (66.28.189.182)\n  by mta5.grp.scd.yahoo.com with SMTP; 6 Aug 2004 05:49:40 -0000\r\nReceived: from mail pickup service by mwde08la.mail2world.com with Microsoft SMTPSVC;\n\t Thu, 5 Aug 2004 22:41:55 -0700\r\nauth-sender:chad@...\r\nReceived: from 10.1.203.116 unverified ([10.1.203.116]) by mwde08la.mail2world.com with Mail2World SMTP Server,\n\tThu 05 Aug 2004 22:41:54 -07:00\r\nReceived: from [151.144.178.12] by bohannan.net with HTTP; 8/5/2004 10:41:54 PM PST\r\nthread-index: AcR7eBRv2f8TgVTIR7CpbsS4JOnHEg==\r\nThread-Topic: [neat] Re: 3D cross product domain\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nDate: Thu, 5 Aug 2004 22:41:54 -0700\r\nMessage-ID: &lt;506c01c47b78$146fcde0$74cb010a@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_506D_01C47B3D.6810F5E0&quot;\r\nX-Mailer: Microsoft CDO for Exchange 2000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nContent-Class: urn:content-classes:message\r\nImportance: normal\r\nPriority: normal\r\nX-OriginalArrivalTime: 06 Aug 2004 05:41:55.0266 (UTC) FILETIME=[150CAA20:01C47B78]\r\nX-eGroups-Remote-IP: 66.28.189.182\r\nFrom: &quot;Chad Bohannan&quot; &lt;chad@...&gt;\r\nSubject: Re: [neat] Re: 3D cross product domain\r\nX-Yahoo-Group-Post: member; u=130107745\r\nX-Yahoo-Profile: tailboom22\r\n\r\n\r\n------=_NextPart_000_506D_01C47B3D.6810F5E0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\n&gt;I have a cross product experiment up and running. I have used the \n&gt;&quot;spikey sphere&quot; of 26 vectors giving 26*26=676 test cases that I \n&gt;described. I assign each test case a max fitness of 1.0, basically I \n&gt;compare the network&#39;s output with the expected result and total the \n&gt;error for the three components (x,y and z). This gives me a value \n&gt;between 0 and 3 because my vectors are all length 1.0 and therefore\neach \n&gt;component should be between 0 and 1. I then subtract that error from 3 \n&gt;and divide by 3 to give a fitness between 0 and 1 - did you get all\nthat :)\n\nnope.\n\nIs there any advantage in all this compared to just directly subtracting\nthe error from zero? I get the asymtotic curve, with a perfect network\nhaving a score of zero. the algorithm doesn&#39;t care about the psychology\nof negative reinforcment compared to positive reinforcement. I just\npunish the networks, and make no pains to be nice to them. It&#39;s simpler.\nGranted it still doesn&#39;t work, and I&#39;ve run pretty long runs, but they\nlevel off very quickly. My vectors are randomly generated, then\nnormalized. The random number generated is set to seed with the clock,\nso each run should be different, but with a set size of 40, they always\nlook the same. If you can get any headway on this problem, I&#39;ll gladly\ntry what works. \nEven positive reinforcement psychology, or just plain sweet talking... (\noh your such a good network, yeah, good network, you solved that cross\nproduct so WELL, yes, hear&#39;s a treat, yeah good network )\nOk, that was over the top. ending e-mail.\n\nchad \n\r\n------=_NextPart_000_506D_01C47B3D.6810F5E0\r\nContent-Type: text/html\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;HTML&gt;\n&lt;BODY&gt;\n&lt;br&gt;\n&gt;I have a cross product experiment up and running. I have used the &lt;br&gt;\n&gt;&quot;spikey sphere&quot; of 26 vectors giving 26*26=676 test cases that I &lt;br&gt;\n&gt;described.  I assign each test case a max fitness of 1.0, basically I &lt;br&gt;\n&gt;compare the network&#39;s output with the expected result and total the &lt;br&gt;\n&gt;error for the three components (x,y and z). This gives me a value &lt;br&gt;\n&gt;between 0 and 3 because my vectors are all length 1.0 and therefore each &lt;br&gt;\n&gt;component should be between 0 and 1. I then subtract that error from 3 &lt;br&gt;\n&gt;and divide by 3 to give a fitness between 0 and 1 - did you get all that :)&lt;br&gt;\n&lt;br&gt;\nnope.&lt;br&gt;\n&lt;br&gt;\nIs there any advantage in all this compared to just directly subtracting the error from zero? I get the asymtotic curve, with a perfect network having a score of zero. the algorithm doesn&#39;t care about the psychology of negative reinforcment compared to positive reinforcement. I just punish the networks, and make no pains to be nice to them. It&#39;s simpler.&lt;br&gt;\nGranted it still doesn&#39;t work, and I&#39;ve run pretty long runs, but they level off very quickly. My vectors are randomly generated, then normalized. The random number generated is set to seed with the clock, so each run should be different, but with a set size of 40, they always look the same. If you can get any headway on this problem, I&#39;ll gladly try what works. &lt;br&gt;\nEven positive reinforcement psychology, or just plain sweet talking... ( oh your such a good network, yeah, good network, you solved that cross product so WELL, yes, hear&#39;s a treat, yeah good network )&lt;br&gt;\nOk, that was over the top. ending e-mail.&lt;br&gt;\n&lt;br&gt;\nchad\n&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_506D_01C47B3D.6810F5E0--\r\n\n"}}