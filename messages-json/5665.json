{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":190115458,"authorName":"Drew Kirkpatrick","from":"Drew Kirkpatrick &lt;drew.kirkpatrick@...&gt;","profile":"ze_dakster","replyTo":"LIST","senderId":"iWaC8pg-qsFZGMJj9tBbjErmrIkmKkLJcxAGYxwSBobobr4oSTkD4yVsCLPvErIp_lnRxA2o_1ZsrcS9igtt_RjzkrOmHtkpdC_ygV_A0YBB6AED","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Mat Buckland NEAT implementation, bug in AddNeuron?","postDate":"1320423931","msgId":5665,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRmNVUFFaVWN6eWNYSnFVenBmPWhBU1IzaHc1RjNpa3FVLWhKeDU3Tkd4V2dENzI5UUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":0,"prevInTime":5664,"nextInTime":5666,"topicId":5665,"numMessagesInTopic":1,"msgSnippet":"I m not sure if Mat Buckland is around anymore, and his site ai-junkie seems rather abandoned. I m using a port of his NEAT implementation to try to get","rawEmail":"Return-Path: &lt;drew.kirkpatrick@...&gt;\r\nX-Sender: drew.kirkpatrick@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 58224 invoked from network); 4 Nov 2011 16:25:50 -0000\r\nX-Received: from unknown (98.137.35.162)\n  by m4.grp.sp2.yahoo.com with QMQP; 4 Nov 2011 16:25:50 -0000\r\nX-Received: from unknown (HELO mail-ey0-f169.google.com) (209.85.215.169)\n  by mta6.grp.sp2.yahoo.com with SMTP; 4 Nov 2011 16:25:50 -0000\r\nX-Received: by eye4 with SMTP id 4so2969346eye.14\n        for &lt;neat@yahoogroups.com&gt;; Fri, 04 Nov 2011 09:25:48 -0700 (PDT)\r\nX-Received: by 10.213.33.16 with SMTP id f16mr816303ebd.45.1320423948269; Fri,\n 04 Nov 2011 09:25:48 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.213.34.5 with HTTP; Fri, 4 Nov 2011 09:25:31 -0700 (PDT)\r\nDate: Fri, 4 Nov 2011 12:25:31 -0400\r\nMessage-ID: &lt;CAFcUPQZUczycXJqUzpf=hASR3hw5F3ikqU-hJx57NGxWgD729Q@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Drew Kirkpatrick &lt;drew.kirkpatrick@...&gt;\r\nSubject: Mat Buckland NEAT implementation, bug in AddNeuron?\r\nX-Yahoo-Group-Post: member; u=190115458; y=XL-Wi5p8KsK56IRAkz_gmjJ4ZF6oFweCGGoe8dbukYeSZBmfKd30v5iSLlP5pJWP9dYYyQ8mIUzvbm8\r\nX-Yahoo-Profile: ze_dakster\r\n\r\nI&#39;m not sure if Mat Buckland is around anymore, and his site ai-junkie\nseems rather abandoned. I&#39;m using a port of his NEAT implementation to\ntry to get competitive coevolution to work, and I&#39;m not seeing enough\ncomplexification. I&#39;m going through his algorithms trying to find\nproblems, and I&#39;ve stumbled upon something that rather baffles me.\n\nI started from the NEAT implementation in his book, but I just checked\nthe WinNeat code on the site, and the code in question is the same\nbetween them.\n\nIn the CGenome class, the function AddNeuron is called during epoch\nto, well, add neurons based on chance.\n\nMat B. threw in some code to help avoid chaining of new neurons, but\nI&#39;m not sure this works. Here&#39;s his comments, describing the logic:\n\n    // first a link is chosen to split. If the genome is small the code makes\n    // sure one of the older links is split to ensure a chaining effect does\n    // not occur. Here, if the genome contains less than 5 hidden neurons it\n    // is considered to be too small to select a link at random\n\n\nSo basically, if the genome has less than 5 hidden nodes, don&#39;t select\nlinks at random, but use the older links.\n\nBut then the code that follows is:\n\n\nconst int SizeThreshold = m_iNumInputs + m_iNumOutPuts + 5;\nif (m_vecLinks.size() &lt; SizeThreshold)\n{\n   ... it&#39;s too small for random link choosing\n}\nelse\n{\n ... it&#39;s big enough for random link choosing\n}\n\n\nI&#39;m never hitting the bit of code for too small of a network, even on\nthe first generation, because his code is checking the size of the\nvector containing links, not the vector containing neurons.\n\nI would assume this is a bug in the code, with a pretty easy fix, but\nI&#39;ve googled around and haven&#39;t seen anyone mention this as a problem.\n\nI figure quite a few people have played with the WinNeat code at this\npoint, and someone would have flagged this by now if it is indeed a\nproblem. Perhaps I&#39;m just misunderstanding something here.\n\nI don&#39;t think this is the source of my problems with lack of\ncomplexification in my setup, but if this is a bug, I would like to go\nahead and fix it as I slowly try to track down where my software is\ngoing astray.\n\nAnyone have any insight they could share with me? Thanks!\n\n\n\n-Drew\n\n"}}