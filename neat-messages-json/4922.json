{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":274910130,"authorName":"ddambroeplex","from":"&quot;ddambroeplex&quot; &lt;ddambro84@...&gt;","profile":"ddambroeplex","replyTo":"LIST","senderId":"oQw01ymzOBSkT28PwvNCu5qjg3N2R-9FPvFX-e08LcDanojaxx1Cl9T3dmWXSKwJnbMVMGe2-pzBqSwLQWOZA1ws9F2sCiFXhZqMkG8","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: FloatFastConcurrentNetwork - Performance Optimization","postDate":"1259215144","msgId":4922,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhlbDVmOCszZGJlQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGhlZmQ1YStnb2czQGVHcm91cHMuY29tPg=="},"prevInTopic":4920,"nextInTopic":4925,"prevInTime":4921,"nextInTime":4923,"topicId":4917,"numMessagesInTopic":12,"msgSnippet":"Hi Daniel, Thanks for your interest in HyperSharpNEAT.  It s always good to hear about new researchers working with it, and it s great that you found this","rawEmail":"Return-Path: &lt;ddambro84@...&gt;\r\nX-Sender: ddambro84@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 89373 invoked from network); 26 Nov 2009 07:39:23 -0000\r\nX-Received: from unknown (66.196.94.105)\n  by m12.grp.re1.yahoo.com with QMQP; 26 Nov 2009 07:39:23 -0000\r\nX-Received: from unknown (HELO n39b.bullet.mail.sp1.yahoo.com) (66.163.168.153)\n  by mta1.grp.re1.yahoo.com with SMTP; 26 Nov 2009 07:39:23 -0000\r\nX-Received: from [69.147.65.150] by n39.bullet.mail.sp1.yahoo.com with NNFMP; 26 Nov 2009 06:03:30 -0000\r\nX-Received: from [98.137.34.72] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 26 Nov 2009 05:59:05 -0000\r\nDate: Thu, 26 Nov 2009 05:59:04 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hel5f8+3dbe@...&gt;\r\nIn-Reply-To: &lt;hefd5a+gog3@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;ddambroeplex&quot; &lt;ddambro84@...&gt;\r\nSubject: Re: FloatFastConcurrentNetwork - Performance Optimization\r\nX-Yahoo-Group-Post: member; u=274910130; y=EKMMEqlekR5COx8Ql7RDVkdJcQ01zDc9HM8DSBTW6KwpotT1\r\nX-Yahoo-Profile: ddambroeplex\r\n\r\n\n\nHi Daniel,\n\nThanks for your interest in HyperSharpNEAT.  It&#39;s always good=\r\n to hear about new researchers working with it, and it&#39;s great that you fou=\r\nnd this optimization.  Of course, the bulk of the standard NEAT code is Col=\r\nin&#39;s SharpNEAT, which is already very well organized and optimized.  That&#39;s=\r\n why I chose to build my HyperNEAT code on top of it. \n\nI will definitely c=\r\nonsider integrating this into the main HyperSharpNEAT build (a new, minor u=\r\npdate should be coming very soon).  I do want to play around with it though=\r\n and make sure that the output is consistent with the old method, although =\r\nI don&#39;t see why it wouldn&#39;t be.  There also seems to be some conflicting in=\r\nformation about how mono handles unsafe code, so I want to make sure the op=\r\ntimization doesn&#39;t break compatibility.\n\nIf you have any other ideas or que=\r\nstions concerning HyperSharpNEAT, just let me know.\n\nDavid D&#39;Ambrosio\n\n--- =\r\nIn neat@yahoogroups.com, &quot;Daniel&quot; &lt;daniel_kuppitz@...&gt; wrote:\n&gt;\n&gt; Hello,\n&gt; =\r\n\n&gt; I&#39;ve played around with a quite large network and took a look at the exe=\r\ncution performance of HyperSharpNEAT. There was one outstanding method (bes=\r\nides my actual evaluation method): FloatFastConcurrentNetwork.SingleStep()\n=\r\n&gt; \n&gt; The method has an execution time of only 0.3ms (avg) but it&#39;s called h=\r\nundreds of millions of times, so I&#39;ve tried to optimize this method - with =\r\nsuccess. I&#39;ve added some unsafe code; the methods readability is lost, but =\r\nIMO the performance improvement redresses that.\n&gt; \n&gt; Some facts:\n&gt; \n&gt; With =\r\nthe original method a call to PerformOneGeneration() took 218 seconds in av=\r\nerage. With my modified version and the same network a call took 124 second=\r\ns (that&#39;s only 57% of the original version).\n&gt; \n&gt; Maybe you can consider to=\r\n apply this changes to the standard implementation. The modified file can b=\r\ne found here: http://groups.yahoo.com/group/neat/files/FloatFastConcurrentN=\r\network.cs\n&gt; \n&gt; Cheers,\n&gt; Daniel\n&gt;\n\n\n"}}