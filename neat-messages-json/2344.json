{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"nS5WZHxeVRMWjn7PMGhssNq0ezqHgq2_LPW9sSAcqGlrijZHAJcEgFB5ZiPGPWP7R6EnQKq4F0ikZkt9AsDbEIaaeKss6HS46Q","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Continuous Species Control","postDate":"1129594834","msgId":2344,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQzNTQzRkQyLjcwMDAyMDlAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PDYuMi4zLjQuMC4yMDA1MTAxNzE0NDcwNi4wMjc3NDViMEBwb3AubWFpbC55YWhvby5jby51az4=","referencesHeader":"PDYuMi4zLjQuMC4yMDA1MTAxNzE0NDcwNi4wMjc3NDViMEBwb3AubWFpbC55YWhvby5jby51az4="},"prevInTopic":2343,"nextInTopic":2346,"prevInTime":2343,"nextInTime":2345,"topicId":2341,"numMessagesInTopic":11,"msgSnippet":"... Indeed. In fact you may find you get better results if you start with a fresh population since earlier runs may have lead the population into a bad region","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 54947 invoked from network); 18 Oct 2005 00:20:31 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m31.grp.scd.yahoo.com with QMQP; 18 Oct 2005 00:20:31 -0000\r\nReceived: from unknown (HELO blaster.systems.pipex.net) (62.241.163.7)\n  by mta1.grp.scd.yahoo.com with SMTP; 18 Oct 2005 00:20:31 -0000\r\nReceived: from [10.0.0.10] (81-86-161-87.dsl.pipex.com [81.86.161.87])\n\tby blaster.systems.pipex.net (Postfix) with ESMTP id A1FE1E0001F1\n\tfor &lt;neat@yahoogroups.com&gt;; Tue, 18 Oct 2005 01:20:28 +0100 (BST)\r\nMessage-ID: &lt;43543FD2.7000209@...&gt;\r\nDate: Tue, 18 Oct 2005 01:20:34 +0100\r\nUser-Agent: Mozilla Thunderbird 1.0.2 (Windows/20050317)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;6.2.3.4.0.20051017144706.027745b0@...&gt;\r\nIn-Reply-To: &lt;6.2.3.4.0.20051017144706.027745b0@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] Continuous Species Control\r\nX-Yahoo-Group-Post: member; u=127853030; y=26IaiH1SvS20CcjK6fkNxlMQA4tzbfRU7-zNgYEw_HckTM7Sobzw\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nIan Badcoe wrote:\n\n&gt;At 01:49 17/10/2005, you wrote:\n&gt;  \n&gt;\n&gt;&gt;BTW are you still evaluating with Tic-Tac-Toe players?\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Yup.  I&#39;ve not been saying anything, because I&#39;m also upgrading the \n&gt;algorithm at the same time, but I have been keeping going with a \n&gt;population, even though the algorithm operating on it is still \n&gt;regularly upgraded.  Obviously once the algorithm stabilizes I&#39;ll \n&gt;have to rerun it from the start with a constant environment.\n&gt;  \n&gt;\nIndeed. In fact you may find you get better results if you start with a \nfresh population since earlier runs may have lead the population into a \nbad region of the fitness space. Maybe. I always tend to test tweaks to \nthe core NEAT algorithm with fresh populations anyhow, it feels \nexperimentally more sound that way. After all your new algorithm may be \nappalling at initially finding good solutions but Ok once it has some \ngood individuals to work on, and you would never now.\n\n&gt;For the moment, my top player has normalised PPS(legal-nl) of 0.9219 \n&gt;(or 92.19%, which is easier to think about).  There&#39;s definitely a \n&gt;sharp decrease in rate of progress at around 90% so things are \n&gt;getting quite slow now.  That&#39;s one of the main reasons I&#39;ve \n&gt;continued to upgrade the algorithm, trying to keep the rate of progress up :)\n&gt;  \n&gt;\nI think the law of dimishing returns is a common observation in many \nNEAT experiments - certainly I&#39;ve noticed it a lot -  and probably \nevolutionary techniques as a whole. Obviously it depends on the problem \nbut all none trivial fitness functions I have tried have tended to \nachieve very good results but not perfect. Unfortunately in some cases \nthe difference between 99% and 100% is the difference between an awful \nsolution and a perfect one. I suspect most board games may be in this \ncategory, after all a human that scores 92% in your fitness scheme \nwouldn&#39;t be rated too highly by other humans. It&#39;s a much better score \nthan my players though, I know they&#39;re not directly comparable results \nbut my players still make stupid moves far more often than 7.81% of the \ntime when playing a random player.\n\n&gt;  \n&gt;\n&gt;&gt;I find that more\n&gt;&gt;simple and hence faster fitness functions are more conducive for testing\n&gt;&gt;and experimenting with when developing code. Just a thought.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;It&#39;s a good thought, but in this case I think I need to validate both \n&gt;the search method and the definition of PPS, so I&#39;m kinda stuck with \n&gt;it.  I have been considering ways of rapidly estimating the PPS, \n&gt;instead of iterating through all 627 boards, but I didn&#39;t try coding \n&gt;anything yet...\n&gt;  \n&gt;\nJust remember about optimisation being the root of all evil. I&#39;ve \nintroduced some pretty nasty bugs into code in the name of optimisation, \nlong term these optimisations are obviously beneficial as the problems \nget spotted and ironed out, but in the short term they can skew results \nif a bug breaks your search algorithm and you don&#39;t realise it. Ideally \nof course we&#39;d all be building units tests for our code, in reality this \nisn&#39;t feasible with the kind of experimental &#39;seat of your pants&#39; type \ncoding we do.\n\n&gt;&gt;Seems like good progress is being made anyway. Keep it coming!\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;How are you doing, I hope you are still on it?\n&gt;\n&gt;  \n&gt;\nI&#39;ve been working on a few non-NEAT projects lately, I&#39;m just coming \nback round to some of this stuff now. Probably I&#39;ll be working on a few \nodds and ends for a while like the compat threshold idea, but also just \nupdating the web site and thinking about which direction to go in. E.g. \nyour approach of evaluating all board states got me thinking that NEAT \nin its current guise is rarely going to be able to do well at problems \nwhere we can only evaluate a small sub-set of test cases at each \nevaluation. The fitness functions cause the population to chase very \nspecific points in the fitness space, like how kids chase a football \naround a playground, all clumped around the ball.\n\nOK so standard NEAT only complexifies, so we might hope that any aquired \nbehaviour will stick around even if the fitness function isn&#39;t \nconstantly checking for it, but I&#39;m not sure this dynamic is really that \nstrong. I suspect a very large population is required for large amounts \nof functionality to survive like this. Hence my train of thought moves \nto hebbian learning based algorithms - the idea of connection hardness \ngives us something like that. In fact we potentially end up with \nsomething not unlike biological NNs, where connections are being made \nall the time (unlike neurons) some of which strengthen and stick around, \nand some of which weaken and die off.\n\nThe way I see it connection hardening/weakening and expanding the range \nof activation functions, coupled with standard NEAT could give us \nsomething more powerful than the sum of its parts. This seems like the \nnatural direction for NEAT to evolve towards, to me anyway. For me this \nstuff takes priority over say modularisation. Get the foundations in \nbefore building up higher levels.\n\nComing back down to earth, I&#39;ll try and get round to implementing your \nTTT eval scheme in sharpneat sooner rather than later. It will be a good \npoint of reference between the two techniques. I think we really ought \nto be able to achieve a score of 1.0 on this since it&#39;s pretty much been \nreduced to a classification problem, albeit one with more than one \ncorrect response per input pattern.\n\n\nColin.\n\n\n\n\n"}}