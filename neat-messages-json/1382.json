{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115403844,"authorName":"John Arrowwood","from":"&quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;","profile":"jarrowwx","replyTo":"LIST","senderId":"Ln0M4SR4iyX8Aitw8unkzKWfIYgRi-q0Y21yo9oz1nF88e6X-jVD8fbOnwXrjA0Von4hTcx7MLaGIfTW56GWKqJ7ORmvmxLizqz4qP_t","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Avoiding shortcut optimizations?","postDate":"1092325981","msgId":1382,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTItRjI4dGRTYTIxZVBTeWcwMDAwZmMyMkBob3RtYWlsLmNvbT4="},"prevInTopic":1380,"nextInTopic":1383,"prevInTime":1381,"nextInTime":1383,"topicId":1360,"numMessagesInTopic":18,"msgSnippet":"... Yep, which is why I was looking for a way to punish it for doing that. ... The averaging is just a side-effect.  More on that below... ... That s what I m","rawEmail":"Return-Path: &lt;jarrowwx@...&gt;\r\nX-Sender: jarrowwx@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 11270 invoked from network); 12 Aug 2004 15:53:27 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 12 Aug 2004 15:53:27 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.247.28)\n  by mta2.grp.scd.yahoo.com with SMTP; 12 Aug 2004 15:53:27 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Thu, 12 Aug 2004 08:53:01 -0700\r\nReceived: from 64.122.44.102 by by2fd.bay2.hotmail.msn.com with HTTP;\n\tThu, 12 Aug 2004 15:53:01 GMT\r\nX-Originating-Email: [jarrowwx@...]\r\nX-Sender: jarrowwx@...\r\nTo: neat@yahoogroups.com\r\nBcc: \r\nDate: Thu, 12 Aug 2004 08:53:01 -0700\r\nMime-Version: 1.0\r\nContent-Type: text/plain; format=flowed\r\nMessage-ID: &lt;BAY2-F28tdSa21ePSyg0000fc22@...&gt;\r\nX-OriginalArrivalTime: 12 Aug 2004 15:53:01.0691 (UTC) FILETIME=[726B9CB0:01C48084]\r\nX-eGroups-Remote-IP: 65.54.247.28\r\nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\r\nReply-To: john@...\r\nSubject: Re: [neat] Avoiding shortcut optimizations?\r\nX-Yahoo-Group-Post: member; u=115403844\r\nX-Yahoo-Profile: jarrowwx\r\n\r\n&gt;From: Ian Badcoe &lt;ian_badcoe@...&gt;\n\n&gt; &gt;The inputs are scaled to represent the relative brightness of the input\n&gt; &gt;pixels, not their actual brightness.\n&gt; &gt;   Thus, the networ will see a\n&gt; &gt;particular shape the same if it is nearly black as it will if it is gray, \n&gt;or\n&gt; &gt;if it is nearly white, or if it has high contrast or low contrast.\n&gt;\n&gt;While this does not mean that the average value of any input image will be\n&gt;exactly zero, it must bias it towards zero.  Hence your result of the\n&gt;networks just evolving to return zero.\n\nYep, which is why I was looking for a way to punish it for doing that.\n\n&gt;If you still want to evolve an averaging network\n\nThe averaging is just a side-effect.  More on that below...\n\n&gt;Further to my previous post, however, the multiplexing part of the network\n&gt;must involve at least 100 neurones, maybe evolving that should be your\n&gt;first step?\n\nThat&#39;s what I&#39;m working on now.  Problem is, my evolution is very slow.  \nThorough, but slow.  I only allow a configurable number of topological \nvariations at any given time, and I require one variation to die out due to \nstagnation before I allow another one to come into being.  And since it is \nbiased towards adding connections, not nodes, it may take a LONG time to get \nthere.  Guess I just need to be patient.\n\nI am curious about something.  I currently have a population size of 100 so \nthat packets are returned quickly.  And in order to give each topological \nvariation adequate resources to optimize, I limit it to 5 topologies at a \ntime.  Now, I could increase the population size and topology limit.  \nPackets would be slower to return, but the search could branch out into more \ndirections at once, potentially allowing the search to be faster, sort of.  \nAnyone have any thoughts on the pro&#39;s and con&#39;s of large populations vs. \nsmall populations?  Is it 6 of one, half-dozen of the other, or are there \ndefinite advantages to one or the other?\n\n&gt;OTOH, is multiplexing actually required as part of the\n&gt;problem, or did you just introduce it as part of your experimental\n&gt;setup.  Did those other papers you mentioned use coordinate inputs?  If\n&gt;not, then I&#39;d strongly recommend some discussion of whether the experiment\n&gt;can be rephrased to avoid evolving this complex sub-network, such as fixing\n&gt;an &quot;eye&quot; size and scanning the eye over the whole image...\n\nThe other papers did NOT use multiplexing.  But they also evolved a FIXED \nscale enlargement algorithm.  My goal is to do them one better and evolve \none that can do arbitrary scale enlargements.  Yes, it IS asking a lot, but \nthat&#39;s what I want, ultimately.  And I&#39;m not sure there&#39;s much value in \ndoing one and then the other, because I&#39;m not sure it isn&#39;t a waste of \neffort to evolve a network that can do enlargement, and then try to evolve \none that does multiplexing afterwards.  I think going from multiplex to \nenlargement is probably better.  But then, I don&#39;t really know for sure...\n\n\n\n"}}