{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":235544548,"authorName":"Alexandre Devert","from":"Alexandre Devert &lt;marmakoide@...&gt;","profile":"marmakoide","replyTo":"LIST","senderId":"pQ40-82UcSO9wqZ1f9wwEFJKB2ICwzVH_pEGPhZLGjZLApPjfT0D38YGfmnKlGHpsYZbTH9Wt5r-3WZX382BNew5pU1kQe-Fo3k_9jE","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re : Re : [neat] Musings On Lessons Learned From BlindBuilder Applied To NEAT & Indirect Encoding","postDate":"1321995985","msgId":5708,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEzMjE5OTU5ODUuMjI0NzAuWWFob29NYWlsTmVvQHdlYjI5NTEzLm1haWwuaXJkLnlhaG9vLmNvbT4=","inReplyToHeader":"PGphaDAyOCsybzgwQGVHcm91cHMuY29tPg==","referencesHeader":"PDEzMjE5MTk3NTkuMTk0NTAuWWFob29NYWlsTmVvQHdlYjI5NTE1Lm1haWwuaXJkLnlhaG9vLmNvbT4gPGphaDAyOCsybzgwQGVHcm91cHMuY29tPg=="},"prevInTopic":5707,"nextInTopic":5709,"prevInTime":5707,"nextInTime":5709,"topicId":5697,"numMessagesInTopic":5,"msgSnippet":"Hi, Â  You can see a module as some sub-part of some design, which is reused. That s how engineers do, because it s the most convenient with the way us humans","rawEmail":"Return-Path: &lt;marmakoide@...&gt;\r\nX-Sender: marmakoide@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 2994 invoked from network); 22 Nov 2011 21:06:28 -0000\r\nX-Received: from unknown (98.137.35.161)\n  by m5.grp.sp2.yahoo.com with QMQP; 22 Nov 2011 21:06:28 -0000\r\nX-Received: from unknown (HELO nm11-vm0.bullet.mail.ird.yahoo.com) (77.238.189.218)\n  by mta5.grp.sp2.yahoo.com with SMTP; 22 Nov 2011 21:06:27 -0000\r\nX-Received: from [77.238.189.49] by nm11.bullet.mail.ird.yahoo.com with NNFMP; 22 Nov 2011 21:06:26 -0000\r\nX-Received: from [212.82.108.241] by tm2.bullet.mail.ird.yahoo.com with NNFMP; 22 Nov 2011 21:06:26 -0000\r\nX-Received: from [127.0.0.1] by omp1006.mail.ird.yahoo.com with NNFMP; 22 Nov 2011 21:06:25 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 991033.15371.bm@...\r\nX-Received: (qmail 22789 invoked by uid 60001); 22 Nov 2011 21:06:25 -0000\r\nX-YMail-OSG: eBuJsOQVM1mE8ZyvmHFGjAIX1dWTH5dNHSBNzgN3b7RHguD\n Ufs8oeG_S7PbUo1j5K5gbUJbdDXOmObuSOUz_9gq01bpl3wqJFhwWVCtDxWG\n FE18NXH2Fc3ODEBWRqsjARNc8fUG.yNNsO2V3oNw0mx5OZtFOCx0bFMcjYFr\n J0R50SJQMjBr5XHLEzIEVNIdQ8azAhyQOjEnKHwpGbUqzUfY0OGijE1ouTOk\n Smkoi1ruZJk4sc0d1EjX2kaWfcEyld250OVViD6jMOgB5bwOY8bCAqGQo3wi\n SoE4LD8qm4uGprFGe6a5ZOxTwTUIGeEvYz1bX8D_HyUYw5UBIVXaw46clS.x\n m9oLmuPwmjmUGNvpas3srCXAwifju7Rt8kcKmVwrskCmIEEcG.n4.velW2z2\n hJloz0saaR.tUvr_df2u7jav.6ZMeeWp.uV1XpAiHX5KgxhGelnPTbIaxT9x\n 9pLReqeKLfKoXy0ikSxJVl484WUE7Vlx.QOq_965DmZrBvjATqrn_wQd.c8w\n uCEynQ8nScs_qETVc_I2ZsKCqNStllD_spzVIQkjsk_wdX4P2eI6QmjPt2H6\n By_6OQG6lLdrTP157_IK3F4V76ElMLlbPygSLnLZ9pxWC5uVR6nCkJ9nXP4G\n kfh_gKv4D6i4BeRC2KYFEoOmrP532j7HHB9hXTSd59NVWRxAMXayU.EymFUC\n mzTasWN386PS9TIaPPkOACRHlu2hMwTh5sTLT6QzaQUoFgZT1CO9abhthucL\n g.ND9S4WrtFn.h5WDMx_uJzcaOttzRfQxWI3PmUeCeJzTOKjYNHw3vVYtCcA\n N6BCnVpsA6UPvPyWAtiTWCUk8nwkZFFJnjyejnUiErN3PuabAD581kiv8j11\n kDhTwM8pMfN3zg0oHhCCU0U1J9._3pFUhBGLwgtzL1IhgybzpoXID_J1dzp8\n nk7qleFE2MGqmMqgqRgpVJ2BSWQS7I0RzYsxFdmtqa.fRzxNrFr9feun9DPC\n _BWhajDWbUSoGxwzPIqSdtyDVQuwPSCJB_AgpOjBi8lLeKG339Rp5ldr5mXf\n 4jz5T3mDBxt88z99GnFbxmffYu_UeL127R5.FRJ.YiowwybO_YyW6bSCQRrY\n ot9807gFFt2TM_lRVb21g6RRoz.z8qLlxF30VAQybAMvAmpu9vEOD66ApedK\n YU6XnBm1rL7Ce2nib5wFJPyJwQbn00_.Ft.9r0mVRb5BurDQBpL.TG0Sg3v.\n YyhWJ77sJLSu9d8y0p1BkVpPmswq.T6M.t26qLpjGVCW_hn8i4q0GQBYY4oV\n yPEC5.iZMgfOqqY3p6Tmh8x_3fcgU\r\nX-Received: from [221.224.215.83] by web29513.mail.ird.yahoo.com via HTTP; Tue, 22 Nov 2011 21:06:25 GMT\r\nX-Mailer: YahooMailWebService/0.8.115.331698\r\nReferences: &lt;1321919759.19450.YahooMailNeo@...&gt; &lt;jah028+2o80@...&gt;\r\nMessage-ID: &lt;1321995985.22470.YahooMailNeo@...&gt;\r\nDate: Tue, 22 Nov 2011 21:06:25 +0000 (GMT)\r\nTo: &quot;neat@yahoogroups.com&quot; &lt;neat@yahoogroups.com&gt;\r\nIn-Reply-To: &lt;jah028+2o80@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;2133552103-539403500-1321995985=:22470&quot;\r\nFrom: Alexandre Devert &lt;marmakoide@...&gt;\r\nReply-To: Alexandre Devert &lt;marmakoide@...&gt;\r\nSubject: Re : Re : [neat] Musings On Lessons Learned From BlindBuilder Applied To NEAT & Indirect Encoding\r\nX-Yahoo-Group-Post: member; u=235544548; y=PV2C_tHzrmUunf-I8LjsQmoCI2bgur4XIuFHBHwqpKBHtfpOZQ\r\nX-Yahoo-Profile: marmakoide\r\n\r\n\r\n--2133552103-539403500-1321995985=:22470\r\nContent-Type: text/plain; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHi,\n\n=C2=A0 You can see a module as some sub-part of some design, which is =\r\nreused. That&#39;s how engineers do, because it&#39;s the most convenient with the =\r\nway us humans design, compute and build stuffs in general. Now look how ant=\r\ns or termites build shelters. They don&#39;t have a &quot;arch&quot; module they repeat a=\r\nd-infinitum, in order to build a shelter. There&#39;s definitely a notion of &quot;a=\r\nrch&quot;, but it&#39;s an emergent one. The &quot;arch&quot; is defined as a purely local bui=\r\nlding process, local actions (ants or termites are more likely to add mater=\r\nials at places meeting some particular criteria) controled by local informa=\r\ntions. Same goes with structures in living creatures... In purely local bui=\r\nlding processes, the &quot;repeated with modifications&quot; structures are a consequ=\r\nence, it&#39;s something subjective that we see with our 10000 years of human e=\r\nngineering experience. We tend to decompose things as parts, sub-parts and =\r\nso on, even if they are not really existing in the actual building process.=\r\n\n\n\nDefining objects as purely local building mechanism is more complex. It&#39;=\r\ns rather alien to our engineering experience. But it also makes you way mor=\r\ne resilient to noise. Put noise in the building process description, ok, th=\r\ne result is likely to be just a bit degraded. Put noise in the environment =\r\nwhere the building process takes place. Same thing, result might be just a =\r\nbit degraded or might not even change (the so-called &quot;self-repairing&quot; prope=\r\nrty).That&#39;s particulary relevent, if you use an evolutionary optimizer to o=\r\nptimize the description of a building process. It allows you to have the mu=\r\nch desired &quot;small changes of phenotype =3D&gt; small change of genotype&quot; prope=\r\nrty. In the other hand, defining things as direct assemblies of parts is fu=\r\nndamentaly brittle, thus not really a good way to describe objects, if you =\r\nwant to optimize the descrition by an evolutionary optimizer. It&#39;s dumb bui=\r\nlders and smart building plan (the ants, the cells, with noise-resilient\n p=\r\nlans) versus smart builders and dumb building plan (humans).\n\n\nFor those re=\r\nasons, I feel that most representations using explicit assemblies of parts =\r\nare doomed, *IF* you look for scalability and have little knowledge of what=\r\n is the optimal solution of your problem. Building processes working on a p=\r\nurely local fashion sounds, where the result is implicit and depends on an =\r\nenvironment, feel much more relevant to evolutionary optimization, at least=\r\n for me.That was the ontogenic gospel ^^\n\n=C2=A0\nAlex\n\n\n___________________=\r\n_____________\n De=C2=A0: afcarl2 &lt;afcarl2@...&gt;\n=C3=80=C2=A0: neat@yah=\r\noogroups.com \nEnvoy=C3=A9 le : Mercredi 23 Novembre 2011 3h18\nObjet=C2=A0: =\r\nRe: Re : [neat] Musings On Lessons Learned From BlindBuilder Applied To NEA=\r\nT & Indirect Encoding\n \n\n=C2=A0 \n\n\nHi,\nReviewed the cited sections. Seems i=\r\nndirect encodings could be viewed as a type of user-defined application-spe=\r\ncific module. Examples of module sets abound. Alphabet, Vocabulary, standar=\r\ndized bolts, data compression transfer functions... The point being, that t=\r\nhe utility of module (or concept) sets, is a reduction in generic task comp=\r\nlexity/construction plan size, etc. The comfort of the &quot;universal approxima=\r\ntor&quot; characteristic, is no more a rational for evolutionary development fro=\r\nm scratch using exclusively NN formative elements, than attempting to assem=\r\nble a car starting from the molecular level, rather than being constrained =\r\nto the utilization of standardized parts & bolts. Being constrained to a fi=\r\nxed set of modules/concepts, may not enable total global optimization, but =\r\noften times, &quot;close-enough&quot; is just that, close enough. Getting close enoug=\r\nh: optimizing based upon a fixed size set of modules/concepts, and then tai=\r\nloring w/ NN formative elements.\n If the vocabulary shows itself to be too =\r\nlimiting, add as justifiably required. But regardless of the process of how=\r\n you identify the module/concept, those modules/concepts MUST be held invio=\r\nlate within the genome, and thus not contribute to the dimensional operator=\r\n disruption. Otherwise they are no longer modules/concepts, but rather effe=\r\nctively only &quot;suggestions&quot;. And their utility is lost or diminished as a co=\r\nnsequence of their contribution to the overall dimensional operator disrupt=\r\nion. In other words, the genome needs to have the ability to be partitioned=\r\n into operator and non-operator regions. The non-operator regions correspon=\r\nding to the module/concept interior functionality, and the operator region =\r\ncorresponding to everything else within the genome. Practically speaking, t=\r\nhis requires at a minimum, nodes with uniquely addressable variable number =\r\ninputs and outputs, with the attendant infrastructure to handle same. Once =\r\nthe utility of using a\n given bolt has been justified, you don&#39;t keep evolv=\r\ning the bolt! You shoot the &quot;bolt engineer&quot;, and move on with the balance o=\r\nf the task at hand :)\n\nAndy\n\n--- In neat@yahoogroups.com, Alexandre Devert =\r\n&lt;marmakoide@...&gt; wrote:\n&gt;\n&gt; Hi,\n&gt; =C3=82=C2=A0Agree, BlindBuilder is a nice=\r\n case of &quot;compact encoding does not means good encoding&quot;, for the reasons y=\r\nou mentionned. Modules are the way to go, *BUT*... Most of time, when we sa=\r\ny modules, it&#39;s some part of the genotype which is taken and grafted somewh=\r\nere else, verbatim. This is the level 0 of modularity, it makes tons of ass=\r\numptions. Assumption that your problem is nice enough to be trivially decom=\r\nposible into subproblems solveable by subpart of genotypes. Assumption that=\r\n your problem is nice enough to pave the road for you, miraculy making the =\r\nright modules to appear in the right order. Yes, with an optimization which=\r\n is mostly a a biased random walk... I can go on long of that, but, well, l=\r\net&#39;s remove that dust on my PhD thesis and link it here (http://www.marmako=\r\nide.org/download/publications/adevert-phd-thesis.pdf), and invite you to re=\r\nad from page 21, section 1.3.3, to the end of Chapter 1, which is a good su=\r\nmmary of my views on modularity,\n with\n&gt;  of course credit for my PhD advis=\r\nors, Vishnu bless them ^^\n&gt; \n&gt; =C3=82=C2=A0\n&gt; Dr. Devert Alexandre\n&gt; Lectur=\r\ner at School Of Software Engineering of USTC\n&gt; 166 Renai Road, Dushu Lake H=\r\nigher Education Town\n&gt; Suzhou Industrial Park,\n&gt; Suzhou, Jiangsu, People Re=\r\npublic of China\n&gt; \n&gt; \n&gt; ________________________________\n&gt;  De=C3=82=C2=A0:=\r\n afcarl2 &lt;afcarl2@...&gt;\n&gt; =C3=83=E2=82=AC=C3=82=C2=A0: neat@yahoogroups.com =\r\n\n&gt; Envoy=C3=83=C2=A9 le : Mardi 22 Novembre 2011 3h18\n&gt; Objet=C3=82=C2=A0: =\r\n[neat] Musings On Lessons Learned From BlindBuilder Applied To NEAT & Indir=\r\nect Encoding\n&gt; \n&gt; \n&gt; =C3=82=C2=A0 \n&gt; Alex,\n&gt; Your prior work associated w/ =\r\nBlindBuilder I believe is informative and applicable to possible updates to=\r\n NEAT and indirect encodings in general. The growing disruptive impact of c=\r\nonstruction operators as the size of the construction plan increases, seeml=\r\ny undercuts the benefit of compact nature of the approach, and also illustr=\r\nates a fundamental strength and weakness of NEAT. NEAT, starting from minim=\r\nal size, mitigates the disruptive nature of various operators at the beginn=\r\ning allowing for more effective use of computational resources for growing =\r\nof the organism in a profitable portion of the design space. But as organis=\r\nm size increases, the growing disruptive impact of some operators, and wher=\r\ne they are applied, increasingly bog down further progress.\n&gt; In the contex=\r\nt of BlindBuilder, two examples are useful:\n&gt; 1) Bridge: The concept of a b=\r\nridge is simple and straight forward. From a construction perspective, coul=\r\nd be achieved with a single element of appropriate size and orientation. Wh=\r\nile the size of the construction plan is vastly different based upon the ch=\r\naracteristics of the formative elements, though the concept is still simple=\r\n, the disruptive impact of various operators on form, fit, function and con=\r\nvergence is also vastly different.\n&gt; 2) Wall: Also, the concept of a wall i=\r\ns simple and straight forward. And again from a construction perspective, c=\r\nould be achieved with a single element of appropriate size and orientation.=\r\n The same comments also apply regarding construction plan size and associat=\r\ned disruptive impact of construction operators.\n&gt; The point being, that the=\r\n sensitivity of the concept should not be subject to the scale of the forma=\r\ntive elements, but rather the suitability of the formulation to the objecti=\r\nves of the concept. In the construction context, this is more straight forw=\r\nard. The overall objective is composed of a relatively few well known conce=\r\npts taken together in some relative orientations WRT each other (i.e. a hou=\r\nse can be composed of four orthogonal walls and a roof). The construction o=\r\nperators should be confined to refinement of suitability of the formative e=\r\nlements and their orientations taken together WRT the individual concept, g=\r\nuided by concept specific operator selection criteria (i.e. semi-separable =\r\nmulti-subobjectives).\n&gt; Of course, in the general case, the identification =\r\nof concepts is not as straight forward. But efforts to identify reusable ge=\r\nnetic material snippets would most likely qualify as identification of conc=\r\nepts, and would thus likely benefit from: a) partitioning of the genome for=\r\n application of operators, and b) application of concept specific operator =\r\nselection WRT concept suitability for the current overall objective.\n&gt; \n&gt; A=\r\nndy\n&gt;\n\n\n \r\n--2133552103-539403500-1321995985=:22470\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;body&gt;&lt;div style=3D&quot;color:#000; background-color:#fff; font-family:ti=\r\nmes new roman, new york, times, serif;font-size:12pt&quot;&gt;&lt;div&gt;&lt;span&gt;Hi,&lt;/span&gt;=\r\n&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&nbsp; You can see a module as=\r\n some sub-part of some design, which is reused. That&#39;s how engineers do, be=\r\ncause it&#39;s the most convenient with the way us humans design, compute and b=\r\nuild stuffs in general. Now look how ants or termites build shelters. They =\r\ndon&#39;t have a &quot;arch&quot; module they repeat ad-infinitum, in order to build a sh=\r\nelter. There&#39;s definitely a notion of &quot;arch&quot;, but it&#39;s an emergent one. The=\r\n &quot;arch&quot; is defined as a purely local building process, local actions (ants =\r\nor termites are more likely to add materials at places meeting some particu=\r\nlar criteria) controled by local informations. Same goes with structures in=\r\n living creatures... In purely local building processes, the &quot;repeated with=\r\n modifications&quot; structures are a consequence, it&#39;s something\n subjective th=\r\nat we see with our 10000 years of human engineering experience. We tend to =\r\ndecompose things as parts, sub-parts and so on, even if they are not really=\r\n existing in the actual building process.&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/=\r\nspan&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;Defining objects as purely local building mechanism i=\r\ns more complex. It&#39;s rather alien to our engineering experience. But it als=\r\no makes you way more resilient to noise. Put noise in the building process =\r\ndescription, ok, the result is likely to be just a bit degraded. Put noise =\r\nin the environment where the building process takes place. Same thing, resu=\r\nlt might be just a bit degraded or might not even change (the so-called &quot;se=\r\nlf-repairing&quot; property).That&#39;s particulary relevent, if you use an evolutio=\r\nnary optimizer to optimize the description of a building process. It allows=\r\n you to have the much desired &quot;small changes of phenotype =3D&gt; small cha=\r\nnge of genotype&quot; property. In the other hand, defining\n things as direct as=\r\nsemblies of parts is fundamentaly brittle, thus not really a good way to de=\r\nscribe objects, if you want to optimize the descrition by an evolutionary o=\r\nptimizer. It&#39;s dumb builders and smart building plan (the ants, the cells, =\r\nwith noise-resilient plans) versus smart builders and dumb building plan (h=\r\numans).&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;For those re=\r\nasons, I feel that most representations using explicit assemblies of parts =\r\nare doomed, *IF* you look for scalability and have little knowledge of what=\r\n is the optimal solution of your problem. Building processes working on a p=\r\nurely local fashion sounds, where the result is implicit and depends on an =\r\nenvironment, feel much more relevant to evolutionary optimization, at least=\r\n for me.That was the ontogenic gospel ^^&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&nbsp;&lt;/div&gt;&lt;div&gt;=\r\nAlex&lt;br&gt;&lt;/div&gt;  &lt;div style=3D&quot;font-family: times new roman, new york, times=\r\n, serif; font-size: 12pt;&quot;&gt; &lt;div\n style=3D&quot;font-family: times new roman, ne=\r\nw york, times, serif; font-size: 12pt;&quot;&gt; &lt;font face=3D&quot;Arial&quot; size=3D&quot;2&quot;&gt; &lt;=\r\nhr size=3D&quot;1&quot;&gt;  &lt;b&gt;&lt;span style=3D&quot;font-weight:bold;&quot;&gt;De&nbsp;:&lt;/span&gt;&lt;/b&gt; a=\r\nfcarl2 &lt;afcarl2@...&gt;&lt;br&gt; &lt;b&gt;&lt;span style=3D&quot;font-weight: bold;&quot;&gt;=\r\n=C3=80&nbsp;:&lt;/span&gt;&lt;/b&gt; neat@yahoogroups.com &lt;br&gt; &lt;b&gt;&lt;span style=3D&quot;font-w=\r\neight: bold;&quot;&gt;Envoy=C3=A9 le :&lt;/span&gt;&lt;/b&gt; Mercredi 23 Novembre 2011 3h18&lt;br=\r\n&gt; &lt;b&gt;&lt;span style=3D&quot;font-weight: bold;&quot;&gt;Objet&nbsp;:&lt;/span&gt;&lt;/b&gt; Re: Re : [n=\r\neat] Musings On Lessons Learned From BlindBuilder Applied To NEAT &amp; Ind=\r\nirect Encoding&lt;br&gt; &lt;/font&gt; &lt;br&gt;&lt;div id=3D&quot;yiv1999299320&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;div=\r\n&gt;\n&lt;span style=3D&quot;display:none;&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n\n    &lt;div id=3D&quot;yiv19992993=\r\n20ygrp-text&quot;&gt;\n      \n      \n      &lt;div&gt;&lt;br&gt;\n&lt;br&gt;\nHi,&lt;br&gt;\nReviewed the cited=\r\n sections. Seems indirect encodings could be viewed as a type of user-defin=\r\ned application-specific module. Examples of module sets abound. Alphabet, V=\r\nocabulary, standardized bolts, data compression transfer functions... The p=\r\noint being, that the utility of module (or concept) sets, is a reduction in=\r\n generic task complexity/construction plan size, etc. The comfort of the &quot;u=\r\nniversal approximator&quot; characteristic, is no more a rational for evolutiona=\r\nry development from scratch using exclusively NN formative elements, than a=\r\nttempting to assemble a car starting from the molecular level, rather than =\r\nbeing constrained to the utilization of standardized parts &amp; bolts. Bei=\r\nng constrained to a fixed set of modules/concepts, may not enable total glo=\r\nbal optimization, but often times, &quot;close-enough&quot; is just that, close enoug=\r\nh. Getting close enough: optimizing based upon a fixed size set of modules/=\r\nconcepts, and then tailoring w/ NN formative\n elements. If the vocabulary s=\r\nhows itself to be too limiting, add as justifiably required. But regardless=\r\n of the process of how you identify the module/concept, those modules/conce=\r\npts MUST be held inviolate within the genome, and thus not contribute to th=\r\ne dimensional operator disruption. Otherwise they are no longer modules/con=\r\ncepts, but rather effectively only &quot;suggestions&quot;. And their utility is lost=\r\n or diminished as a consequence of their contribution to the overall dimens=\r\nional operator disruption. In other words, the genome needs to have the abi=\r\nlity to be partitioned into operator and non-operator regions. The non-oper=\r\nator regions corresponding to the module/concept interior functionality, an=\r\nd the operator region corresponding to everything else within the genome. P=\r\nractically speaking, this requires at a minimum, nodes with uniquely addres=\r\nsable variable number inputs and outputs, with the attendant infrastructure=\r\n to handle same. Once the utility of\n using a given bolt has been justified=\r\n, you don&#39;t keep evolving the bolt! You shoot the &quot;bolt engineer&quot;, and move=\r\n on with the balance of the task at hand :)&lt;br&gt;\n&lt;br&gt;\nAndy&lt;br&gt;\n&lt;br&gt;\n--- In &lt;=\r\na rel=3D&quot;nofollow&quot; ymailto=3D&quot;mailto:neat%40yahoogroups.com&quot; target=3D&quot;_bla=\r\nnk&quot; href=3D&quot;mailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.com&lt;/a&gt;, Alexan=\r\ndre Devert &lt;marmakoide@...&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Hi,&lt;br&gt;\n&gt; =C3=\r\n=82&nbsp;Agree, BlindBuilder is a nice case of &quot;compact encoding does not m=\r\neans good encoding&quot;, for the reasons you mentionned. Modules are the way to=\r\n go, *BUT*... Most of time, when we say modules, it&#39;s some part of the geno=\r\ntype which is taken and grafted somewhere else, verbatim. This is the level=\r\n 0 of modularity, it makes tons of assumptions. Assumption that your proble=\r\nm is nice enough to be trivially decomposible into subproblems solveable by=\r\n subpart of genotypes. Assumption that your problem is nice enough to pave =\r\nthe road for you, miraculy making the right modules to appear in the right =\r\norder. Yes, with an optimization which is mostly a a biased random walk... =\r\nI can go on long of that, but, well, let&#39;s remove that dust on my PhD thesi=\r\ns and link it here (&lt;a rel=3D&quot;nofollow&quot; target=3D&quot;_blank&quot; href=3D&quot;http://ww=\r\nw.marmakoide.org/download/publications/adevert-phd-thesis.pdf&quot;&gt;http://www.m=\r\narmakoide.org/download/publications/adevert-phd-thesis.pdf&lt;/a&gt;), and\n invit=\r\ne you to read from page 21, section 1.3.3, to the end of Chapter 1, which i=\r\ns a good summary of my views on modularity, with&lt;br&gt;\n&gt;  of course credit=\r\n for my PhD advisors, Vishnu bless them ^^&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; =C3=82&nbsp;&lt;=\r\nbr&gt;\n&gt; Dr. Devert Alexandre&lt;br&gt;\n&gt; Lecturer at School Of Software Engin=\r\neering of USTC&lt;br&gt;\n&gt; 166 Renai Road, Dushu Lake Higher Education Town&lt;br=\r\n&gt;\n&gt; Suzhou Industrial Park,&lt;br&gt;\n&gt; Suzhou, Jiangsu, People Republic of=\r\n China&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; ________________________________&lt;br&gt;\n&g=\r\nt;  De=C3=82&nbsp;: afcarl2 &lt;afcarl2@...&gt;&lt;br&gt;\n&gt; =C3=83=E2=82=AC=C3=\r\n=82&nbsp;: &lt;a rel=3D&quot;nofollow&quot; ymailto=3D&quot;mailto:neat%40yahoogroups.com&quot; ta=\r\nrget=3D&quot;_blank&quot; href=3D&quot;mailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.com=\r\n&lt;/a&gt; &lt;br&gt;\n&gt; Envoy=C3=83=C2=A9 le : Mardi 22 Novembre 2011 3h18&lt;br&gt;\n&gt; =\r\nObjet=C3=82&nbsp;: [neat] Musings On Lessons Learned From BlindBuilder Appl=\r\nied To NEAT &amp; Indirect Encoding&lt;br&gt;\n&gt;  &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; =C3=82&nb=\r\nsp; &lt;br&gt;\n&gt; Alex,&lt;br&gt;\n&gt; Your prior work associated w/ BlindBuilder I b=\r\nelieve is informative and applicable to possible updates to NEAT and indire=\r\nct encodings in general. The growing disruptive impact of construction oper=\r\nators as the size of the construction plan increases, seemly undercuts the =\r\nbenefit of compact nature of the approach, and also illustrates a fundament=\r\nal strength and weakness of NEAT. NEAT, starting from minimal size, mitigat=\r\nes the disruptive nature of various operators at the beginning allowing for=\r\n more effective use of computational resources for growing of the organism =\r\nin a profitable portion of the design space. But as organism size increases=\r\n, the growing disruptive impact of some operators, and where they are appli=\r\ned, increasingly bog down further progress.&lt;br&gt;\n&gt; In the context of Blin=\r\ndBuilder, two examples are useful:&lt;br&gt;\n&gt; 1) Bridge: The concept of a bri=\r\ndge is simple and straight forward. From a construction perspective, could =\r\nbe achieved with a single element of appropriate size and orientation. Whil=\r\ne the size of the construction plan is vastly different based upon the char=\r\nacteristics of the formative elements, though the concept is still simple, =\r\nthe disruptive impact of various operators on form, fit, function and conve=\r\nrgence is also vastly different.&lt;br&gt;\n&gt; 2) Wall: Also, the concept of a w=\r\nall is simple and straight forward. And again from a construction perspecti=\r\nve, could be achieved with a single element of appropriate size and orienta=\r\ntion. The same comments also apply regarding construction plan size and ass=\r\nociated disruptive impact of construction operators.&lt;br&gt;\n&gt; The point bei=\r\nng, that the sensitivity of the concept should not be subject to the scale =\r\nof the formative elements, but rather the suitability of the formulation to=\r\n the objectives of the concept. In the construction context, this is more s=\r\ntraight forward. The overall objective is composed of a relatively few well=\r\n known concepts taken together in some relative orientations WRT each other=\r\n (i.e. a house can be composed of four orthogonal walls and a roof). The co=\r\nnstruction operators should be confined to refinement of suitability of the=\r\n formative elements and their orientations taken together WRT the individua=\r\nl concept, guided by concept specific operator selection criteria (i.e. sem=\r\ni-separable multi-subobjectives).&lt;br&gt;\n&gt; Of course, in the general case, =\r\nthe identification of concepts is not as straight forward. But efforts to i=\r\ndentify reusable genetic material snippets would most likely qualify as ide=\r\nntification of concepts, and would thus likely benefit from: a) partitionin=\r\ng of the genome for application of operators, and b) application of concept=\r\n specific operator selection WRT concept suitability for the current overal=\r\nl objective.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Andy&lt;br&gt;\n&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;/div&gt;\n\n    &lt;/div&gt;\n =\r\n    \n\n\n\n&lt;/div&gt;\n\n\n\n\n\n&lt;/div&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;/div&gt;  &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\r\n--2133552103-539403500-1321995985=:22470--\r\n\n"}}