{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":151231063,"authorName":"Joseph Reisinger","from":"Joseph Reisinger &lt;joeraii@...&gt;","profile":"joeraii","replyTo":"LIST","senderId":"srDvvt7PtySw488-FgcPXN1Uc2opqRWlaSr-0sFFMniMjFzYxAy3P3728hZ51Fg8r9o0PDX_Hs1bFFE_7aKysVVC4EGKGfeuq4WZoNW5Ug","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: General Game Playing","postDate":"1146025882","msgId":2634,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEI1NzQ4RjE5LTdFNzYtNDAyRC05MDE3LTI2ODZBQURDNTY3NEBjcy51dGV4YXMuZWR1Pg==","inReplyToHeader":"PDIwMDYwNDIxMTIwOTI2LjI4NjY4LnFtYWlsQHdlYjI1MTA1Lm1haWwudWtsLnlhaG9vLmNvbT4=","referencesHeader":"PDIwMDYwNDIxMTIwOTI2LjI4NjY4LnFtYWlsQHdlYjI1MTA1Lm1haWwudWtsLnlhaG9vLmNvbT4="},"prevInTopic":2633,"nextInTopic":0,"prevInTime":2633,"nextInTime":2635,"topicId":2624,"numMessagesInTopic":11,"msgSnippet":"... Yeah, we re using the NN to do state scoring, particularly for pruning the minimax tree. ... You ve hit upon the weakness, so to speak, that learning","rawEmail":"Return-Path: &lt;joeraii@...&gt;\r\nX-Sender: joeraii@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 34311 invoked from network); 26 Apr 2006 04:31:55 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m27.grp.scd.yahoo.com with QMQP; 26 Apr 2006 04:31:55 -0000\r\nReceived: from unknown (HELO mail.cs.utexas.edu) (128.83.139.10)\n  by mta1.grp.scd.yahoo.com with SMTP; 26 Apr 2006 04:31:55 -0000\r\nReceived: from [10.0.0.109] (cpe-70-112-178-139.austin.res.rr.com [70.112.178.139])\n\t(authenticated bits=0)\n\tby mail.cs.utexas.edu (8.13.6/8.13.6) with ESMTP id k3Q4VT59021032\n\tfor &lt;neat@yahoogroups.com&gt;; Tue, 25 Apr 2006 23:31:30 -0500 (CDT)\r\nMime-Version: 1.0 (Apple Message framework v749.3)\r\nIn-Reply-To: &lt;20060421120926.28668.qmail@...&gt;\r\nReferences: &lt;20060421120926.28668.qmail@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;B5748F19-7E76-402D-9017-2686AADC5674@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Tue, 25 Apr 2006 23:31:22 -0500\r\nTo: neat@yahoogroups.com\r\nX-Mailer: Apple Mail (2.749.3)\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Joseph Reisinger &lt;joeraii@...&gt;\r\nSubject: Re: [neat] Re: General Game Playing\r\nX-Yahoo-Group-Post: member; u=151231063; y=ct5M6Qb_rvKlvouTy4nb7Ys5crk1w1kSPDnznV2IWfYWMw\r\nX-Yahoo-Profile: joeraii\r\n\r\n&gt;&gt;\n&gt;&gt;&gt; Sounds like this can be interesting but I&#39;m also\n&gt;&gt; wondering a few\n&gt;&gt;&gt; details.  So let&#39;s say you get a spec, what\n&gt;&gt; exactly do you do next?\n&gt;&gt;\n&gt;&gt; We parse the spec and turn it into basically a state\n&gt;&gt; machine that we can\n&gt;&gt; feed inputs (player moves) to and read outputs (new\n&gt;&gt; game state) from. Also\n&gt;&gt; we set up helper functions that can be used to\n&gt;&gt; generate all valid moves\n&gt;&gt; from a certain game state.\n&gt;\n&gt; This is a detail of your own approach right?  E.g. it\n&gt; is nothing a completely general neural net play would\n&gt; need.  Or is the whole thing hard-wired as a minimax\n&gt; approach where you only get to evolve the\n&gt; state-scoring function?\n\nYeah, we&#39;re using the NN to do state scoring, particularly for  \npruning the minimax tree.\n\n&gt; So the question there is, if you are only being\n&gt; presented with the game definition on the day of the\n&gt; match, when do you find three weeks to do the\n&gt; evolving.  (and conversly, if you are told the game\n&gt; three weeks in advance, what stops you tweaking the\n&gt; system to play it better).\n\nYou&#39;ve hit upon the weakness, so to speak, that learning methods have  \nin this competition. We don&#39;t have  three weeks to evolve, we only  \nhave at most an hour or so before we have to make one move (but then,  \nanother hour for each additional move, and if the game is  \nmultiplayer, maybe longer). So we need to be fast. We have some  \ntricks up our sleeve to accomplish this, but no groundbreaking new  \noptimizations of GA search.\n\n\n&gt; Can you evolve a library of useful &quot;modules&quot; which if\n&gt; available will speed the evolution of a player for any\n&gt; game?\n&gt;\n\nYeah, certainly this is feasible. Using GGP as a testbed we&#39;d like to  \nstart doing research in this area. Hopefully after the competition  \nwe&#39;ll do a release of our code and then anyone who is interested  \ncould take a crack at it.\n&gt;\n&gt; So, just for clarity, the communication with your\n&gt; system is a specification of an entire game, geometry,\n&gt; rules, pieces...  And not just the IO connections for\n&gt; a black-box game that will be simulated somewhere\n&gt; else?  (Which is what I always imagine for these\n&gt; things.)\n\nRight, so we get an even clearer picture of how the game works, if we  \nwant to spend more time picking the logic apart. I think most  \napproaches will be along those lines. Instead, we&#39;re just going to  \nthrow the game at NEAT as a black box. We&#39;ll probably end up being a  \nlittle more clever with the state representation though, exploiting  \nknowledge about the game that we can glean.\n\n&gt; You implement that game (presumably using some sort of\n&gt; pretty standard engine, to be sure that your version\n&gt; is 100% identical to the intended form).\n\nRight, basically we just write an interpreter for the GGP language  \nand run the game as code.\n\n&gt; You then presumably can take a second reading of the\n&gt; specification to get the definition of the IO; and you\n&gt; use the IO to configure your evolution system.\n\nRight. We&#39;re able to pick out the relevant information from the game  \ncode and use that directly to specify our input layer topology.\n\n&gt; You then can play squillions of games off-line in your\n&gt; own system to generate good players.\n&gt;\n&gt; Your best player then plays in the real competition,\n&gt; probably via a some sort of network connection...?\n\nRight, except in the real competition we may well end up playing  \ngames we&#39;ve never seen before, so we will probably have to evolve  \nfrom scratch. Also, during the competition, the games will be  \nobfuscated, so we probably can&#39;t bank on using previously evolved  \nstrategies.\n\n-- Joe\n\n"}}