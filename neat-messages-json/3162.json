{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":292213213,"authorName":"shanemcdonaldryan","from":"&quot;shanemcdonaldryan&quot; &lt;shanemcdonaldryan@...&gt;","profile":"shanemcdonaldryan","replyTo":"LIST","senderId":"DEGpEXMw6NTE7JJ2hzWMBTrRwSQJbL33jhZUO5Rm2lEZn6OK8w-rFNM6diWZHYxg2_-ya6QSqUwO2zov2eGPxWLzPoMLTvZJ3_DIeYgWTcP4E38Vzm5tOA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Computation Time","postDate":"1176749707","msgId":3162,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYwMGdxYittcGVkQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGM5bnI1aSs5YjE0QGVHcm91cHMuY29tPg=="},"prevInTopic":1171,"nextInTopic":3163,"prevInTime":3161,"nextInTime":3163,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"Just made my own sigmoid approximator. It appears to be about 6 times as fast on my system (ran it for 10 million values), very low error (did an error","rawEmail":"Return-Path: &lt;shanemcdonaldryan@...&gt;\r\nX-Sender: shanemcdonaldryan@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 59876 invoked from network); 16 Apr 2007 18:55:11 -0000\r\nReceived: from unknown (66.218.67.35)\n  by m47.grp.scd.yahoo.com with QMQP; 16 Apr 2007 18:55:11 -0000\r\nReceived: from unknown (HELO n19.bullet.sp1.yahoo.com) (69.147.64.216)\n  by mta9.grp.scd.yahoo.com with SMTP; 16 Apr 2007 18:55:11 -0000\r\nReceived: from [216.252.122.216] by n19.bullet.sp1.yahoo.com with NNFMP; 16 Apr 2007 18:55:07 -0000\r\nReceived: from [66.218.69.4] by t1.bullet.sp1.yahoo.com with NNFMP; 16 Apr 2007 18:55:07 -0000\r\nReceived: from [66.218.66.85] by t4.bullet.scd.yahoo.com with NNFMP; 16 Apr 2007 18:55:07 -0000\r\nDate: Mon, 16 Apr 2007 18:55:07 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;f00gqb+mped@...&gt;\r\nIn-Reply-To: &lt;c9nr5i+9b14@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;shanemcdonaldryan&quot; &lt;shanemcdonaldryan@...&gt;\r\nSubject: Re: Computation Time\r\nX-Yahoo-Group-Post: member; u=292213213; y=qpsYnYsuonYnl-a8Ev1ERCW18Pb6YV1SU-GylYzVsUWsnam6vdlFgpSemz0\r\nX-Yahoo-Profile: shanemcdonaldryan\r\n\r\nJust made my own sigmoid approximator. It appears to be about 6 times \nas f=\r\nast on my system (ran it for 10 million values), very low error \n(did an er=\r\nror analysis to compare it against the standard sigmoid), \nand \nproduces so=\r\nlutions with almost the same accuracy for a given number \nof generations. I=\r\n approximated the upper half of the sigmoid (the \npositive values). Using a=\r\n polynomial of degree 5 which I solved using \nleast squares approximation v=\r\nia Matlab. The negative values are \nsimply 1 - polynomial(abs(X)). \n\nMy C++=\r\n code is below. If anyone has any feedback I&#39;d love to hear it. \nOtherwise =\r\nhopefully someone gets some use from this.\n\nCheers,\n\nShane\n\nconst float Sig=\r\nmoidLeastSquares5(const float aNetinput, const float \naResponse)\n{\n\n\tconst =\r\nfloat c0 =3D\t0.4952f;\n\tconst float c1 =3D\t0.3050f;\n\tconst float c2 =3D\t-0.0=\r\n719f;\n\tconst float c3 =3D\t0.0082f;\n\tconst float c4 =3D\t-4.4987e-004f;\n\tcons=\r\nt float c5 =3D\t9.4767e-006f;\n\n\tconst float tUpperAndLowerLimit =3D 8.075058=\r\n93707;\n\t\n\tfloat x =3D aNetinput / aResponse;\n\t\n\tif( x &gt; tUpperAndLowerLimit=\r\n)\n\t\treturn 1;\n\n\tif(x &lt; -tUpperAndLowerLimit)\n\t\treturn 0;\n\n\tbool tLessThanZe=\r\nro =3D false;\n\tif(x &lt; 0)\n\t{\n\t\tx *=3D -1;\n\t\ttLessThanZero =3D true;\n\t}\n\n\tcon=\r\nst float tOutput =3D c0 + c1*x + c2*(x*x) + c3*(x*x*x) + c4*\n(x*x*x*x) + c5=\r\n*(x*x*x*x*x);\n\tif(!tLessThanZero)\n\t\treturn tOutput;\n\telse\n\t\treturn 1 - tOut=\r\nput;\n}\n\n\n\n\n--- In neat@yahoogroups.com, &quot;zenguyuno&quot; &lt;zenguyuno@...&gt; wrote:\n=\r\n&gt;\n&gt; --- In neat@yahoogroups.com, Ian Badcoe &lt;ian_badcoe@y...&gt; wrote:\n&gt; &lt;sni=\r\np&gt;\n&gt; &gt; real killers.  So, if I were doing this, I would try to code an \n&gt; a=\r\nctivation \n&gt; &gt; function using:\n&gt; &gt; \n&gt; &gt; i) float maths\n&gt; &gt; ii) no loops\n&gt; &gt;=\r\n iii) minimal terms\n&gt; &gt; iv) no transcendental functions\n&gt; &gt; v) _one_ divide=\r\n (on the basis that you won&#39;t manage none)\n&gt; &gt; \n&gt; &gt;          But I would wa=\r\nnt to see profiling results to prove this \n&gt; was a \n&gt; &gt; significant CPU hot=\r\n spot before putting too much work into it.  \n&gt; \n&gt; Unless it&#39;s already been=\r\n done!  Here is a ready-to-use sigmoid \n&gt; approximator in C, taken from the=\r\n file neursubs.c of the EvSail \n&gt; package:\n&gt; \n&gt; /* This 4 piece curve is a =\r\ngood sigmoid approximator. */\n&gt; float sigAprox(register float x)  {\n&gt;     r=\r\negister float z;             \n&gt;     \n&gt;     if(x &lt;=3D -4.0)\n&gt; \treturn 0.0;\n&gt;=\r\n     else if(x &lt;=3D 0.0) {\n&gt;         z =3D x + 4.0;\n&gt;         return z*z/32=\r\n;\n&gt;     } \n&gt;     else if(x &lt; 4.0)  {\n&gt;         z =3D x - 4.0;\n&gt;         ret=\r\nurn 1.0 - z*z/32;   \n&gt;     }    \n&gt;     else\n&gt; \treturn 1.0;\n&gt; }    \n&gt; \n&gt; \n&gt; =\r\n&lt;snip&gt;\n&gt;\n\n\n\n"}}