{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":82117382,"authorName":"Jim O&#39;Flaherty, Jr.","from":"&quot;Jim O&#39;Flaherty, Jr.&quot; &lt;jim_oflaherty_jr@...&gt;","profile":"jim_oflaherty_jr","replyTo":"LIST","senderId":"UTFiJazlWEffCTvgmsY4eck81N5o1jPu2r0DigcSh8079rE65enkioUO6nGNrfw8KNi7YC5jKCTI4vzhD7wZCSG6m_CoP55PCThKjmw2R9_qyrOzApiqSxA","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: Introduction---recurrency question","postDate":"1124915823","msgId":2215,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDUwODI0MjAzNzA0LjIxOTM0LnFtYWlsQHdlYjUyODExLm1haWwueWFob28uY29tPg==","inReplyToHeader":"PDUxN2ZhNmYxMDUwODI0MTMxNjRlMzI3OTlmQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":2214,"nextInTopic":2218,"prevInTime":2214,"nextInTime":2216,"topicId":2209,"numMessagesInTopic":42,"msgSnippet":"For an Open Source *Java* version of an ANN using roughly the same method that John is talking about, go here: http://sourceforge.net/projects/semiann Jim","rawEmail":"Return-Path: &lt;jim_oflaherty_jr@...&gt;\r\nX-Sender: jim_oflaherty_jr@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 96667 invoked from network); 24 Aug 2005 20:37:08 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m31.grp.scd.yahoo.com with QMQP; 24 Aug 2005 20:37:08 -0000\r\nReceived: from unknown (HELO web52811.mail.yahoo.com) (206.190.48.254)\n  by mta2.grp.scd.yahoo.com with SMTP; 24 Aug 2005 20:37:08 -0000\r\nReceived: (qmail 21936 invoked by uid 60001); 24 Aug 2005 20:37:04 -0000\r\nMessage-ID: &lt;20050824203704.21934.qmail@...&gt;\r\nReceived: from [205.158.160.209] by web52811.mail.yahoo.com via HTTP; Wed, 24 Aug 2005 13:37:03 PDT\r\nDate: Wed, 24 Aug 2005 13:37:03 -0700 (PDT)\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;517fa6f105082413164e32799f@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;Jim O&#39;Flaherty, Jr.&quot; &lt;jim_oflaherty_jr@...&gt;\r\nSubject: Re: [neat] Re: Introduction---recurrency question\r\nX-Yahoo-Group-Post: member; u=82117382; y=XdCKrK2uLQjzo_3Kl3DVwneYAMMbE3fk4w_LHy_m19qJ9oFgPlHuAddLag\r\nX-Yahoo-Profile: jim_oflaherty_jr\r\n\r\nFor an Open Source *Java* version of an ANN using roughly the same method that John is talking\nabout, go here:\nhttp://sourceforge.net/projects/semiann\n\n\nJim O&#39;Flaherty\n\n\n--- John Arrowwood &lt;jarrowwx@...&gt; wrote:\n\n&gt; I wanted to throw out the other alternative that I myself implemented.  \n&gt; \n&gt; Based on what Ken described, a 5 layer network will require being\n&gt; activated in 5 discreet time steps.  But if there is no recurrency,\n&gt; then it should be possible to activate it in ONE time step by just\n&gt; activating each of the nodes in the proper order.  That&#39;s what I did. \n&gt; For a given topology, I do a dependency analysis.  From that, I figure\n&gt; out what the proper order should be in order to activate individual\n&gt; nodes.  If I activate the nodes in that order, then the inputs will\n&gt; reach the outputs in a single activation of the network.  This, in\n&gt; turn, reduces the number of calculations required for an activation.\n&gt; \n&gt; For recurrent networks, you can do it in much the same way.  However,\n&gt; if node A has an input coming from node B, but node B hasn&#39;t been\n&gt; calculated, you use an assumed output of 0 for node B.  On the next\n&gt; activation of the network, node B *has* been calculated.  Let&#39;s say\n&gt; it&#39;s output was X.  So A will use X as the value of the input from B.\n&gt; \n&gt; Mind you, if you use this technique, you will save a great deal on CPU\n&gt; resources, since you don&#39;t have to do nearly as many calculations. \n&gt; However, you can&#39;t (necessarily) mix the paradigms.  You can&#39;t develop\n&gt; a topology using Ken&#39;s activation technique and expect it to perform\n&gt; identically using mine, and vice versa.  It might, but it might not! \n&gt; So whatever you decide on, stick with it.\n&gt; \n&gt; Realistically, how you do it isn&#39;t that important.  The network will\n&gt; learn (or evolve) to solve the problem using whatever method you\n&gt; decide upon.  The only advantage of one method over another is in how\n&gt; much computational resources are required either during testing or in\n&gt; final implementation.  My NEAT was written in Perl, which is an\n&gt; interpreted language, and so could benefit from as much accelleration\n&gt; as I could find.  That&#39;s why I opted for the less computationally\n&gt; intensive activation method.  If you don&#39;t care about CPU resources\n&gt; during the firing of the network, then go with whatever is easiest for\n&gt; you to code.  :)\n&gt; \n&gt; -- John\n&gt; \n&gt; On 8/24/05, Kenneth Stanley &lt;kstanley@...&gt; wrote:\n&gt; &gt; Kevin,\n&gt; &gt; \n&gt; &gt; Let me add to Charles comments a bit...although Charles does a good\n&gt; &gt; job giving some background, I believe there are some things Charles\n&gt; &gt; didn&#39;t mention you should be aware of.\n&gt; &gt; \n&gt; &gt; First, see the question, &quot;How are networks with arbitrary topologies\n&gt; &gt; activated?&quot; in the NEAT FAQ located at:\n&gt; &gt; \n&gt; &gt; http://www.cs.utexas.edu/users/kstanley/neat.html\n&gt; &gt; \n&gt; &gt; That question gives some background on your own question.\n&gt; &gt; \n&gt; &gt; The short answer is that every node is activated on every timestep\n&gt; &gt; from ALL incoming connections.  Any node that has not yet received\n&gt; &gt; input it assumed to be outputting a zero.  In other words, time\n&gt; &gt; delay does not enter into it at all (I have never actually used the\n&gt; &gt; time-delay code).  Also, activation does not travel all the way from\n&gt; &gt; inputs to outputs in a single timestep unless there is a direct\n&gt; &gt; connection from inputs to outputs.  But activation traveling over\n&gt; &gt; intervening nodes will take extra time to get there.\n&gt; &gt; \n&gt; &gt; So what happens is that a node that connects to itself receives the\n&gt; &gt; activation that itself output on the *previous* timestep.  Networks\n&gt; &gt; are activated over a series of timesteps.\n&gt; &gt; \n&gt; &gt; It is important to note that you should *not* be relaxing a network\n&gt; &gt; during a control task like food gathering.  Charles mentions\n&gt; &gt; relaxation but that is only appropriate for classification tasks\n&gt; &gt; where the network is trying to decide on a final answer.  See the\n&gt; &gt; question, &quot;How do I ensure that a network stabilizes before taking\n&gt; &gt; its output(s) for a classification problem?&quot; in the NEAT FAQ for\n&gt; &gt; more info on this.\n&gt; &gt; \n&gt; &gt; In a continual control task like food gathering (or most tasks NEAT\n&gt; &gt; is used for) there is always new input coming in and new output\n&gt; &gt; coming out, so the network will never relax, since there is\n&gt; &gt; no &quot;final&quot; answer.  The only question that comes up is how many\n&gt; &gt; times (steps) to activate the network per world tick.  Almost any\n&gt; &gt; experiment I&#39;ve heard of activates once per tick, but it is possible\n&gt; &gt; to imagine activating &gt;1 time per tick, which is equivalent to\n&gt; &gt; speeding up the rate of thought.   However, note that more\n&gt; &gt; activations also means more CPU time per world tick.\n&gt; &gt; \n&gt; &gt; I hope this help; feel free to ask any other questions.\n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; --- In neat@yahoogroups.com, Charles Tarun &lt;ctarun@g...&gt; wrote:\n&gt; &gt; &gt; Hello Maitrikaruna,\n&gt; &gt; &gt; I would like to offer any help I can, and I&#39;m sure others will\n&gt; &gt; also help,\n&gt; &gt; &gt;\n&gt; &gt; &gt; I also don&#39;t have any training on NN either, but I&#39;ve been read a\n&gt; &gt; lot about\n&gt; &gt; &gt; them. Each implementation of NEAT handles the firing of the node\n&gt; &gt; in their\n&gt; &gt; &gt; own way, as NEAT doesn&#39;t define it exactly. My method of choice is\n&gt; &gt; one of\n&gt; &gt; &gt; the SharpNEAT ones, &quot;FastConcurrentNetwork&quot;. This network\n&gt; &gt; simulates each\n&gt; &gt; &gt; neuron activating concurrently.\n&gt; &gt; &gt;\n&gt; &gt; &gt; 1) Assign the values to all input nodes\n&gt; &gt; &gt; 2) Activate the network\n&gt; &gt; &gt; 3) Relax the network\n&gt; &gt; &gt; 4) Read the outputs\n&gt; &gt; &gt;\n&gt; &gt; &gt; Activate network is pass a parameter of how many times to run for,\n&gt; &gt; this is\n&gt; &gt; &gt; basically how many steps to run for. Each step uses the signal\n&gt; &gt; strength from\n&gt; &gt; &gt; the previous.\n&gt; &gt; &gt;\n&gt; &gt; &gt; The Relax network function is very much like the Activate\n&gt; &gt; function, but also\n&gt; &gt; &gt; take in a maxAllowedSignalDelta. It runs until the signal change\n&gt; &gt; for each\n&gt; &gt; &gt; node is &lt;maxAllowedSignalDelta or the maxSteps count is reached.\n&gt; &gt; &gt;\n&gt; &gt; &gt; |-------\n&gt; &gt; &gt; v |\n&gt; &gt; &gt; NODE1--&gt;NODE2--&gt;NODE3\n&gt; &gt; &gt;\n&gt; &gt; &gt; They way I see this working with your diagram is(assuming the\n&gt; &gt; links had\n&gt; &gt; &gt; enough weight to cause the next to fire):\n&gt; &gt; &gt;\n&gt; &gt; &gt; Step 1:\n&gt; &gt; &gt; Node1(input) is firing.\n&gt; &gt; &gt; node2 get enough signal to fire at this time stamp\n&gt; &gt; &gt; node3 only getting signal from the previous step when node2 wasn&#39;t\n&gt; &gt; firing\n&gt; &gt; &gt; does not have enough signal to fire.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Step2:\n&gt; &gt; &gt; Node1(input) is firing.\n&gt; &gt; &gt; node2 gets enough signal to fire from node1&#39;s last step, but is\n&gt; &gt; not getting\n&gt; &gt; &gt; signal from node3.\n&gt; &gt; &gt; node3 gets enough signal to fire from node2&#39;s last step and fires\n&gt; &gt; &gt;\n&gt; &gt; &gt; step3:\n&gt; &gt; &gt; Node1(input) is firing(As always, input nodes don&#39;t change)\n&gt; &gt; &gt; node2 is getting signal from node1 and node3 now\n&gt; &gt; &gt; node3 is getting signal from node2 last time step, the recurrent\n&gt; &gt; connection\n&gt; &gt; &gt; hasn&#39;t effected the signal from 2 to 3 yet.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Under such a system it is possible to get oscillation in the\n&gt; &gt; signals, that&#39;s\n&gt; &gt; &gt; why there is a maxSteps on the relax function. The creator of\n&gt; &gt; SharpNEAT is\n&gt; &gt; &gt; part of this list as well(Colin D. Green). I hope this will be\n&gt; &gt; helpful.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Chuck Tarun\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; On 8/24/05, maitrikaruna &lt;kevin@t...&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Hello all,\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I stumbled on NEAT just a short week ago and have found it very\n&gt; &gt; &gt; &gt; interesting. I spent the last few days implementing NEAT in\n&gt; &gt; &gt; &gt; PowerBASIC and I&#39;m nearly done. I am doing a rather simple\n&gt; &gt; &gt; &gt; simulation.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I basically set up a &quot;room&quot; and drop an agent in the middle.\n&gt; &gt; &gt; &gt; The\n&gt; &gt; &gt; &gt; agent needs to eat�so I place a large circle representing\n&gt; &gt; food in\n&gt; &gt; &gt; &gt; the\n&gt; &gt; &gt; &gt; room. The agent has so many steps to find the food or it\n&gt; &gt; &gt; &gt; disappears. The food is then moved to a new location and the\n&gt; &gt; agent\n&gt; &gt; &gt; &gt; can try again. The agent is tested against four different food\n&gt; &gt; &gt; &gt; locations. The agent has 8 sensors that allow it to &quot;see&quot; in\n&gt; &gt; &gt; &gt; those 8\n&gt; &gt; &gt; &gt; directions.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Right now with only 50 parents and 10 generations it is able to\n&gt; &gt; find\n&gt; &gt; &gt; &gt; all the 4 different food bins after about9 or 10 gens...which is\n&gt; &gt; &gt; &gt; pretty good.. Especially since I discovered that I have a neuron\n&gt; &gt; &gt; &gt; firing issue in my code..\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Anyway..I am completely new to NN&#39;s...i have no training on them\n&gt; &gt; at\n&gt; &gt; &gt; &gt; all, although I do know GA&#39;s fairly well (I am CEO of\n&gt; &gt; bioinformatics\n&gt; &gt; &gt; &gt; firm that uses GA&#39;s to analyze genetics data).\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I have a question I hope you can help with. the way I setup the\n&gt; &gt; &gt; &gt; networks allows for recurrent connections to occur. So suppose\n&gt; &gt; you\n&gt; &gt; &gt; &gt; have a simple netowrk where input node 1 connects to hidden node\n&gt; &gt; 2,\n&gt; &gt; &gt; &gt; which connects to hidden node 3, which connects to back to node\n&gt; &gt; 2.\n&gt; &gt; &gt; &gt; How is firing to proceed in such a scenario? Node 2 can&#39;t fire\n&gt; &gt; &gt; &gt; until it has all its inputs, yet one of its outputs(the one to\n&gt; &gt; node\n&gt; &gt; &gt; &gt; 3) affects what its input will be. Thanks for your help...\n&gt; &gt; &gt; &gt; |-------\n&gt; &gt; &gt; &gt; v |\n&gt; &gt; &gt; &gt; NODE1--&gt;NODE2--&gt;NODE3\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; And what if a node links back to itself? Then how is the firing\n&gt; &gt; &gt; &gt; sequence to work? I saw a time delay in teh C code and I am\n&gt; &gt; &gt; &gt; guessing this is involved, but I&#39;m not quite sure how...\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; When I get this working, I would like to tackle the tic-tac-toe\n&gt; &gt; &gt; &gt; problem you guys are working on.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; i really appreciate all your posts...very enlightening...\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Best,\n&gt; &gt; &gt; &gt; Kevin Cramer\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Yahoo! Groups Links\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt;\n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n&gt;  \n&gt; \n\n\n"}}