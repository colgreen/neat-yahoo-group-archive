{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":43544062,"authorName":"ej_1973","from":"&quot;ej_1973&quot; &lt;e.j@...&gt;","profile":"ej_1973","replyTo":"LIST","senderId":"S4kesC4wmgtAmzxNrBnfWQ0jeH6JOkl54sliaoZ5-YtFcQO4sAWwB08Idts7O3RMyyObWe5baz-frIfPOeJR-9M","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Activation Functions","postDate":"1095471516","msgId":1550,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNpZzNpcytvamxlQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":1551,"prevInTime":1549,"nextInTime":1551,"topicId":1550,"numMessagesInTopic":2,"msgSnippet":"One thing I have noticed looking through various implementations of NEAT is that everyone seems to calculate the activation function directly with something","rawEmail":"Return-Path: &lt;e.j@...&gt;\r\nX-Sender: e.j@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 86517 invoked from network); 18 Sep 2004 01:38:38 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m17.grp.scd.yahoo.com with QMQP; 18 Sep 2004 01:38:38 -0000\r\nReceived: from unknown (HELO n4.grp.scd.yahoo.com) (66.218.66.88)\n  by mta3.grp.scd.yahoo.com with SMTP; 18 Sep 2004 01:38:38 -0000\r\nReceived: from [66.218.66.123] by n4.grp.scd.yahoo.com with NNFMP; 18 Sep 2004 01:38:38 -0000\r\nDate: Sat, 18 Sep 2004 01:38:36 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;cig3is+ojle@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1648\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.218.66.88\r\nFrom: &quot;ej_1973&quot; &lt;e.j@...&gt;\r\nSubject: Activation Functions\r\nX-Yahoo-Group-Post: member; u=43544062\r\nX-Yahoo-Profile: ej_1973\r\n\r\nOne thing I have noticed looking through various implementations of \nNEAT is that everyone seems to calculate the activation function \ndirectly with something like...\n\ninline double fsigmoid(double activesum,double slope,double constant) \n{\n   return (1/(1+(exp(-(slope*activesum))))); //Compressed\n}\n\nA possible different approach is to use a precomputed in memory table \nand just use linear interpolation on it, or even faster - just \ngetting the nearest value straight from the table. Small errors in \nthe activation function wouldn&#39;t cause any problems I don&#39;t think.\n\nSomething like this would do it....\n\nclass Sigmoid {\n\tprivate:\n\t\tstatic const int num_pts=100000;\n\t\tdouble table[num_pts];\n\n\tpublic:\n\t\tSigmoid();\n\t\tdouble calc(double x);\n};\n\nSigmoid::Sigmoid() {\n\tfor (int i=0; i&lt;num_pts; i++) {\n\t\tdouble x=-5+10.0*i/num_pts;\n\t\ttable[i]=(2/(1+exp(-2*x)))-1;\n\t}\n}\n\ndouble Sigmoid::calc(double x) {\n\tint i=static_cast&lt;int&gt;((x+5.0)*num_pts/10.0);\n\tif (i&lt;0) {\n\t\treturn -1;\n\t} else if (i&gt;=num_pts) {\n\t\treturn 1;\n\t} else {\n\t\treturn table[i];\n\t}\n}\n\n\n...where the number 5 and 10 are introduced due to the indices 0-\n100000 in the table representing x value -5 to +5 on the sigmoid \ngraph.\n\nAn x value &gt; -5 just returns -1 and an x value greater than 5 just \nreturns +1. Any other function, along with additional parameter as in \nthe explicit calculation function at the top can obviously be used \ninstead with minimal effort.\n\nSuch an approach may well be faster due to calculations of exp, sin \nand so on typically being much slower than just a few adds, \nmultiplies and a direct memory lookup. The workhorse function could \nbe inlined as well.\n\n\n\n\n\n"}}