{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344770313,"authorName":"Colin Green","from":"Colin Green &lt;colin.green1@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"qYzj4NIkm8s5zNgm_jtici5dCCtM-UuTwYHC2J-ninjKT7zHENvjtheatU-usY3oY147h_wkbj2tV_P3B6o1PH7EmUqPtHGii_fmWzDPToU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: FloatFastConcurrentNetwork - Performance Optimization","postDate":"1259366012","msgId":4930,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDcyN2E0MDZjMDkxMTI3MTU1M2oyODU3OTUzMG8zZTNlMDQwY2VmZTE0ODczQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PEE5ODRCM0YxNUFEMDU0NDlBQTNDRDMxNEY2QkQ1Q0NFRUNBQzNBQGJuZXhjaDAyLmJuZTJrLmxvYz4=","referencesHeader":"PGhlZmQ1YStnb2czQGVHcm91cHMuY29tPiA8aGVsNWY4KzNkYmVAZUdyb3Vwcy5jb20+CSA8QTk4NEIzRjE1QUQwNTQ0OUFBM0NEMzE0RjZCRDVDQ0VFQ0FDM0FAYm5leGNoMDIuYm5lMmsubG9jPg=="},"prevInTopic":4926,"nextInTopic":4931,"prevInTime":4929,"nextInTime":4931,"topicId":4917,"numMessagesInTopic":12,"msgSnippet":"Hi 2009/11/27 Anthony Ison  ... Ahh yes you can indeed fold those two loops into one, there s actually an ENHANCEMENT","rawEmail":"Return-Path: &lt;colin.green1@...&gt;\r\nX-Sender: colin.green1@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 21615 invoked from network); 27 Nov 2009 23:53:33 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m5.grp.sp2.yahoo.com with QMQP; 27 Nov 2009 23:53:33 -0000\r\nX-Received: from unknown (HELO mail-gx0-f218.google.com) (209.85.217.218)\n  by mta3.grp.sp2.yahoo.com with SMTP; 27 Nov 2009 23:53:32 -0000\r\nX-Received: by gxk10 with SMTP id 10so1618864gxk.3\n        for &lt;neat@yahoogroups.com&gt;; Fri, 27 Nov 2009 15:53:32 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.91.19.15 with SMTP id w15mr2597968agi.12.1259366012274; Fri, \n\t27 Nov 2009 15:53:32 -0800 (PST)\r\nIn-Reply-To: &lt;A984B3F15AD05449AA3CD314F6BD5CCEECAC3A@...&gt;\r\nReferences: &lt;hefd5a+gog3@...&gt; &lt;hel5f8+3dbe@...&gt;\n\t &lt;A984B3F15AD05449AA3CD314F6BD5CCEECAC3A@...&gt;\r\nDate: Fri, 27 Nov 2009 23:53:32 +0000\r\nMessage-ID: &lt;727a406c0911271553j28579530o3e3e040cefe14873@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Colin Green &lt;colin.green1@...&gt;\r\nSubject: Re: [neat] Re: FloatFastConcurrentNetwork - Performance Optimization\r\nX-Yahoo-Group-Post: member; u=344770313; y=eTnwyLW-rKvi7v1c4OywdKnjDv7qQsVAUY87gRawVvGeuj_rwf81\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nHi\n\n2009/11/27 Anthony Ison &lt;anthony.ison@...&gt;\n&gt;\n&gt; The =\r\nmain difference between the current and the proposed SingleStep methods app=\r\nears to be a single loop through the connection\n&gt; array, rather than 2.=A0 =\r\nThis could produce a performance boost up to 100% (50% reduction in time) a=\r\nssuming a huge connection\n&gt; array and few neurons.=A0 The question is wheth=\r\ner it is valid to iterate through the array once.=A0 If it is, the same log=\r\nic (including\n&gt; performance benefit) could be implemented without unsafe co=\r\nde and I assume this would keep everybody happy.\n\nAhh yes you can indeed fo=\r\nld those two loops into one, there&#39;s actually\nan ENHANCEMENT tag/comment in=\r\n the sharpneat 2 code to this effect. The\nmotivation behind two loop approa=\r\nch was to keep CPU cache memory\naccesses sequential and I&#39;m pretty sure I t=\r\nried both variations (one\nversus two loops) when I performance tested this =\r\nback in 2005.\n\nAnyway I just compared the two versions and the single loop =\r\nis faster,\nnow obviously this is dependent on the nature of the network, th=\r\ne CPU\nand other CPU load, e.g. to what extent is the CPU cache getting\n&#39;pol=\r\nluted&#39; by other threads, and these days other cores where you\npotentially h=\r\nave shared L3 cache.\n\nThere&#39;s actually another benefit to the single loop w=\r\nhich is that it\neliminates some duplicate storage space, namely the &#39;signal=\r\n&#39; field on\nthe FastConnection struct, generally networks have far more\nconn=\r\nections than neurons so this is potentially a biggish gain in\nterms of maxi=\r\nmising CPU cache performance, especially in a\nmultithreaded scenario. On th=\r\nis basis I agree the code should remain\n&#39;safe&#39; (for now at least) and the t=\r\nwo loops folded into one. I&#39;ll be\ndoign this in sharpneat 2 as that is my m=\r\nain focus right now.\n\nFYI my quick test showed the single loop + the modifi=\r\ned FastConnection\nstruct was 16% faster on one thread and a net with cons=\r\n=3D369, nodes=3D94.\nUsing (unsafe) pointers instead of indexing arrays shou=\r\nld give a\nfurther boost which I&#39;ll look into another.\n\nColin\n\n"}}