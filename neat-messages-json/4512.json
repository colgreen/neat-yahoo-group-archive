{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":338376118,"authorName":"stefan_haflidason","from":"&quot;stefan_haflidason&quot; &lt;styrmis@...&gt;","profile":"stefan_haflidason","replyTo":"LIST","senderId":"7Tsq8AkqOp8hrNyz-9YsiUez0NNfwUPaUOvMWKnnYZs_jL6aYhz5KlzgE3c7-gKVzjsm2HG0OFiSRFnLXZUlTbdQTT5vU_0SwWezjxB-","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: NEAT-python","postDate":"1229302204","msgId":4512,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdpNDlqcysydGQ5QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGRkZjEwMDc4MDgxMTA3MTQyOGgyMDgyOWM5YnI3ODMxMWYwNTk5ZjY1YzRlQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4424,"nextInTopic":0,"prevInTime":4511,"nextInTime":4513,"topicId":4417,"numMessagesInTopic":7,"msgSnippet":"Cesar, How is your 1.0 implementation progressing? If there is anything you would like checked/worked on then let me know; would be great to have it done for","rawEmail":"Return-Path: &lt;styrmis@...&gt;\r\nX-Sender: styrmis@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 73962 invoked from network); 15 Dec 2008 00:50:05 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m43.grp.scd.yahoo.com with QMQP; 15 Dec 2008 00:50:05 -0000\r\nX-Received: from unknown (HELO n17c.bullet.sp1.yahoo.com) (69.147.64.126)\n  by mta15.grp.scd.yahoo.com with SMTP; 15 Dec 2008 00:50:05 -0000\r\nX-Received: from [69.147.65.171] by n17.bullet.sp1.yahoo.com with NNFMP; 15 Dec 2008 00:50:05 -0000\r\nX-Received: from [66.218.67.33] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 15 Dec 2008 00:50:05 -0000\r\nDate: Mon, 15 Dec 2008 00:50:04 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;gi49js+2td9@...&gt;\r\nIn-Reply-To: &lt;ddf100780811071428h20829c9br78311f0599f65c4e@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;stefan_haflidason&quot; &lt;styrmis@...&gt;\r\nSubject: Re: NEAT-python\r\nX-Yahoo-Group-Post: member; u=338376118; y=cqhCwn2hM8y1SRBh9hTfMvY4OWeX5xlRvO8zEDgn8EJCn2rP0XFwp_ARyOY\r\nX-Yahoo-Profile: stefan_haflidason\r\n\r\nCesar,\n\nHow is your 1.0 implementation progressing? If there is anything yo=\r\nu\nwould like checked/worked on then let me know; would be great to have\nit =\r\ndone for Christmas!\n\nRegards,\n\nStefan\n\n--- In neat@yahoogroups.com, &quot;Cesar =\r\nG. Miguel&quot; &lt;cesar.gomes@...&gt; wrote:\n&gt;\n&gt; &gt; I&#39;m particularly interested in th=\r\ne DPNV experiment; what needs doing\n&gt; &gt; here for it to be equivalent to the=\r\n reference implementation?\n&gt; \n&gt; The CTRNN version is not working properly (=\r\nif you integrate using\n&gt; Euler, it&#39;s ok, the Runge-Kutta needs some caution=\r\n). But if you&#39;re not\n&gt; planning to use CTRNNs, only traditional neurons, go=\r\n for it. The\n&gt; performance is similar to Ken&#39;s version. You can see that th=\r\ne\n&gt; cart-pole classes were wrapped from the original C++ code, so they are\n=\r\n&gt; 100% equivalent.\n&gt; \n&gt; First you need to compile de extension (on linux a =\r\nlibrary named\n&gt; dpole.so will be created):\n&gt; \n&gt; $python setup.py build_ext =\r\n--inplace\n&gt; \n&gt; Then run:\n&gt; \n&gt; $python cpExp.py\n&gt; \n&gt; The best individual wil=\r\nl be dumped to a file: winner_date_time\n&gt; \n&gt; To test the solution:\n&gt; \n&gt; $py=\r\nthon test_double_pole.py winner_dumped\n&gt; \n&gt; It solves the DPNV in 24,091 ev=\r\naluations (averaged over 544 runs) with\n&gt; stdev 12,112.\n&gt; \n&gt; Cesar\n&gt;\n\n\n\n"}}