{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"2-iN0pDL9nLbn8OZF1_5X5Wmf3V3eKQpWDmhLacqxdpu2hiw7S2pa1VyPdehQ_Rl3wWYNvFAxH5ndO_kGKJZzXHvkCbMV2kzqFQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Modularity and interfaces","postDate":"1108575240","msgId":1872,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMTYxNDU0NTkuMDNiZDBhYjhAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMTUxMTM2MjQuMDNjMzQwMDhAcG9wLm1haWwueWFob28uY28udWs+","referencesHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMDcxMTQ2NTAuMDNiY2ViZTBAcG9wLm1haWwueWFob28uY28udWs+IDxjdXI5YmwrYmZ2NEBlR3JvdXBzLmNvbT4gPDYuMi4wLjE0LjAuMjAwNTAyMTUxMTM2MjQuMDNjMzQwMDhAcG9wLm1haWwueWFob28uY28udWs+"},"prevInTopic":1871,"nextInTopic":1874,"prevInTime":1871,"nextInTime":1873,"topicId":1853,"numMessagesInTopic":13,"msgSnippet":"Hi,\n\n\tHere s a first stab at an experiment into an aspect of modularity.  This \nis very preliminary, so feel free to argue with it but also bear in mind \nthat","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 99165 invoked from network); 16 Feb 2005 17:31:44 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m19.grp.scd.yahoo.com with QMQP; 16 Feb 2005 17:31:44 -0000\r\nReceived: from unknown (HELO smtp001.mail.ukl.yahoo.com) (217.12.11.32)\n  by mta6.grp.scd.yahoo.com with SMTP; 16 Feb 2005 17:31:44 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp001.mail.ukl.yahoo.com with SMTP; 16 Feb 2005 17:31:42 -0000\r\nMessage-Id: &lt;6.2.0.14.0.20050216145459.03bd0ab8@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.0.14\r\nDate: Wed, 16 Feb 2005 17:34:00 +0000\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;6.2.0.14.0.20050215113624.03c34008@...&gt;\r\nReferences: &lt;6.2.0.14.0.20050207114650.03bcebe0@...&gt;\n &lt;cur9bl+bfv4@...&gt;\n &lt;6.2.0.14.0.20050215113624.03c34008@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.32\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: Modularity and interfaces\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\n\nHi,\n\n\tHere&#39;s a first stab at an experiment into an aspect of modularity.  This \nis very preliminary, so feel free to argue with it but also bear in mind \nthat its deliberately designed to be a first step and therefor very \nunambitious...\n\n\tThe idea here is to gift the system with:\n\n1) the topology of connections between a module and a &quot;user&quot; network (but \nnot necessarily the links in each connection)\n2) a genome with separate regions for one module, one user network and the \nconnections between them\n3) a problem that can very obviously and simply use modularity\n\n\tAnd the objective is to see (i) whether the module and the user network \ncan evolve to solve the problem, and (ii) whether the solution found is \nsimilar to the method we anticipate, with a clear division of work between \nmodule and user.\n\n\tI suggest we set a problem where the question is &quot;which of two lines is \nshorter&quot; where the inputs are:\n\nV1S - line 1 start\n\nV1E - line 1 end\n\nV2S - line 2 start\n\nV2E - line 2 end\n\n(the number of coordinates in each of these points can be changed for \ndifferent complexities of experiment, but we should start with 1D intervals)\n\n\tAnd there is a single output that we want to be 0 or 1 (-1 or +1) \naccording to the correct answer...\n\n\tThe topology of the network will be hardwired as follows:\n\n1) two copies of the module each take one of the two lines as an input and \noutput one value\n2) one copy of the user network takes output from both modules and outputs \none value, this is the final output\n3) the module can _only_ form connections to the line it inputs from, or \ninternal to itself\n4) the user network can only form connections to module outputs, or \ninternal to itself\n\n\tI guess that the genomes of the module and the user are (at this stage) \nessentially completely separate experiments...\n\n\tAnd there would be further genomes for the module interface and overall \ntopology, except I have locked those for the moment...\n\n\t--\n\n\tI hope you can see here that what I am trying to do is to force the \noverall solution into a form:\n\n\tanswer = f_user(f_module(line1), f_module(line_2))\n\n\t(where f_user(x, y) will be something like x &gt; y, and f_module will do \nsomething like return the length of the line)\n\n\te.g. I am not yet creating a system which is able to to decide \nwhether/where to use a module, or even define the interface for it, I am \njust setting up a scheme with a module, and trying to co-evolve insides for \nit and its user.\n\n\tIf that works, then I would start to look at things like:\n\n1) speed of solution vs non-modular approach\n2) different dimensionality of line\n3) let the module-&gt;user interface evolve (e.g. it could gain or lose \nconnections)\n4) use a similar approach for different problems, possibly with more than \none type of module\n5) how to create genomes for interfaces and topology...\n\n\tFeedback please chaps,\n\n\t\tIan\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n\r\n\n"}}