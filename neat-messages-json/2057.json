{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":183620859,"authorName":"Philip Tucker","from":"Philip Tucker &lt;ptucker@...&gt;","profile":"tucker0171","replyTo":"LIST","senderId":"GIr-e9j59P0sqv6XZhFOlXEW910mMqHwLKiGVOxgPsW4aC4rN4QtEMzaBUZbsqCKRc7q1le20XzgIgJ8sCaK1PTS6kc0JNhL","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [Fwd: Re: [neat] Re: Double Pole Balancing Questions]","postDate":"1121047905","msgId":2057,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGFiNWU2ZmY3MDUwNzEwMTkxMTRhYzVkYjZiQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDQyRDE5OUQwLjkwMDA0MDNAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDQyRDE5OUQwLjkwMDA0MDNAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":0,"nextInTopic":0,"prevInTime":2056,"nextInTime":2058,"topicId":2057,"numMessagesInTopic":1,"msgSnippet":"Excellent.  Thanks Colin.  I ve made your suggested changes in our implementation. - Philip ... -- Philip Tucker ptucker@gmail.com","rawEmail":"Return-Path: &lt;ptucker@...&gt;\r\nX-Sender: ptucker@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 96730 invoked from network); 11 Jul 2005 02:11:47 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m28.grp.scd.yahoo.com with QMQP; 11 Jul 2005 02:11:47 -0000\r\nReceived: from unknown (HELO wproxy.gmail.com) (64.233.184.207)\n  by mta5.grp.scd.yahoo.com with SMTP; 11 Jul 2005 02:11:47 -0000\r\nReceived: by wproxy.gmail.com with SMTP id 57so758961wri\n        for &lt;neat@yahoogroups.com&gt;; Sun, 10 Jul 2005 19:11:45 -0700 (PDT)\r\nReceived: by 10.54.73.15 with SMTP id v15mr3585264wra;\n        Sun, 10 Jul 2005 19:11:45 -0700 (PDT)\r\nReceived: by 10.54.121.17 with HTTP; Sun, 10 Jul 2005 19:11:45 -0700 (PDT)\r\nMessage-ID: &lt;ab5e6ff705071019114ac5db6b@...&gt;\r\nDate: Sun, 10 Jul 2005 21:11:45 -0500\r\nTo: Colin Green &lt;cgreen@...&gt;, neat@yahoogroups.com\r\nIn-Reply-To: &lt;42D199D0.9000403@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Disposition: inline\r\nReferences: &lt;42D199D0.9000403@...&gt;\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Philip Tucker &lt;ptucker@...&gt;\r\nReply-To: Philip Tucker &lt;ptucker@...&gt;\r\nSubject: Re: [Fwd: Re: [neat] Re: Double Pole Balancing Questions]\r\nX-Yahoo-Group-Post: member; u=183620859; y=IWIwI-uCEg6YeBz3caNsoxdi41Huyse-PjXVs8rdrBV_6E1kug\r\nX-Yahoo-Profile: tucker0171\r\n\r\nExcellent.  Thanks Colin.  I&#39;ve made your suggested changes in our\nimplemen=\r\ntation.\n\n- Philip\n\nOn 7/10/05, Colin Green &lt;cgreen@...&gt; wrote:\n&gt; =\r\nThe long lines in the atatched email were horribly mangled by yahoo\n&gt; group=\r\ns. Hopefully this direct email is a bit clearer.\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; ---------=\r\n- Forwarded message ----------\n&gt; From: Colin Green &lt;cgreen@...&gt;\n&gt;=\r\n To: neat@yahoogroups.com\n&gt; Date: Sun, 10 Jul 2005 22:53:22 +0100\n&gt; Subject=\r\n: Re: [neat] Re: Double Pole Balancing Questions\n&gt; Philip Tucker wrote:\n&gt; \n=\r\n&gt; &gt;&gt;&gt;For double:\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;     network.setInputSignal(0, state[0] / track=\r\nLength);\n&gt; &gt;&gt;&gt;     network.setInputSignal(1, state[1] / 2.0);\n&gt; &gt;&gt;&gt;     net=\r\nwork.setInputSignal(2, state[2] / 0.52);\n&gt; &gt;&gt;&gt;     network.setInputSignal(3=\r\n, state[3] / 2.0);\n&gt; &gt;&gt;&gt;     network.setInputSignal(4, state[4] / 0.52);\n&gt; =\r\n&gt;&gt;&gt;     network.setInputSignal(5, state[5] / 2.0);\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;For double it=\r\n seems like you don&#39;t actually get values scaled\n&gt; &gt;&gt;&gt;between 0 and 1 or -1=\r\n and 1.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;It looks liek they&#39;re scaled to -1 to 1=\r\n to me.\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt;I don&#39;t think so.  States 2 and 4 are in radians, =\r\nwhich means they&#39;re\n&gt; &gt;between -PI and PI (unless I&#39;m reading the code wron=\r\ng).  So dividing\n&gt; &gt;by 0.52 yields approximately -6 ... 6.\n&gt; &gt;\n&gt; Yes but th=\r\ne simulation is stopped if the angles go over\n&gt; &#39;poleAngleThreshold#, which=\r\n is set to &#39;thirtysix_degrees&#39; by default\n&gt; (I&#39;m looking at DoublePoleBalan=\r\ncingNetworkEvaluator here).\n&gt; \n&gt; thirtysix_degrees ~ 0.62.\n&gt; +-0.62 / 0.52 =\r\n=3D +-1.2  (still an &#39;odd&#39; number to scale to though)\n&gt; \n&gt; &gt;  And state 0 r=\r\nanges from\n&gt; &gt;-trackLength/2 to trackLength/2, so it&#39;s scaled to -0.5 ... 0=\r\n.5.\n&gt; &gt;\n&gt; Hmm yes, because 0 meters is in the center where the cart starts.=\r\n\n&gt; \n&gt; &gt; None\n&gt; &gt;of this keeps the net from solving the problem, but they se=\r\nem odd choices.\n&gt; &gt;\n&gt; &gt;\n&gt; Indeed, everything yourself and Derek have pointe=\r\nd out so far has either\n&gt; been a typo or a miscalculation. As you say these=\r\n don&#39;t prevent the\n&gt; problem from being solved but at the same time they do=\r\nn&#39;t exactly add to\n&gt; the clarity of the code! I suggest we settle on a new =\r\nset of\n&gt; scaling/shifting values that make more sense and that we switch ov=\r\ner in\n&gt; unison.\n&gt; \n&gt; I&#39;m currently going through my code with the intention=\r\n of putting out a\n&gt; new release so I&#39;m happy to do this if you are. It effe=\r\ncts comparisons\n&gt; with Ken&#39;s results though, but probably not by much I wou=\r\nld say.\n&gt; \n&gt; &gt;Another difference I noticed between Markovian and non-Markov=\r\nian\n&gt; &gt;double pole balancing is that one had a bias of 1.0, the other 0.5.\n=\r\n&gt; &gt;Any reason for that?\n&gt; &gt;\n&gt; &gt;\n&gt; I think this relates to Ken&#39;s code. Sharp=\r\nNEAT has a single bias input of\n&gt; 1.0 for all experiments, or perhaps you&#39;r=\r\ne referring to some other bias\n&gt; value?\n&gt; \n&gt; \n&gt; Ok so I&#39;m going ahead and r=\r\nationalising the scaling/shifting of the\n&gt; input signals for all for pole e=\r\nxperiments within SharpNEAT, otherwise I\n&gt; suspect this issue is going to c=\r\nome back to haunt me :)  Feel free to\n&gt; adopt these values, leave them as t=\r\nhey are, point out errors, suggest\n&gt; changes, etc...\n&gt; \n&gt; \n&gt; Single Pole.\n&gt;=\r\n The comment was wrong on SP. The values were being sclaed to 0.0 to 1.0.\n&gt;=\r\n I think -1.0 to 1.0 is more natural, so here&#39;s my updated code. BTW I\n&gt; te=\r\nsted this and it seems to work far better than before (much quicker to\n&gt; fi=\r\nnd perfect solution on the whole).\n&gt; \n&gt;                 // Provide state in=\r\nfo to the network (normalised to +-1.0).\n&gt;                 network.SetInput=\r\nSignal(0, cart_pos_x /\n&gt; trackLengthHalfed);    // cart_pos_x is +-trackLen=\r\ngthHalfed\n&gt;                 network.SetInputSignal(1, cart_velocity_x / 0.7=\r\n5);\n&gt;         // cart_velocity_x is typically +-0.75\n&gt;                 netw=\r\nork.SetInputSignal(2, pole_angle /\n&gt; twelve_degrees);        // pole_angle =\r\nis +-twelve_degrees. Values\n&gt; outside of this range stop the simulation.\n&gt; =\r\n                network.SetInputSignal(3, pole_angular_velocity);\n&gt;     // =\r\npole_angular_velocity is typically +-1.0 radians. No scaling\n&gt; required.\n&gt; =\r\n\n&gt; Double Pole\n&gt; \n&gt;                 // Provide state info to the network (n=\r\normalised to +-1.0).\n&gt;                 network.SetInputSignal(0, state[0] /=\r\n\n&gt; trackLengthHalfed);    // Cart Position is +-trackLengthHalfed\n&gt;        =\r\n         network.SetInputSignal(1, state[1] / 0.75);\n&gt;         // Cart velo=\r\ncity is typically +-0.75\n&gt;                 network.SetInputSignal(2, state[=\r\n2] /\n&gt; thirtysix_degrees);    // Pole Angle is +-thirtysix_degrees. Values\n=\r\n&gt; outside of this range stop the simulation.\n&gt;                 network.SetI=\r\nnputSignal(3, state[3]);\n&gt;     // Pole angular velocity is typically +-1.0 =\r\nradians. No scaling\n&gt; required.\n&gt;                 network.SetInputSignal(4,=\r\n state[4] /\n&gt; thirtysix_degrees);    // pole_angle is +-thirtysix_degrees. =\r\nValues\n&gt; outside of this range stop the simulation.\n&gt;                 netwo=\r\nrk.SetInputSignal(5, state[5]);\n&gt; \n&gt; Double Pole, No velocity inputs.\n&gt; \n&gt; =\r\n                // Provide state info to the network (normalised to +-1.0).=\r\n\n&gt;                 // Non-markovian (no velocity info)\n&gt;                 ne=\r\ntwork.SetInputSignal(0, state[0] /\n&gt; trackLengthHalfed);    // Cart Positio=\r\nn is +-trackLengthHalfed\n&gt;                 network.SetInputSignal(1, state[=\r\n2] /\n&gt; thirtysix_degrees);    // Pole Angle is +-thirtysix_degrees. Values\n=\r\n&gt; outside of this range stop the simulation.\n&gt;                 network.SetI=\r\nnputSignal(2, state[4] /\n&gt; thirtysix_degrees);    // pole_angle is +-thirty=\r\nsix_degrees. Values\n&gt; outside of this range stop the simulation.\n&gt; \n&gt; \n&gt; Ho=\r\npe the longs lines didn&#39;t get mangled too much.\n&gt; \n&gt; Colin.\n\n-- \nPhilip Tuc=\r\nker\nptucker@...\n\n"}}