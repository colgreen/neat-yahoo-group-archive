{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":170210925,"authorName":"Ashot_Petrosian","from":"&quot;Ashot_Petrosian&quot; &lt;ashot@...&gt;","profile":"Ashot_Petrosian","replyTo":"LIST","senderId":"vrZJF3v61pS960cRVs8U4eXFMOk9YXMUifhqGUYbA1C5EIH3vgnNDaJrOL1bF2wzcUIcw-LVKJSyMobcXBcYj1Txl7RZFAtSexBO4weeSZU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Python NEAT","postDate":"1121410918","msgId":2087,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRiN24xNit0OTM1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGRhZXVwMStiYmc0QGVHcm91cHMuY29tPg=="},"prevInTopic":2044,"nextInTopic":2089,"prevInTime":2086,"nextInTime":2088,"topicId":535,"numMessagesInTopic":47,"msgSnippet":"I have implemented a Python version of NEAT myself which is feature-complete and has been successfully tested on XOR and double pole balancing, and which I m","rawEmail":"Return-Path: &lt;ashot@...&gt;\r\nX-Sender: ashot@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 86429 invoked from network); 15 Jul 2005 07:03:30 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m23.grp.scd.yahoo.com with QMQP; 15 Jul 2005 07:03:30 -0000\r\nReceived: from unknown (HELO n15a.bulk.scd.yahoo.com) (66.94.237.32)\n  by mta6.grp.scd.yahoo.com with SMTP; 15 Jul 2005 07:03:30 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.2] by n15.bulk.scd.yahoo.com with NNFMP; 15 Jul 2005 07:02:03 -0000\r\nReceived: from [66.218.66.80] by mailer2.bulk.scd.yahoo.com with NNFMP; 15 Jul 2005 07:02:00 -0000\r\nDate: Fri, 15 Jul 2005 07:01:58 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;db7n16+t935@...&gt;\r\nIn-Reply-To: &lt;daeup1+bbg4@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2292\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;Ashot_Petrosian&quot; &lt;ashot@...&gt;\r\nSubject: Re: Python NEAT\r\nX-Yahoo-Group-Post: member; u=170210925; y=CI5ixUq0K1s1U-Hf839tWkQ-0EgybYSCe15aeuIoGt4Vh3vsaflcvca8\r\nX-Yahoo-Profile: Ashot_Petrosian\r\n\r\n\tI have implemented a Python version of NEAT myself which is \nfeature-complete and has been successfully tested on XOR and double \npole balancing, and which I&#39;m using now to evolve controllers for some \nsimple soccer playing bots.  I should say that my version is not a \ncarbon copy of the original in implementation and is in fact different \nin a few areas by quite a bit (although I think functionally mostly \nequivalent).  The three biggest differences that I can think of are \nthat speciation is done continuously without distinct species \n(individuals get fitness modifications depending on how new and how \nrare their innovations are, and probablistically mated based on \nsimilarity), there is no genotype - crossover and mutation is just \ndone directly, and links don&#39;t have their own innovation ids (instead \nits a tuple of the innovation ids that they connect).   I can describe \nthese in more detail, but I don&#39;t think they are very interesting. \nSuffice it to say that I can&#39;t guarantee that this will work \nidentically to original NEAT on every problem, although it has done \nwell thus far.\n\n\tAlso, I have implemented a module to save and retrieve networks and \nevolutionary runs to and from a mySQL database, a module to visualize \narbitrary parameters from the database, a 3d network visualizer, and a \nsoccer domain with a monitor.  I ported the network evaluation code to \nPyrex (C) to speed up the simulations some as well.  If Tom or anyone \nelse is interested in any this the code it is relatively simple (the \npart that implements NEAT is ~500 lines), it will be here soon (once \nI&#39;m finished cleaning it): \n\n\thttp://www.freshraisins.com/neat\n\n\t(at the moment you can see a screenshot and some videos of evolved \nbehaviour)\n \n\tJoe (or anyone really) - I haven&#39;t had a chance to look at your code \nyet, but I am curious to know how you kept the GA and the network \nseperate and still had innovation numbers?  I found that this was the \nmost difficult thing to deal with and essentially made any sort of \nstrict meaningful OO seperation difficult to impossible. \n \n\tAlso, when I was first looking over Ken&#39;s code as a reference I \nmassaged his comments into Natural Docs format, in case someone finds \nthis useful it is here:\n\n\thttp://www.freshraisins.com/neatdoc\n \n-Ashot\n\n\n\n\n"}}