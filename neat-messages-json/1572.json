{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"LXn2TYJKz3K6DdjtIkCFEeblGQ0_ZL0-80LN3uEtxtaKaN6ko-BCG6OVD_4yLa-IJ7J94eoEihqGOHgw7UliAyYRblLBW-RVNYM","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Performance Sensitivity to float precision","postDate":"1095762181","msgId":1572,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMS4yLjAuMC4yMDA0MDkyMTEwNTgxMS4wMjU4YzAwOEBwb3AubWFpbC55YWhvby5jby51az4=","inReplyToHeader":"PDQxNEY0NUJGLjgwMTA0MDNAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDIwMDQwOTIwMTcwMzA0LjY5MTMyLnFtYWlsQHdlYjYwODA3Lm1haWwueWFob28uY29tPiA8NDE0RjQ1QkYuODAxMDQwM0Bkc2wucGlwZXguY29tPg=="},"prevInTopic":1569,"nextInTopic":1574,"prevInTime":1571,"nextInTime":1573,"topicId":1555,"numMessagesInTopic":16,"msgSnippet":"... Switching to fixed-point integer maths isn t the automatically the huge speed increase it once was. e.g. fixed point maths involves a lot of extra shifts","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 31847 invoked from network); 21 Sep 2004 10:20:48 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m25.grp.scd.yahoo.com with QMQP; 21 Sep 2004 10:20:48 -0000\r\nReceived: from unknown (HELO smtp005.mail.ukl.yahoo.com) (217.12.11.36)\n  by mta1.grp.scd.yahoo.com with SMTP; 21 Sep 2004 10:20:47 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp005.mail.ukl.yahoo.com with SMTP; 21 Sep 2004 10:20:42 -0000\r\nMessage-Id: &lt;6.1.2.0.0.20040921105811.0258c008@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.1.2.0\r\nDate: Tue, 21 Sep 2004 11:23:01 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;414F45BF.8010403@...&gt;\r\nReferences: &lt;20040920170304.69132.qmail@...&gt;\n &lt;414F45BF.8010403@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.36\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Performance Sensitivity to float precision\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 22:03 20/09/2004, you wrote:\n&gt;I agree with the consensus here that double precision floats are\n&gt;probably excessive for most problems. I have switched the neural network\n&gt;code in SharpNEAT over to floats to improve performance and I have not\n&gt;noticed a detrimental effect in any of my  experiments to date. In fact\n&gt;I have considered implementing a neural net class that operates on\n&gt;integers to get yet more performance. So although I know of no research\n&gt;as such, my best guess would be that floats are fine.\n\nSwitching to fixed-point integer maths isn&#39;t the automatically the huge \nspeed increase it once was.\n\ne.g. fixed point maths involves a lot of extra shifts and you can&#39;t use the \nstandard maths library routines without having to convert the data and lose \nyou efficiency gain\n\nOn the other hand for fixed-range values the precision of 32-bit ints is \nhigher than 32-bit floats (because you aren&#39;t wasting 8 bits on an exponent \nyou will never use.\n\nYou can do it by writing a fixed point class to implement the arithmetic, \nand substituting that for &quot;float&quot; in your original code.\n\nIf you do what to do it, I&#39;ll help out if you like, I&#39;ve done it before \n(obviously not in C# :)\n\n         Ian\n\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n\n"}}