{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"6BO2oC-c7LkCP1X9p9njeaXhwar1CCvWij8tvoimUwv131itha2sD-FbsxEe_ZyyKiRBoUCsZ1DFVUgW_BpWDGi032fNj1fjDM4","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: General Game Playing","postDate":"1145621365","msgId":2633,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDYwNDIxMTIwOTI2LjI4NjY4LnFtYWlsQHdlYjI1MTA1Lm1haWwudWtsLnlhaG9vLmNvbT4=","inReplyToHeader":"PFBpbmUuTE5YLjQuNjMuMDYwNDIwMTgyNTAwMC4xODMxMEBqaWIuY3MudXRleGFzLmVkdT4="},"prevInTopic":2632,"nextInTopic":2634,"prevInTime":2632,"nextInTime":2634,"topicId":2624,"numMessagesInTopic":11,"msgSnippet":"Hi Joseph, ... This is a detail of your own approach right?  E.g. it is nothing a completely general neural net play would need.  Or is the whole thing","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 52879 invoked from network); 21 Apr 2006 12:09:28 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m19.grp.scd.yahoo.com with QMQP; 21 Apr 2006 12:09:28 -0000\r\nReceived: from unknown (HELO web25105.mail.ukl.yahoo.com) (217.12.10.53)\n  by mta5.grp.scd.yahoo.com with SMTP; 21 Apr 2006 12:09:27 -0000\r\nReceived: (qmail 28670 invoked by uid 60001); 21 Apr 2006 12:09:26 -0000\r\nMessage-ID: &lt;20060421120926.28668.qmail@...&gt;\r\nReceived: from [195.152.206.139] by web25105.mail.ukl.yahoo.com via HTTP; Fri, 21 Apr 2006 13:09:25 BST\r\nDate: Fri, 21 Apr 2006 13:09:25 +0100 (BST)\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;Pine.LNX.4.63.0604201825000.18310@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: General Game Playing\r\nX-Yahoo-Group-Post: member; u=7192225; y=EQdKtdFal2tdyqljsPma4Z23Hwv4TETaVI4KPhBFykZKdqI1GQ\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nHi Joseph,\n\n&gt; Hi Ken,\n&gt; \n&gt; &gt; Sounds like this can be interesting but I&#39;m also\n&gt; wondering a few\n&gt; &gt; details.  So let&#39;s say you get a spec, what\n&gt; exactly do you do next?\n&gt; \n&gt; We parse the spec and turn it into basically a state\n&gt; machine that we can \n&gt; feed inputs (player moves) to and read outputs (new\n&gt; game state) from. Also \n&gt; we set up helper functions that can be used to\n&gt; generate all valid moves \n&gt; from a certain game state.\n\nThis is a detail of your own approach right?  E.g. it\nis nothing a completely general neural net play would\nneed.  Or is the whole thing hard-wired as a minimax\napproach where you only get to evolve the\nstate-scoring function?\n\n&gt; Finally we extract some\n&gt; relevant information \n&gt; about the kinds of things that can constitute the\n&gt; game state, and use that \n&gt; information to fix the input layer size of our\n&gt; neural nets.\n&gt; \n&gt; &gt; Do you get to change some code around or add a new\n&gt; fitness function or\n&gt; &gt; perhaps sensor/output combos appropriate to that\n&gt; spec?  Or is it\n&gt; &gt; completley plug and play and you have a totally\n&gt; generic architecture?\n&gt; \n&gt; Completely plug and play, we get a spec, and weeks\n&gt; later :P once evolution \n&gt; is done we have some players.\n&gt; \n&gt; So one of the cool things about the system is that\n&gt; there are already a lot \n&gt; of games for it, and once we release our GDL-&gt;NEAT\n&gt; bridge it should be \n&gt; usable with really any NE system.\n&gt; \n&gt; &gt; Interesting, thanks Charles.  So if you get a\n&gt; novel game and right\n&gt; &gt; away need to play it with no prior experience, how\n&gt; can an\n&gt; &gt; evolutionary system be prepared for that?\n&gt; \n&gt; The short answer is coevolution. A game has a\n&gt; certain number of players. \n&gt; We establish populations for each player and let\n&gt; them have at each other \n&gt; coevolutionarily. Since we don&#39;t know what game we\n&gt; will be learning before \n&gt; hand, this seems like the most obvious approach. Of\n&gt; course, there are tons \n&gt; of tricky details using coevolution (in particular I\n&gt; don&#39;t know of any \n&gt; research offhand that coevolves more than two\n&gt; populations simultaneously), \n&gt; but we&#39;re making progress.\n\nI think you might have missed Ken&#39;s meaning here (or\nelse I did).  I think his point was that you seemed to\nsuggest that the final &quot;really real&quot; competition was\ngoing to be on a game that you had never seen and that\nyour system was going to have to run 100% hands off.\n\nSo the question there is, if you are only being\npresented with the game definition on the day of the\nmatch, when do you find three weeks to do the\nevolving.  (and conversly, if you are told the game\nthree weeks in advance, what stops you tweaking the\nsystem to play it better).\n\n&gt; &gt; Are you trying to evolve a single neural network\n&gt; that can play any game?\n&gt; \n&gt; No, for now we&#39;re just evolving from scratch every\n&gt; time we receive a new \n&gt; specification. One of the interesting research\n&gt; issues that comes up in GGP \n&gt; though is whether or not we can use some cool\n&gt; developmental systems jazz \n&gt; to evolve an &quot;embryo&quot; player which is an optimal\n&gt; starting genome for any \n&gt; kind of game (encapsulating information that is\n&gt; useful for a broad range \n&gt; of human-designed games). The idea is that we obtain\n&gt; the embryo by playing \n&gt; all the games, and then specialize it later to play\n&gt; a specific game. Its \n&gt; really unclear how this can be done, but thats what\n&gt; makes it such an \n&gt; interesting research problem.\n\nOr, another take on the same aspiration:\n\nCan you evolve a library of useful &quot;modules&quot; which if\navailable will speed the evolution of a player for any\ngame?\n\n&gt; Does that clear everything up?\n\nFor me, if nearly clears it up.\n\nSo, just for clarity, the communication with your\nsystem is a specification of an entire game, geometry,\nrules, pieces...  And not just the IO connections for\na black-box game that will be simulated somewhere\nelse?  (Which is what I always imagine for these\nthings.)\n\nYou implement that game (presumably using some sort of\npretty standard engine, to be sure that your version\nis 100% identical to the intended form).\n\nYou then presumably can take a second reading of the\nspecification to get the definition of the IO; and you\nuse the IO to configure your evolution system.\n\nYou then can play squillions of games off-line in your\nown system to generate good players.\n\nYour best player then plays in the real competition,\nprobably via a some sort of network connection...?\n\n   Ian\n\n\nSend instant messages to your online friends http://uk.messenger.yahoo.com \n\n"}}