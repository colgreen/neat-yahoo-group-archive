{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"RLPFGt_WyZA4mURC561Il2rekFCkHAvA8dxEp9Hc0U9PYV91MdizbukpXglStU3flbk4iSsbrXj2FvhTLkBlGQoOUKkz-n0xAJAVK19xKD37","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Modularity and interfaces","postDate":"1108420789","msgId":1870,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGN1cjlibCtiZnY0QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMDcxMTQ2NTAuMDNiY2ViZTBAcG9wLm1haWwueWFob28uY28udWs+"},"prevInTopic":1867,"nextInTopic":1871,"prevInTime":1869,"nextInTime":1871,"topicId":1853,"numMessagesInTopic":13,"msgSnippet":"... what I ... whether ... with ... intuitions ... kind ... what you ... have of ... any of ... computing over ... encoding ... original ... namely ... across ","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 50863 invoked from network); 14 Feb 2005 22:39:50 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m2.grp.scd.yahoo.com with QMQP; 14 Feb 2005 22:39:50 -0000\r\nReceived: from unknown (HELO n20a.bulk.scd.yahoo.com) (66.94.237.49)\n  by mta2.grp.scd.yahoo.com with SMTP; 14 Feb 2005 22:39:50 -0000\r\nReceived: from [66.218.69.6] by n20.bulk.scd.yahoo.com with NNFMP; 14 Feb 2005 22:39:50 -0000\r\nReceived: from [66.218.66.85] by mailer6.bulk.scd.yahoo.com with NNFMP; 14 Feb 2005 22:39:50 -0000\r\nDate: Mon, 14 Feb 2005 22:39:49 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;cur9bl+bfv4@...&gt;\r\nIn-Reply-To: &lt;6.2.0.14.0.20050207114650.03bcebe0@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 6656\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.49\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Modularity and interfaces\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n--- In neat@yahoogroups.com, Ian Badcoe &lt;ian_badcoe@y...&gt; wrote:\n&gt; Hi Mitchell and Ken,\n&gt; \n&gt;          I take all your points.  In fact, this is pretty much \nwhat I \n&gt; wanted to come around to discussing -- I was just trying to see \nwhether \n&gt; anybody had followed me this far before I got into the hard stuff.\n&gt; \n&gt; At 01:47 04/02/2005, you wrote:\n&gt; \n&gt; \n&gt; &gt;Ian,\n&gt; &gt;\n&gt; &gt;One of the interesting things that comes up when you&#39;re working \nwith\n&gt; &gt;evolution is how much you should allow your own analytic \nintuitions\n&gt; &gt;to constrain the final solution.  You&#39;ve put a lot of thought into\n&gt; &gt;the way modularity could work, but one question I have is how much\n&gt; &gt;of this architecture will just naturally arise out of the right \nkind\n&gt; &gt;of encoding and evolutionary algorithm on its own?\n&gt; \n&gt; In one sense, you are entirely right be definition.  e.g. because \nwhat you \n&gt; describe is what nature did and that is the one actual example we \nhave of \n&gt; this working.  Although one could obviously argue about whether \nany of \n&gt; nature&#39;s &quot;modularies&quot; match our expectations...\n&gt; \n&gt; On the other hand, one lesson from the history of genetic \ncomputing over \n&gt; the last few decades is that you cannot just set up a &quot;reasonable&quot; \nencoding \n&gt; and expect the most sophisticated effects to occur.  In fact, the \noriginal \n&gt; design of NEAT is based on an observation of exactly this type -- \nnamely \n&gt; the observation that the encoding _must_ track the same &quot;feature&quot; \nacross \n&gt; multiple generations and know that it is the same thing when a \nfuture \n&gt; breeding occurs -- hence innovation numbers.\n&gt; \n&gt; e.g. in adding innovation numbers, the encoding was being changed \nin a way \n&gt; that you (Ken) had deduced was necessary for a certain type of \nevolution to \n&gt; occur.  That type of evolution being coherent match-up between \nfeatures in \n&gt; the genomes of different individuals during cross-over.  Thus side-\nstepping \n&gt; the &quot;competing conventions problem&quot;.\n&gt; \n&gt; So my claim is that in thinking about modules and interfaces as \nseparate \n&gt; objects (at least for the sake of discussion) I&#39;m trying to do the \nsame \n&gt; sort of side-step that Ken did for the original NEAT.\n&gt; \n&gt; To put this is perspective, remember that nature evolved its \nalgorithm and \n&gt; encoding (for modularity) in a context where all of the underlying \nsystems \n&gt; were also free to evolve (or be them very heavily constrained by \npreviously \n&gt; evolved systems) and, further, that evolution did in the context \nof already \n&gt; having given those underlying systems high evolvability.\n&gt; \n&gt; That and nature also used a population size and generation count \nthat we \n&gt; can only dream about.\n&gt; \n&gt; So, all in all I don&#39;t rate our chances of seeing the evolution of \nmodules \n&gt; in anything less than a system which we have _designed_ to support \nit.\n&gt; \n&gt; That said, what is &quot;design&quot; of that system except picking &quot;right \nkind of \n&gt; encoding and evolutionary algorithm&quot;.\n&gt; \n&gt; So I&#39;ve come a long way around to try and say that your viewpoint \nand mine \n&gt; are the same, except that I don&#39;t expect to see a result unless I \n&gt; deliberately design the system to support modularity.\n&gt; \n&gt; Do this make sense?\n&gt; \n\nYes what you said makes sense to me.  You are basically hoping to \nidentify some constraints that would be helpful to evolution.  Your \nhunch is that these constraints have something to do with modularity.\n\n\n&gt; &gt;   The other side\n&gt; &gt;of the question is that there may be a better way to think about\n&gt; &gt;this that evolution might discover, but it won&#39;t discover it if \nyou\n&gt; &gt;predetermine what the right way to do things is.  That&#39;s not in \nany\n&gt; &gt;way a criticism of what you&#39;ve been talking about.  Rather, it&#39;s\n&gt; &gt;just to point out that it&#39;s sometimes hard to know how much \nthought\n&gt; &gt;we should be putting into the solution itself as opposed to a \nsystem\n&gt; &gt;that can automatically generate the solution on its own.  It&#39;s a\n&gt; &gt;sublte and confusing distinction sometimes.\n&gt; \n&gt; That and there&#39;s a log of related ideas, all of which are in some \nsense \n&gt; &quot;modularity&quot; but which are not 100% the same thing and which might \nbe found \n&gt; in different parts of &quot;nature&quot;, required by different problems, \nand \n&gt; approached by different experiments.\n&gt; \n&gt; So what I would like to get around to is sort out some of the \npotential \n&gt; confusion by talking through some experimental design(s).  e.g. if \nwe had \n&gt; an experimental design (even a thought experiment) that we agreed \ncaptured \n&gt; some aspect of modularity, then what we would have would be \nan &quot;agreement \n&gt; in principal&quot; that an aspect of modularity was addressable, and \n&gt; interesting, and also a definition of what what it was (as long as \nthe \n&gt; experiment was unambiguous enough).\n&gt; \n\nAbsolutely I&#39;d be interested in hearing some experiments or thought \nexperiments test the right concept.  But as I said below, it can be \nhard to think of experiments like that.\n\n&gt; &gt;I also agree with Mitchell in that we really need some problems \nthat\n&gt; &gt;require the kinds of complex architectures that we are speculating\n&gt; &gt;about.  It&#39;s surprisingly hard to think of good benchmarks that \nneed\n&gt; &gt;or utilize modularity explicitly, or that utilize any kind of \nhigh-\n&gt; &gt;level complexity for that matter.  What kind of problem would\n&gt; &gt;require an NN with a million neurons, but wouldn&#39;t take 300 years \nto\n&gt; &gt;solve?  In other words, what&#39;s the right simple proof of concept \nto\n&gt; &gt;show that you can evolve something complex?\n&gt; \n&gt; I don&#39;t anticipate for a moment that a network would need to have \na million \n&gt; neurones before it benefited from some form of modularity.  e.g. \nif a \n&gt; game-playing network had a need to evaluate different areas of the \nboard in \n&gt; exactly the same manner, then applying the same 10-neurone module \nto all \n&gt; such areas would be an advantage...\n&gt; \n\nWell I only mentioned the million-neuron network as an example of \nsomething that sounds potentially powerful as a computational \nsystem, yet is quite difficult to design a suitable experiment to \ntest.  Modularity is a different issue than size and complexity, yet \nthe same problem arises, i.e. it&#39;s hard to think of how to test that \nan implementation of it really &quot;works&quot; as it should.  \n\nBasically what I&#39;m saying is it would be interesting to hear about \nsimple experiments that test the power of modular systems.  Also, \nI&#39;d be especially interested in problems that are not board games.  \nWhile board games certainly demonstrate something, they are \nfrequently very difficult for a variety of reasons that are not \nrelated to modularity, meaning the results can be confounded.  Is \nthere some kind of experiment that really separates the modularity \naspect out cleanly and clearly?\n\nken\n\n\n\n\n"}}