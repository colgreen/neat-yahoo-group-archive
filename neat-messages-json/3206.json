{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":281645563,"authorName":"afcarl2","from":"&quot;afcarl2&quot; &lt;a.carl@...&gt;","profile":"afcarl2","replyTo":"LIST","senderId":"qaRdBXSumA_WHxV7TFT6GhFkohPUgLFBEVyrgX51gLzzIpClFIDE56ElzWYtxHg6qI1LC4NWfjkF-QmK0H2-5wo","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Question Re: HyperNEAT Speciate","postDate":"1177700314","msgId":3206,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYwdGg0cSs5aHNjQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDhkOGZmZTM0MDcwNDI3MTEyOXA1ZGFhNzNkZXE5MjhhMjBlZGYzYzVjNTJAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":3205,"nextInTopic":3207,"prevInTime":3205,"nextInTime":3207,"topicId":3197,"numMessagesInTopic":14,"msgSnippet":"Jason, You are indeed correct, and thank you! The noted edit was my own and not yours (most embarrassing...too many interrupts being serviced). A couple","rawEmail":"Return-Path: &lt;a.carl@...&gt;\r\nX-Sender: a.carl@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 49128 invoked from network); 27 Apr 2007 18:58:45 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m45.grp.scd.yahoo.com with QMQP; 27 Apr 2007 18:58:45 -0000\r\nReceived: from unknown (HELO n20a.bullet.sp1.yahoo.com) (69.147.64.133)\n  by mta13.grp.scd.yahoo.com with SMTP; 27 Apr 2007 18:58:45 -0000\r\nReceived: from [216.252.122.218] by n20.bullet.sp1.yahoo.com with NNFMP; 27 Apr 2007 18:58:35 -0000\r\nReceived: from [66.218.69.2] by t3.bullet.sp1.yahoo.com with NNFMP; 27 Apr 2007 18:58:35 -0000\r\nReceived: from [66.218.66.87] by t2.bullet.scd.yahoo.com with NNFMP; 27 Apr 2007 18:58:35 -0000\r\nDate: Fri, 27 Apr 2007 18:58:34 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;f0th4q+9hsc@...&gt;\r\nIn-Reply-To: &lt;8d8ffe340704271129p5daa73deq928a20edf3c5c52@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;afcarl2&quot; &lt;a.carl@...&gt;\r\nSubject: Question Re: HyperNEAT Speciate\r\nX-Yahoo-Group-Post: member; u=281645563; y=VbzTQ-6mMvqsfqO0FwQUceSVSyYL11VOQ6ppPN7GSN1QzA\r\nX-Yahoo-Profile: afcarl2\r\n\r\nJason,\n\n   You are indeed correct, and thank you! The noted edit was my own=\r\n \nand not yours (most embarrassing...too many interrupts being \nserviced).\n=\r\n\nA couple questions re: HyperNEAT(?):\n\n(a) Would you have any xml output fi=\r\nles and associated \nruntimes/platform/compiler/OS info for the findpointexp=\r\neriment? (the \nresults folder appears to contain none)\n\n(b) Have trait para=\r\nmeters been dropped from you NEAT implementation?\n\n(c) Have you any mechani=\r\nsm to employ activation functions which have \nadditional parameters associa=\r\nted w/ them, rather than solely depend \non the evolved aggregation of indiv=\r\nidual monolith node activation \nfunctions?\n\nThanks,\n   Andy Carl\n\n\n--- In n=\r\neat@yahoogroups.com, &quot;Jason G&quot; &lt;jgmath2000@...&gt; wrote:\n&gt;\n&gt; I checked the or=\r\niginal code and the change you requested was \nalready there.\n&gt; Maybe you ac=\r\ncidentally changed it and then changed it back?  I went \nback\n&gt; several rev=\r\nisions and all of them had the code the way you suggest \nit should\n&gt; be.\n&gt; =\r\n\n&gt; Here is a copy of the code that is it the release:\n&gt; \n&gt; \n&gt;     void Expe=\r\nrimentRun::start()\n&gt;     {\n&gt;         cout &lt;&lt; &quot;Experiment started&#92;n&quot;;\n&gt;     =\r\n    size_t maxGenerations =3D\n&gt; size_t(NEAT::Globals::getSingleton()-&gt;getPa=\r\nrameterValue\n(&quot;MaxGenerations&quot;));\n&gt; \n&gt;         started=3Drunning=3Dtrue;\n&gt; =\r\n\n&gt;         for (size_t\n&gt; generations=3D(population-&gt;getGenerationCount()-\n1=\r\n);generations&lt;maxGenerations;generations++)\n&gt;         {\n&gt;             if (g=\r\nenerations&gt;0)\n&gt;             {\n&gt;                 mutex::scoped_lock scoped_l=\r\nock(*populationMutex);\n&gt;                 cout &lt;&lt; &quot;PRODUCING NEXT GENERATION=\r\n&#92;n&quot;;\n&gt;                 produceNextGeneration();\n&gt;                 cout &lt;&lt; &quot;=\r\nDONE PRODUCING&#92;n&quot;;\n&gt;             }\n&gt; \n&gt;             if (experiments[0]-&gt;per=\r\nformUserEvaluations())\n&gt;             {\n&gt;                 frame-&gt;getUserEval=\r\nuationFrame()-\n&gt;updateEvaluationPanels();\n&gt;                 running=3Dfalse=\r\n;\n&gt;                 while (!running)\n&gt;                 {\n&gt;                 =\r\n    boost::xtime xt;\n&gt;                     boost::xtime_get(&xt, boost::TIM=\r\nE_UTC);\n&gt;                     xt.sec +=3D 1;\n&gt;                     boost::t=\r\nhread::sleep(xt); // Sleep for 1/2 \nsecond\n&gt;                     //cout &lt;&lt; =\r\n&quot;Sleeping while user evaluates!&#92;n&quot;;\n&gt;                 }\n&gt;             }\n&gt;  =\r\n           else\n&gt;             {\n&gt;                 while (!running)\n&gt;       =\r\n          {\n&gt;                     boost::xtime xt;\n&gt;                     bo=\r\nost::xtime_get(&xt, boost::TIME_UTC);\n&gt;                     xt.sec +=3D 1;\n=\r\n&gt;                     boost::thread::sleep(xt); // Sleep for 1/2 \nsecond\n&gt; =\r\n                }\n&gt;                 evaluatePopulation();\n&gt;             }\n&gt;=\r\n \n&gt;             cout &lt;&lt; &quot;Finishing evaluations&#92;n&quot;;\n&gt;             finishEval=\r\nuations();\n&gt;             cout &lt;&lt; &quot;Evaluations Finished&#92;n&quot;;\n&gt;         }\n&gt;   =\r\n      cout &lt;&lt; &quot;Experiment finished&#92;n&quot;;\n&gt; \n&gt; \n&gt; \n&gt; Notice that the finishEva=\r\nluations() is within the for loop.  Maybe \nyou\n&gt; accidentally deleted a bra=\r\nce or something when you were editing the \ncode?\n&gt; \n&gt; \n&gt; \n&gt; On 4/27/07, afc=\r\narl2 &lt;a.carl@...&gt; wrote:\n&gt; &gt;\n&gt; &gt;   Responses below:\n&gt; &gt;\n&gt; &gt; --- In neat@yah=\r\noogroups.com &lt;neat%40yahoogroups.com&gt;, &quot;Jason G&quot;\n&gt; &gt; &lt;jgmath2000@&gt; wrote:\n&gt;=\r\n &gt; &gt;\n&gt; &gt; &gt; Have you tried taking the unmodified code with my experiment and=\r\n\n&gt; &gt; running\n&gt; &gt; &gt; it? Do you still see these behaviors?\n&gt; &gt;\n&gt; &gt; The suppli=\r\ned executable w/ associated dll&#39;s appears to work fine.\n&gt; &gt; Perhaps the def=\r\nault undefined value for species ID in the dll\n&gt; &gt; implementation allowed t=\r\nhe equality test in getSpecies (i.e. &quot;if\n&gt; &gt; (species[a]-&gt;getID()=3D=3Did)&quot;=\r\n), to be satisfied.\n&gt; &gt;\n&gt; &gt; &gt; Maybe you can provide more details\n&gt; &gt; &gt; into=\r\n what is happening that&#39;s causing the finishEvaluations not \nto\n&gt; &gt; run.\n&gt; =\r\n&gt; &gt; It&#39;s possible that finishEvaluations is causing an exception \nwhich\n&gt; &gt;=\r\n it is\n&gt; &gt; &gt; printing out, and then continuing on, resulting in what appear=\r\ns \nto\n&gt; &gt; be no\n&gt; &gt; &gt; call to finishEvaluations.\n&gt; &gt;\n&gt; &gt; No, I have run wit=\r\nh multiple break points in debug. Execution is \nnot\n&gt; &gt; flowing to finishEv=\r\naluations prior to the exception in getSpecies.\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; I&#39;ve compil=\r\ned and run my program with MSVC 2003 before, and it\n&gt; &gt; seemed to\n&gt; &gt; &gt; wor=\r\nk, but that was a few months ago. I will try to compile and \nrun\n&gt; &gt; the\n&gt; =\r\n&gt; &gt; findclusterexperiment with MSVC2005 here at home and let you \nknow\n&gt; &gt; =\r\nif I find\n&gt; &gt; &gt; anything.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Maybe you can run it in the visual st=\r\nudio debugger and find out \nwhy\n&gt; &gt; it&#39;s not\n&gt; &gt; &gt; executing finishevaluati=\r\nons?\n&gt; &gt;\n&gt; &gt; Have done this. I believe the logic in ExperimentRun::start \nr=\r\nequires\n&gt; &gt; that the call to finishEvaluations should be inside the &quot;for \n(=\r\nsize_t\n&gt; &gt; generations=3D(population-getGenerationCount()-\n&gt; &gt; 1);generatio=\r\nns&lt;maxGenerations;generations++)&quot; braces. I have \ntested\n&gt; &gt; this change an=\r\nd it appears to work correctly. The code \nimplementing\n&gt; &gt; this modificatio=\r\nn is supplied in the posted zip file to the files\n&gt; &gt; section of the group =\r\nyesterday (04/26/07). Any feedback is\n&gt; &gt; appreciated!\n&gt; &gt;\n&gt; &gt; Thanks,\n&gt; &gt; =\r\nAndy Carl\n&gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; On 4/26/07, afcarl2 &lt;a.carl@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; =\r\n&gt; &gt; Jason,\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Seeming good news/bad news. First, I had made re=\r\nference to\n&gt; &gt; &gt; &gt; onGeneration equal to 0 in produceNextGeneration and con=\r\nfused \nit\n&gt; &gt; with\n&gt; &gt; &gt; &gt; generations equal to 1 in ExperimentRun::start, =\r\nwhich is what \nyou\n&gt; &gt; &gt; &gt; were refering to with the &quot;generations&gt;0&quot; test. =\r\nBad news, I\n&gt; &gt; believe\n&gt; &gt; &gt; &gt; that for your intended purpose(?), the call=\r\n to \nfinishEvaluations\n&gt; &gt; &gt; &gt; should be inside the &quot;for (size_t generation=\r\ns=3D(population-\n&gt; &gt; &gt; &gt; &gt;getGenerationCount()-\n&gt; &gt; 1);generations&lt;maxGener=\r\nations;generations++)&quot;\n&gt; &gt; &gt; &gt; braces.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; I am getting a call =\r\nto produceNextGeneration with generations\n&gt; &gt; &gt; &gt; equal to 1, with no prior=\r\n call to finishEvaluations, with\n&gt; &gt; &gt; &gt; species.size equal to 0 and the sp=\r\necies ID undefined, \nresulting in\n&gt; &gt; &gt; &gt; the exception associated with a c=\r\nall to getSpecies. I note \nthat\n&gt; &gt; there\n&gt; &gt; &gt; &gt; is some editing in this a=\r\nrea. Maybe a difference in compilers\n&gt; &gt; (MSVC\n&gt; &gt; &gt; &gt; 2003)? Please advise=\r\n.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; Andy Carl\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; --- In =\r\nneat@yahoogroups.com &lt;neat%40yahoogroups.com&gt;&lt;neat%\n40yahoogroups.com&gt;, &quot;Ja=\r\nson\n&gt; &gt; Gauci&quot;\n&gt; &gt; &gt; &gt; &lt;jgmath2000@&gt; wrote:\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; ExperimentR=\r\nun::finishEvaluations should be called before\n&gt; &gt; &gt; &gt; &gt; GeneticPopulation::=\r\nproduceNextGeneration. As long as you do\n&gt; &gt; that,\n&gt; &gt; &gt; &gt; &gt; generation 0 w=\r\nill have species. You shouldn&#39;t get the \nexception\n&gt; &gt; as\n&gt; &gt; &gt; &gt; &gt; long as=\r\n you don&#39;t call produceNextGeneration before\n&gt; &gt; &gt; &gt; finishEvaluations.\n&gt; &gt;=\r\n &gt; &gt; &gt; Notice how there is a &quot;generations&gt;0&quot; if within that for \nloop.\n&gt; &gt; =\r\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Sorry for making it backwards like that, but if I put the\n&gt;=\r\n &gt; &gt; &gt; &gt; produceNextGeneration at the end of the for loop instead of\n&gt; &gt; do=\r\ning it\n&gt; &gt; &gt; &gt; &gt; the way I did, then it would produce an extra generation a=\r\nt \nthe\n&gt; &gt; end\n&gt; &gt; &gt; &gt; &gt; that would not get used.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; As a =\r\nside note, I found out that within the\n&gt; &gt; &gt; &gt; GeneticSpecies::makeBabies\n&gt;=\r\n &gt; &gt; &gt; &gt; routine, it can get stuck in an infinite loop. I&#39;m not sure \nhow\n&gt;=\r\n &gt; it\n&gt; &gt; &gt; &gt; &gt; happend, but until I figure it out, I&#39;ve replaced the while=\r\n\n&gt; &gt; (true)\n&gt; &gt; &gt; &gt; &gt; loops with for loops which try 1,000,000 times and th=\r\nen \nbail by\n&gt; &gt; &gt; &gt; &gt; choosing the most fit in the species and doing asexua=\r\nl\n&gt; &gt; &gt; &gt; reproduction.\n&gt; &gt; &gt; &gt; &gt; It&#39;s only happend once so it might never =\r\nhappen to you, but \njust\n&gt; &gt; &gt; &gt; &gt; thought I&#39;d let you know.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; =\r\n&gt; &gt; &gt; I&#39;ve made several other improvements too, including a better\n&gt; &gt; rand=\r\nom\n&gt; &gt; &gt; &gt; &gt; generator. Once I get beyond this next milestone, I&#39;ll \nreleas=\r\ne\n&gt; &gt; an\n&gt; &gt; &gt; &gt; &gt; improved version.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Thanks a lot for y=\r\nour input, if you still can&#39;t get it to \nrun,\n&gt; &gt; don&#39;t\n&gt; &gt; &gt; &gt; &gt; hesitate =\r\nto reply and I&#39;ll try to help you as best I can.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n&gt; &gt; --- In neat@yahoogroups.com &lt;neat%40yahoogroups.com&gt;&lt;neat%\n40yahoogroup=\r\ns.com&gt;, &quot;afcarl2&quot;\n&gt; &gt; &lt;a.carl@&gt;\n&gt; &gt; &gt; &gt; wrote:\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Jaso=\r\nn,\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Review of the NEAT portion of the HyperNEAT code=\r\n indicates\n&gt; &gt; &gt; &gt; that\n&gt; &gt; &gt; &gt; &gt; &gt; speciate (and size thereof via pushback=\r\n), is only called \nfrom\n&gt; &gt; &gt; &gt; &gt; &gt; adjustFitness, which is called from\n&gt; &gt;=\r\n &gt; &gt; ExperimentRun::finishEvaluations.\n&gt; &gt; &gt; &gt; &gt; &gt; The seeming signifcance =\r\nof this is that the size of \nspecies is\n&gt; &gt; &gt; &gt; zero for\n&gt; &gt; &gt; &gt; &gt; &gt; genera=\r\ntion 0, which in itself is not a problem, but there\n&gt; &gt; results\n&gt; &gt; &gt; &gt; an\n=\r\n&gt; &gt; &gt; &gt; &gt; &gt; exception in\n&gt; &gt; &gt; &gt; &gt; &gt; GeneticPopulation::produceNextGenerati=\r\non, associated with \na\n&gt; &gt; call\n&gt; &gt; &gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; &gt; getSpecies. Since th=\r\ne species ID is undefined for \ngeneration 0\n&gt; &gt; &gt; &gt; (since\n&gt; &gt; &gt; &gt; &gt; &gt; spec=\r\niate has not yet been called), the test &quot;if(species\n[a]-\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;getID=\r\n()=3D=3Did)&quot; will not be true. Was this intended? Please\n&gt; &gt; advise.\n&gt; &gt; &gt; =\r\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; &gt; &gt; Andy Carl\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt;=\r\n &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; --\n&gt; &gt; &gt; Jason G\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt; \n=\r\n&gt; &gt;\n&gt; \n&gt; \n&gt; \n&gt; -- \n&gt; Jason G\n&gt;\n\n\n\n"}}