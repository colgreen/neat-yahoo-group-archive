{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":130107745,"authorName":"Chad Bohannan","from":"&quot;Chad Bohannan&quot; &lt;chad@...&gt;","profile":"tailboom22","replyTo":"LIST","senderId":"mWek7JymhvYDY2fuqcFsYy9nfb0MNvNVR6eoePNheg0OacJEd9A2mvUVNru2veWG0IyCoCAXEVi3OCVXwjWUKIQrjJ1z_MsQTtU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Network Stabilization Question","postDate":"1086040274","msgId":929,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEwNzUwMWM0NDc1OSQ2NGIwYjQyMCQ2ZWNiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":927,"nextInTopic":930,"prevInTime":928,"nextInTime":930,"topicId":871,"numMessagesInTopic":15,"msgSnippet":"... This is not correct. The principle of NEAT is that is starts with the input nodes connected to the output nodes. This is in fact simple. Then nodes begin","rawEmail":"Return-Path: &lt;chad@...&gt;\r\nX-Sender: chad@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 16074 invoked from network); 31 May 2004 21:57:28 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m21.grp.scd.yahoo.com with QMQP; 31 May 2004 21:57:28 -0000\r\nReceived: from unknown (HELO mwde08la.mail2world.com) (66.28.189.182)\n  by mta1.grp.scd.yahoo.com with SMTP; 31 May 2004 21:57:28 -0000\r\nReceived: from mail pickup service by mwde08la.mail2world.com with Microsoft SMTPSVC;\n\t Mon, 31 May 2004 14:51:14 -0700\r\nauth-sender:chad@...\r\nReceived: from 10.1.203.110 unverified ([10.1.203.110]) by mwde08la.mail2world.com with Mail2World SMTP Server,\n\tMon 31 May 2004 14:51:14 -07:00\r\nReceived: from [153.90.194.180] by bohannan.net with HTTP; 5/31/2004 2:51:13 PM PST\r\nthread-index: AcRHWWSprLyAzanoSvyjRUtC48fjRg==\r\nThread-Topic: [neat] Re: Network Stabilization Question\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nDate: Mon, 31 May 2004 14:51:14 -0700\r\nMessage-ID: &lt;107501c44759$64b0b420$6ecb010a@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_1076_01C4471E.B851DC20&quot;\r\nX-Mailer: Microsoft CDO for Exchange 2000\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nContent-Class: urn:content-classes:message\r\nImportance: normal\r\nPriority: normal\r\nX-OriginalArrivalTime: 31 May 2004 21:51:14.0540 (UTC) FILETIME=[65005AC0:01C44759]\r\nX-eGroups-Remote-IP: 66.28.189.182\r\nFrom: &quot;Chad Bohannan&quot; &lt;chad@...&gt;\r\nSubject: Re: [neat] Re: Network Stabilization Question\r\nX-Yahoo-Group-Post: member; u=130107745\r\nX-Yahoo-Profile: tailboom22\r\n\r\n\r\n------=_NextPart_000_1076_01C4471E.B851DC20\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\n\n&gt; If I don&#39;t stabilize, should I at least activate the network a set \n&gt; number of times? If I only activate the network once, then \n&gt; the mapping of current input to current output can only be \n&gt; very simple. \n\nThis is not correct. The principle of NEAT is that is starts with the\ninput nodes connected to the output nodes. This is in fact simple. Then\nnodes begin to be added, as well as connections. To make the idea of\nevolution work, you have to *let* it work. This is different than\n*making* it work. To do this you must clearly define fitness, then allow\nthe algorithm to find a solution which raises the fitness, not define\nwhat you think is the best way to achieve the best performance. Like in\nthe game of tag, it&#39;s better to describe fitness as &#39;time spent not it&#39;\nthan &#39;distance from current it,&#39; as one allows more dynamic\n(unpredictable) behavior than the other. \n\nA hypothetical solution to your problem may have seven layers of\nneurons. Input, output, and five layers of recurrent nodes (corosponding\nto your five levels of history you feel is optimum). The connections\nwill probably be a huge mess, because the five layers need to have\nmeaning through time. All of these hidden layers, plus the input layer,\nare summed at the output, meaning that any input is immediately\naffecting the output, with the influence of the hidden layers, which\nhave recurrent connections (i.e. memory). \n\nIf you choose to repeatedly activate anyway, remember to be consistent,\nand test the networks the same way they are evolved. It may well be\npossible to get better performance by repeating inputs some number of\ntimes. If you try it and find it to be the case, it could be very\ninteresting for everybody. If it is possible, I think it would be a very\nlarge network that makes it work. That makes it a difficult hypothises\nto test.\n\nchad \n\r\n------=_NextPart_000_1076_01C4471E.B851DC20\r\nContent-Type: text/html\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;HTML&gt;\n&lt;BODY&gt;\n &lt;br&gt;\n &lt;br&gt;\n&gt; If I don&#39;t stabilize, should I at least activate the network a set &lt;br&gt;\n&gt; number of times?  If I only activate the network once, then &lt;br&gt;\n&gt; the mapping of current input to current output can only be &lt;br&gt;\n&gt; very simple.   &lt;br&gt;\n &lt;br&gt;\nThis is not correct. The principle of NEAT is that is starts with the input nodes connected to the output nodes. This is in fact simple. Then nodes begin to be added, as well as connections. To make the idea of evolution work, you have to *let* it work. This is different than *making* it work. To do this you must clearly define fitness, then allow the algorithm to find a solution which raises the fitness, not define what you think is the best way to achieve the best performance. Like in the game of tag, it&#39;s better to describe fitness as &#39;time spent not it&#39; than &#39;distance from current it,&#39; as one allows more dynamic (unpredictable) behavior than the other. &lt;br&gt;\n &lt;br&gt;\nA hypothetical solution to your problem may have seven layers of neurons. Input, output, and five layers of recurrent nodes (corosponding to your five levels of history you feel is optimum). The connections will probably be a huge mess, because the five layers need to have meaning through time. All of these hidden layers, plus the input layer, are summed at the output, meaning that any input is immediately affecting the output, with the influence of the hidden layers, which have recurrent connections (i.e. memory). &lt;br&gt;\n &lt;br&gt;\nIf you choose to repeatedly activate anyway, remember to be consistent, and test the networks the same way they are evolved. It may well be possible to get better performance by repeating inputs some number of times. If you try it and find it to be the case, it could be very interesting for everybody. If it is possible, I think it would be a very large network that makes it work. That makes it a difficult hypothises to test.&lt;br&gt;\n &lt;br&gt;\nchad\n&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_1076_01C4471E.B851DC20--\r\n\n"}}