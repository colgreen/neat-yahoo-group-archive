{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"dr8MNIQx8Yl2Z8NNg1zFVO14hxgK8u6jtZoIbvO2z4tEsNvSDPsEDgmwFWrHgI8aZg97hOxByJyWzi68eUhfhBvmBWd7o8wWJ4k","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Adding only feed-forward connections","postDate":"1131020714","msgId":2383,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4zLjQuMC4yMDA1MTEwMzEyMTEwNS4wMzNhNGRjMEBwb3AubWFpbC55YWhvby5jby51az4=","inReplyToHeader":"PDQzNjkzODI3LjIwMjA4QGRzbC5waXBleC5jb20+","referencesHeader":"PDYuMi4zLjQuMC4yMDA1MTEwMjEwNTMzOC4wMzMzYzczMEBwb3AubWFpbC55YWhvby5jby51az4gPDIwMDUxMTAyMTQ1MDA3LjgyNjI2LnFtYWlsQHdlYjUyODEzLm1haWwueWFob28uY29tPiA8Ni4yLjMuNC4wLjIwMDUxMTAyMTUxOTU2LjAzMzg1NzYwQHBvcC5tYWlsLnlhaG9vLmNvLnVrPiA8NDM2OTM4MjcuMjAyMDhAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":2382,"nextInTopic":2385,"prevInTime":2382,"nextInTime":2384,"topicId":2372,"numMessagesInTopic":22,"msgSnippet":"At 22:05 02/11/2005, you wrote:\n Ian Badcoe wrote:\n \n Hi,\n \n A-ha, you mean if I have\n \n A - B - C - D\n \n A- B - C - D\n \n Then it won t","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 64524 invoked from network); 3 Nov 2005 12:24:39 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m22.grp.scd.yahoo.com with QMQP; 3 Nov 2005 12:24:39 -0000\r\nReceived: from unknown (HELO smtp001.mail.ukl.yahoo.com) (217.12.11.32)\n  by mta5.grp.scd.yahoo.com with SMTP; 3 Nov 2005 12:24:39 -0000\r\nReceived: (qmail 42154 invoked from network); 3 Nov 2005 12:24:38 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp001.mail.ukl.yahoo.com with SMTP; 3 Nov 2005 12:24:38 -0000\r\nMessage-Id: &lt;6.2.3.4.0.20051103121105.033a4dc0@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.3.4\r\nDate: Thu, 03 Nov 2005 12:25:14 +0000\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;43693827.20208@...&gt;\r\nReferences: &lt;6.2.3.4.0.20051102105338.0333c730@...&gt;\n &lt;20051102145007.82626.qmail@...&gt;\n &lt;6.2.3.4.0.20051102151956.03385760@...&gt;\n &lt;43693827.20208@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Adding only feed-forward connections\r\nX-Yahoo-Group-Post: member; u=7192225; y=dYXTBMwT3pWR52-AyO-Dn9GZz0rVrqGsSICM9Vla6qpouwCzyg\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 22:05 02/11/2005, you wrote:\n&gt;Ian Badcoe wrote:\n&gt;\n&gt; &gt;Hi,\n&gt; &gt;\n&gt; &gt;A-ha, you mean if I have\n&gt; &gt;\n&gt; &gt;A -&gt; B -&gt; C -&gt;D\n&gt; &gt;\n&gt; &gt;A-&gt; B&#39; -&gt;C&#39; -&gt;D\n&gt; &gt;\n&gt; &gt;Then it won&#39;t let me connect C&#39; to B?\n&gt; &gt;\n&gt; &gt;\n&gt;Yes I was thinking about this also [Actually I did a superior\n&gt;analysis... I used pencil and paper instead of napkins ;) ]. Does it\n&gt;matter I wonder? I suppose if e.g. some neuron is acting as a feature\n&gt;detector but we can&#39;t re-use its output in some neurons just because\n&gt;it&#39;s depth value is too high, then that does sound quite limiting.\n&gt;\n&gt; &gt;That&#39;s right, but I thought I had a scheme which sorted this, give me\n&gt; &gt;a while to think it through....\n&gt; &gt;\n&gt; &gt;\n&gt;My instinct here is that any such technique will tend towards a time\n&gt;complexity similar to the algorithm that just searches for\n&gt;recursiveness. I&#39;ll be glad to be proved wrong though.\n\nI think you may be right there.  Although I&#39;ll outline a reasonably \nefficient approach in a moment.\n\nI think I got my wires crossed with &quot;teleology problem&quot;.  e.g. I had \na mental note that depth counting would prevent recurrence and I \nunconsciously translated that into &quot;depth counting detects \nrecurrence&quot; which is does and &quot;depth counting does not detect \nnon-recurrence&quot;, which of course it doesn&#39;t ... :)\n\nOne cheap way to handle this might be to keep a bit-array on each \nnode.  Each node owns a unique bit in that array (2 ^ innovation, if \nyou like).  Now you can proceed as with the counting, only you are \nORing in the bits.  So, nodes adjoining the input layer (I&#39;m skipping \nthe inputs themselves as I assume you already avoid recurrent \nconnections to them) have just their own bit set.  Other nodes have \nall the bits that are set in their children, plus their own bit set.\n\nThis is quite efficient because:\n\n1) you detect recurrence when, if you are adding a connection, the \nsource has the destination&#39;s bit set.  This means that the \ndestination already exists upstream of the source.\n\n2) when you add a connection you just have to merge the source&#39;s bits \ninto the destination.  Only when that leads to a change in the \ndestination&#39;s bits do you need to recursively propagate those changes \nthrough its downstream connections.  And merging is just an OR \noperation, and ORing on an unsigned long will do 32 at once....\n\n3) it gets a little more expensive if you delete a connection, you \nhave to tear-down the destination&#39;s current bit array and rebuilt if \nfrom all children, but even that&#39;s not so expensive and 66.66% of all \nNEAT implementations don&#39;t delete connections anyway.\n\n--\n\nAll that said, to go back to my failed example:\n\n&gt; &gt;A -&gt; B -&gt; C -&gt;D\n&gt; &gt;\n&gt; &gt;A-&gt; B&#39; -&gt;C&#39; -&gt;D\n\nWhere the original scheme couldn&#39;t connect C to B&#39;.\n\nWhat happens now when individual 1 has just connected C to B&#39; and \nindividual 2 has just connected C&#39; to B and they try to breed?\n\n         Ian\n\n\n\nIn fifteen minutes, everybody will be in the future.\n\n\n\n\t\t\n___________________________________________________________ \nHow much free photo storage do you get? Store your holiday \nsnaps for FREE with Yahoo! Photos http://uk.photos.yahoo.com\r\n\n"}}