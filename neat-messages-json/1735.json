{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":36572612,"authorName":"Greg Barton","from":"&quot;Greg Barton&quot; &lt;greg_barton@...&gt;","profile":"greg_barton","replyTo":"LIST","senderId":"8mhZlgW3l_ExqVNdBYKSHrIZMwNUTIlxlxMxS5hu8uZHK1ynxhubSL9KMoyJM5FURldj3JVqH62xC7XS5w6hTEWhBQKm2i2OsN7Xiw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: REAT","postDate":"1100799119","msgId":1735,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNuaW1hZis2cDUyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGNuZ2o4cytpYmt0QGVHcm91cHMuY29tPg=="},"prevInTopic":1732,"nextInTopic":1738,"prevInTime":1734,"nextInTime":1736,"topicId":1723,"numMessagesInTopic":6,"msgSnippet":"... Deterministic.  They are compiled from a list of if-then-else rules. A RETE network is a way to make processing these rules computationally practical. A","rawEmail":"Return-Path: &lt;greg_barton@...&gt;\r\nX-Sender: greg_barton@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 12139 invoked from network); 18 Nov 2004 17:32:55 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m11.grp.scd.yahoo.com with QMQP; 18 Nov 2004 17:32:55 -0000\r\nReceived: from unknown (HELO n22a.bulk.scd.yahoo.com) (66.94.237.51)\n  by mta5.grp.scd.yahoo.com with SMTP; 18 Nov 2004 17:32:55 -0000\r\nReceived: from [66.218.69.5] by n22.bulk.scd.yahoo.com with NNFMP; 18 Nov 2004 17:32:01 -0000\r\nReceived: from [66.218.67.142] by mailer5.bulk.scd.yahoo.com with NNFMP; 18 Nov 2004 17:32:01 -0000\r\nDate: Thu, 18 Nov 2004 17:31:59 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;cnimaf+6p52@...&gt;\r\nIn-Reply-To: &lt;cngj8s+ibkt@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 1873\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.51\r\nFrom: &quot;Greg Barton&quot; &lt;greg_barton@...&gt;\r\nSubject: Re: REAT\r\nX-Yahoo-Group-Post: member; u=36572612\r\nX-Yahoo-Profile: greg_barton\r\n\r\n\n--- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@c...&gt; wrote:\n\n&gt; Anyway, the RETE stuff is totally new to me, and looks like a \n&gt; promising domain for NEAT.  I&#39;m kind of intererested, Greg, if you \n&gt; could summarize a little how the RETE networks are currently built?  \n&gt; Is it by hand, or through some deterministic process?  \n\nDeterministic.  They are compiled from a list of if-then-else rules. \nA RETE network is a way to make processing these rules computationally\npractical.\n\nA short logic rules primer:\n\nA logic rule consists of two parts, a left hand side (LHS) of logical\nconditions, and a right hand side (RHS) of actions.  Both sides read\n(LHS) and write (RHS) to a set of facts called the &quot;working memory.&quot; \nBefore the RETE algorithm came along processing rulesets was\nimpractical because, for every change made by an RHS to working\nmemory, every LHS had to be checked, leading to nasty computational\ncosts.  The RETE tracks the changes made by each rule RHS and\n&quot;informs&quot; only the applicable rule LHS&#39;s of the change.  Basically, it\nreduces the computational cost of tracking working memory change from\nO((average complexity of rule LHS) * (number of rules) * (number of\nchanged objects in RHS)) to O((average complexity of rule LHS) *\n(number of changed objects in RHS)), a huge benefit.\n\n&gt; And what are \n&gt; the flaws with the current way of building them that NEAT might \n&gt; overcome?  Do the RETE networks currently tend to be suboptimal in \n&gt; some way?\n\nBy suboptimal do you mean computationally less efficient?  If so, then\nno.  It&#39;s not that they are built suboptimally, it&#39;s that I&#39;d like to\nfind a way to evolve them automatically to change their logical\nfunction. (i.e. change what they compute instead of how they compute.)\n I suppose you could try to evolve more efficient networks, but that&#39;s\nalready a pretty straightforward process.\n\nGreG\n\n\n\n\n\n"}}