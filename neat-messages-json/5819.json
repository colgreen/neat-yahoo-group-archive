{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":194831545,"authorName":"Manusha Wijekoon","from":"Manusha Wijekoon &lt;manusha_wijekoon@...&gt;","profile":"manusha_wijekoon","replyTo":"LIST","senderId":"DjMIElQOgvKAVBs0CfhTN05tOZmdUJ15aPfHp0d1CeqhrlHAPiO6jI_xsyraxIxJVH1NNdRiJLN_diTEefWEOIy5UNZMB6R5ge-ErACostTW27ru","spamInfo":{"isSpam":false,"reason":"12"},"subject":"help needed with neat usage","postDate":"1337702547","msgId":5819,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDEzMzc3MDI1NDcuNTQzNDMuWWFob29NYWlsTmVvQHdlYjE2MTMwNi5tYWlsLmJmMS55YWhvby5jb20+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":5818,"nextInTime":5820,"topicId":5819,"numMessagesInTopic":1,"msgSnippet":"Hello, I am trying to evolve an ANN for the simple task for moving a car like robot to a given target position in 2D. For this i am using NEAT. I followed the","rawEmail":"Return-Path: &lt;manusha_wijekoon@...&gt;\r\nX-Sender: manusha_wijekoon@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 62571 invoked from network); 22 May 2012 16:02:29 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m13.grp.sp2.yahoo.com with QMQP; 22 May 2012 16:02:29 -0000\r\nX-Received: from unknown (HELO nm19.bullet.mail.bf1.yahoo.com) (98.139.212.178)\n  by mta4.grp.sp2.yahoo.com with SMTP; 22 May 2012 16:02:28 -0000\r\nX-Received: from [98.139.212.152] by nm19.bullet.mail.bf1.yahoo.com with NNFMP; 22 May 2012 16:02:27 -0000\r\nX-Received: from [98.139.212.223] by tm9.bullet.mail.bf1.yahoo.com with NNFMP; 22 May 2012 16:02:27 -0000\r\nX-Received: from [127.0.0.1] by omp1032.mail.bf1.yahoo.com with NNFMP; 22 May 2012 16:02:27 -0000\r\nX-Yahoo-Newman-Property: ymail-3\r\nX-Yahoo-Newman-Id: 467012.60566.bm@...\r\nX-Received: (qmail 68064 invoked by uid 60001); 22 May 2012 16:02:27 -0000\r\nX-YMail-OSG: c_GAeqkVM1lEvgXTtPEaDMTAjLkEMtiDRcs.Wt2Axqq74eA\n 6YJmzKwey44mtL09Xuu5FvAULFBaqQQf4rnYcRsrADmuY_LsYZQLWnfJfEJK\n maL32N65q1x.7Le1J_pwpe4XHuglRqa1CRZQx5ujk8NYIcp8hTSNNZT9qHic\n Nn3bjWZ5ZwP9e7xqc9TP_E3ycrRgflrqFKRwYf0bL2MjYWAvf1mknCRi3Uq0\n sjHojsBKNMWqM5HhIOqLbdUMxj5yRYNO_FUD0ZMt150CrxL2Bk0k3_COdk5y\n 0Rdhfdp4dIneu78E6L7xXKUYpUmKHKNnXUw5CCoG.6O_Gn6zOpA2Wl9vPfnj\n 416nLdoG1eYuNVwADgT0OJC8_0iLe78uDMpPbSDolHS._5buzgimjaYwIL5O\n 8J64MPbnKPIZ.fn.5MfwtSsFIamctZ_eydfuWaR02.Cu2irnaEwce8EKAW4P\n I7VScA8iiQt8XcGhY.vcCA1MALZ42S2Ga.OrIhsNyqBR5eJTiFAFkmMkWwMO\n uRphjFTD3WI5ZxU5soBYJGLjkfaMVr.XfmA--\r\nX-Received: from [61.245.172.33] by web161306.mail.bf1.yahoo.com via HTTP; Tue, 22 May 2012 09:02:27 PDT\r\nX-Mailer: YahooMailWebService/0.8.118.349524\r\nMessage-ID: &lt;1337702547.54343.YahooMailNeo@...&gt;\r\nDate: Tue, 22 May 2012 09:02:27 -0700 (PDT)\r\nTo: &quot;neat@yahoogroups.com&quot; &lt;neat@yahoogroups.com&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;-1600601909-553201778-1337702547=:54343&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Manusha Wijekoon &lt;manusha_wijekoon@...&gt;\r\nReply-To: Manusha Wijekoon &lt;manusha_wijekoon@...&gt;\r\nSubject: help needed with neat usage\r\nX-Yahoo-Group-Post: member; u=194831545; y=agr9ktOlaavIILGJdK_CLR6xHMM8-b4n-i4OUOnApviPw1SyNsvKz4aZWw\r\nX-Yahoo-Profile: manusha_wijekoon\r\n\r\n\r\n---1600601909-553201778-1337702547=:54343\r\nContent-Type: text/plain; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nHello,\n\nI am trying to evolve an ANN for the simple task for moving a car l=\r\nike robot to a given target position in 2D. For this i am using NEAT. I fol=\r\nlowed the documentation and also the experiments that are distributed with =\r\nNEAT. My experimental setup closely resembles sample experiments provided. =\r\nBasically this is what i do:\n\nrun()\n{\nfor 100 experiments\n{\npopulation &lt;- f=\r\nrom start gnome\n\nverify population.\nfor 500 generations\n{\nepoch(population)=\r\n;\nif there is a winner in the epoch, break and continue to the next experim=\r\nent.\n}\n}\n}\n\nepoch(population)\n{\nwinner =3Dfalse;\nfor all organisms in the p=\r\nopulation\n{\nevaluate(organism);\nif organism is a winner=A0\nwinner=3Dtrue;\n}=\r\n\n\nreturn winner\n}\n\nevaluate(organism)\n{\ntarget =3D=A0create a random target=\r\n point\nstart =3D always set to 0,0\nuse the network in the organism to contr=\r\nol the car like robot and get a fitness figure.\nif fitness is better than a=\r\n=A0threshold, mark the organism as a winner and save the organism in a file=\r\n using=A0print_to_file method.\nset the fitness of the organism.\n\nreturn win=\r\nner_or_not;\n}\n\nwhen this is complete, i use saved files to create organisms=\r\n and use them in a test that tests effectiveness of the organism with a new=\r\n random set of targets. The=A0pseudo=A0code is:\n\ntest\n{\nGenome*genome=3DGen=\r\nome::new_Genome_load((char*)gnome_file);\nassert(genome-&gt;verify());\nNEAT::Ne=\r\ntwork*net=3Dgenome-&gt;genesis(0);\n\nfor(inti(0);i&lt;50;++i)\n{\ntest(net);\n}\n}\n\nTh=\r\ne issue is these tests give very high errors; basically the robot does not =\r\nmove to the target at all.=A0\nI have several gray areas in this code howeve=\r\nr.\n1. Should i use just one random target=A0every time=A0the evaluate is ca=\r\nlled? Or should i loop through a set of random targets and average out resu=\r\nlts to set the fitness? In the provided sample experiments, just one random=\r\n evaluation is done per each evaluate call. I do not understand how it gene=\r\nralize the problem. Is it through the # of organisms?\n\n2. what is the corre=\r\nct way of getting the best network after evolution?=A0\n\nPS:\n1. The fitness =\r\nfunction i use is reliable to my knowledge and was taken from a paper.\n2. J=\r\nust to see what happens, i made the evaluate method use a same target in al=\r\nl invocations. This creates a network that works pretty well when i use the=\r\n same target position in the test, (which should be obvious).\r\n---1600601909-553201778-1337702547=:54343\r\nContent-Type: text/html; charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;body&gt;&lt;div style=3D&quot;color:#000; background-color:#fff; font-family:ti=\r\nmes new roman, new york, times, serif;font-size:12pt&quot;&gt;&lt;div style=3D&quot;font-fa=\r\nmily: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;Hello=\r\n,&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, ser=\r\nif; font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roma=\r\nn&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;I am trying to evolve an A=\r\nNN for the simple task for moving a car like robot to a given target positi=\r\non in 2D. For this i am using NEAT. I followed the documentation and also t=\r\nhe experiments that are distributed with NEAT. My experimental setup closel=\r\ny resembles sample experiments provided. Basically this is what i do:&lt;/div&gt;=\r\n&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; fon=\r\nt-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;ne=\r\nw york&#39;, times, serif; font-size: 12pt; &quot;&gt;run()&lt;/div&gt;&lt;div style=3D&quot;font-fam=\r\nily:\n &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;{&lt;/di=\r\nv&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; f=\r\nont-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;=\r\n\t&lt;/span&gt;for 100 experiments&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roma=\r\nn&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-s=\r\npan&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;{&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;t=\r\nimes new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=\r\n=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:=\r\npre&quot;&gt;\t\t&lt;/span&gt;population &lt;- from start gnome&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12=\r\npt; &quot;&gt;&lt;div&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/spa=\r\nn&gt;verify population.&lt;/div&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman=\r\n&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-sp=\r\nan&quot; style=3D&quot;white-space:pre&quot;&gt;\t\n\t&lt;/span&gt;for 500 generations&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12=\r\npt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t&lt;/span&gt;{&lt;/=\r\ndiv&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif;=\r\n font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre=\r\n&quot;&gt;\t\t\t&lt;/span&gt;epoch(population);&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new r=\r\noman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-ta=\r\nb-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t\t\t&lt;/span&gt;if there is a winner in the epo=\r\nch, break and continue to the next experiment.&lt;/div&gt;&lt;div style=3D&quot;font-fami=\r\nly: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span s=\r\ntyle=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-sp=\r\nace:pre&quot;&gt;\t\t&lt;/span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman=\r\n&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 1=\r\n2pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot;\n style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;}&lt;=\r\n/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times=\r\n, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;}&lt;/span&gt;&lt;/div=\r\n&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; fo=\r\nnt-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size:=\r\n 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;epoch(population)&lt;/span&gt;&lt;/div&gt;&lt;d=\r\niv style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-=\r\nsize: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=3D=\r\n&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt;=\r\n &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=\r\n=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;winner =3Dfalse;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;fon=\r\nt-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;=\r\nspan style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot;\n style=3D&quot;w=\r\nhite-space:pre&quot;&gt;\t&lt;/span&gt;for all organisms in the population&lt;/span&gt;&lt;/div&gt;&lt;di=\r\nv style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-s=\r\nize: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-spa=\r\nn&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-famil=\r\ny: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span st=\r\nyle=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-spa=\r\nce:pre&quot;&gt;\t\t&lt;/span&gt;evaluate(organism);&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family:=\r\n &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span styl=\r\ne=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space=\r\n:pre&quot;&gt;\t\t&lt;/span&gt;if organism is a winner&nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font=\r\n-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;s=\r\npan style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;whi=\r\nte-space:pre&quot;&gt;\t\t\t&lt;/span&gt;winner=3Dtrue;&lt;/span&gt;&lt;span class=3D&quot;Apple-tab-span&quot;=\r\n style=3D&quot;font-size:\n 12pt; white-space: pre; &quot;&gt;\t\t&lt;/span&gt;&lt;/div&gt;&lt;div style=\r\n=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12=\r\npt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; styl=\r\ne=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;tim=\r\nes new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;=\r\nfont-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new r=\r\noman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-siz=\r\ne: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span=\r\n&gt;return winner&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;n=\r\new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; =\r\n&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, t=\r\nimes, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/spa=\r\nn&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, se=\r\nrif; font-size: 12pt; &quot;&gt;&lt;span\n style=3D&quot;font-size: 12pt; &quot;&gt;evaluate(organis=\r\nm)&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, ti=\r\nmes, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;{&lt;/span&gt;&lt;/=\r\ndiv&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif;=\r\n font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-=\r\ntab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;target =3D&nbsp;create a random=\r\n target point&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;ne=\r\nw york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;=\r\n&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;start =3D=\r\n always set to 0,0&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;=\r\n, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12=\r\npt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;use =\r\nthe network in the organism to control the car like robot and get a fitness=\r\n figure.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span\n class=3D&quot;Apple-tab-span&quot; style=3D&quot;fo=\r\nnt-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; wh=\r\nite-space: pre; &quot;&gt;\t&lt;/span&gt;&lt;span style=3D&quot;font-family: &#39;times new roman&#39;, &#39;n=\r\new york&#39;, times, serif; font-size: 12pt;&quot;&gt;if fitness is better than a&nbsp;=\r\n&lt;/span&gt;&lt;span style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, se=\r\nrif;&quot;&gt;threshold&lt;/span&gt;&lt;span style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new y=\r\nork&#39;, times, serif; font-size: 12pt;&quot;&gt;, mark the organism as a winner and s=\r\nave the organism in a file using&nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=3D&quot;font-fam=\r\nily: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;print_=\r\nto_file method.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=3D&quot;font-family: &#39;times new rom=\r\nan&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-=\r\nspan&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;set the fitness of the organism.&lt;/s=\r\npan&gt;&lt;/div&gt;\n&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times,=\r\n serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/d=\r\niv&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; =\r\nfont-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-t=\r\nab-span&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;return winner_or_not;&lt;/span&gt;&lt;/di=\r\nv&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; f=\r\nont-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div styl=\r\ne=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 1=\r\n2pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span =\r\nstyle=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-siz=\r\ne: 12pt;&quot;&gt;when this is complete, i use saved files to create organisms and =\r\nuse them in a test that tests effectiveness of the organism with a new rand=\r\nom set of targets. The&nbsp;&lt;/span&gt;&lt;span style=3D&quot;font-family: &#39;times new r=\r\noman&#39;, &#39;new york&#39;, times,\n serif;&quot;&gt;pseudo&lt;/span&gt;&lt;span style=3D&quot;font-family:=\r\n &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt;&quot;&gt;&nbsp;code =\r\nis:&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new y=\r\nork&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;b=\r\nr&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, ti=\r\nmes, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;test&lt;/span=\r\n&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, ser=\r\nif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div=\r\n style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-si=\r\nze: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;span class=3D&quot;Apple-tab-span=\r\n&quot; style=3D&quot;white-space:pre&quot;&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=3D&quot;font-weight: 600;=\r\n color: rgb(85, 0, 0); &quot;&gt;Genome&lt;/span&gt;*&lt;span style=3D&quot;color: rgb(192, 192, =\r\n192); &quot;&gt; &lt;/span&gt;&lt;span style=3D&quot;color: rgb(85, 0, 0); &quot;&gt;genome&lt;/span&gt;&lt;span s=\r\ntyle=3D&quot;color: rgb(192, 192, 192); &quot;&gt;\n &lt;/span&gt;=3D&lt;span style=3D&quot;color: rgb(=\r\n192, 192, 192); &quot;&gt; &lt;/span&gt;&lt;span style=3D&quot;font-weight: 600; color: rgb(85, 0=\r\n, 0); &quot;&gt;Genome&lt;/span&gt;::new_Genome_load((&lt;span style=3D&quot;font-weight: 600; co=\r\nlor: rgb(0, 0, 255); &quot;&gt;char&lt;/span&gt;*)&lt;span style=3D&quot;color: rgb(85, 0, 0); &quot;&gt;=\r\ngnome_file&lt;/span&gt;);&lt;/div&gt;\n\n&lt;pre style=3D&quot;margin-top: 0px; margin-bottom: 0p=\r\nx; &quot;&gt;&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt;    &lt;/span&gt;assert(&lt;span style=3D&quot; colo=\r\nr:#550000;&quot;&gt;genome&lt;/span&gt;-&gt;verify());&lt;/pre&gt;\n&lt;pre style=3D&quot;margin-top: 0p=\r\nx; margin-bottom: 0px; &quot;&gt;&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt;    &lt;/span&gt;&lt;span s=\r\ntyle=3D&quot; font-weight:600; color:#550000;&quot;&gt;NEAT&lt;/span&gt;::&lt;span style=3D&quot; font=\r\n-weight:600; color:#550000;&quot;&gt;Network&lt;/span&gt;*&lt;span style=3D&quot; color:#c0c0c0;&quot;=\r\n&gt; &lt;/span&gt;&lt;span style=3D&quot; color:#550000;&quot;&gt;net&lt;/span&gt;&lt;span style=3D&quot; color:#c=\r\n0c0c0;&quot;&gt; &lt;/span&gt;=3D&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt; &lt;/span&gt;&lt;span style=3D&quot; =\r\ncolor:#550000;&quot;&gt;genome&lt;/span&gt;-&gt;genesis(&lt;span style=3D&quot; color:#000080;&quot;&gt;0=\r\n&lt;/span&gt;);&lt;/pre&gt;\n&lt;pre style=3D&quot;margin-top: 0px; margin-bottom: 0px; &quot;&gt;&lt;br&gt;&lt;/=\r\npre&gt;\n&lt;pre style=3D&quot;margin-top: 0px; margin-bottom: 0px; &quot;&gt;&lt;span style=3D&quot; c=\r\nolor:#c0c0c0;&quot;&gt;    &lt;/span&gt;&lt;span style=3D&quot; font-weight:600; color:#0000ff;&quot;&gt;=\r\nfor&lt;/span&gt;(&lt;span style=3D&quot; font-weight:600; color:#0000ff;&quot;&gt;int&lt;/span&gt;&lt;span=\r\n style=3D&quot; color:#c0c0c0;&quot;&gt; &lt;/span&gt;&lt;span style=3D&quot; color:#550000;&quot;&gt;i&lt;/span&gt;=\r\n(&lt;span style=3D&quot; color:#000080;&quot;&gt;0&lt;/span&gt;);&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt;=\r\n &lt;/span&gt;&lt;span style=3D&quot; color:#550000;&quot;&gt;i&lt;/span&gt;&lt;span style=3D&quot; color:#c0c0=\r\nc0;&quot;&gt; &lt;/span&gt;&lt;&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt; &lt;/span&gt;&lt;span style=3D&quot; co=\r\nlor:#000080;&quot;&gt;50&lt;/span&gt;;&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt; &lt;/span&gt;++&lt;span sty=\r\nle=3D&quot; color:#550000;&quot;&gt;i&lt;/span&gt;)&lt;/pre&gt;\n&lt;pre style=3D&quot;margin-top: 0px; margi=\r\nn-bottom: 0px; &quot;&gt;&lt;span style=3D&quot; color:#c0c0c0;&quot;&gt;    &lt;/span&gt;{&lt;/pre&gt;\n&lt;pre st=\r\nyle=3D&quot;margin-top: 0px; margin-bottom: 0px; &quot;&gt;&lt;span style=3D&quot; color:#c0c0c0=\r\n;&quot;&gt;        &lt;/span&gt;test(&lt;span style=3D&quot; color:#550000;&quot;&gt;net&lt;/span&gt;);&lt;/pre&gt;\n&lt;=\r\npre style=3D&quot;margin-top: 0px; margin-bottom: 0px; &quot;&gt;&lt;span style=3D&quot; color:#=\r\nc0c0c0;&quot;&gt;    &lt;/span&gt;}&lt;!--EndFragment--&gt;&lt;/pre&gt;&lt;div style=3D&quot;font-family: &#39;ti=\r\nmes new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D=\r\n&quot;font-size: 12pt; &quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new rom=\r\nan&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size:=\r\n 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;ne=\r\nw york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;=\r\n&gt;The issue is these tests give very high errors; basically the robot does n=\r\not move to the target at all.&nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: =\r\n&#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=\r\n=3D&quot;font-size: 12pt; &quot;&gt;I have several gray areas in this code however.&lt;/spa=\r\nn&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;span style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york=\r\n&#39;, times, serif; font-size: 12pt;&quot;&gt;1. Should i use just one random\n target&=\r\nnbsp;&lt;/span&gt;&lt;span style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, time=\r\ns, serif;&quot;&gt;every time&lt;/span&gt;&lt;span style=3D&quot;font-family: &#39;times new roman&#39;, =\r\n&#39;new york&#39;, times, serif; font-size: 12pt;&quot;&gt;&nbsp;the evaluate is called? O=\r\nr should i loop through a set of random targets and average out results to =\r\nset the fitness? In the provided sample experiments, just one random evalua=\r\ntion is done per each evaluate call. I do not understand how it generalize =\r\nthe problem. Is it through the # of organisms?&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div styl=\r\ne=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 1=\r\n2pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;fon=\r\nt-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;=\r\nspan style=3D&quot;font-size: 12pt; &quot;&gt;2. what is the correct way of getting the =\r\nbest network after evolution?&nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: =\r\n&#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span\n styl=\r\ne=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times =\r\nnew roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;fon=\r\nt-size: 12pt; &quot;&gt;PS:&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman=\r\n&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 1=\r\n2pt; &quot;&gt;1. The fitness function i use is reliable to my knowledge and was ta=\r\nken from a paper.&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;,=\r\n &#39;new york&#39;, times, serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12p=\r\nt; &quot;&gt;2. Just to see what happens, i made the evaluate method use a same tar=\r\nget in all invocations. This creates a network that works pretty well when =\r\ni use the same target position in the test, (which should be obvious).&lt;/spa=\r\nn&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, se=\r\nrif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;=\r\n&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; fon=\r\nt-size:\n 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div st=\r\nyle=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size:=\r\n 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=3D&quot;f=\r\nont-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-size: 12pt; &quot;=\r\n&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times,=\r\n serif; font-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/d=\r\niv&gt;&lt;div style=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; =\r\nfont-size: 12pt; &quot;&gt;&lt;span style=3D&quot;font-size: 12pt; &quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div =\r\nstyle=3D&quot;font-family: &#39;times new roman&#39;, &#39;new york&#39;, times, serif; font-siz=\r\ne: 12pt; &quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\r\n---1600601909-553201778-1337702547=:54343--\r\n\n"}}