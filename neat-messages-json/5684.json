{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":506662524,"authorName":"yyyyaun","from":"&quot;yyyyaun&quot; &lt;yyyyaun@...&gt;","profile":"yyyyaun","replyTo":"LIST","senderId":"DDhIf0Uo8EbdDh1nfwXozjLkZ9UEVwLAEkdC8Igp9KOU1FhRCZpjycWj7WODTsDZXv1IJLC66rz2lHNu1ZWPj2yaRqA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Problem with HyperneatC++","postDate":"1321435365","msgId":5684,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGo5dnZkNStiNnJxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PENBRUI1NXRYQUU0a1FNWXZuWncyOWZYdDdmNXNRaFNyVF95TFJzQm1jK3FDY2lESzlQQUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":5683,"nextInTopic":5686,"prevInTime":5683,"nextInTime":5685,"topicId":5682,"numMessagesInTopic":5,"msgSnippet":"Thanks for your reply! I uploaded the source of the complete test experiment (including the clone function). It is available at http://db.tt/ihaWwt6L MPI and","rawEmail":"Return-Path: &lt;yyyyaun@...&gt;\r\nX-Sender: yyyyaun@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 45599 invoked from network); 16 Nov 2011 09:22:47 -0000\r\nX-Received: from unknown (98.137.35.160)\n  by m14.grp.sp2.yahoo.com with QMQP; 16 Nov 2011 09:22:47 -0000\r\nX-Received: from unknown (HELO ng9-ip1.bullet.mail.ne1.yahoo.com) (98.138.215.180)\n  by mta4.grp.sp2.yahoo.com with SMTP; 16 Nov 2011 09:22:47 -0000\r\nX-Received: from [98.138.217.178] by ng9.bullet.mail.ne1.yahoo.com with NNFMP; 16 Nov 2011 09:22:46 -0000\r\nX-Received: from [69.147.65.150] by tg3.bullet.mail.ne1.yahoo.com with NNFMP; 16 Nov 2011 09:22:46 -0000\r\nX-Received: from [98.137.34.72] by t7.bullet.mail.sp1.yahoo.com with NNFMP; 16 Nov 2011 09:22:46 -0000\r\nDate: Wed, 16 Nov 2011 09:22:45 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;j9vvd5+b6rq@...&gt;\r\nIn-Reply-To: &lt;CAEB55tXAE4kQMYvnZw29fXt7f5sQhSrT_yLRsBmc+qCciDK9PA@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;yyyyaun&quot; &lt;yyyyaun@...&gt;\r\nSubject: Re: Problem with HyperneatC++\r\nX-Yahoo-Group-Post: member; u=506662524; y=VAHf7gcgG8_9lVG0iYdYC8ETuQihMLL4i5A222UCVI3R-uo9vl1k1KxCGHIvuAtD6djiBsm9WwAFTJw\r\nX-Yahoo-Profile: yyyyaun\r\n\r\n\n\nThanks for your reply!\n\nI uploaded the source of the complete test experi=\r\nment (including the clone function). It is available at http://db.tt/ihaWwt=\r\n6L\n\nMPI and GPU switches are turned off. I also tried to run the experiment=\r\n with only one thread, but the same exception is thrown.\n\n--- In neat@yahoo=\r\ngroups.com, Jason Gauci &lt;jgmath2000@...&gt; wrote:\n&gt;\n&gt; Your example is missing=\r\n a clone function.  Can you add it?  If the\n&gt; clonefunction isn&#39;t doing a d=\r\neep copy of the experiment, you might have two\n&gt; threads that are writing t=\r\no the same data.\n&gt; \n&gt; Also, are you using the MPI and/or GPU switches?\n&gt; \n&gt;=\r\n On Tue, Nov 15, 2011 at 3:06 PM, yyyyaun &lt;yyyyaun@...&gt; wrote:\n&gt; \n&gt; &gt; **\n&gt; =\r\n&gt;\n&gt; &gt;\n&gt; &gt; Hi,\n&gt; &gt;\n&gt; &gt; I&#39;m trying to apply Hyperneat to the Robocup domain u=\r\nsing the HyperneatC++\n&gt; &gt; 4.0 framework. So far, I&#39;ve managed to set up an =\r\nexperiment which runs fine\n&gt; &gt; for some time, but after some generations (u=\r\nsually about 100), following\n&gt; &gt; exception is thrown by\n&gt; &gt; the framework:\n=\r\n&gt; &gt;\n&gt; &gt; ...\n&gt; &gt; Generation 49: overall_average =3D 61.01\n&gt; &gt; Champion fitne=\r\nss: 106\n&gt; &gt; # of Species: 18\n&gt; &gt; compat threshold: 18.3\n&gt; &gt; DONE PRODUCING\n=\r\n&gt; &gt; PREPROCESSING POPULATION\n&gt; &gt; debug:toNodeIndex.z:1 fromNodeIndex.z:2621=\r\n44 layers.size:2\n&gt; &gt; CAUGHT ERROR AT\n&gt; &gt;\n&gt; &gt; /home/yaun/HyperNeatC++-4.0/NE=\r\n/HyperNEAT/Hypercube_NEAT/src/HCUBE_EvaluationSet.cpp:65\n&gt; &gt; OOPS at\n&gt; &gt;\n&gt; =\r\n&gt; /home/yaun/HyperNeatC++-4.0/NE/HyperNEAT/NEAT/src/NEAT_FastLayeredNetwork=\r\n.cpp:152\n&gt; &gt; Press enter to continue\n&gt; &gt;\n&gt; &gt; This error occurs in FastLayer=\r\nedNetwork::setLink, which is called by\n&gt; &gt; LayeredSubstrate::populateSubstr=\r\nate. As you can see from the output, wrong\n&gt; &gt; node indices are supplied as=\r\n arguments.\n&gt; &gt;\n&gt; &gt; I&#39;m new to Hyperneat and C++ and so I don&#39;t know if thi=\r\ns exception is a\n&gt; &gt; fault in my experiment or a bug in the Hyperneat frame=\r\nwork. Any help would\n&gt; &gt; be appreciated!\n&gt; &gt;\n&gt; &gt; The minimal test experimen=\r\nt which produced the output above is as follows:\n&gt; &gt;\n&gt; &gt; TestExperiment::Te=\r\nstExperiment(string _experimentName,int _threadID)\n&gt; &gt; :\n&gt; &gt; Experiment(_ex=\r\nperimentName,_threadID)\n&gt; &gt; {\n&gt; &gt; //define substrate\n&gt; &gt; layerInfo =3D NEAT=\r\n::LayeredSubstrateInfo();\n&gt; &gt;\n&gt; &gt; //input layer\n&gt; &gt; layerInfo.layerSizes.pu=\r\nsh_back(Vector2&lt;int&gt;(18,23));\n&gt; &gt; layerInfo.layerValidSizes.push_back(Vecto=\r\nr2&lt;int&gt;(18,23));\n&gt; &gt; layerInfo.layerNames.push_back(&quot;Input&quot;);\n&gt; &gt; layerInfo=\r\n.layerIsInput.push_back(true);\n&gt; &gt; layerInfo.layerLocations.push_back(Vecto=\r\nr3&lt;float&gt;(0,0,0));\n&gt; &gt;\n&gt; &gt; //output layer\n&gt; &gt; layerInfo.layerSizes.push_bac=\r\nk(Vector2&lt;int&gt;(18,23));\n&gt; &gt; layerInfo.layerValidSizes.push_back(Vector2&lt;int=\r\n&gt;(18,23));\n&gt; &gt; layerInfo.layerNames.push_back(&quot;Output&quot;);\n&gt; &gt; layerInfo.laye=\r\nrIsInput.push_back(false);\n&gt; &gt; layerInfo.layerLocations.push_back(Vector3&lt;f=\r\nloat&gt;(0,8,0));\n&gt; &gt;\n&gt; &gt; //input layer connects to output layer\n&gt; &gt;\n&gt; &gt; layer=\r\nInfo.layerAdjacencyList.push_back(std::pair&lt;string,string&gt;(&quot;Input&quot;,&quot;Output&quot;=\r\n));\n&gt; &gt;\n&gt; &gt; layerInfo.normalize =3D true;\n&gt; &gt; layerInfo.useOldOutputNames =\r\n=3D false;\n&gt; &gt;\n&gt; &gt; substrate =3D NEAT::LayeredSubstrate&lt;float&gt;();\n&gt; &gt; subst=\r\nrate.setLayerInfo(layerInfo);\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; GeneticPopulation* TestExperime=\r\nnt::createInitialPopulation(int\n&gt; &gt; populationSize)\n&gt; &gt; {\n&gt; &gt; //define cppn=\r\n\n&gt; &gt; GeneticPopulation *population =3D new GeneticPopulation();\n&gt; &gt; vector&lt;=\r\nGeneticNodeGene&gt; genes;\n&gt; &gt; genes.push_back(GeneticNodeGene(&quot;Bias&quot;,&quot;Network=\r\nSensor&quot;,0,false));\n&gt; &gt; genes.push_back(GeneticNodeGene(&quot;X1&quot;,&quot;NetworkSensor&quot;=\r\n,0,false));\n&gt; &gt; genes.push_back(GeneticNodeGene(&quot;Y1&quot;,&quot;NetworkSensor&quot;,0,fals=\r\ne));\n&gt; &gt; genes.push_back(GeneticNodeGene(&quot;X2&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; =\r\n&gt; genes.push_back(GeneticNodeGene(&quot;Y2&quot;,&quot;NetworkSensor&quot;,0,false));\n&gt; &gt; genes=\r\n.push_back(GeneticNodeGene(&quot;Output_Input_Output&quot;,\n&gt; &gt; &quot;NetworkOutputNode&quot;, =\r\n1, false, ACTIVATION_FUNCTION_SIGMOID));\n&gt; &gt;\n&gt; &gt; for (int a=3D0;a&lt;populatio=\r\nnSize;a++)\n&gt; &gt; {\n&gt; &gt; shared_ptr&lt;GeneticIndividual&gt; individual(new\n&gt; &gt; Genet=\r\nicIndividual(genes,true,1.0));\n&gt; &gt;\n&gt; &gt; for (int b=3D0;b&lt;0;b++)\n&gt; &gt; {\n&gt; &gt; in=\r\ndividual-&gt;testMutate();\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; population-&gt;addIndividual(individual)=\r\n;\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; cout &lt;&lt; &quot;Finished creating population&#92;n&quot;;\n&gt; &gt; return popula=\r\ntion;\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; void TestExperiment::populateSubstrate(shared_ptr&lt;NEAT:=\r\n:GeneticIndividual&gt;\n&gt; &gt; individual)\n&gt; &gt; {\n&gt; &gt; if (substrateIndividual=3D=3D=\r\nindividual)\n&gt; &gt; {\n&gt; &gt; //Don&#39;t bother remaking the same substrate\n&gt; &gt; return=\r\n;\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; substrateIndividual=3Dindividual;\n&gt; &gt;\n&gt; &gt; substrate.populat=\r\neSubstrate(individual);\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; void TestExperiment::processGroup(sha=\r\nred_ptr&lt;NEAT::GeneticGeneration&gt;\n&gt; &gt; generation)\n&gt; &gt; {\n&gt; &gt; //cout &lt;&lt; &quot;Proce=\r\nssing evaluation...&#92;n&quot;;\n&gt; &gt; shared_ptr&lt;NEAT::GeneticIndividual&gt; individual =\r\n=3D group.front();\n&gt; &gt; //You get 10 points just for being processed, wahooo=\r\n!\n&gt; &gt; individual-&gt;setFitness(10);\n&gt; &gt;\n&gt; &gt; populateSubstrate(individual);\n&gt; =\r\n&gt;\n&gt; &gt; substrate.getNetwork()-&gt;reinitialize();\n&gt; &gt;\n&gt; &gt; substrate.getNetwork(=\r\n)-&gt;update();\n&gt; &gt;\n&gt; &gt; individual-&gt;reward(rand() % 100 + 1);\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; Th=\r\nanks in advance,\n&gt; &gt; Thomas\n&gt; &gt;\n&gt; &gt;  \n&gt; &gt;\n&gt;\n\n\n\n"}}