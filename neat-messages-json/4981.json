{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":411255308,"authorName":"torvhydda","from":"&quot;torvhydda&quot; &lt;torvhydda@...&gt;","profile":"torvhydda","replyTo":"LIST","senderId":"7gvjQfJEKFESwyFn2u-sbEI0YNfsAiEkLr9FYY8wI2bzH_KFEo0pJRjiZ_cEB1U4EcNuMR6BYu4reQmpcFwN2J6_NBHR-R3v","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: spawning overflow","postDate":"1260203041","msgId":4981,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhmamE3MStlY2Y2QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGhlNmZzaStubnRkQGVHcm91cHMuY29tPg=="},"prevInTopic":4906,"nextInTopic":0,"prevInTime":4980,"nextInTime":4982,"topicId":4903,"numMessagesInTopic":4,"msgSnippet":"Hi! Here is some C code I wrote to calculate number of offsprings for each species. It s taken from the _population_epoch() function in neat.c in my eco","rawEmail":"Return-Path: &lt;torvhydda@...&gt;\r\nX-Sender: torvhydda@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 73625 invoked from network); 7 Dec 2009 16:27:56 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m5.grp.sp2.yahoo.com with QMQP; 7 Dec 2009 16:27:56 -0000\r\nX-Received: from unknown (HELO n46b.bullet.mail.sp1.yahoo.com) (66.163.168.160)\n  by mta3.grp.sp2.yahoo.com with SMTP; 7 Dec 2009 16:27:56 -0000\r\nX-Received: from [69.147.65.148] by n46.bullet.mail.sp1.yahoo.com with NNFMP; 07 Dec 2009 16:24:02 -0000\r\nX-Received: from [98.137.34.184] by t11.bullet.mail.sp1.yahoo.com with NNFMP; 07 Dec 2009 16:24:02 -0000\r\nDate: Mon, 07 Dec 2009 16:24:01 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hfja71+ecf6@...&gt;\r\nIn-Reply-To: &lt;he6fsi+nntd@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;torvhydda&quot; &lt;torvhydda@...&gt;\r\nSubject: Re: spawning overflow\r\nX-Yahoo-Group-Post: member; u=411255308; y=xXEATnjPOVwcpl0-SZIkFlk092DFvhjVnKTYiX55qlXkT0Ju\r\nX-Yahoo-Profile: torvhydda\r\n\r\n\n\nHi!\nHere is some C code I wrote to calculate number of offsprings for eac=\r\nh species. It&#39;s taken from the _population_epoch() function in neat.c in my=\r\n eco project. Dunno if it is what you are after, but I&#39;ll post it anyway. H=\r\nope you read C, and understand the variable names :)\n\n/Magnus\n\ndouble sfit_=\r\ntot, pfit_tot =3D 0;\nint noffstot =3D 0, noffs[pop-&gt;nspecies];\n\n/* calculat=\r\ne number of offsprings for each species */\nfor (i =3D 0; i &lt; pop-&gt;norgs; i+=\r\n+)\n        pfit_tot +=3D pop-&gt;orgs[i]-&gt;fitness;\nfor (i =3D 0; i &lt; pop-&gt;nspe=\r\ncies; i++) {\n        spc =3D pop-&gt;species[i];\n        sfit_tot =3D 0;\n     =\r\n   for (j =3D 0; j &lt; spc-&gt;norgs; j++)\n                sfit_tot +=3D spc-&gt;or=\r\ngs[j]-&gt;fitness;\n        noffs[i] =3D pop-&gt;norgs * sfit_tot / pfit_tot;\n    =\r\n    noffstot +=3D noffs[i];\n}\nASSERT(noffstot &lt;=3D pop-&gt;norgs);\n/* give the=\r\n fractional children to best species */\nnoffs[0] +=3D pop-&gt;norgs - noffstot=\r\n;\n\n\n--- In neat@yahoogroups.com, &quot;rvonwahlde&quot; &lt;rvonwahlde@...&gt; wrote:\n&gt;\n&gt; H=\r\now do you work around the problem when the total number of children each sp=\r\necies spawns is greater than the desired population size?\n&gt; \n&gt; Buckland&#39;s N=\r\nEAT for Windows code is meant to stop spawning members when the population =\r\nsize is reached.  I think this prevents the last species in the list from s=\r\npawing.\n&gt; \n&gt; The code at http://neat-python.googlecode.com removes the last=\r\n added members.\n&gt; \n&gt; In either case, as the python code notes, &quot;This is dan=\r\ngerous! I can&#39;t remove a species&#39; representant!&quot; i.e. a species exemplar wi=\r\nth which newly spawned genomes will be compared.\n&gt; \n&gt; I have considered kil=\r\nling off any species that is not allowed to spawn all its offspring.  I alr=\r\neady do so if the spawns required from a given species rounds to zero.\n&gt; \n&gt;=\r\n Or should I just remove any overflow genomes first making sure it is not a=\r\n species exemplar?\n&gt;\n\n\n\n"}}