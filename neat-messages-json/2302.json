{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"ydVu9mUdOL84y16vnk-i6eZMM6TFeKDiBsaePAlC2ysyfw1hfX-91R7AU-vJTK2NMgA12llGaCZzWwtz9T7U6QUsSatpm0to9HU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Who to kill?","postDate":"1128261716","msgId":2302,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4wLjE0LjAuMjAwNTEwMDIxNDQwMTIuMDJlZGRlMzhAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PDQzM0YyOTUzLjMwMzA4MDlAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDYuMi4wLjE0LjAuMjAwNTA5MzAxMjMzMzguMDMyZjYxMzhAcG9wLm1haWwueWFob28uY28udWs+IDw0MzNGMjk1My4zMDMwODA5QGRzbC5waXBleC5jb20+"},"prevInTopic":2298,"nextInTopic":2314,"prevInTime":2301,"nextInTime":2303,"topicId":2292,"numMessagesInTopic":11,"msgSnippet":"... Actually I doubt that will happen because individuals in every species are susceptible to mutations which drastically lower their fitness.  So I imagine","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 62138 invoked from network); 2 Oct 2005 13:58:18 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m24.grp.scd.yahoo.com with QMQP; 2 Oct 2005 13:58:18 -0000\r\nReceived: from unknown (HELO smtp3.freeserve.com) (193.252.22.156)\n  by mta1.grp.scd.yahoo.com with SMTP; 2 Oct 2005 13:58:18 -0000\r\nReceived: from me-wanadoo.net (localhost [127.0.0.1])\n\tby mwinf3206.me.freeserve.com (SMTP Server) with ESMTP id D3B891C0008B\n\tfor &lt;neat@yahoogroups.com&gt;; Sun,  2 Oct 2005 15:58:07 +0200 (CEST)\r\nReceived: from giles.yahoo.co.uk (modem-1580.llama.dialup.pol.co.uk [217.135.182.44])\n\tby mwinf3206.me.freeserve.com (SMTP Server) with ESMTP id 7A60D1C0008D\n\tfor &lt;neat@yahoogroups.com&gt;; Sun,  2 Oct 2005 15:58:06 +0200 (CEST)\r\nX-ME-UUID: 20051002135806501.7A60D1C0008D@...\r\nMessage-Id: &lt;6.2.0.14.0.20051002144012.02edde38@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.0.14\r\nDate: Sun, 02 Oct 2005 15:01:56 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;433F2953.3030809@...&gt;\r\nReferences: &lt;6.2.0.14.0.20050930123338.032f6138@...&gt;\n &lt;433F2953.3030809@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Who to kill?\r\nX-Yahoo-Group-Post: member; u=7192225; y=WKZvtGcCbG7ZdPDbLnoqMVgEwKQhLRrpBiq7A20LmXiIe5dO8A\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\n\n\n&gt;milar for NERO...?\n&gt; &gt;\n&gt; &gt;\n&gt;The main thing to keep in mind here is that the size of species should\n&gt;adapt to the relative fitness of the species. Now, most offspring will\n&gt;end up in one of their parent&#39;s species (or its single parent&#39;s species\n&gt;for asexual repro), so the more parents you select from that species the\n&gt;more offspring will end up in that species.\n&gt;\n&gt;So what happens given each of your options:\n&gt;\n&gt;1) kill the population loser\n&gt;\n&gt;If you kill the population loser you will probably end up killing off\n&gt;individuals from the same [poor] species every time, which is bad.\n\nActually I doubt that will happen because individuals in every species are \nsusceptible to mutations which drastically lower their fitness.  So I \nimagine every species will contain a proportion of &quot;losers&quot; and which one \nis the greatest loser will be pretty random.  Unless the poor species is so \npoor that it is no longer breeding, in which case it _should_ go.\n\nI think I might try this as a first, simplest possibility.  One question \nremains however, what if the new individual is the population or species \nloser.  I guess in the former case, he&#39;s a dud and gets discarded.  In the \nlatter case, I suppose the important factor is that the worst in this \nspecies is better than the population worst  (in some other species) so I \nguess it is correct for this species to gain a member at the expense of the \nother...\n\n&gt;2) kill the species loser in the species getting the offspring\n&gt;\n&gt;If you do a 1-to1 replace within species then their size will never grow\n&gt;or shrink. doh!\n\nSorry, I phrased it poorly.  I could have meant kill a member of the parent \nof the recipient species, otoh I see that both these strategies have the \nsame problem so I&#39;ll shut up....\n\n&gt;3) kill the species loser in a random species\n&gt;\n&gt;This may work, but it is a very indirect/rough way of maintaining species \n&gt;sizes and as such you may end up killing off good species if the number if \n&gt;there aren&#39;t many individuals within the species.\n\nOver the long tern the statistics should even out and that last point is a \ngood one but should only apply to a recently created very diverse \nindividual (e.g. because if we is that good then if he&#39;s been around for a \nwhile he should have bread some offspring).  Maybe this could be used but \nwith some extra rule to protect newly created individuals, say that no \nspecies should lose a member until its been around for N cycles (1 cycle = \ncreate 1 individual) and that a species also becomes new again when its \nmaximum fitness increases....\n\nHmmm...\n\n&gt;4) kill a completely random individual\n&gt;\n&gt;Biased towards the removing individuals from the fittest species - which \n&gt;contains the lions share of the individuals.\n\nThat&#39;s not a problem.  What you have their is a first-order processes (e.g. \nrate proportional to the number of members in the species) killing them and \na zero-order process (rate not affected by size of species) creating them \nso what will happen is that each species will grow until the two processes \ncome into equilibrium...  You might have to use max fitness instead of \nadjusted fitness to determine the birth rate.  But this might actually do \nwhat we want...  It might be better still if, after picking a random \nindividual, we then killed not the one we picked, but the loser of the \nspecies in which it lay....  Kinda 3 and 4 hybrid strategy.\n\n&gt;What I did in my non-continuous scheme was to calculate a target-size for \n&gt;each species at each generation. If you did the same then you can \n&gt;implement (2) but only kill the species loser of you go over the target \n&gt;size. Now you can also trim the species back to the target size of you \n&gt;want, but their size should (I think) atrophy naturally because on the \n&gt;whole parents are selected from the fitter species - and most offspring \n&gt;end up in their parent&#39;s species.\n\nI&#39;ve been considering this.  Not so much for this reason, but because \nthere&#39;s a problem with using absolute fitness values in maths to determine \nthese factors.  The problem is that fitness is an arbitrary scale, but we \nuse it as if it were absolute.  e.g. this situation:\n\nSpecies#1 max fitness = 10, members = 10\nSpecies#2 max fitness = 1, members = 10\n\nWill be different from:\n\nSpecies#1 max fitness = 1,000,000,010, members = 10\nSpecies#2 max fitness = 1,000,000,001, members = 10\n\nWhen in fact all I did was add a constant into the fitness function, so \nthey should be the same...\n\nYou can fix that a bit by using relative fitnesses, but then you still have \nthe problem in these two cases:\n\nSpecies#1 max fitness = 10, members = 10\nSpecies#2 max fitness = 1, members = 10\nSpecies#3 max fitness = -100\n\nvs.\n\nSpecies#1 max fitness = 10, members = 10\nSpecies#2 max fitness = 1, members = 10\nSpecies#3 max fitness = -1,000,000,000\n\nBecause now #1 and #2 are both so far ahead that #3 is irrelevant, but the \nexistence of #3 affects the scale on which they are measured...\n\nAnyway, my proposed fix to this was going to be, to just rank the species, \nand allocate them a target size based on their ranking, e.g.\n\nRank    Size\n#1      128\n#2      64\n#3      32\n#4      16\n#5      8\n#6      4\n#7      2\n#8      1\n\nI was even toying with the idea of combining this with heap selection \n(still pondering that) so that the top of the heap would have 128, the two \non the next row 64, the four on the next row 32, etc etc...\n\n         Ian\n\n\nIn 15 minutes everybody will be in the future.\n\n\n\n\n"}}