{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"4BC3F6RiBEu0JSYEofjPMrq3xRHVuY2qEXTb44UoPU0wZqRp5gRb24E5Z88tL853NTC8z51K1zvQbjGtY2Y4I-J-QR1jGY3GR_4KnIBfsGvojP6cVnI","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: An improvement over object evolution with CPPNs","postDate":"1227744122","msgId":4490,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdna28xcStmN2FyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGdnamgwOStqc2VzQGVHcm91cHMuY29tPg=="},"prevInTopic":4489,"nextInTopic":4492,"prevInTime":4489,"nextInTime":4491,"topicId":4444,"numMessagesInTopic":14,"msgSnippet":"The inputs to the CPPN in this particular setup are Gauss(x), Gauss(y), distance of (x,y) from the origin (0,0), and the bias of 1.0. The outputs are: - Cell","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 89714 invoked from network); 27 Nov 2008 00:02:05 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m42.grp.scd.yahoo.com with QMQP; 27 Nov 2008 00:02:05 -0000\r\nX-Received: from unknown (HELO n39a.bullet.mail.sp1.yahoo.com) (66.163.168.133)\n  by mta16.grp.scd.yahoo.com with SMTP; 27 Nov 2008 00:02:04 -0000\r\nX-Received: from [69.147.65.172] by n39.bullet.mail.sp1.yahoo.com with NNFMP; 27 Nov 2008 00:02:04 -0000\r\nX-Received: from [66.218.66.85] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 27 Nov 2008 00:02:04 -0000\r\nDate: Thu, 27 Nov 2008 00:02:02 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ggko1q+f7ar@...&gt;\r\nIn-Reply-To: &lt;ggjh09+jses@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: An improvement over object evolution with CPPNs\r\nX-Yahoo-Group-Post: member; u=283334584; y=M78FGRjSxPUQ-WLvA_YtqK1t5QSaOPKQvjxQwGphRB1x-5VntYShXaPhnA\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nThe inputs to the CPPN in this particular setup are Gauss(x), \nGauss(y), di=\r\nstance of (x,y) from the origin (0,0), and the bias of \n1.0. \nThe outputs a=\r\nre:\n- Cell color\n- Cell growing rate\n- Time to begin growth\n- Growth time d=\r\nuration\n- Cell division angle\n\nYou probably noticed that the meshes it crea=\r\ntes are not very stiff and  \nthe variety of shapes is not very big due to t=\r\nhis fact. \nMy next upgrade to the program will involve using a better physi=\r\ncs \nengine. Probably the Open Dynamics Engine will be used, though there \ni=\r\ns an issue with the overlapping cells that needs to be resolved if I \nam go=\r\ning to use ODE, because cell division creates 2 overlapping \ncells, which w=\r\nill confuse the physics engine. I mean it has to be \nsmooth, and in the sam=\r\ne time it has to preserve the overall structure \nof the body, i.e. to preve=\r\nnt all individuals converge to a simple blob \nof cells or the body being to=\r\nrn apart by internal velocities caused by \ncollisions. So I will have to tw=\r\neak lots of physics parameters, I \nguess.\n\nPlus, the &quot;program&quot; of the egg w=\r\nill be made more complex. Currently, \nnew cells inherit the properties of t=\r\nhe mother cell. A better model \ncan augment this by introducing a concept f=\r\nor the division, and cell \ntypes. For example, if a cell of type A divides,=\r\n it will make a cell \nof type B and a cell of type C. Cells of type C canno=\r\nt divide and \ncells of type B produce B and A cells, and so on. Or the divi=\r\nsion can \noccur in specific circumstances based on cell type. All these rul=\r\nes \ncan be programmed in the egg by the CPPN. The CPPN input/output space \n=\r\ndimensionality will increase, but the possibilities will be a lot \nmore. \n\n=\r\nThe model can be simplified, too. I realize that I should not go in \ntoo mu=\r\nch depth with this, because ideally I want a scalable solution, \ni.e. the b=\r\nody has to be actually an approximation of the infinitely \ndetailed same bo=\r\ndy, same size and stuff. \n\nI may consider the problem with the phenotypes o=\r\nf varying sizes and \ncomplexity resolved, though there is still a way for a=\r\n very simple \nCPPN to instruct all cells in the egg to grow and divide with=\r\n a fast \nrate, therefore I guess I am back to basics. :/ \n\nBut at least the=\r\n object that is produced is a finite thing and there \nis the functionality =\r\nto have lots of objects with varying size and \ncomplexity. It is also possi=\r\nble to correlate the limits for growth and \ndivision with the complexity of=\r\n the CPPN. And the granularity of \ncoordinates in the egg determines the st=\r\narting number of cells and \ntherefore the maximum size/complexity.\n\nYes I a=\r\nm planning to combine this with HyperNEAT. It is an interesting \nopportunit=\r\ny for the encoding to exploit the geometry of the world as \nwell as the dev=\r\nelopment, like you said. The inputs, hidden and output \nneurons will be det=\r\nermined by the cell type. Of course, not all cells \nwill be neural tissue. =\r\nInput cells will fire signals if a collision \noccurs or perhaps when it is =\r\nlit, etc. Output cells will contract the \nassociated springs from the mass-=\r\nspring mesh. \n\nNow, with this kind of system set up, it will be really inte=\r\nresting to \nsee how evolution will work. There are many kinds of constraint=\r\ns that \ncan be used to steer evolution. For example, even without HyperNEAT=\r\n \npresent in the system, the bodies can be tested against things like \ncoll=\r\nision stress, etc. With HyperNEAT, it is possible to establish a \ncoevoluti=\r\nonary arms race like in PolyWorld, they can eat each other \nand stuff. Or j=\r\nust evaluated on simple tasks like swimming speed or \nfood gathering perfor=\r\nmance. \n\nBut I begin to wonder if this is the right thing for evolving \nsub=\r\nstrates or I was misled by the desire to have this Alife stuff \nworking or =\r\nprobably I forgot the basics again.. \n\nPeter\n\n--- In neat@yahoogroups.com, =\r\n&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt; wrote:\n&gt;\n&gt; Peter, the fix worked for me an=\r\nd I am now able to run DCPPN_3.exe. \n&gt; The structures it creates are indeed=\r\n interesting and I am curious to\n&gt; see what it would evolve under some kind=\r\n of fitness constraint.  \n&gt; \n&gt; Could you also remind me what the exact inpu=\r\nts and outputs are for \nthe\n&gt; CPPN?\n&gt; \n&gt; Are you planning to evolve these a=\r\ns bodies with brains?  how will \nyou\n&gt; decide what is an output, what is an=\r\n input, and what is a hidden \nnode?\n&gt; \n&gt; ken\n&gt; \n&gt; --- In neat@yahoogroups.c=\r\nom, &quot;petar_chervenski&quot; &lt;petar_chervenski@&gt;\n&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi, \n&gt; &gt; \n&gt; &gt; T=\r\nhis is not exactly NEAT-related post. I managed to resolve the \nbug \n&gt; &gt; th=\r\nat makes executables that I build with MSVC 2008 not run on all \n&gt; &gt; machin=\r\nes even though they have Windows OS. It is about the runtime \n&gt; &gt; libraries=\r\n. \n&gt; &gt; There is one small package &quot;Visual C++ 2008 redistributable&quot; at \n&gt; &gt;=\r\n Microsoft&#39;s site, I&#39;ll post a link here so everyone can download \nit. \n&gt; &gt;=\r\n Install this one and all executables developed with MSVC 2008 \nshould \n&gt; &gt;=\r\n run without any problem. There is also such one for MSVC 2005. I \n&gt; &gt; wond=\r\ner why such redistributable packages are needed, though. It is \n&gt; &gt; frustra=\r\nting to want to share something and errors pop up on the \nother \n&gt; &gt; side :=\r\n/\n&gt; &gt; So tell me if there is any problem with the DCPPN and other of my \n&gt; =\r\n&gt; demos now. Thanks. \n&gt; &gt; \n&gt; &gt; Peter\n&gt; &gt; \n&gt; &gt; Visual C++ 2008 redistributab=\r\nle:\n&gt; &gt; http://www.microsoft.com/downloadS/details.aspx?familyid=3D9B2DA534=\r\n-\n&gt; &gt; 3E03-4391-8A4D-074B9F2BC1BF&displaylang=3Den\n&gt; &gt; \n&gt; &gt; Visual C++ 2005=\r\n redistributable:\n&gt; &gt; http://www.microsoft.com/downloads/details.aspx?Famil=\r\nyId=3D32BC1BEE-\n&gt; &gt; A3F9-4C13-9C99-220B62A191EE&displaylang=3Den\n&gt; &gt; \n&gt; &gt; \n=\r\n&gt; &gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt; &gt;=\r\n\n&gt; &gt; &gt; Peter, DCPPN_.exe seems to have a bug.  It crashes when I try to \nru=\r\nn\n&gt; &gt; &gt; it.  It says, &quot;the application configuration is incorrect&quot; when \nit=\r\n\n&gt; &gt; &gt; crashes.\n&gt; &gt; &gt; \n&gt; &gt; &gt; Can you explain a little more the coordinate e=\r\nxplosion.  How \nmany\n&gt; &gt; &gt; coordinates are there once development is done? =\r\n \n&gt; &gt; &gt; \n&gt; &gt; &gt; ken\n&gt; &gt; &gt; \n&gt; &gt; &gt; --- In neat@yahoogroups.com, &quot;petar_cherven=\r\nski&quot; \n&lt;petar_chervenski@&gt;\n&gt; &gt; &gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; The executable is lo=\r\ncated in the Files section with the name \n&gt; &gt; &gt; &gt; &quot;DCPPN_3.exe&quot;.\n&gt; &gt; &gt; &gt; \n&gt;=\r\n &gt; &gt; &gt; Yes I have the same opinion, that the links should be created \n&gt; &gt; a=\r\nfter \n&gt; &gt; &gt; &gt; development. But how should I deal with the &quot;coordinate \nexpl=\r\nosion&quot; \n&gt; &gt; &gt; &gt; then? Because I don&#39;t really know how big the phenotype can=\r\n \nget. \n&gt; &gt; There \n&gt; &gt; &gt; &gt; is some limit, of course, but I am looking for a=\r\nn elegant way \nto \n&gt; &gt; solve \n&gt; &gt; &gt; &gt; the problem. Rescaling to [-1..1] is =\r\nmore of a hack than a \n&gt; &gt; solution.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Peter\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; =\r\n&gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; \nwrote:\n&gt; &gt; &gt; =\r\n&gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Peter, sounds interesting.  I&#39;ll be interested to see the \n&gt; =\r\n&gt; executable\n&gt; &gt; &gt; &gt; &gt; version to get an intuition of the kinds of structur=\r\nes your \n&gt; &gt; method\n&gt; &gt; &gt; &gt; &gt; creates.  \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; About the lin=\r\nks:  My guess is that it&#39;s best to compute \ntheir \n&gt; &gt; values\n&gt; &gt; &gt; &gt; &gt; at =\r\nthe end of development since that is the &quot;final geometry&quot; \nof \n&gt; &gt; the\n&gt; &gt; =\r\n&gt; &gt; &gt; brain that I believe makes sense to exploit.  In other \nwords, it \n&gt; =\r\n&gt; &gt; &gt; gives\n&gt; &gt; &gt; &gt; &gt; the brain the opportunity to exploit the changes occu=\r\nr over\n&gt; &gt; &gt; &gt; &gt; development.  Otherwise, it would seem that those changes =\r\n\nand \n&gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; genes that encode them are not really being used fo=\r\nr any \n&gt; &gt; purpose.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; ken\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; --- In ne=\r\nat@yahoogroups.com, &quot;petar_chervenski&quot; \n&gt; &gt; &lt;petar_chervenski@&gt;\n&gt; &gt; &gt; &gt; &gt; w=\r\nrote:\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Hi all!\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; For those of=\r\n you who are not familiar with this particular \n&gt; &gt; &gt; &gt; subject, it \n&gt; &gt; &gt; =\r\n&gt; &gt; &gt; is about physical object evolution with CPPNs. There are \nsome \n&gt; &gt; &gt;=\r\n &gt; problems \n&gt; &gt; &gt; &gt; &gt; &gt; when trying to use CPPNs directly to map onto 2/3D=\r\n objects \n&gt; &gt; with \n&gt; &gt; &gt; &gt; &gt; &gt; finite, though variable (among individuals)=\r\n size. I am \n&gt; &gt; &gt; &gt; particularly\n&gt; &gt; &gt; &gt; &gt; interested in this issue becaus=\r\ne it also holds the key to \nthe \n&gt; &gt; &gt; &gt; &gt; &gt; automatic generation of HyperN=\r\nEAT substrates as well. And \n&gt; &gt; perhaps \n&gt; &gt; &gt; &gt; it \n&gt; &gt; &gt; &gt; &gt; &gt; may open =\r\nup new ways to have content generation in games, \ntoo. \n&gt; &gt; And \n&gt; &gt; &gt; &gt; &gt; =\r\n&gt; Artificial Life, of course.\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; I remember that Ken =\r\nsuggested that animal morphologies and \n&gt; &gt; such \n&gt; &gt; &gt; &gt; things \n&gt; &gt; &gt; &gt; &gt;=\r\n &gt; may be easier to describe in higher dimensional space and \nthen \n&gt; &gt; &gt; &gt;=\r\n mapped \n&gt; &gt; &gt; &gt; &gt; &gt; back to 2D/3D, just like in HyperNEAT. Day after day I=\r\n was \n&gt; &gt; trying \n&gt; &gt; &gt; &gt; to \n&gt; &gt; &gt; &gt; &gt; &gt; find such a higher-dimensional de=\r\nscription of something \nthat \n&gt; &gt; has \n&gt; &gt; &gt; &gt; &gt; &gt; limbs, joints, all with =\r\nvariable numbers and size. Even in \nthe \n&gt; &gt; &gt; &gt; most \n&gt; &gt; &gt; &gt; &gt; &gt; simplist=\r\nic 2D case, I never got even close to such an \nelegant \n&gt; &gt; &gt; &gt; &gt; &gt; solutio=\r\nn. \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Suppose I want to have a 2D creature with rect=\r\nangular \nlimbs. \n&gt; &gt; But \n&gt; &gt; &gt; &gt; how \n&gt; &gt; &gt; &gt; &gt; &gt; many of them is unknown.=\r\n How they are connected - too. A \nlimb \n&gt; &gt; is  \n&gt; &gt; &gt; &gt; &gt; &gt; represented as=\r\n position in 2D and width/height and an \nangle of \n&gt; &gt; &gt; &gt; &gt; &gt; orientation.=\r\n This makes 5D space in which I have to query \nall \n&gt; &gt; &gt; &gt; possible \n&gt; &gt; &gt;=\r\n &gt; &gt; &gt; things and ask the CPPN if there is a limb or not. Sounds \ntoo \n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; expensive, and more, even if I do that, there are \n&gt; &gt; &gt; &gt; &gt; &gt; algo=\r\nrithmic/implementation issues that are just too hard. \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt;=\r\n &gt; &gt; The problem I had is, actually, that I missed the fact \nthat a \n&gt; &gt; CP=\r\nPN \n&gt; &gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; &gt; an infinite mathematical description of the phe=\r\nnotype. Any \nuse \n&gt; &gt; of \n&gt; &gt; &gt; &gt; a \n&gt; &gt; &gt; &gt; &gt; &gt; CPPN involves approximatin=\r\ng the phenotype with some kind \nof \n&gt; &gt; level \n&gt; &gt; &gt; &gt; of \n&gt; &gt; &gt; &gt; &gt; &gt; deta=\r\nil. The CPPN makes no difference if I use it for 16x16 \n&gt; &gt; visual \n&gt; &gt; &gt; &gt;=\r\n &gt; &gt; substrate or 65536x65536, for example (note: I mean not in \n&gt; &gt; &gt; &gt; ph=\r\nenotype \n&gt; &gt; &gt; &gt; &gt; &gt; evaluation). So there must be a way to have such level=\r\n of \n&gt; &gt; detail \n&gt; &gt; &gt; &gt; &gt; &gt; scaling in animal morphologies as well. \n&gt; &gt; &gt;=\r\n &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; So I went back to the cellular growth approach, looking=\r\n \nfor \n&gt; &gt; what I \n&gt; &gt; &gt; &gt; &gt; &gt; missed before. The biggest unsolved problem =\r\nwith my \nprevious \n&gt; &gt; &gt; &gt; system is \n&gt; &gt; &gt; &gt; &gt; &gt; that coordinates may grow=\r\n to infinite and the activation \n&gt; &gt; functions \n&gt; &gt; &gt; &gt; are \n&gt; &gt; &gt; &gt; &gt; &gt; ac=\r\ntually best suited to work in [-1..1] substrates (given \nthe \n&gt; &gt; fact \n&gt; &gt;=\r\n &gt; &gt; I \n&gt; &gt; &gt; &gt; &gt; &gt; have fixed CPPN weight range and mutation powers). Plus=\r\n, \nthe \n&gt; &gt; CPPN \n&gt; &gt; &gt; &gt; is \n&gt; &gt; &gt; &gt; &gt; &gt; requeried on each cell on each ti=\r\nmestep in the process of \n&gt; &gt; &gt; &gt; development. \n&gt; &gt; &gt; &gt; &gt; &gt; Too expensive a=\r\nnd as the phenotype gets bigger, \ndevelopment \n&gt; &gt; slows \n&gt; &gt; &gt; &gt; down \n&gt; &gt;=\r\n &gt; &gt; &gt; &gt; to a rate that is not acceptable. And more, it is not \nclear \n&gt; &gt; =\r\nhow \n&gt; &gt; &gt; &gt; &gt; &gt; scaling could work if I want to, say, have the same \nobjec=\r\nt, \n&gt; &gt; the \n&gt; &gt; &gt; &gt; same \n&gt; &gt; &gt; &gt; &gt; &gt; shape, much bigger, but the cell siz=\r\ne and the coordinate \n&gt; &gt; frames - \n&gt; &gt; &gt; &gt; &gt; &gt; still fixed. Something was =\r\nterribly wrong with that model. \nBut \n&gt; &gt; I \n&gt; &gt; &gt; &gt; think \n&gt; &gt; &gt; &gt; &gt; &gt; I h=\r\nave finally found a solution! Or at least something \nvery \n&gt; &gt; close \n&gt; &gt; &gt;=\r\n &gt; to \n&gt; &gt; &gt; &gt; &gt; &gt; it.\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; The CPPN already encodes al=\r\nl the development of a \nphenotype \n&gt; &gt; with \n&gt; &gt; &gt; &gt; any \n&gt; &gt; &gt; &gt; &gt; &gt; preci=\r\nsion via composing coordinate frames. A whole \nphenotype \n&gt; &gt; with \n&gt; &gt; &gt; &gt;=\r\n all \n&gt; &gt; &gt; &gt; &gt; &gt; its patterns with infinite (well at least huge) precision=\r\n \ncan \n&gt; &gt; be \n&gt; &gt; &gt; &gt; fit \n&gt; &gt; &gt; &gt; &gt; &gt; into just the patch of [-1 .. 1] in=\r\n Cartesian space. \nAssume I \n&gt; &gt; will \n&gt; &gt; &gt; &gt; be \n&gt; &gt; &gt; &gt; &gt; &gt; talking abou=\r\nt 2D space only for simplicity. That patch [-1 \n.. \n&gt; &gt; 1] \n&gt; &gt; &gt; &gt; in \n&gt; &gt;=\r\n &gt; &gt; &gt; &gt; both X and Y I call &quot;the Egg&quot;. \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; The first=\r\n approach I took with the idea of the egg was too \n&gt; &gt; simple, \n&gt; &gt; &gt; &gt; but=\r\n \n&gt; &gt; &gt; &gt; &gt; &gt; it is interesting to know about. After the CPPN &quot;paints&quot; \nthe=\r\n \n&gt; &gt; egg \n&gt; &gt; &gt; &gt; with \n&gt; &gt; &gt; &gt; &gt; &gt; cell color and stuff, then it is re-qu=\r\neried again, this \ntime \n&gt; &gt; the \n&gt; &gt; &gt; &gt; &gt; &gt; outputs are 2D vectors. The m=\r\nagnitude of these vectors was \nre-\n&gt; &gt; &gt; &gt; scaled \n&gt; &gt; &gt; &gt; &gt; &gt; to be within=\r\n [0 .. MAX_DISTANCE]. So the entire phenotype \n&gt; &gt; building \n&gt; &gt; &gt; &gt; &gt; &gt; pr=\r\nocedure became very simple - first build the egg, then \nsend \n&gt; &gt; each \n&gt; &gt;=\r\n &gt; &gt; &gt; &gt; cell where its vector points. Well that looks so ugly in \n&gt; &gt; prac=\r\ntice, \n&gt; &gt; &gt; &gt; &gt; &gt; with empty holes and.. eh.. forget that! This is not \nan=\r\nything \n&gt; &gt; more \n&gt; &gt; &gt; &gt; &gt; &gt; advanced than just painting the CPPN output d=\r\nirectly like \nin \n&gt; &gt; &gt; &gt; &gt; &gt; Picbreeder, just a fancy way of doing the sam=\r\ne. \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Then I realized that these &quot;cells&quot; can be also=\r\n thought of \nan \n&gt; &gt; &gt; &gt; &gt; &gt; abstractions of &quot;masses/groups of cells&quot;. In n=\r\nature, cells \n&gt; &gt; don&#39;t \n&gt; &gt; &gt; &gt; just \n&gt; &gt; &gt; &gt; &gt; &gt; go &quot;that way&quot; moving thr=\r\nough each other, but stick \ntogether. \n&gt; &gt; &gt; &gt; Entire \n&gt; &gt; &gt; &gt; &gt; &gt; tissues =\r\ndevelop fast as a mass of cells divides and \nincreases \n&gt; &gt; &gt; &gt; size. So \n&gt;=\r\n &gt; &gt; &gt; &gt; &gt; I had this insight. I changed the concept of a cell and \n&gt; &gt; imp=\r\nroved \n&gt; &gt; &gt; &gt; over \n&gt; &gt; &gt; &gt; &gt; &gt; the previous model. A cell is a circle wit=\r\nh a radius, has \na \n&gt; &gt; color \n&gt; &gt; &gt; &gt; and \n&gt; &gt; &gt; &gt; &gt; &gt; has mass. It also h=\r\nas more properties but more on that \nafter a \n&gt; &gt; few \n&gt; &gt; &gt; &gt; &gt; &gt; other wo=\r\nrds. \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; This is the key idea. In my previous model, =\r\nthe CPPN was \n&gt; &gt; &gt; &gt; instructing a \n&gt; &gt; &gt; &gt; &gt; &gt; big mass of many cells on =\r\nthe fly, during development \ntime. It \n&gt; &gt; &gt; &gt; took \n&gt; &gt; &gt; &gt; &gt; &gt; advantage =\r\nof using time as input, so the development was \nlike \n&gt; &gt; a \n&gt; &gt; &gt; &gt; &gt; &gt; sp=\r\natial pattern in 4D. But it suffered from the \ncoordinates \n&gt; &gt; and \n&gt; &gt; &gt; =\r\n&gt; other \n&gt; &gt; &gt; &gt; &gt; &gt; problems I mentioned above. In this model, the CPPN do=\r\nes \nnot \n&gt; &gt; &gt; &gt; operate \n&gt; &gt; &gt; &gt; &gt; &gt; on the cells during development. The =\r\nCPPN predetermines \nthe \n&gt; &gt; fate \n&gt; &gt; &gt; &gt; of \n&gt; &gt; &gt; &gt; &gt; &gt; each cell right =\r\nin the egg, before development begins. \n&gt; &gt; Everything \n&gt; &gt; &gt; &gt; else \n&gt; &gt; &gt;=\r\n &gt; &gt; &gt; during development is a consequence of the cell&#39;s fate and \nthe \n&gt; &gt;=\r\n &gt; &gt; &gt; &gt; internal 2D physics world in which the phenotype develops. \nSo, \n&gt;=\r\n &gt; in \n&gt; &gt; &gt; &gt; &gt; &gt; simpler words, the CPPN is programming the egg.\n&gt; &gt; &gt; &gt; =\r\n&gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; A cell has the following properties that are determined by=\r\n \nthe \n&gt; &gt; &gt; &gt; CPPN:\n&gt; &gt; &gt; &gt; &gt; &gt; - Color (of course :)\n&gt; &gt; &gt; &gt; &gt; &gt; - Growth=\r\n rate. How fast it increases size in % of circle \narea. \n&gt; &gt; &gt; &gt; &gt; &gt; - Time=\r\n to begin growth. It is a value in [0 .. 1] where 1 \nis \n&gt; &gt; the \n&gt; &gt; &gt; &gt; t=\r\notal \n&gt; &gt; &gt; &gt; &gt; &gt; number of time steps allocated for development.\n&gt; &gt; &gt; &gt; &gt;=\r\n &gt; - Growth time duration. Between some min and max value.\n&gt; &gt; &gt; &gt; &gt; &gt; - An=\r\ngle for division splitting. Between [-1 .. 1], during \n&gt; &gt; &gt; &gt; development =\r\n\n&gt; &gt; &gt; &gt; &gt; &gt; rescaled to [0 .. pi]\n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; As cells grow, =\r\nthey will inevitably overlap each other. \nThis \n&gt; &gt; issue \n&gt; &gt; &gt; &gt; is \n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; handled by the internal simple 2D physics engine that adds \n&gt; &gt; for=\r\nces \n&gt; &gt; &gt; &gt; if \n&gt; &gt; &gt; &gt; &gt; &gt; the circles overlap. So they eventually will c=\r\nonverge to a \n&gt; &gt; state \n&gt; &gt; &gt; &gt; that \n&gt; &gt; &gt; &gt; &gt; &gt; they only touch each oth=\r\ner, and the whole phenotype bigger \nof \n&gt; &gt; &gt; &gt; course. \n&gt; &gt; &gt; &gt; &gt; &gt; Cells =\r\ncan divide. Division is automatic. If a cell&#39;s \nradius \n&gt; &gt; &gt; &gt; reaches a \n=\r\n&gt; &gt; &gt; &gt; &gt; &gt; a fixed treshold value, it is split into 2 cells, each one \n&gt; &gt;=\r\n having \n&gt; &gt; &gt; &gt; &gt; &gt; exactly half the area of the mother cell. The mother c=\r\nell \nis \n&gt; &gt; split \n&gt; &gt; &gt; &gt; &gt; &gt; along a predetermined angle, so the CPPN ca=\r\nn control the \n&gt; &gt; overall \n&gt; &gt; &gt; &gt; &gt; &gt; directions of growth for the phenot=\r\nype. The 2 children \noverlap \n&gt; &gt; in \n&gt; &gt; &gt; &gt; the \n&gt; &gt; &gt; &gt; &gt; &gt; beginning, b=\r\nut as time progresses, they are pulled apart \nby \n&gt; &gt; the \n&gt; &gt; &gt; &gt; &gt; &gt; phys=\r\nics. Children cells inherit the properties of the \nmother, \n&gt; &gt; but \n&gt; &gt; &gt; =\r\n&gt; &gt; &gt; change their positions and reset their lifetime timers. \nThe \n&gt; &gt; cel=\r\nls \n&gt; &gt; &gt; &gt; in \n&gt; &gt; &gt; &gt; &gt; &gt; the egg count their children and their grandchi=\r\nldren as \nwell. \n&gt; &gt; No \n&gt; &gt; &gt; &gt; more \n&gt; &gt; &gt; &gt; &gt; &gt; than 3 generations of di=\r\nvision can occur, in order to keep \nthe \n&gt; &gt; &gt; &gt; number \n&gt; &gt; &gt; &gt; &gt; &gt; of cel=\r\nls relatively small for performance considerations. \n&gt; &gt; Though \n&gt; &gt; &gt; &gt; th=\r\nis \n&gt; &gt; &gt; &gt; &gt; &gt; value can be changed. \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; In order to=\r\n keep the phenotype solid, not torn apart from \n&gt; &gt; internal \n&gt; &gt; &gt; &gt; &gt; &gt; v=\r\nelocities, a mass-spring grid mesh is created in the egg \n&gt; &gt; before \n&gt; &gt; &gt;=\r\n &gt; &gt; &gt; development. Cell divisions update the mesh. The mass-\nspring \n&gt; &gt; m=\r\nesh \n&gt; &gt; &gt; &gt; plus \n&gt; &gt; &gt; &gt; &gt; &gt; the cell-to-cell overlapping prevention forc=\r\nes act \ntogether as \n&gt; &gt; the \n&gt; &gt; &gt; &gt; &gt; &gt; phenotype increases in size and n=\r\number of cells. \nEventually it \n&gt; &gt; &gt; &gt; will \n&gt; &gt; &gt; &gt; &gt; &gt; become more stiff=\r\n, where large group of recently divided \ncells \n&gt; &gt; are \n&gt; &gt; &gt; &gt; &gt; &gt; packed=\r\n together. I don&#39;t know if that is a bug or a \nfeature :) \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt;=\r\n &gt; &gt; &gt; &gt; There is one insight I had after seeing the results. \nWatching \n&gt; =\r\n&gt; the \n&gt; &gt; &gt; &gt; mesh \n&gt; &gt; &gt; &gt; &gt; &gt; develops, and some with interesting shapes=\r\n and \nconfigurations, \n&gt; &gt; &gt; &gt; makes \n&gt; &gt; &gt; &gt; &gt; &gt; me think this approach is=\r\n very well suited to evolve \nHyperNEAT \n&gt; &gt; &gt; &gt; &gt; &gt; substrates as well. In =\r\nfact I am about to add brains to \nthese \n&gt; &gt; &gt; &gt; &gt; &gt; creatures right this e=\r\nvening :) But I don&#39;t know, if the \nlinks \n&gt; &gt; &gt; &gt; should \n&gt; &gt; &gt; &gt; &gt; &gt; be d=\r\netermined from the beginning right in the egg or after \n&gt; &gt; &gt; &gt; &gt; &gt; develop=\r\nment. Any suggestions? \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Well this is it. I hope th=\r\nis may be some advance into the \n&gt; &gt; field. I \n&gt; &gt; &gt; &gt; &gt; &gt; will be happy to=\r\n see any thoughts about this stuff. I&#39;ll \npost \n&gt; &gt; an \n&gt; &gt; &gt; &gt; &gt; &gt; executa=\r\nble compiled with VS2008 in the files section now, \nso \n&gt; &gt; you \n&gt; &gt; &gt; &gt; wi=\r\nll \n&gt; &gt; &gt; &gt; &gt; &gt; see it in action. Note however, that it is just a demo of \n=\r\n&gt; &gt; &gt; &gt; development, \n&gt; &gt; &gt; &gt; &gt; &gt; not evolution. There is no doubt that thi=\r\ns thing combined \nwith \n&gt; &gt; &gt; &gt; NEAT \n&gt; &gt; &gt; &gt; &gt; &gt; will make at least someth=\r\ning very very cool. :) \n&gt; &gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; &gt; Peter\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; =\r\n&gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n\n"}}