{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":146970080,"authorName":"German Viscuso","from":"German Viscuso &lt;netquake@...&gt;","profile":"gerpsai","replyTo":"LIST","senderId":"XuiSsF_ckIQxi2mv-WkLmPURkLIhKLO8LgSKD6VuprWfUd7Q037CbaRtkw2M5j-uOlQ51ZSxvCkj9d2FaTaApWtKlYA8Ck5CuX8pM8by","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Training/testing subset selection","postDate":"1078193379","msgId":466,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAzOTUwMWMzZmZmYiQ5NDI5YWZlMCRmZDAwYThjMEBwYXJhc2l0ZT4=","referencesHeader":"PEJBWTItRjI2Q014ZnFjbHdtbFowMDAwNTg4ZkBob3RtYWlsLmNvbT4="},"prevInTopic":465,"nextInTopic":467,"prevInTime":465,"nextInTime":467,"topicId":433,"numMessagesInTopic":9,"msgSnippet":"Hi John, Have you applied this approach sucessfully to the image enlargement domain? I think innovation may come from the low ranking specimens (for example","rawEmail":"Return-Path: &lt;netquake@...&gt;\r\nX-Sender: netquake@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 37400 invoked from network); 2 Mar 2004 02:11:32 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m10.grp.scd.yahoo.com with QMQP; 2 Mar 2004 02:11:32 -0000\r\nReceived: from unknown (HELO TDIMSO03.backend.tdata.com.ar) (200.51.80.17)\n  by mta5.grp.scd.yahoo.com with SMTP; 2 Mar 2004 02:11:31 -0000\r\nReceived: from parasite (168-226-164-182.speedy.com.ar [168.226.164.182])\n by TDIMSO03.backend.tdata.com.ar\n (iPlanet Messaging Server 5.2 Patch 1 (built Aug 19 2002))\n with ESMTPA id &lt;0HTX005XPFAR3X@...&gt; for\n neat@yahoogroups.com; Mon, 01 Mar 2004 23:09:06 -0300 (GMT)\r\nDate: Mon, 01 Mar 2004 23:09:39 -0300\r\nTo: neat@yahoogroups.com\r\nMessage-id: &lt;039501c3fffb$9429afe0$fd00a8c0@parasite&gt;\r\nMIME-version: 1.0\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nX-Mailer: Microsoft Outlook Express 6.00.2800.1158\r\nContent-type: text/plain; charset=iso-8859-1\r\nContent-transfer-encoding: 7BIT\r\nX-Priority: 3\r\nX-MSMail-priority: Normal\r\nReferences: &lt;BAY2-F26CMxfqclwmlZ0000588f@...&gt;\r\nX-eGroups-Remote-IP: 200.51.80.17\r\nFrom: German Viscuso &lt;netquake@...&gt;\r\nSubject: Re: [neat] Re: Training/testing subset selection\r\nX-Yahoo-Group-Post: member; u=146970080\r\nX-Yahoo-Profile: gerpsai\r\n\r\nHi John,\nHave you applied this approach sucessfully to the image enlargement domain?\nI think innovation may come from the low ranking specimens (for example tiny\nmammals in the Jurassic), isn&#39;t it a bad idea to keep them from breeding?\n\nJust trying to understand.\n\nRegards,\n\nGerman Viscuso\n\n----- Original Message ----- \nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\nTo: &lt;neat@yahoogroups.com&gt;\nSent: Monday, March 01, 2004 10:37 PM\nSubject: RE: [neat] Re: Training/testing subset selection\n\n\n&gt; &gt;From: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\n&gt;\n&gt; [ snipped long description of proposed algorithm ]\n&gt;\n&gt; &gt; &gt; Example:\n&gt; &gt; &gt;\n&gt; &gt; &gt; steady = 0;\n&gt; &gt; &gt; do {\n&gt; &gt; &gt;     GetNextSample();\n&gt; &gt; &gt;     EvaluateNetworks();\n&gt; &gt; &gt;     if ( IdentifyBreedingSpecimens() )\n&gt; &gt; &gt;         steady = 0;  // something changed...keep evaluating\n&gt; &gt; &gt;     else\n&gt; &gt; &gt;         steady++;\n&gt; &gt; &gt; } while ( steady &lt; 10 )\n&gt; &gt; &gt; NextGeneration();\n&gt; &gt;\n&gt; &gt;I&#39;m not sure I&#39;m understanding this idea correctly; can you go into a\n&gt; &gt;little more detail on what makes IdentifyBreedingSpecimens() true?\n&gt;\n&gt; In a second...\n&gt;\n&gt; &gt;i.e. how do you know you have &quot;enough&quot; information to start breeding?\n&gt; &gt;And if there is some criteria for this concept of enough, then why not\n&gt; &gt;just apply the criteria directly to your fitness spread instead of\n&gt; &gt;calling NEAT?  It seems that NEAT could just be called after you&#39;ve\n&gt; &gt;determined you have enough info.\n&gt;\n&gt; That was my original idea...\n&gt;\n&gt; &gt;The thing I&#39;m not understanding is that NEAT just takes the top n% of\n&gt; &gt;each species and lets them reproduce.\n&gt;\n&gt; Ah-ha!  That&#39;s what I wanted to know.  So then here&#39;s what I&#39;m\nenvisioning.\n&gt; Suppose there are 20 members of Species A.  And suppose the top 10% get to\n&gt; breed.  Thus, 2.  What would IdentifyBreedingSpecimens() do?  It would set\na\n&gt; flag to TRUE for in those 2, and FALSE in all others.  Of course, if the\n&gt; flag is already set, then it does nothing for that specimen.  What it\n&gt; returns is how many specimens within the species that it changed.  Or\nwithin\n&gt; the population at large.  Thus, if the SAME 2 are still the breeders, then\n&gt; nothing has changed, so the return value is 0.\n&gt;\n&gt; example, in pseudo-code.\n&gt;\n&gt; count = 0;\n&gt; for_each_species...\n&gt; {\n&gt;   sort_by_fitness( species );\n&gt;   breeders = breed-percent * species.members.count;\n&gt;   for ( i = 0 ; i &lt; species.members.count ; i++ )\n&gt;   {\n&gt;     if ( i &lt; breeders )\n&gt;     {\n&gt;         if ( ! member.will_breed )\n&gt;         {\n&gt;            member.will_breed = TRUE;\n&gt;            count++;\n&gt;         }\n&gt;     }\n&gt;     else\n&gt;       if ( member.will_breed )\n&gt;       {\n&gt;         member.will_breed = FALSE;\n&gt;         count++;\n&gt;       }\n&gt;   }\n&gt; }\n&gt; return count;  // count will be 0 if nothing has changed...\n&gt;\n&gt; &gt;So no matter how many\n&gt; &gt;evaluations you do or what the results are, NEAT will always choose\n&gt; &gt;the same # of parents.\n&gt;\n&gt; Yes.  But WHICH parents it will chose may vary because with every\nadditional\n&gt; evaluation, the momentary fitness changes.  That momentary fitness changes\n&gt; the average fitness.  That change in average fitness might effect the list\n&gt; of WHICH parents are selected to change.  To illustrate:\n&gt;\n&gt; After evaluating 1234 samples:\n&gt;\n&gt; A : 7.5\n&gt; B : 3.2\n&gt; -- cutoff for who breeds --\n&gt; C : 3.1\n&gt; D : 1.0\n&gt;\n&gt; After evaluating 1235 samples:\n&gt;\n&gt; A : 7.5\n&gt; C : 3.2\n&gt; -- cutoff --\n&gt; B : 3.1\n&gt; D : 1.1\n&gt;\n&gt; So between evaluation number 1234 and 1235, the list of who will breed\n&gt; changes from A,B to A,C.  As long as B and C are fighting it out for\n&gt; dominance, it would probably be wise to keep evaluating them against more\n&gt; and more samples.  We could conceivably STOP evaluating A and D, since\ntheir\n&gt; &#39;destiny&#39; is clear, thereby saving us some computation cycles.\n&gt;\n&gt; &gt;It&#39;s true that perhaps in some cases too many\n&gt; &gt;networks will have the same fitness, but in that case NEAT will just\n&gt; &gt;choose an arbitrary group as the mating pool.\n&gt;\n&gt; As long as the relative positions in the list are the same, and the\nstarting\n&gt; positions are the same, a quick-sort would return consistent (albeit\n&gt; undefined) results.  That&#39;s not a problem.\n&gt;\n&gt; &gt;So I&#39;m not sure how\n&gt; &gt;this fits into your idea that you will somehow accumulate a mating\n&gt; &gt;pool incrementally?\n&gt;\n&gt; I don&#39;t think I&#39;d call it &#39;incrementally&#39; per se.  The pool would be a\nfixed\n&gt; size from the start.  But since the composition of that pool is determined\n&gt; by the average fitness of the individual members of the species, and since\n&gt; that average fitness might change with each additional evaluation of an\n&gt; input sample, the composition of that pool might change.  As long as it IS\n&gt; changing, we aren&#39;t really sure who SHOULD breed (who is really best), so\nwe\n&gt; should just keep evaluating.  But once it looks like the winners have been\n&gt; clearly identified, it is safe to stop evaluating.  This as opposed to\n&gt; evaluating the network in every possible input scenario.\n&gt;\n&gt; Put it in another context.  Suppose it is SoccerBots.  Suppose that you\n&gt; evaluate the bot ONCE.  The scenario is kicking the incoming ball towards\n&gt; the goal.  Suppose the angle that you choose to send the ball in at is\njust\n&gt; outside its learned range.  Suppose it has to make a 90-degree kick in\norder\n&gt; to get a high fitness on this test.  Now, it is really good at 80-degree\n&gt; kicks (or less), but it hasn&#39;t adapted to 90-degrees yet, and so it scores\n&gt; badly.  Of course you wouldn&#39;t trash the network just because it didn&#39;t do\n&gt; well at that one test.  You would test it against a wide range of degrees\n&gt; and then give it an average fitness.  But would you test it against every\n&gt; possible input angle?  Or every possible position on the field?  No,\nthat&#39;s\n&gt; too many tests.  So you do lots of tests, just not EVERY POSSIBLE test.\n&gt;\n&gt; In this same situation, once you know that bot A and B are significantly\n&gt; better than C and D, it is not necessary to keep evaluating different\n&gt; scenarios.  Just breed them and move on to the next generation...\n&gt;\n&gt; The image enlargement domain is similar.  It can&#39;t just be evaluated\nagainst\n&gt; a single input sample.  But it is unreasonable to try to evaluate it\nagainst\n&gt; every available input sample.  So, just evaluate against enough samples so\n&gt; that we can successfully identify which ones will be passing on their\ngenes,\n&gt; then stop.\n&gt;\n&gt; &gt;Note also that different species are allowed to\n&gt; &gt;produce different amounts of offspring, i.e. offspring are assigned on\n&gt; &gt;a per-species basis.\n&gt;\n&gt; Yes.  But if the number of gene-providing parents is fixed based on number\n&gt; of members in species, then the number of offspring wouldn&#39;t enter into\nthe\n&gt; equation.\n&gt;\n&gt; &gt;Also note that you can&#39;t really make reproduction decisions without\n&gt; &gt;all the fitness info, since the final fitnesses are adjusted by the\n&gt; &gt;size of their respective species.  So the fitnesses are shared.  So if\n&gt; &gt;you tried to decide who is going to reproduce before fitness sharing,\n&gt; &gt;you would not get the benefit of fitness sharing.\n&gt;\n&gt; That&#39;s fine, it can do fitness sharing...\n&gt;\n&gt; Think of it this way:  &quot;If I stopped any further evaluation right here and\n&gt; now, who would reproduce?&quot;  As long as the answer to that question keeps\n&gt; changing, our assertion of which specimens are &#39;best&#39; is not very\naccurate.\n&gt; When the answer to that question doesn&#39;t change for some period of time,\n&gt; then we have a good idea of who the really good specimens really are.\nTime\n&gt; to stop evaluating and move on to the next generation.  Does that mean\nsome\n&gt; wasted time spent doing the fitness sharing and breeding calculations?\nYes.\n&gt;   But where the cost of a fitness evaluation is high, the benefit of being\n&gt; able to stop the fitness evaluation once it has proven &#39;adequate&#39; should\n&gt; outweigh the cost of that repeated &#39;breeding&#39; evaluation.  Make sense?\n&gt;\n&gt; &gt;Sorry if I may be misunderstanding- it&#39;s possible I&#39;m answering the\n&gt; &gt;wrong question!\n&gt;\n&gt; Don&#39;t worry about it...I&#39;ll just keep clarifying until either I&#39;ve\n&gt; absolutely convinced myself one way or the other, or someone convinces me.\n&gt; :)\n&gt;\n&gt; -- John\n&gt;\n&gt; _________________________________________________________________\n&gt; Learn how to help protect your privacy and prevent fraud online at Tech\n&gt; Hacks & Scams. http://special.msn.com/msnbc/techsafety.armx\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n"}}