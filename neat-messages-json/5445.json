{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":184928113,"authorName":"Evert Haasdijk","from":"Evert Haasdijk &lt;evert@...&gt;","profile":"evertwh2004","replyTo":"LIST","senderId":"zdG2r1OPYXrBXw5DGGXyzB8nbN0k4Vj_hok2U_5pqW1k02wK5hhhoRPDZzzBKEZ9vjfryKM86v4KW5dZ11iAtQDnStHOM7IANX4tb1TY","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Windows NEAT - errors?","postDate":"1294905264","msgId":5445,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEQ5Q0Y2REJDLTU4RTQtNDg2Ni05M0YxLTYwQjRFNzM5QUMzM0B6dWtrZXNwaWprZXJzLm5sPg==","inReplyToHeader":"PEFBTkxrVGluVTlGenBfWlhkamMzNnNWV0pGNlBWTS0wVzFLRlJSPW14WG11c0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PEFBTkxrVGluVTlGenBfWlhkamMzNnNWV0pGNlBWTS0wVzFLRlJSPW14WG11c0BtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":5444,"nextInTopic":5446,"prevInTime":5444,"nextInTime":5446,"topicId":5444,"numMessagesInTopic":7,"msgSnippet":"Why would this use of pre-increment be problematic? In fact, it is faster because pre-increment can just return its updated operand, post- increment can t.","rawEmail":"Return-Path: &lt;evert@...&gt;\r\nX-Sender: evert@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 60033 invoked from network); 13 Jan 2011 07:54:26 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 13 Jan 2011 07:54:26 -0000\r\nX-Received: from unknown (HELO smtp-vbr12.xs4all.nl) (194.109.24.32)\n  by mta1.grp.sp2.yahoo.com with SMTP; 13 Jan 2011 07:54:26 -0000\r\nX-Received: from mac172.few.vu.nl (mac172.few.vu.nl [130.37.31.47])\n\t(authenticated bits=0)\n\tby smtp-vbr12.xs4all.nl (8.13.8/8.13.8) with ESMTP id p0D7sPQG009806\n\t(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NO)\n\tfor &lt;neat@yahoogroups.com&gt;; Thu, 13 Jan 2011 08:54:25 +0100 (CET)\n\t(envelope-from evert@...)\r\nMessage-Id: &lt;D9CF6DBC-58E4-4866-93F1-60B4E739AC33@...&gt;\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;AANLkTinU9Fzp_ZXdjc36sVWJF6PVM-0W1KFRR=mxXmus@...&gt;\r\nContent-Type: text/plain; charset=WINDOWS-1252; format=flowed; delsp=yes\r\nContent-Transfer-Encoding: quoted-printable\r\nMime-Version: 1.0 (Apple Message framework v936)\r\nDate: Thu, 13 Jan 2011 08:54:24 +0100\r\nReferences: &lt;AANLkTinU9Fzp_ZXdjc36sVWJF6PVM-0W1KFRR=mxXmus@...&gt;\r\nX-Mailer: Apple Mail (2.936)\r\nX-Virus-Scanned: by XS4ALL Virus Scanner\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Evert Haasdijk &lt;evert@...&gt;\r\nSubject: Re: [neat] Windows NEAT - errors?\r\nX-Yahoo-Group-Post: member; u=184928113; y=w0-wu-0RRJMb2wUtj4FGOX8XVc4putfKbVAKmZsNTYkX34F9fRA\r\nX-Yahoo-Profile: evertwh2004\r\n\r\nWhy would this use of pre-increment be problematic? In fact, it is  \nfaster=\r\n because pre-increment can just return its updated operand, post- \nincremen=\r\nt can&#39;t.\n\nOn 13 Jan 2011, at 00:20, Robert DeLisle wrote:\n\n&gt; I&#39;ve been work=\r\ning with the Windows version of NEAT and I think I&#39;ve  \n&gt; found some proble=\r\nms.  Specifically, there appears to be extensive  \n&gt; usage of preincrement =\r\noperators incorrectly.  For example, in  \n&gt; CNeuralNet::Update() I see this=\r\n code block to prevent accumulation  \n&gt; of values in the neurons:\n&gt;\n&gt; for (=\r\nint n=3D0; n&lt;m_vecpNeurons.size(); ++n)\n&gt;     {\n&gt;       m_vecpNeurons[n]-&gt;d=\r\nOutput =3D 0;\n&gt;     }\n&gt;\n&gt; Another example is in CNeuralNet::~CNeuralNet():\n=\r\n&gt;\n&gt; for (int i=3D0; i&lt;m_vecpNeurons.size(); ++i)\n&gt;   {\n&gt;     if (m_vecpNeur=\r\nons[i])\n&gt;     {\n&gt;       delete m_vecpNeurons[i];\n&gt;\n&gt;       m_vecpNeurons[i]=\r\n =3D NULL;\n&gt;     }\n&gt;   }\n&gt;\n&gt; It seems to me that this usage is problematic,=\r\n which I&#39;ve noticed in  \n&gt; my use lately.  Has anyone had any issues with t=\r\nhis or noticed any  \n&gt; problems?\n&gt;\n&gt; -Kirk\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n\n\n"}}