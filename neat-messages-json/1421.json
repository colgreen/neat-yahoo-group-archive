{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":130107745,"authorName":"Chad Bohannan","from":"&quot;Chad Bohannan&quot; &lt;chad@...&gt;","profile":"tailboom22","replyTo":"LIST","senderId":"tfOsr0uNX-C1xzh4iMgbT2vaqB3GthCyxq5-RFgjLxEtCizsa10-ZM9J77_iK95p8l5zVYb8gqt1MzMq6msssEf_PtNzExc3oX0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Performance comparison of C++ vs C#","postDate":"1092943221","msgId":1421,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDdmNzAwMWM0ODYyMSQ5MjA4MzI3MCQ2ZWNiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":1414,"nextInTopic":0,"prevInTime":1420,"nextInTime":1422,"topicId":1381,"numMessagesInTopic":6,"msgSnippet":"As perhapse the only user on the group who uses Windows NEAT, I can say that as I learn the intracacies of Kens idea, that it holds very closely to the","rawEmail":"Return-Path: &lt;chad@...&gt;\r\nX-Sender: chad@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 13951 invoked from network); 19 Aug 2004 19:28:26 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m10.grp.scd.yahoo.com with QMQP; 19 Aug 2004 19:28:26 -0000\r\nReceived: from unknown (HELO mwde08la.mail2world.com) (66.28.189.182)\n  by mta6.grp.scd.yahoo.com with SMTP; 19 Aug 2004 19:28:26 -0000\r\nReceived: from mail pickup service by mwde08la.mail2world.com with Microsoft SMTPSVC;\n\t Thu, 19 Aug 2004 12:20:22 -0700\r\nauth-sender:chad@...\r\nReceived: from 10.1.203.110 unverified ([10.1.203.110]) by mwde08la.mail2world.com with Mail2World SMTP Server,\n\tThu 19 Aug 2004 12:20:21 -07:00\r\nReceived: from [153.90.199.7] by bohannan.net with HTTP; 8/19/2004 12:20:21 PM PST\r\nthread-index: AcSGIZIIe7demaqETKmnwrjM7/XxyA==\r\nThread-Topic: [neat] Performance comparison of C++ vs C#\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nDate: Thu, 19 Aug 2004 12:20:21 -0700\r\nMessage-ID: &lt;7f7001c48621$92083270$6ecb010a@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_7F71_01C485E6.E5A95A70&quot;\r\nX-Mailer: Microsoft CDO for Exchange 2000\r\nContent-Class: urn:content-classes:message\r\nImportance: normal\r\nPriority: normal\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165\r\nX-OriginalArrivalTime: 19 Aug 2004 19:20:22.0242 (UTC) FILETIME=[92754C20:01C48621]\r\nX-eGroups-Remote-IP: 66.28.189.182\r\nFrom: &quot;Chad Bohannan&quot; &lt;chad@...&gt;\r\nSubject: Re: [neat] Performance comparison of C++ vs C#\r\nX-Yahoo-Group-Post: member; u=130107745\r\nX-Yahoo-Profile: tailboom22\r\n\r\n\r\n------=_NextPart_000_7F71_01C485E6.E5A95A70\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\nAs perhapse the only user on the group who uses Windows NEAT, I can say\nthat as I learn the intracacies of Kens idea, that it holds very closely\nto the published NEAT paper, and that the code is well organized. That\nis not to say that it was written with the intent of fast execution.\nI&#39;ve had good luck modifying Windows NEAT to take advantage of some of\nthe speed up suggestions on the board. A lot of the cacheing ideas have\nbeen over my head, but I havn&#39;t paid too much attention, either. The\nmodel of the transfer function as a linear approximation was plug and\nplay to add, and the speedup was very noticable, so maybe I should pay\nmore attention...\nchad\n\n&lt;-----Original Message-----&gt; \n&gt;From: Colin Green\n&gt;Sent: 8/19/2004 3:24:08 AM\n&gt;To: neat@yahoogroups.com\n&gt;Subject: Re: [neat] Performance comparison of C++ vs C#\n&gt;\n&gt;\n&gt;Colin Green wrote:\n&gt;\n&gt;&gt;[...]\n&gt;&gt;\n&gt;&gt;Another major point I want to make is that performance is largely a \n&gt;&gt;function of the code, not what language it is written in. Sloppy C++ \n&gt;&gt;will run slower than well written C#. Also consider the neural network\n&gt;&gt;code optimizations I worked on recently, the code was clear, well \n&gt;&gt;written and (I thought) nice tight optimal code - which it was. But I \n&gt;&gt;was able to achieve an 8x speed increase by considering Ian Badcoes \n&gt;&gt;suggestions about CPU caches and re-ordering the sequence of\nexecution.\n&gt; \n\r\n------=_NextPart_000_7F71_01C485E6.E5A95A70\r\nContent-Type: text/html\r\nContent-Transfer-Encoding: 7bit\r\n\r\n&lt;HTML&gt;\n&lt;BODY&gt;\n&lt;br&gt;\nAs perhapse the only user on the group who uses Windows NEAT, I can say that as I learn the intracacies of Kens idea, that it holds very closely to the published NEAT paper, and that the code is well organized. That is not to say that it was written with the intent of fast execution. I&#39;ve had good luck modifying Windows NEAT to take advantage of some of the speed up suggestions on the board. A lot of the cacheing ideas have been over my head, but I havn&#39;t paid too much attention, either. The model of the transfer function as a linear approximation was plug and play to add, and the speedup was very noticable, so maybe I should pay more attention...&lt;br&gt;\nchad&lt;br&gt;\n&lt;br&gt;\n&lt;-----Original Message-----&gt; &lt;br&gt;\n&gt;From: Colin Green&lt;br&gt;\n&gt;Sent: 8/19/2004 3:24:08 AM&lt;br&gt;\n&gt;To: neat@yahoogroups.com&lt;br&gt;\n&gt;Subject: Re: [neat] Performance comparison of C++ vs C#&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;Colin Green wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt;&gt;[...]&lt;br&gt;\n&gt;&gt;&lt;br&gt;\n&gt;&gt;Another major point I want to make is that performance is largely a &lt;br&gt;\n&gt;&gt;function of the code, not what language it is written in. Sloppy C++ &lt;br&gt;\n&gt;&gt;will run slower than well written C#. Also consider the neural network &lt;br&gt;\n&gt;&gt;code optimizations I worked on recently, the code was clear, well &lt;br&gt;\n&gt;&gt;written and (I thought) nice tight optimal code - which it was. But I &lt;br&gt;\n&gt;&gt;was able to achieve an 8x speed increase by considering Ian Badcoes &lt;br&gt;\n&gt;&gt;suggestions about CPU caches and re-ordering the sequence of execution.&lt;br&gt;\n&gt;\n&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_7F71_01C485E6.E5A95A70--\r\n\n"}}