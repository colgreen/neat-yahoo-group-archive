{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"6-XWCaXphTJJzWcf_2LNY1sYEYc_H6LrbdU-cRCP86f556YQniBPrF6MXDJAJYflIWM6J-i4XqXCocjrTNne462pf9ZXoVjNNw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Connection weight mutation schemes","postDate":"1097450007","msgId":1618,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxNjlDMjE3LjcwODAxMDNAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":0,"nextInTopic":1619,"prevInTime":1617,"nextInTime":1619,"topicId":1618,"numMessagesInTopic":27,"msgSnippet":"The discussion about parameter settings coincided with, and has some bearing on some thinking I ve been doing about connection weight mutation schemes. This","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 25651 invoked from network); 10 Oct 2004 23:13:25 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m21.grp.scd.yahoo.com with QMQP; 10 Oct 2004 23:13:25 -0000\r\nReceived: from unknown (HELO pengo.systems.pipex.net) (62.241.160.193)\n  by mta3.grp.scd.yahoo.com with SMTP; 10 Oct 2004 23:13:24 -0000\r\nReceived: from [10.0.0.10] (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby pengo.systems.pipex.net (Postfix) with ESMTP id F10174C00096\n\tfor &lt;neat@yahoogroups.com&gt;; Mon, 11 Oct 2004 00:13:23 +0100 (BST)\r\nMessage-ID: &lt;4169C217.7080103@...&gt;\r\nDate: Mon, 11 Oct 2004 00:13:27 +0100\r\nUser-Agent: Mozilla Thunderbird 0.7.1 (Windows/20040626)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 62.241.160.193\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Connection weight mutation schemes\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nThe discussion about parameter settings coincided with, and has some \nbearing on some thinking I&#39;ve been doing about connection weight \nmutation schemes. This all goes back to a discussion a while ago when it \ntranspired that Derek And Philip&#39;s ANJI code was using a different \nscheme, I think due to some ambiguous wording in one of the NEAT \npapers.  As I recall I *think* they were seeing similar results despite \nthe quite different technique.  Considering this I was wondering about \nall the different schemes we /could/ try out and whether we might be \nable to find a better scheme in comparison to the one(s) we are \ncurrently using, perhaps with a slightly firmer experimental foundation \nin comparison to the largely manual trial and error approach used to-date.\n\nBriefly looking over the code in Ken&#39;s NEAT, ANJI and DelphiNEAT (and \nSharpNEAT) the most popular technique seems to be to mutate a varying \nproportion of the weights and to switch between sometimes resetting the \nweights and sometimes &#39;jiggling&#39; them. One problem that might occur with \nthis proportional approach is that as a genome size increases we will be \nperturbing a larger number of connections, and I would expect this to \nmostly generate poorer offspring, since any good weight change is likely \nto be drowned out by a large number of detrimental weight changes. When \ngenomes are small this effect will be small, but as size increases I \nwould expect this technique to become less efficient.\n\nPerhaps a better approach would be to perturb a fixed number of weights, \nor even just one weight at a time. But mutating one weight at a time \nmight prevent certain types of beneficial mutation occuring where two or \nmore related connections are mutated together, creating a beneficial \nchange only when taken together.\n\nThere is also the question of how we actually mutate a weight. Resetting \na weight to within the defined range is straightforward enough, but \nthere are different ways of jiggling a weight. I (and I think ANJI) \ngenerate weight deltas from a standard deviation curve, but what is the \nbest value for sigma(defines the size of the bell curve) in such a \nfunction? Also by it&#39;s very nature this approach can occasionaly \ngenerate very large deltas, so we have a mix of many small deltas and a \nfew large ones applied to a single genome.\n\nAlternatively DelphiNEAT has a &#39;perturbation factor&#39; which is simply \nmultiplied by a random number to generate delta&#39;s evenly over a defned \nrange (0.1 and 0.05 are the params used in DelphiNEAT for the \nexperiments I have looked at).\n\nThese variations are the tip of the iceberg, there are a whole range of \nschemes we could use (e.g. combining jiggling with resetting within a \ngenome) and probably a lot of them are going to have similar results. I \nimagine that some may be more applicable to different network sizes, \nproblem domains or what activation function is being used and there may \nbe yet more, more subtle relationships between the mutation scheme used \nand various NEAT parameters.\n\nSo where does this leave us? Well, I largely agree with comments about \nparameter choice - that the various proportions probably aren&#39;t that \nimportant, so long as the algorithm has mix of different mutations the \nproportions will only effect how quickly a solution is found, not \nwhether it will be found. But within this area I can see some scope for \nimprovement to the underlying technique, and perhaps a genetic algorithm \ntype search for an optimal technique (or techniques) is in order.\n\nSo I have started devising a GA for searching connection mutaion \nschemes. SharpNEAT is (fingers crossed) currently geared up for this \ntype of meta-GA because I already have all of the NEAT parameters \nencapsulated in a NeatParameters class that is passed into the NEAT \nalgorithm, which itself is encapsulated in an EvolutionAlgorithm class.\n\nI have devised a new ConectionMutatioParameterGroup class which can \ndescribe a particular technique (proportional, fixed number, standard \ndeviation, etc.) and the proportion of time that this technique should \nbe invoked. A list of these objects can then be stored within the \nNeatParameters class and a genetic algorithm can mutate and recombine \nthem to form the basis of  a GA.\n\nThe next step then will be to build a simple GA that runs multiple NEAT \nexperiments, passing in the NeatParameter objects and averaging stuff \nlike time to achieve success or fitness acquired within a given time. \nThe runs might take a long time, probably days/weeks, but maybe we&#39;ll \nget some clear indicators about what techniques work, perhaps compiling \na list of parameters for a given set of problem domains that you can \nthen pick and choose from when investigatin a new problem domain.\n\nIf you read this far I&#39;m impressed :)\n\nColin.\n\n\n\n\n\n\n\n\n\n\n\n"}}