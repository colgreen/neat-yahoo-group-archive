{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115403844,"authorName":"John Arrowwood","from":"&quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;","profile":"jarrowwx","replyTo":"LIST","senderId":"KO1L0xkxNZnSiHQWSx_jXCu3XKw2e-9YJ3FT8Q0H0Kif7fNZ1p5mwAM43uG9G6cGR8oiRRt0_4A94MASZJNs9BWCSkktkW8rSPyoUF46","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] IEX update","postDate":"1092948710","msgId":1426,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTItRjM5VEgzalRtbjNKWTMwMDBhNmNkN0Bob3RtYWlsLmNvbT4="},"prevInTopic":1424,"nextInTopic":1430,"prevInTime":1425,"nextInTime":1427,"topicId":1176,"numMessagesInTopic":38,"msgSnippet":"... Well, see, that s just it...  When I increase the mutation rate, the number of offspring that are of a given topology decreases.  That means, the odds of","rawEmail":"Return-Path: &lt;jarrowwx@...&gt;\r\nX-Sender: jarrowwx@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 82844 invoked from network); 19 Aug 2004 20:51:57 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m22.grp.scd.yahoo.com with QMQP; 19 Aug 2004 20:51:57 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.247.39)\n  by mta4.grp.scd.yahoo.com with SMTP; 19 Aug 2004 20:51:57 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Thu, 19 Aug 2004 13:51:50 -0700\r\nReceived: from 64.122.44.102 by by2fd.bay2.hotmail.msn.com with HTTP;\n\tThu, 19 Aug 2004 20:51:50 GMT\r\nX-Originating-Email: [jarrowwx@...]\r\nX-Sender: jarrowwx@...\r\nTo: neat@yahoogroups.com\r\nBcc: \r\nDate: Thu, 19 Aug 2004 13:51:50 -0700\r\nMime-Version: 1.0\r\nContent-Type: text/plain; format=flowed\r\nMessage-ID: &lt;BAY2-F39TH3jTmn3JY3000a6cd7@...&gt;\r\nX-OriginalArrivalTime: 19 Aug 2004 20:51:50.0450 (UTC) FILETIME=[59AF6120:01C4862E]\r\nX-eGroups-Remote-IP: 65.54.247.39\r\nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\r\nReply-To: john@...\r\nSubject: Re: [neat] IEX update\r\nX-Yahoo-Group-Post: member; u=115403844\r\nX-Yahoo-Profile: jarrowwx\r\n\r\n&gt;From: Derek James &lt;djames@...&gt;\n&gt;So it seems to me you&#39;re either going to need to use crossover, as\n&gt;NEAT does.  Or dramatically increase your mutation rates.\n\nWell, see, that&#39;s just it...  When I increase the mutation rate, the number \nof offspring that are of a given topology decreases.  That means, the odds \nof improving the fitness of that topology by weight mutation is smaller.  \nUnless the weights are already somewhere on the slope towards the optima, \nchances are slim that it will recognize and ever find that optima.  With a \nlarger number of offspring of a given topology, I have more instances of \nweight variations that might jump us out of a local optima, so I&#39;m more \nlikely to make the most of a particular topology.\n\nIf your mutation rate is too high, you run the risk of adding topology too \nfast, and the simpler topologies don&#39;t have a chance to optimize.  Soon, you \nare going from generation to generation without really making very many \nchanges to what you are working on.  So, for the topologies you ARE working \non, you are optimizing them very slowly, if at all.  Whether you are \ncreating those new topological variations through direct mutation or \ncrossover inheritence, the result is the same:  The number of active \ntopologies in the population grows, decreasing the effectiveness of the \nsearch for optimal weights within each topology.\n\nIt appears to be a balancing act.  Too low of a mutation rate and you waste \nresources on the optimization of individual topologies.  Too high, and the \ntopology won&#39;t have enough resources, and will optimize slowly, if at all, \nand be more likely to get caught in a local optima.\n\nWhat we need is a way of staying perched on the edge, never too high nor too \nlow.  Some way of controlling how many networks in a given topology at a \ntime such that the search can proceed without wasting resources on a bunch \nof dead-ends.  I can see where fitness sharing should help with that.  As \nyou increase the number of members in the population, the number of really \nbad performers increases.  Which brings the average down, which in turn \nbrings down the number of resources allocated to the species.\n\nBut if you have a fixed population size, then unless you have chosen your \ntarget species count wisely, you could end up with the same problem.  Either \ntoo many or too few in any given topology.\n\nSo, what&#39;s the solution to this?  Is there a way of balancing the number of \nnetworks within a topology without respect to how many networks there are \ntotal, or how many topologies there are, total?  Just with respect to \nwhether or not it is improving, and whether or not it has too many wasted \nand useless members?  I suppose you could have &#39;population size controls&#39; \nthat work at the species level.  The controls could be things like how long \nsince the last time its fitness improved, how much it improved, how the \naverage fitness compares to the max fitness, and stuff like that.  Those \ncontrols then determine if in the next generation the topology gets to have \nmore, less, or the same number of offspring.  New topologies are created \nwhenever the total population is less than some limit, with the \nunderstanding that once the new topology is created, it might cause the \npopulation size to exceed that limit.\n\nWhat do you guys think?  What have you done to deal with this problem?  Did \nyou just tweak stuff until you got good results?  Or have you analyzed the \nproblem and determined an optimal solution?\n\n\n\n"}}