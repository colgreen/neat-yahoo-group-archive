{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"8B9c-ZO39DLne2S5qx9mfEGafzulCY_4X-u_KqW63cUCpMdQcBV5GlaIHNcAPwNWYGe_c20ZNwo3OOPIBZMq3qTLy0eBwFZvDuGDJl_F9TNV","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Command-line NEAT","postDate":"1085974760","msgId":921,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM5ZTlkOCtxaXF2QGVHcm91cHMuY29tPg==","inReplyToHeader":"PEJBWTItRjg5M0kxYjdXZmFwM3kwMDAzMTVmMkBob3RtYWlsLmNvbT4="},"prevInTopic":920,"nextInTopic":922,"prevInTime":920,"nextInTime":922,"topicId":909,"numMessagesInTopic":8,"msgSnippet":"... lose ... versions ... to be ... For some ... to a ... to be ... that ... Well it only takes a few words to explain so you probably just didn t notice it,","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 20365 invoked from network); 31 May 2004 03:39:21 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m2.grp.scd.yahoo.com with QMQP; 31 May 2004 03:39:21 -0000\r\nReceived: from unknown (HELO n39.grp.scd.yahoo.com) (66.218.66.107)\n  by mta4.grp.scd.yahoo.com with SMTP; 31 May 2004 03:39:21 -0000\r\nReceived: from [66.218.67.148] by n39.grp.scd.yahoo.com with NNFMP; 31 May 2004 03:39:21 -0000\r\nDate: Mon, 31 May 2004 03:39:20 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c9e9d8+qiqv@...&gt;\r\nIn-Reply-To: &lt;BAY2-F893I1b7Wfap3y000315f2@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3894\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.107\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Command-line NEAT\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n--- In neat@yahoogroups.com, &quot;John Arrowwood&quot; &lt;jarrowwx@h...&gt; wrote:\n&gt; &gt;From: &quot;Kenneth Stanley&quot; &lt;kstanley@c...&gt;\n&gt; &gt;\n&gt; &gt;John, note that one complication in doing this is that you would \nlose\n&gt; &gt;the continuity of the species numbers and sizes with current \nversions\n&gt; &gt;of NEAT.  What should be done is that species numbers get recorded\n&gt; &gt;such that they can be restored, and also the compat_thresh needs \nto be\n&gt; &gt;remembered in the case of dynamic thresholding.\n&gt; \n&gt; Good point.  I think I&#39;m confused about how speciation happens.  \nFor some \n&gt; reason, I was under the impression that you assign every specimen \nto a \n&gt; species for every generation.  I wasn&#39;t aware that anything needed \nto be \n&gt; maintained between generations.  Can you give me a link to a paper \nthat \n&gt; discusses speciation in more detail?\n&gt; \n\nWell it only takes a few words to explain so you probably just \ndidn&#39;t notice it, e.g. in our Evolutionary Computation and JAIR \npapers (on my homepage).  Each say, &quot;Each genome is placed into the \nfirst species from the *previous generation* where this condition is \nsatisfied...&quot; (section 3.3 in the JAIR paper).  In other words, \nthere is continuity between generations.  In terms of implmentation, \nNEAT assigns every new species a number and that number stays with \nthe species over generations until it goes extinct or until the end \nof the run.  Doing so allows some nice things: you can track \nindividual species throughout the run and you can detect \nstagnation.   \n\n&gt; &gt;Otherwise, species\n&gt; &gt;will be renumbered on each generation, and you will forget what \nyour\n&gt; &gt;threshold is.\n&gt; \n&gt; What effect does that have?\n&gt; \n\nThe effect is (1) you can no longer track the progress of species \nthroughout the run.  For example, see figure 7 in our EC paper, \nwhich is a speciation visualization.  (2) You can&#39;t detect \nstagnation.  For example, if a species has not improved in 100 \ngenerations, you won&#39;t know about it.  NEAT penalizes species that \nhaven&#39;t improved in a long time.  (3) Losing track of the \ncompatibility threshold value means that species will not be the \nexact same size and membership as they were in the previous \ngeneration, since the threshold determines membership requirements.\n\nNote that the threshold is a single number which could easily be \npassed along by your command-line function.\n\n&gt; &gt;So are you saying you intend to write NEAT in Perl or just modify \nan\n&gt; &gt;existing NEAT and connect it to Perl?\n&gt; \n&gt; Either way.  If I can use somebody else&#39;s NEAT as a command-line \ntool, that \n&gt; would be my first choice.\n&gt; \n&gt; &gt;Either way it&#39;s an interesting\n&gt; &gt;idea, but is Perl fast enough to be the main body of NEAT?\n&gt; \n&gt; Wasn&#39;t it you that argued that the NEAT part was usually only a \nsmall part \n&gt; of the CPU time of an experiment?  So even if it takes two or \nthree times as \n&gt; long to generate the next generation of a population, that doesn&#39;t \nadd much \n&gt; to overall run time, does it?\n&gt; \n\nYeah you&#39;re right...it should be fine in Perl.  The only part I&#39;d \nquestion is network activation, since it happens so often during \nevaluation.  But as has recently been discussed, in some domains \nthis doesn&#39;t matter.  But still, what language will the actual \ndomain simulation be written in?\n\nAnyway, I think Perl will be fine.\n\n&gt; Perhaps I should ask:  How long DOES it take if, for example, you \nhave a \n&gt; fairly large genome and a population of, say, 1000 individuals?  \nFor your \n&gt; C++ code, that is.  If it does it in under a second, then I&#39;m sure \nPerl is \n&gt; &#39;fast enough.&#39;  If it takes more like a minute, then it may not \nbe.  What&#39;s \n&gt; your experience?\n&gt; \n\nIt depends what large is.  You will find the compatibility \ncomputations taking longer as genomes get larger.  However, there \nshouldn&#39;t be that many compatibility checks if it&#39;s implemented \nright so it may not matter.  I&#39;m pretty sure the main epoch loop of \nNEAT will be fine in Perl.\n\nken\n\n\n\n"}}