{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"6ElVu3q4zqVbkhGpJsCB9q53ZfvkiZOJS32t0ocPj1nggZbEVgI70XO_naropwI1JcvwUL9OAOH-Szk8xnC2cclPo4rgMDBpF-8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Performance Sensitivity to float precision","postDate":"1095937115","msgId":1591,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMS4yLjAuMC4yMDA0MDkyMzEwNTg0OS4wMjRmOGUxOEBwb3AubWFpbC55YWhvby5jby51az4=","inReplyToHeader":"PDQxNTFGODg3LjIwMzAyMDJAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDYuMS4yLjAuMC4yMDA0MDkyMTEwNTgxMS4wMjU4YzAwOEBwb3AubWFpbC55YWhvby5jby51az4gPDIwMDQwOTIwMTcwMzA0LjY5MTMyLnFtYWlsQHdlYjYwODA3Lm1haWwueWFob28uY29tPiA8NDE0RjQ1QkYuODAxMDQwM0Bkc2wucGlwZXguY29tPiA8Ni4xLjIuMC4wLjIwMDQwOTIxMTA1ODExLjAyNThjMDA4QHBvcC5tYWlsLnlhaG9vLmNvLnVrPiA8NS4xLjAuMTQuMC4yMDA0MDkyMTIxNDMzNy4wMjE0ZmJkMEBwb3AubWFpbC55YWhvby5jby51az4gPDQxNTFGODg3LjIwMzAyMDJAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":1588,"nextInTopic":1600,"prevInTime":1590,"nextInTime":1592,"topicId":1555,"numMessagesInTopic":16,"msgSnippet":"... No, I just meant that an easy way of converting a floating point program to a fixed-point program is to write a data class to encapsulate the fixed-point","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 39797 invoked from network); 23 Sep 2004 16:49:07 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m5.grp.scd.yahoo.com with QMQP; 23 Sep 2004 16:49:07 -0000\r\nReceived: from unknown (HELO smtp003.mail.ukl.yahoo.com) (217.12.11.34)\n  by mta1.grp.scd.yahoo.com with SMTP; 23 Sep 2004 16:49:07 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp003.mail.ukl.yahoo.com with SMTP; 23 Sep 2004 10:55:58 -0000\r\nMessage-Id: &lt;6.1.2.0.0.20040923105849.024f8e18@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.1.2.0\r\nDate: Thu, 23 Sep 2004 11:58:35 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;4151F887.2030202@...&gt;\r\nReferences: &lt;6.1.2.0.0.20040921105811.0258c008@...&gt;\n &lt;20040920170304.69132.qmail@...&gt;\n &lt;414F45BF.8010403@...&gt;\n &lt;6.1.2.0.0.20040921105811.0258c008@...&gt;\n &lt;5.1.0.14.0.20040921214337.0214fbd0@...&gt;\n &lt;4151F887.2030202@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.34\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Performance Sensitivity to float precision\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 23:11 22/09/2004, you wrote:\n&gt; &gt;&gt;&gt;You can do it by writing a fixed point class to implement the arithmetic,\n&gt; &gt;&gt;&gt;and substituting that for &quot;float&quot; in your original code.\n&gt; &gt;&gt;Yeh but that option is already available by way of existing floating\n&gt; &gt;&gt;point arithmetic libraries.\n&gt; &gt;Did you mean to say &quot;existing _fixed_ point arithmetic libraries&quot;?\n&gt;Existing libraries that implement floating point arithmetic in software\n&gt;for FPU-less CPU&#39;s, which is what you were suggesting. As I understand\n&gt;it there are highly optimised libraries available, but they are still\n&gt;going to be slow compared to having an FPU or re-arranging your code to\n&gt;do all the maths using integers.\n\nNo, I just meant that an easy way of converting a floating point program to \na fixed-point program is to write a data class to encapsulate the \nfixed-point maths and substitute if for float in your code.\n\nMaybe you&#39;re not familiar with the term &quot;fixed point maths&quot;.  It&#39;s maths, \ndone using integers, but implementing a fixed number of binary places in \neach value, thus, if we wanted 3 b.p.:\n\nadd:\n         int1 + int2\n\nmultiply:\n         (int1 * int2) &gt;&gt; 3\n\ndivide:\n         ((int1 &lt;&lt; 3) / int2\n\netc etc\n\nIt&#39;s much cheaper than emulating floating point but it needs careful \nconsideration of ranges.\n\nWhat we did later in our emails was effectively a fixed-point \nimplementation, but you cleverly avoided renormalising (shifts) throughout \nthe whole system until you hit the activation function.  e.g. you used the \ndetail of the domain for a better implementation.  But as a general way of \nquickly inserting fixed point into a program, a class to encapsulate a \nfixed-point data type is very handy...\n\nAnyway, we&#39;re way off topic now...\n\n&gt;Ok yep, so lets try and wrap this one up:\n\nCool.  One thing I messed (not sure whether you would find it obvious) but \nthe activation function has to be located tightly enough about x=0 that \neven a neurone with only one input can reach the flat regions.  Thus we \nneed the flat parts of the activation curve to start inside +/- 0x1000000.\n\nNot sure I see how your piecemeal function works, did you miss the outer \nclauses off?\n\n         Ian\n\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n\n"}}