{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":183620858,"authorName":"Derek James","from":"Derek James &lt;djames@...&gt;","profile":"blue5432","replyTo":"LIST","senderId":"_NtIXDgK3TstaNqKrR9V8TUI1TgT0vs8o0lx3ROmTCpEv1bYnnNyAcH0g6fhW8P2uZ4GEJ-sC0WzBLEGXtg82Io5QV05","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Successful XOR","postDate":"1085757902","msgId":880,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDE5YjEwZDUxMDQwNTI4MDgyNTY0NGMyZDE4QG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PDIwMDQwNTI4MTQ0MTExLjg4OTU5LnFtYWlsQHdlYjIxMTEwLm1haWwueWFob28uY29tPg==","referencesHeader":"PDIwMDQwNTI4MTQ0MTExLjg4OTU5LnFtYWlsQHdlYjIxMTEwLm1haWwueWFob28uY29tPg=="},"prevInTopic":879,"nextInTopic":881,"prevInTime":879,"nextInTime":881,"topicId":879,"numMessagesInTopic":3,"msgSnippet":"On Fri, 28 May 2004 07:41:11 -0700 (PDT), Karl Lewin ... Not necessarily.  In our paper, we reported the following stats for complexifying NEAT, averaged over","rawEmail":"Return-Path: &lt;djames@...&gt;\r\nX-Sender: djames@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 60721 invoked from network); 28 May 2004 15:25:03 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m25.grp.scd.yahoo.com with QMQP; 28 May 2004 15:25:03 -0000\r\nReceived: from unknown (HELO mproxy.gmail.com) (216.239.56.242)\n  by mta5.grp.scd.yahoo.com with SMTP; 28 May 2004 15:25:03 -0000\r\nReceived: by mproxy.gmail.com with SMTP id x71so117422cwb\n        for &lt;neat@yahoogroups.com&gt;; Fri, 28 May 2004 08:25:02 -0700 (PDT)\r\nReceived: by 10.11.100.14 with SMTP id x14mr372104cwb;\n        Fri, 28 May 2004 08:25:02 -0700 (PDT)\r\nMessage-ID: &lt;19b10d510405280825644c2d18@...&gt;\r\nDate: Fri, 28 May 2004 10:25:02 -0500\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;20040528144111.88959.qmail@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=US-ASCII\r\nContent-Transfer-Encoding: 7bit\r\nReferences: &lt;20040528144111.88959.qmail@...&gt;\r\nX-eGroups-Remote-IP: 216.239.56.242\r\nFrom: Derek James &lt;djames@...&gt;\r\nSubject: Re: [neat] Successful XOR\r\nX-Yahoo-Group-Post: member; u=183620858\r\nX-Yahoo-Profile: blue5432\r\n\r\nOn Fri, 28 May 2004 07:41:11 -0700 (PDT), Karl Lewin\n&lt;lewinke67@...&gt; wrote:\n&gt; \n&gt; My python implementation seems to be working.\n&gt; \n&gt; Averages for 100 runs:\n&gt; \n&gt; Average Generations        : 32.5\n&gt; Average Number of Species  : 19.3 (Targeted to 18)\n&gt; Average Hidden Nodes       :  3.9\n&gt; Average Enabled Connectoins:  9.3\n&gt; \n&gt; Seems like my average hidden nodes and enabled\n&gt; connections are higher than others have reported.  \n\nNot necessarily.  In our paper, we reported the following stats for\ncomplexifying NEAT, averaged over 100 runs:\n\nAverage Generations: 44.08\nAverage Hidden Nodes:  3.12 \nAverage Connections:  11.72 \n\nSo your implementation seems to perform a bit better than ours on XOR.  \n\nKen&#39;s original results for XOR were:\n\nAverage Generations: 32\nAverage Hidden Nodes:  2.35 \nAverage Connections:  7.48 \n\nSince there are so many variables, it&#39;s difficult to tell how to\noptimize.  As Ken has pointed out before, elitism can make a\nsignificant difference in performance, depending on how (or whether)\nyou&#39;re using it.\n\nI&#39;m not really sure how the different implementations compare.  I\nhaven&#39;t seen such stats on JNEAT or DELPHI NEAT or any of the others. \nThough we did mess around a bit with JNEAT and just accepting the\ndefault parameters for XOR, it did seem to produce larger-than-optimal\nnetworks most of the time.\n\nIf it was a learning exercise, I guess I wouldn&#39;t worry too much about\nit.  Though it might be interesting to see if you can optimize it\nfurther, and figure out what exactly you had to tweak or change to do\nso.\n\nDerek\n\n"}}