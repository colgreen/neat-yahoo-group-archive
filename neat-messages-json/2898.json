{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"yiYjO6IhZPCQVdJ6ixAAnJdSy4qRiN6JhuMdk5W3-d85xurNBJGrF5brdg7s7iN98cDfHTzi2nERWZpoNwZ3-PElrjlQ9a_Bw-ANvQUKUMuH","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Advice to NEAT beginner","postDate":"1166165191","msgId":2898,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVsdGdjNyt2NmdyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVsbmVpditic3VyQGVHcm91cHMuY29tPg=="},"prevInTopic":2885,"nextInTopic":0,"prevInTime":2897,"nextInTime":2899,"topicId":2875,"numMessagesInTopic":7,"msgSnippet":"... I have never seen this use of a trait although it is a way to do it.  However, I don t think you really need traits to do this.  I think the best way is to","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 68819 invoked from network); 15 Dec 2006 06:47:52 -0000\r\nReceived: from unknown (66.218.67.36)\n  by m37.grp.scd.yahoo.com with QMQP; 15 Dec 2006 06:47:52 -0000\r\nReceived: from unknown (HELO n8c.bullet.sp1.yahoo.com) (69.147.64.170)\n  by mta10.grp.scd.yahoo.com with SMTP; 15 Dec 2006 06:47:52 -0000\r\nReceived: from [216.252.122.219] by n8.bullet.sp1.yahoo.com with NNFMP; 15 Dec 2006 06:46:31 -0000\r\nReceived: from [66.218.69.2] by t4.bullet.sp1.yahoo.com with NNFMP; 15 Dec 2006 06:46:31 -0000\r\nReceived: from [66.218.66.81] by t2.bullet.scd.yahoo.com with NNFMP; 15 Dec 2006 06:46:31 -0000\r\nDate: Fri, 15 Dec 2006 06:46:31 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;eltgc7+v6gr@...&gt;\r\nIn-Reply-To: &lt;elneiv+bsur@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Advice to NEAT beginner\r\nX-Yahoo-Group-Post: member; u=54567749; y=HF9qJSP-mbAIr0CWCY_A2jOErXg9m2vvIPe_QPtmXZDWKhWdWsmS\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n--- In neat@yahoogroups.com, &quot;afcarl2&quot; &lt;a.carl@...&gt; wrote:\n&gt;\n&gt; Ken,\n&gt; \n&gt; Tw=\r\no related questions:\n&gt; \n&gt; a) Would it make sense to implement last_activati=\r\non in NNode as a \n&gt; vector and utilize a trait to evolve how many steps a d=\r\nelay is \n&gt; implemented? Has this been previously attempted? (who/what/when?=\r\n)\n&gt; \n\nI have never seen this use of a trait although it is a way to do \nit.=\r\n  However, I don&#39;t think you really need traits to do this.  I \nthink the b=\r\nest way is to add a single new field in NNode that \nspecifies the time dela=\r\ny.  Of course then you will need to take that \ninto account in mutation and=\r\n mating.  \n\nTraits in my version of NEAT were designed for situations where=\r\n a \nparticular configuration of parameters is likely to be used over and \no=\r\nver again and therefore you don&#39;t want to have to keep \nrediscovering the s=\r\name configuration.  However, in this case, the \nsingle parameter &quot;delay&quot; is=\r\n too simple to really need to discover \ntemplates for reuse.\n\n&gt; b) Is there=\r\n reference/manual or message posting which deals with \nthe \n&gt; operation of =\r\ntraits and trait params?\n&gt; \n\nGood question...I know the rtNEAT code comes w=\r\nith them working, but \nI am not sure if I provided a good reference.  Howev=\r\ner, in this case \nI think they are not necessary so it shouldn&#39;t be critica=\r\nl.\n\nken\n\n&gt; Thanks,\n&gt;    Andy\n&gt; \n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;Kenneth =\r\nStanley&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi Mike, yes I think that&#39;s reasonable.=\r\n  I haven&#39;t seen such a \nnode \n&gt; &gt; attempted before, but it will be interes=\r\nting to see if it serves \na \n&gt; &gt; useful purpose.\n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt; &gt; --- =\r\nIn neat@yahoogroups.com, &quot;aimike002&quot; &lt;aimike002@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Ken,\n&gt;=\r\n &gt; &gt; \n&gt; &gt; &gt; Thanks for the good advice.\n&gt; &gt; &gt; \n&gt; &gt; &gt; My idea to implement a=\r\n delay in the firing of a node is \n&gt; &gt; &gt; simply to allow NEAT to insert a s=\r\npecial node type with a \n&gt; &gt; &gt; single input & output. No transfer function.=\r\n Effect is just to \n&gt; &gt; delay a\n&gt; &gt; &gt; node update by one firing cycle.\n&gt; &gt; =\r\n&gt; Does that feel like a reasonable approach to implementing\n&gt; &gt; &gt; an evolva=\r\nble time delay?\n&gt; &gt; &gt; \n&gt; &gt; &gt; Mike\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; --- In neat@ya=\r\nhoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; \nwrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Here&#39;s=\r\n a few pointers:\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; -Debug every function as soon as you crea=\r\nte it.  For exampe, \n&gt; &gt; when \n&gt; &gt; &gt; &gt; you write mutate_add_node, apply it =\r\nto some dummy genomes \nand \n&gt; &gt; make \n&gt; &gt; &gt; &gt; sure it really works.  Doing =\r\nthis will save you a lot of \n&gt; &gt; debugging \n&gt; &gt; &gt; &gt; time at the end, becaus=\r\ne if you only start debugging after \nthe \n&gt; &gt; whole \n&gt; &gt; &gt; &gt; thing is creat=\r\ned it will be very difficult to tease apart \nall \n&gt; &gt; the \n&gt; &gt; &gt; &gt; interloc=\r\nking parts to find what&#39;s causing a bug.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; -Memory leaks can=\r\n happen in C++ with all the dynamic memory \n&gt; &gt; &gt; &gt; allocation (and cleanup=\r\n) that NEAT requires so be careful.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; -To test yout system w=\r\nhen it&#39;s complete, use XOR.  It&#39;s not \na \n&gt; &gt; very \n&gt; &gt; &gt; &gt; interesting exp=\r\neriment, but it usually catches major \nproblems, \n&gt; &gt; like \n&gt; &gt; &gt; &gt; way off=\r\n parameterizations and things like that.  And it \nensures \n&gt; &gt; that \n&gt; &gt; &gt; =\r\n&gt; you can evolve structure since it requires a single hidden \nnode \n&gt; &gt; to =\r\n\n&gt; &gt; &gt; &gt; evolve.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; ken\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; --- In neat@yahoogro=\r\nups.com, &quot;aimike002&quot; &lt;aimike002@&gt; wrote:\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Hi I&#39;m fairly =\r\nnew to NEAT. I&#39;m thinking of writing my own \nNEAT\n&gt; &gt; &gt; &gt; &gt; implementation =\r\nfrom scratch, rather than modify one of the \n&gt; &gt; existing\n&gt; &gt; &gt; &gt; &gt; release=\r\ns. The main reasons are fisrtly, to improve my \n&gt; &gt; understanding\n&gt; &gt; &gt; &gt; &gt;=\r\n and secondly to give me the flexibility to add any extra \nbits \n&gt; &gt; I \n&gt; &gt;=\r\n &gt; &gt; feel\n&gt; &gt; &gt; &gt; &gt; might be interesting.\n&gt; &gt; &gt; &gt; &gt; Based on some suggestio=\r\nns posted here, I hope to include \nsome \n&gt; &gt; form \n&gt; &gt; &gt; &gt; of\n&gt; &gt; &gt; &gt; &gt; tim=\r\ne delay as well as the ability to use a range of \ndifferent \n&gt; &gt; &gt; &gt; transf=\r\ner\n&gt; &gt; &gt; &gt; &gt; functions.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; It&#39;s probably going to be writ=\r\nten in C++ under MS windows. \nMy \n&gt; &gt; &gt; &gt; interest\n&gt; &gt; &gt; &gt; &gt; at the moment =\r\nis oriented to applying NEAT to analysis of \n&gt; &gt; noisy \n&gt; &gt; &gt; &gt; time\n&gt; &gt; &gt; =\r\n&gt; &gt; series data.\n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Would appreciate any suggestions, pit=\r\nfalls, feature-\nwishes, \n&gt; &gt; lessons\n&gt; &gt; &gt; &gt; &gt; learnt etc, that may be usef=\r\nul for me to know in advance \nin \n&gt; &gt; this. \n&gt; &gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; &gt; Mike\n&gt; &gt; =\r\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}