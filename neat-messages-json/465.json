{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115403844,"authorName":"John Arrowwood","from":"&quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;","profile":"jarrowwx","replyTo":"LIST","senderId":"yVGskjuFQiSIypTcic-52mBAUuf0TPg9kUan7Nxf8irFDEDfR5ISrAq6eQFWHLEv_2DTICcFeNrmajF-ZD8tqAicwjw60XRKylwYzYLP","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [neat] Re: Training/testing subset selection","postDate":"1078191425","msgId":465,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTItRjI2Q014ZnFjbHdtbFowMDAwNTg4ZkBob3RtYWlsLmNvbT4="},"prevInTopic":443,"nextInTopic":466,"prevInTime":464,"nextInTime":466,"topicId":433,"numMessagesInTopic":9,"msgSnippet":"... [ snipped long description of proposed algorithm ] ... In a second... ... That was my original idea... ... Ah-ha!  That s what I wanted to know.  So then","rawEmail":"Return-Path: &lt;jarrowwx@...&gt;\r\nX-Sender: jarrowwx@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 29258 invoked from network); 2 Mar 2004 01:37:06 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m9.grp.scd.yahoo.com with QMQP; 2 Mar 2004 01:37:06 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.247.26)\n  by mta5.grp.scd.yahoo.com with SMTP; 2 Mar 2004 01:37:06 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Mon, 1 Mar 2004 17:37:06 -0800\r\nReceived: from 64.122.44.102 by by2fd.bay2.hotmail.msn.com with HTTP;\n\tTue, 02 Mar 2004 01:37:05 GMT\r\nX-Originating-Email: [jarrowwx@...]\r\nX-Sender: jarrowwx@...\r\nTo: neat@yahoogroups.com\r\nBcc: \r\nDate: Mon, 01 Mar 2004 17:37:05 -0800\r\nMime-Version: 1.0\r\nContent-Type: text/plain; format=flowed\r\nMessage-ID: &lt;BAY2-F26CMxfqclwmlZ0000588f@...&gt;\r\nX-OriginalArrivalTime: 02 Mar 2004 01:37:06.0316 (UTC) FILETIME=[DEE604C0:01C3FFF6]\r\nX-eGroups-Remote-IP: 65.54.247.26\r\nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\r\nReply-To: john@...\r\nSubject: RE: [neat] Re: Training/testing subset selection\r\nX-Yahoo-Group-Post: member; u=115403844\r\nX-Yahoo-Profile: jarrowwx\r\n\r\n&gt;From: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\n\n[ snipped long description of proposed algorithm ]\n\n&gt; &gt; Example:\n&gt; &gt;\n&gt; &gt; steady = 0;\n&gt; &gt; do {\n&gt; &gt;     GetNextSample();\n&gt; &gt;     EvaluateNetworks();\n&gt; &gt;     if ( IdentifyBreedingSpecimens() )\n&gt; &gt;         steady = 0;  // something changed...keep evaluating\n&gt; &gt;     else\n&gt; &gt;         steady++;\n&gt; &gt; } while ( steady &lt; 10 )\n&gt; &gt; NextGeneration();\n&gt;\n&gt;I&#39;m not sure I&#39;m understanding this idea correctly; can you go into a\n&gt;little more detail on what makes IdentifyBreedingSpecimens() true?\n\nIn a second...\n\n&gt;i.e. how do you know you have &quot;enough&quot; information to start breeding?\n&gt;And if there is some criteria for this concept of enough, then why not\n&gt;just apply the criteria directly to your fitness spread instead of\n&gt;calling NEAT?  It seems that NEAT could just be called after you&#39;ve\n&gt;determined you have enough info.\n\nThat was my original idea...\n\n&gt;The thing I&#39;m not understanding is that NEAT just takes the top n% of\n&gt;each species and lets them reproduce.\n\nAh-ha!  That&#39;s what I wanted to know.  So then here&#39;s what I&#39;m envisioning.  \nSuppose there are 20 members of Species A.  And suppose the top 10% get to \nbreed.  Thus, 2.  What would IdentifyBreedingSpecimens() do?  It would set a \nflag to TRUE for in those 2, and FALSE in all others.  Of course, if the \nflag is already set, then it does nothing for that specimen.  What it \nreturns is how many specimens within the species that it changed.  Or within \nthe population at large.  Thus, if the SAME 2 are still the breeders, then \nnothing has changed, so the return value is 0.\n\nexample, in pseudo-code.\n\ncount = 0;\nfor_each_species...\n{\n  sort_by_fitness( species );\n  breeders = breed-percent * species.members.count;\n  for ( i = 0 ; i &lt; species.members.count ; i++ )\n  {\n    if ( i &lt; breeders )\n    {\n        if ( ! member.will_breed )\n        {\n           member.will_breed = TRUE;\n           count++;\n        }\n    }\n    else\n      if ( member.will_breed )\n      {\n        member.will_breed = FALSE;\n        count++;\n      }\n  }\n}\nreturn count;  // count will be 0 if nothing has changed...\n\n&gt;So no matter how many\n&gt;evaluations you do or what the results are, NEAT will always choose\n&gt;the same # of parents.\n\nYes.  But WHICH parents it will chose may vary because with every additional \nevaluation, the momentary fitness changes.  That momentary fitness changes \nthe average fitness.  That change in average fitness might effect the list \nof WHICH parents are selected to change.  To illustrate:\n\nAfter evaluating 1234 samples:\n\nA : 7.5\nB : 3.2\n-- cutoff for who breeds --\nC : 3.1\nD : 1.0\n\nAfter evaluating 1235 samples:\n\nA : 7.5\nC : 3.2\n-- cutoff --\nB : 3.1\nD : 1.1\n\nSo between evaluation number 1234 and 1235, the list of who will breed \nchanges from A,B to A,C.  As long as B and C are fighting it out for \ndominance, it would probably be wise to keep evaluating them against more \nand more samples.  We could conceivably STOP evaluating A and D, since their \n&#39;destiny&#39; is clear, thereby saving us some computation cycles.\n\n&gt;It&#39;s true that perhaps in some cases too many\n&gt;networks will have the same fitness, but in that case NEAT will just\n&gt;choose an arbitrary group as the mating pool.\n\nAs long as the relative positions in the list are the same, and the starting \npositions are the same, a quick-sort would return consistent (albeit \nundefined) results.  That&#39;s not a problem.\n\n&gt;So I&#39;m not sure how\n&gt;this fits into your idea that you will somehow accumulate a mating\n&gt;pool incrementally?\n\nI don&#39;t think I&#39;d call it &#39;incrementally&#39; per se.  The pool would be a fixed \nsize from the start.  But since the composition of that pool is determined \nby the average fitness of the individual members of the species, and since \nthat average fitness might change with each additional evaluation of an \ninput sample, the composition of that pool might change.  As long as it IS \nchanging, we aren&#39;t really sure who SHOULD breed (who is really best), so we \nshould just keep evaluating.  But once it looks like the winners have been \nclearly identified, it is safe to stop evaluating.  This as opposed to \nevaluating the network in every possible input scenario.\n\nPut it in another context.  Suppose it is SoccerBots.  Suppose that you \nevaluate the bot ONCE.  The scenario is kicking the incoming ball towards \nthe goal.  Suppose the angle that you choose to send the ball in at is just \noutside its learned range.  Suppose it has to make a 90-degree kick in order \nto get a high fitness on this test.  Now, it is really good at 80-degree \nkicks (or less), but it hasn&#39;t adapted to 90-degrees yet, and so it scores \nbadly.  Of course you wouldn&#39;t trash the network just because it didn&#39;t do \nwell at that one test.  You would test it against a wide range of degrees \nand then give it an average fitness.  But would you test it against every \npossible input angle?  Or every possible position on the field?  No, that&#39;s \ntoo many tests.  So you do lots of tests, just not EVERY POSSIBLE test.\n\nIn this same situation, once you know that bot A and B are significantly \nbetter than C and D, it is not necessary to keep evaluating different \nscenarios.  Just breed them and move on to the next generation...\n\nThe image enlargement domain is similar.  It can&#39;t just be evaluated against \na single input sample.  But it is unreasonable to try to evaluate it against \nevery available input sample.  So, just evaluate against enough samples so \nthat we can successfully identify which ones will be passing on their genes, \nthen stop.\n\n&gt;Note also that different species are allowed to\n&gt;produce different amounts of offspring, i.e. offspring are assigned on\n&gt;a per-species basis.\n\nYes.  But if the number of gene-providing parents is fixed based on number \nof members in species, then the number of offspring wouldn&#39;t enter into the \nequation.\n\n&gt;Also note that you can&#39;t really make reproduction decisions without\n&gt;all the fitness info, since the final fitnesses are adjusted by the\n&gt;size of their respective species.  So the fitnesses are shared.  So if\n&gt;you tried to decide who is going to reproduce before fitness sharing,\n&gt;you would not get the benefit of fitness sharing.\n\nThat&#39;s fine, it can do fitness sharing...\n\nThink of it this way:  &quot;If I stopped any further evaluation right here and \nnow, who would reproduce?&quot;  As long as the answer to that question keeps \nchanging, our assertion of which specimens are &#39;best&#39; is not very accurate.  \nWhen the answer to that question doesn&#39;t change for some period of time, \nthen we have a good idea of who the really good specimens really are.  Time \nto stop evaluating and move on to the next generation.  Does that mean some \nwasted time spent doing the fitness sharing and breeding calculations?  Yes. \n  But where the cost of a fitness evaluation is high, the benefit of being \nable to stop the fitness evaluation once it has proven &#39;adequate&#39; should \noutweigh the cost of that repeated &#39;breeding&#39; evaluation.  Make sense?\n\n&gt;Sorry if I may be misunderstanding- it&#39;s possible I&#39;m answering the\n&gt;wrong question!\n\nDon&#39;t worry about it...I&#39;ll just keep clarifying until either I&#39;ve \nabsolutely convinced myself one way or the other, or someone convinces me. \n:)\n\n-- John\n\n_________________________________________________________________\nLearn how to help protect your privacy and prevent fraud online at Tech \nHacks & Scams. http://special.msn.com/msnbc/techsafety.armx\n\n\n"}}