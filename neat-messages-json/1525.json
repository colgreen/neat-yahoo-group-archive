{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"RAgGSbscIE9JJOSxcLbJxh6ozlUD2B4PtwxnOnj29wk0bwxH0Uwcd9jJeNoB_w8eGlvAWihJXaZMQYA_zWim3F0zueIxOHD3vw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Writing NEAT and XOR","postDate":"1094857998","msgId":1525,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxNDIzNTBFLjYwMTA4MDhAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PDE5YjEwZDUxMDQwOTA5MTc0ODdiYThmYThkQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PGNocWxuYStmODI2QGVHcm91cHMuY29tPiA8MTliMTBkNTEwNDA5MDkxNzQ4N2JhOGZhOGRAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":1524,"nextInTopic":1526,"prevInTime":1524,"nextInTime":1526,"topicId":1521,"numMessagesInTopic":9,"msgSnippet":"... Yeh, to clarify this is the memorizing of the training set order, right? Well certainly that is a problem I have encountered - that the network just gives","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 58094 invoked from network); 10 Sep 2004 23:13:19 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m22.grp.scd.yahoo.com with QMQP; 10 Sep 2004 23:13:19 -0000\r\nReceived: from unknown (HELO pengo.systems.pipex.net) (62.241.160.193)\n  by mta4.grp.scd.yahoo.com with SMTP; 10 Sep 2004 23:13:18 -0000\r\nReceived: from [10.0.0.10] (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby pengo.systems.pipex.net (Postfix) with ESMTP id 126E74C001AF\n\tfor &lt;neat@yahoogroups.com&gt;; Sat, 11 Sep 2004 00:13:16 +0100 (BST)\r\nMessage-ID: &lt;4142350E.6010808@...&gt;\r\nDate: Sat, 11 Sep 2004 00:13:18 +0100\r\nUser-Agent: Mozilla Thunderbird 0.7.1 (Windows/20040626)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;chqlna+f826@...&gt; &lt;19b10d5104090917487ba8fa8d@...&gt;\r\nIn-Reply-To: &lt;19b10d5104090917487ba8fa8d@...&gt;\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 62.241.160.193\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] Writing NEAT and XOR\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nDerek James wrote:\n\n&gt;Well, the first thing that pops to mind is to make sure you disable\n&gt;recurrency and randomize your training set. :)\n&gt;\n&gt;We thought we&#39;d solved it when all we&#39;d done was evolve something that\n&gt;had memorized the input patterns.\n&gt;  \n&gt;\nYeh, to clarify this is the memorizing of the training set order, right? \nWell certainly that is a problem I have encountered - that the network \njust gives the correct answers in order regardless of what inputs \nsignals were applied, or more likely it will give the correct answers \nonly if the test cases are applied in the same order each time.\n\nSo randomizing the test cases (or the order they are applied) isn&#39;t \nreally the issuse. The real issue is that the network&#39;s signals should \nall be reset between each trial, to do this I have a routine that \ntraverses all of the neurons and resets their output signal to 0. This \nerases the network&#39;s &#39;memory&#39; if you like, so it has no knowledge any \nprevious trials.\n\nThere are also variations on the type of fitness function that can be \nused. The simplest function is to just calculate the difference between \nthe expected and actual output signals. I opted for a different \ntechnique that first obtains an output value for the the two &#39;0&#39; output \ncases (0 Xor 0 = 0 and 1 Xor 1 =1). The highest of these two signals is \ntaken to be a threshold for the two &#39;1&#39; output cases - if they are \ngreater than the threshold then the network is effectively performing \nXOR.  The network then gets assigned extra fitness for seperation \nbetween the &#39;0&#39; and &#39;1&#39; cases.\n\nIn actual fact I don&#39;t think this scheme is required, but it does \nprovide a fitness landscape that has less local optima to get stuck in, \ne.g. always returning 0 and thus getting half of the test cases correct! \nIn my scheme, always returning 0 (or any number) would result in a \nfitness of 0. On the other hand my scheme doesn&#39;t have any smooth \nfitness climbs up to the solution, only a big step! it either solves XOR \nproperly or not at all, there is then a fitness climb to perfect the \nnetwork.\n\nColin\n\nP.S. I will try and respond to emails over the next few days.  Have been \ntracking down a slight performance drop-off introduced by a  .Net \nservice pack. After much head scratching I found the problem and also \nuncovered some poorly performing code regarding the generation of hash \ncodes for use in hash tables.\n\n\n\n\n\n"}}