{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"QIHsHyS-vkwnpxhYVENJY2mlRH9YZKQ9Bxh9ESBDS4moDM36hSe_s3UwFtw9WhHyPkA2-Xb2RdPgFXecGLXRxYT7NKIgyygCVzMq7ZfdwMJT","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Questions about NEAT mutation implementations","postDate":"1172775980","msgId":2992,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVzNzg3YytnaGU2QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVzMm9vaCs1aDllQGVHcm91cHMuY29tPg=="},"prevInTopic":2991,"nextInTopic":2993,"prevInTime":2991,"nextInTime":2993,"topicId":2988,"numMessagesInTopic":6,"msgSnippet":"Wesley, the reason that links coming out of the bias are not splittable originates with what I understood to be a canonical conceptualization of bias, which","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 18460 invoked from network); 1 Mar 2007 19:06:23 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m45.grp.scd.yahoo.com with QMQP; 1 Mar 2007 19:06:23 -0000\r\nReceived: from unknown (HELO n31.bullet.scd.yahoo.com) (66.94.237.25)\n  by mta14.grp.scd.yahoo.com with SMTP; 1 Mar 2007 19:06:23 -0000\r\nReceived: from [66.218.69.1] by n31.bullet.scd.yahoo.com with NNFMP; 01 Mar 2007 19:06:23 -0000\r\nReceived: from [66.218.66.89] by t1.bullet.scd.yahoo.com with NNFMP; 01 Mar 2007 19:06:23 -0000\r\nDate: Thu, 01 Mar 2007 19:06:20 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;es787c+ghe6@...&gt;\r\nIn-Reply-To: &lt;es2ooh+5h9e@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Questions about NEAT mutation implementations\r\nX-Yahoo-Group-Post: member; u=54567749; y=_TYeJD1ICQ7KUH1FrzaiDhkoMp8tjDOtW7GftoQWH42_hBEzeRvx\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nWesley, the reason that links coming out of the bias are not\nsplittable ori=\r\nginates with what I understood to be a canonical\nconceptualization of &quot;bias=\r\n,&quot; which is that bias is a property of each\nnode in the network.  In other =\r\nwords, in a general ANN\nconceptualization, you can think of each neuron as =\r\nhaving a bias\n&quot;field&quot; within its representation.\n\nHowever, in contrast, in =\r\nNEAT I was originally trying to keep\nparameters out of the nodes so that al=\r\nl parameter mutations could\noccur within links.  Making the bias node an in=\r\nput made this possible:\nNow the &quot;bias&quot; of any particular node could be cont=\r\nrolled by a *link*\nfrom the bias node to the node to be biased.  However, c=\r\nonceptually,\nthat link is not like other links because it is best conceived=\r\n as an\ninternal property of the node being biased.  \n\nThe conclusion is tha=\r\nt you should not be able to split an internal\nparamter of a node, since it =\r\nis not &quot;really&quot; a link.  \n\nOf course, in practice, it probably wouldn&#39;t hur=\r\nt performance to\nremove that restriction, but you can see it was originally=\r\n motivated\nby a fairly subtle technical consideration.\n\nken\n\n--- In neat@ya=\r\nhoogroups.com, &quot;tansey4&quot; &lt;tansey4@...&gt; wrote:\n&gt;\n&gt; Thanks for the response K=\r\nen.  I realize you haven&#39;t worked on the code\n&gt; in a long time, so I&#39;ll try=\r\n to keep my questions as conceptual as\n&gt; possible.\n&gt; \n&gt; To that end, I have=\r\n one more question.  The mutate_add_node method\n&gt; tries to find an eligible=\r\n link to insert a new node into.  To\n&gt; determine eligibility, it looks at 2=\r\n criteria:\n&gt; 1. Is the link enabled\n&gt; 2. Is the input node of the link a bi=\r\nas node\n&gt; \n&gt; Why does criteria #2 exclude the link from having a node inser=\r\nted\ninto it?\n&gt; \n&gt; Thanks,\n&gt; Wesley\n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;Kenne=\r\nth Stanley&quot; &lt;kstanley@&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hmm let me try to recall the reasoni=\r\nng I had several years ago when \n&gt; &gt; I wrote that function :) \n&gt; &gt; \n&gt; &gt; Fir=\r\nst, I should note that I rarely ever use mutate_toggle_enable \n&gt; &gt; (its pro=\r\nbability is usually set to zero in my runs).  I have found \n&gt; &gt; it to be ma=\r\ninly just disruptive.  However, others here have \n&gt; &gt; developed more princi=\r\npled ways of pruning networks which probably \n&gt; &gt; work better than my rando=\r\nm toggler.\n&gt; &gt; \n&gt; &gt; In any case, I believe that you are correct- if you rea=\r\nlly want to \n&gt; &gt; keep everything together in the network then it would be n=\r\necessary \n&gt; &gt; to check both the in-node and out-node.  \n&gt; &gt; \n&gt; &gt; ken\n&gt; &gt; \n&gt;=\r\n &gt; --- In neat@yahoogroups.com, &quot;tansey4&quot; &lt;tansey4@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Hi =\r\nall,\n&gt; &gt; &gt; \n&gt; &gt; &gt; I&#39;m working on my own implementation of NEAT using the rt=\r\nNEAT code \n&gt; &gt; as\n&gt; &gt; &gt; a starting point.  I am on the mutation operators a=\r\nnd had a \n&gt; &gt; question\n&gt; &gt; &gt; about  Genome::mutate_toggle_enable(int times)=\r\n.  When the method \n&gt; &gt; finds\n&gt; &gt; &gt; a gene to disable (if the gene is enabl=\r\ned), it does a check to see \n&gt; &gt; if\n&gt; &gt; &gt; it can do this without fragmentin=\r\ng the network.  The comment says:\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; We need to make sure that =\r\nanother gene connects out of the in-\n&gt; &gt; node\n&gt; &gt; &gt; &gt; Because if not a sect=\r\nion of network will break off and become \n&gt; &gt; isolated\n&gt; &gt; &gt; \n&gt; &gt; &gt; My ques=\r\ntion is does it only check the in_nodes and not the \n&gt; &gt; out_nodes?\n&gt; &gt; &gt;  =\r\nIf we don&#39;t check out_nodes, wouldn&#39;t it be possible for the \n&gt; &gt; outputs\n&gt;=\r\n &gt; &gt; to become disconnected from the network?  If you have a network of \n&gt; =\r\n&gt; 1\n&gt; &gt; &gt; input and 2 output nodes, where the input is connected to both\n&gt; =\r\n&gt; &gt; outputs, wouldn&#39;t this method consider it valid to disable one of \n&gt; &gt; =\r\nthe\n&gt; &gt; &gt; connections?\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n"}}