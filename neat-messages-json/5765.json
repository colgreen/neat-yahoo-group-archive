{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":471381182,"authorName":"gotnobluemilk","from":"&quot;gotnobluemilk&quot; &lt;gotnobluemilk@...&gt;","profile":"gotnobluemilk","replyTo":"LIST","senderId":"tFHLMkTYk04CXUQeJhUesN2yQVZL0AV5W2KOWDmZTWyL6pHaSz_JZsVZgU5x1RLOjOVsXn86VZj5RoO-5HTVvW5bDdnWW3LY6bWfd1OfmzY","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Fitness Function","postDate":"1328968574","msgId":5765,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGpoNXMxdSs2OWNxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGpoNXJmMys2cmVxQGVHcm91cHMuY29tPg=="},"prevInTopic":5764,"nextInTopic":0,"prevInTime":5764,"nextInTime":5766,"topicId":5764,"numMessagesInTopic":2,"msgSnippet":"As additional information to my stated problem, the best genome and connections I show are from generation 3821. Also, the genomes do complex, but then","rawEmail":"Return-Path: &lt;gotnobluemilk@...&gt;\r\nX-Sender: gotnobluemilk@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 54159 invoked from network); 11 Feb 2012 13:56:18 -0000\r\nX-Received: from unknown (98.137.35.162)\n  by m1.grp.sp2.yahoo.com with QMQP; 11 Feb 2012 13:56:18 -0000\r\nX-Received: from unknown (HELO ng19-vm5.bullet.mail.gq1.yahoo.com) (98.136.219.239)\n  by mta6.grp.sp2.yahoo.com with SMTP; 11 Feb 2012 13:56:17 -0000\r\nX-Received: from [98.137.0.88] by ng19.bullet.mail.gq1.yahoo.com with NNFMP; 11 Feb 2012 13:56:17 -0000\r\nX-Received: from [69.147.65.151] by tg8.bullet.mail.gq1.yahoo.com with NNFMP; 11 Feb 2012 13:56:17 -0000\r\nX-Received: from [98.137.34.73] by t5.bullet.mail.sp1.yahoo.com with NNFMP; 11 Feb 2012 13:56:17 -0000\r\nDate: Sat, 11 Feb 2012 13:56:14 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;jh5s1u+69cq@...&gt;\r\nIn-Reply-To: &lt;jh5rf3+6req@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;gotnobluemilk&quot; &lt;gotnobluemilk@...&gt;\r\nSubject: Re: Fitness Function\r\nX-Yahoo-Group-Post: member; u=471381182; y=U4-rdgGBRc2jUi0pIH7kvdQcMabov0QdPKEMAxbo0UlkgIuf4e01gw\r\nX-Yahoo-Profile: gotnobluemilk\r\n\r\nAs additional information to my stated problem, the best genome and connect=\r\nions I show are from generation 3821. Also, the genomes do complex, but the=\r\nn simplify without a new champ, more complex, ever being found.\n\n--- In nea=\r\nt@yahoogroups.com, &quot;gotnobluemilk&quot; &lt;gotnobluemilk@...&gt; wrote:\n&gt;\n&gt; I am test=\r\ning NEAT against the problem of detecting fraud.  My approach is different =\r\nthan many of the examples because it is not a robot/game approach where you=\r\n know the state at any given time and it is definative.  With fraud, it is =\r\nshades of gray.\n&gt; \n&gt; The other thing is I am using a set of data to train o=\r\nn.  I have 10,000 cases, and test each genome against 8,000 cases.  2,000 c=\r\nases are being held out for independent validation.\n&gt; \n&gt; So my question is =\r\non the fitness function.  Here is my current approach.  Basically I am summ=\r\ning the squared error for all 8,000 cases that I run through the genome:\n&gt; =\r\nforeach (DataRow dr in dtTrain.Rows)\n&gt; {\n&gt;     SetInputs(dr);\n&gt;     box.Act=\r\nivate();\n&gt;     double out1 =3D box.OutputSignalArray[0];\n&gt;     double err;\n=\r\n&gt;     if (isFraud =3D=3D 1)\n&gt;         err =3D 1 - out1;\n&gt;     else\n&gt;       =\r\n  err =3D out1;\n&gt;     err *=3D err; // square the error\n&gt;     fitness +=3D =\r\n100 - (int)Math.Round(100 * err, 0);\n&gt; }\n&gt; \n&gt; Now, since I test a genome on=\r\n a set of cases instead of a single state, I am wondering if the sum of the=\r\n error is the best approach in my case.  Obviously, STDEV comes to mind as =\r\none other possibility.\n&gt; \n&gt; My current approach seems to have problems comp=\r\nlexing.  After 5,000 generations (population 500), the best genome is quite=\r\n simplistic.  My fitness has also only gone from 512,486 to 514,743.  This =\r\ntranslates into getting 1001 of the 2,000 test cases correct (so basically =\r\njust coin flip results).  My old neural net gets 1200 correct so it isn&#39;t m=\r\ny inputs (ok, maybe data conditioning is an issue?).  For data conditioning=\r\n, I am using 0 centered StdDev =3D 1.\n&gt; \n&gt; The connections for the best gen=\r\nome is below. Nodes 0-75 are inputs (my current neural network trained via =\r\nother techniques uses 60 of those inputs and is 60% accurate).  Node 76 is =\r\nthe output, and any id above 76 is a hidden node.\n&gt;     \n&gt;     &lt;Connections=\r\n&gt;\n&gt;       &lt;Con id=3D&quot;147&quot; src=3D&quot;145&quot; tgt=3D&quot;76&quot; wght=3D&quot;0.1151521078737587=\r\n4&quot; /&gt; \n&gt;       &lt;Con id=3D&quot;184&quot; src=3D&quot;182&quot; tgt=3D&quot;76&quot; wght=3D&quot;-0.1576756428=\r\n2512914&quot; /&gt; \n&gt;       &lt;Con id=3D&quot;293&quot; src=3D&quot;62&quot; tgt=3D&quot;145&quot; wght=3D&quot;-7.6662=\r\n831469826536&quot; /&gt; \n&gt;       &lt;Con id=3D&quot;589&quot; src=3D&quot;145&quot; tgt=3D&quot;182&quot; wght=3D&quot;-=\r\n10&quot; /&gt; \n&gt;       &lt;Con id=3D&quot;763&quot; src=3D&quot;47&quot; tgt=3D&quot;182&quot; wght=3D&quot;-8.161245386=\r\n9437189&quot; /&gt; \n&gt;       &lt;Con id=3D&quot;2140&quot; src=3D&quot;1&quot; tgt=3D&quot;2139&quot; wght=3D&quot;9.9596=\r\n6789207033&quot; /&gt; \n&gt;       &lt;Con id=3D&quot;2141&quot; src=3D&quot;2139&quot; tgt=3D&quot;182&quot; wght=3D&quot;9=\r\n.9724126338387382&quot; /&gt; \n&gt;     &lt;/Connections&gt;\n&gt; \n&gt; As you may have deduced fr=\r\nom my connections, I use a weight range of 10.  I started out using the def=\r\nault 5, but it quickly started producing multiple hidden nodes that did not=\r\nhing but connect to one another in order to accumulate a total weight &gt; 5. =\r\n Maybe this is desired in NEAT to increase complexity?\n&gt; \n&gt; So any advise w=\r\nould be greatly appreciated.  My current area of focus is the fitness funct=\r\nion approach and the weight setting.  Of course, comments/suggestions on ot=\r\nher areas would also be apprecitated.\n&gt;\n\n\n\n"}}