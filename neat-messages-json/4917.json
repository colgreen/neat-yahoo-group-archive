{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":420832731,"authorName":"Daniel","from":"&quot;Daniel&quot; &lt;daniel_kuppitz@...&gt;","profile":"dkuppitz","replyTo":"LIST","senderId":"jclam_PehMXAAt1W_QVfGOTLV5_-sj7TOWJJeJ8n2m1YydXVlmXEb-iN1AYDaecg0KlfabYz39MKsIKOIJjDWPX2KFHlwJuosS2HTA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"FloatFastConcurrentNetwork - Performance Optimization","postDate":"1259026410","msgId":4917,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhlZmQ1YStnb2czQGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":4918,"prevInTime":4916,"nextInTime":4918,"topicId":4917,"numMessagesInTopic":12,"msgSnippet":"Hello, I ve played around with a quite large network and took a look at the execution performance of HyperSharpNEAT. There was one outstanding method (besides","rawEmail":"Return-Path: &lt;daniel_kuppitz@...&gt;\r\nX-Sender: daniel_kuppitz@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 67984 invoked from network); 24 Nov 2009 01:35:49 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m11.grp.re1.yahoo.com with QMQP; 24 Nov 2009 01:35:49 -0000\r\nX-Received: from unknown (HELO n37b.bullet.mail.sp1.yahoo.com) (66.163.168.151)\n  by mta2.grp.sp2.yahoo.com with SMTP; 24 Nov 2009 01:35:49 -0000\r\nX-Received: from [69.147.65.148] by n37.bullet.mail.sp1.yahoo.com with NNFMP; 24 Nov 2009 01:33:32 -0000\r\nX-Received: from [98.137.34.73] by t11.bullet.mail.sp1.yahoo.com with NNFMP; 24 Nov 2009 01:33:32 -0000\r\nDate: Tue, 24 Nov 2009 01:33:30 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hefd5a+gog3@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Daniel&quot; &lt;daniel_kuppitz@...&gt;\r\nSubject: FloatFastConcurrentNetwork - Performance Optimization\r\nX-Yahoo-Group-Post: member; u=420832731; y=EXAAwOv-ULjVqsrgfSDqgyO8bZNh2_jD-fhrruas6uHQJ54\r\nX-Yahoo-Profile: dkuppitz\r\n\r\nHello,\n\nI&#39;ve played around with a quite large network and took a look at th=\r\ne execution performance of HyperSharpNEAT. There was one outstanding method=\r\n (besides my actual evaluation method): FloatFastConcurrentNetwork.SingleSt=\r\nep()\n\nThe method has an execution time of only 0.3ms (avg) but it&#39;s called =\r\nhundreds of millions of times, so I&#39;ve tried to optimize this method - with=\r\n success. I&#39;ve added some unsafe code; the methods readability is lost, but=\r\n IMO the performance improvement redresses that.\n\nSome facts:\n\nWith the ori=\r\nginal method a call to PerformOneGeneration() took 218 seconds in average. =\r\nWith my modified version and the same network a call took 124 seconds (that=\r\n&#39;s only 57% of the original version).\n\nMaybe you can consider to apply this=\r\n changes to the standard implementation. The modified file can be found her=\r\ne: http://groups.yahoo.com/group/neat/files/FloatFastConcurrentNetwork.cs\n\n=\r\nCheers,\nDaniel\n\n\n\n\n"}}