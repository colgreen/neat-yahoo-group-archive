{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"ZRYwhahyZT81Gj8vRFHoRcEmuYT5qcHy26qY_jsBWQyXb-C70ycqbt7Brf21vdU0yg5p9xsFsbWSBn0AkyFKn6JkANJXlO_xVyp752Oz0Avk","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: HyperNEAT: Creating Neural Networks with CPPNs","postDate":"1175034735","msgId":3054,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGV1YzYxZitpcDNjQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDIxMzM1NTE3NTAxODU4QG1haWwuaWRuZXQubmV0LnVrPg=="},"prevInTopic":3053,"nextInTopic":3056,"prevInTime":3053,"nextInTime":3055,"topicId":3028,"numMessagesInTopic":34,"msgSnippet":"Ian, I agree with you that shifting or warping features is an important part of evolution.  However, I think you may not be recognizing some of the nice","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 85543 invoked from network); 27 Mar 2007 22:33:10 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m44.grp.scd.yahoo.com with QMQP; 27 Mar 2007 22:33:10 -0000\r\nReceived: from unknown (HELO n19.bullet.sp1.yahoo.com) (69.147.64.216)\n  by mta7.grp.scd.yahoo.com with SMTP; 27 Mar 2007 22:33:10 -0000\r\nReceived: from [216.252.122.218] by n19.bullet.sp1.yahoo.com with NNFMP; 27 Mar 2007 22:32:16 -0000\r\nReceived: from [209.73.164.86] by t3.bullet.sp1.yahoo.com with NNFMP; 27 Mar 2007 22:32:16 -0000\r\nReceived: from [66.218.66.89] by t8.bullet.scd.yahoo.com with NNFMP; 27 Mar 2007 22:32:16 -0000\r\nDate: Tue, 27 Mar 2007 22:32:15 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;euc61f+ip3c@...&gt;\r\nIn-Reply-To: &lt;21335517501858@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: HyperNEAT: Creating Neural Networks with CPPNs\r\nX-Yahoo-Group-Post: member; u=54567749; y=p_7Tfc7U_brPL7pzWq4t3gYRVkoDttc5Ml6InECGEUJThwjFn_bv\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nIan, \n\nI agree with you that shifting or warping features is an important \n=\r\npart of evolution.  However, I think you may not be recognizing some \nof th=\r\ne nice properties of CPPNs that I perceive, because as I \nunderstand them, =\r\none of their best attributes is their ability to do \njust that, i.e. gracef=\r\nully warp and shift parts around without major \ndisruption or the need for =\r\nsynchronized mutations.  So I see this \nissue in the opposite light- to me =\r\nit is a supporting piece of \nevidence for their viability.\n\nOne can think o=\r\nf a coordinate system, say a 2D plane, like a piece \nof latex with a patter=\r\nn drawn upon it.  Many important relationships \nexist within the drawing be=\r\ntween and among its various components.  \nThose relationships are critical =\r\nto preserve.  Let&#39;s say it is a \npicture of a human being.  If one was to, =\r\nfor example, cut out \nthe &quot;arm&quot; and literally move it, all kinds of corresp=\r\nondences and \nattachment would be broken.\n\nHowever, the CPPN does not move =\r\nthings in that way.  Rather, the \nCPPN moves things by stretching and foldi=\r\nng the sheet.  So it can \nshorten or widen the arms, or move them up or dow=\r\nn, but their \nattachments to the rest of the pattern remain consistent and =\r\n\ninterpolate perfectly as the surface warps.\n\nEach node in the CPPN is in e=\r\nffect a dimension of a surface like the \nlatex sheet.  The dimensions can w=\r\narp, fold, and do other things \nlike repeat (through a sin wave).  But thos=\r\ne higher-level structures \nthat reside upon that surface are functions of i=\r\nts coordinates, so, \nwhen it shifts, they shift with it in perfect synchron=\r\ny.\n\nIn the example of a sin wave that doubles in frequency, it is as if \na =\r\nsheet with ripples was made to ripple twice as much.  Any high-\nlevel compo=\r\nnent that attaches to a ripple (i.e. is a function of a \nsin wave) will in =\r\nperfect tandem then shrink in size and multiply in \nnumber, all without the=\r\n need for any correlated mutations throughout \nthe CPPN.\n\nI have been calli=\r\nng these &quot;sheets&quot; coordinate frames.  The reliance \nof higher frames upon t=\r\nhose below them is in fact a powerful \nrelationship that allows us to avoid=\r\n the very concern you raise: \ni.e. unwiedly synchronous mutations across th=\r\ne genotype.  As I argue \nin our new GPEM journal paper, this layering of co=\r\nordinate frames \none upon another is an elegant anology with the way biolog=\r\ny builds \nits phenotypes as well.  In effect, gradients laid by GRNs are \nc=\r\noordinate frames.  When mutations do things like create new \nneurons, they =\r\nsituate relative to the underlying coordinate frame.  \nOr conversely, the u=\r\nnderlying gradient changes in a way that calls \nfor a differing distributio=\r\nn of neurons upon it.  Either way, the \nrelationship is perfectly equivalen=\r\nt to that of one function \ndependant upon another (i.e. simple function com=\r\nposition).\n\nI do not believe there are biological mutations that produce a =\r\n\nsimple direct command like &quot;create neuron X.&quot;  Everything is context \ndepe=\r\nndent and within some frame of reference, which is first laid by \nsome pred=\r\necessor process that creates the foundation upon which \nlater structure dep=\r\nends.  \n\nSo I still don&#39;t see anything missing from the abstraction.  I kno=\r\nw \nI&#39;m taking a kind of hard line against traditional development, but \nat =\r\nthe very least it is healthy to do so:  That way, what only a few \nmonths a=\r\ngo were unchallenged intuitive assumptions are now at least \nnecessary to d=\r\nefend rigorously.  At the same time, I recognize that \nmy contention remain=\r\ns only a contention and not a proof, so the case \nis not entirely closed.\n\n=\r\nken\n\n--- In neat@yahoogroups.com, Ian Badcoe &lt;ian_badcoe@...&gt; wrote:\n&gt;\n&gt; Hi=\r\n,\n&gt; \tKen, I&#39;d like to reply to your posts in which you makes the \ncase \n&gt; t=\r\nhat a functional mapping is equivalent to a developmental system \nin \n&gt; the=\r\n context of a computer where we can define a coordinate system \nto \n&gt; trivi=\r\nalize finding where we are.\n&gt; \n&gt; \tI think you are wrong on this particular =\r\npoint.  Or rather, \nI think \n&gt; you have hit on a great short-cut, that will=\r\n nicely side-step a \nwhole \n&gt; class of issues, but that eventually you will=\r\n have to come back to \n&gt; developmental ideas.\n&gt; \n&gt; \tThe reason I think this=\r\n is for reasons of evolvability.  The \n&gt; functional approach relies on feat=\r\nures remaining in the same \nplaces \n&gt; so that other functions can find them=\r\n.  Any mutation that requires \na \n&gt; feature to move will need all the parts=\r\n of the CPPN that reference \n&gt; that feature to be changed in synchrony.  In=\r\n other words it will \n&gt; require multiple concerted mutations, and that is t=\r\noo improbable.\n&gt; \n&gt; \tNow, you might argue that feature-moving mutations wer=\r\ne of \nno \n&gt; significance.  But other very important classes of change suffe=\r\nr \nthe \n&gt; same problems.  e.g. if we mutate part of the CPPN to produce a \n=\r\n&gt; duplication of a previously existing structure:\n&gt; \n&gt; \tsin(x) -&gt; sin(2 * x=\r\n)\n&gt; \n&gt; \tThen we need to separately do the same thing to the other \nparts of=\r\n \n&gt; the CPPN that also want to reference that structure.  In a \n&gt; developme=\r\nntal approach, such a change might be something like a \n&gt; simple duplicatio=\r\nn:\n&gt; \n&gt; \t...; CreateSomeNeurones(label:=3D47, pattern:=3D...); ... -&gt;\n&gt; \n&gt; =\r\n\t...; CreateSomeNeurones(label:=3D47, pattern:=3D...); \n&gt; CreateSomeNeurone=\r\ns(label:=3D47, pattern:=3D...); ...\n&gt; \n&gt; \tAnd because all future rules that=\r\n attach to that structure \nwill be \n&gt; doing it via recognizing the label, t=\r\nhey will already be doing the \n&gt; right thing to both of the new structures.=\r\n..\n&gt; \n&gt; \t(OK OK they&#39;ll not be doing a totally wrong thing)\n&gt; \n&gt; \tBut as I =\r\nsaid, HyperNEAT _is_ a great step forwards, but \npossibly \n&gt; not the whole =\r\nstory.\n&gt; \n&gt; \tIan\n&gt;\n\n\n\n"}}