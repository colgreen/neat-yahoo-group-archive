{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":281645563,"authorName":"afcarl2","from":"&quot;afcarl2&quot; &lt;a.carl@...&gt;","profile":"afcarl2","replyTo":"LIST","senderId":"7k9sHwm--16DdLk6QtTJnQP0jDNwCI3rE_xBnP_5Deh52ZLDEj8Wo286iAAe6IidmAAquuG8YLzcX8qRVVA5qiI","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Question Re: HyperNEAT Speciate","postDate":"1177788517","msgId":3208,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGYxMDc5NSs1a2o3QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDhkOGZmZTM0MDcwNDI3MjMwOHExZGI3MjQyZWw2MGQzNTNkNTRkOGJiM2MzQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":3207,"nextInTopic":3209,"prevInTime":3207,"nextInTime":3209,"topicId":3197,"numMessagesInTopic":14,"msgSnippet":"Jason, Follow-on Remarks/Questions: (a) The FindPointExperiment appears to work fine in the non-dll version (see zip file on files section). (b) Thanks, look","rawEmail":"Return-Path: &lt;a.carl@...&gt;\r\nX-Sender: a.carl@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 89618 invoked from network); 28 Apr 2007 19:29:58 -0000\r\nReceived: from unknown (66.218.66.71)\n  by m50.grp.scd.yahoo.com with QMQP; 28 Apr 2007 19:29:58 -0000\r\nReceived: from unknown (HELO n30b.bullet.sp1.yahoo.com) (209.131.38.253)\n  by mta13.grp.scd.yahoo.com with SMTP; 28 Apr 2007 19:29:58 -0000\r\nReceived: from [216.252.122.217] by n30.bullet.sp1.yahoo.com with NNFMP; 28 Apr 2007 19:28:39 -0000\r\nReceived: from [209.73.164.86] by t2.bullet.sp1.yahoo.com with NNFMP; 28 Apr 2007 19:28:39 -0000\r\nReceived: from [66.218.66.84] by t8.bullet.scd.yahoo.com with NNFMP; 28 Apr 2007 19:28:39 -0000\r\nDate: Sat, 28 Apr 2007 19:28:37 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;f10795+5kj7@...&gt;\r\nIn-Reply-To: &lt;8d8ffe340704272308q1db7242el60d353d54d8bb3c3@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;afcarl2&quot; &lt;a.carl@...&gt;\r\nSubject: Question Re: HyperNEAT Speciate\r\nX-Yahoo-Group-Post: member; u=281645563; y=mQalNZEOGg7PCknkPpSmmePBGI-7arVOB-WVzJ-lZeGW5A\r\nX-Yahoo-Profile: afcarl2\r\n\r\nJason,\n\nFollow-on Remarks/Questions:\n\n(a) The FindPointExperiment appears t=\r\no work fine in the non-dll \nversion (see zip file on files section).\n\n(b) T=\r\nhanks, look forward to your reply.\n\n(c) I&#39;m not sure I communicated my ques=\r\ntion adequately. To point, \nactivation functions w/ more than one parameter=\r\n, not just an \noperation on the summation of the inputs to the node. I beli=\r\neve this \nwould require either evolved parameters associated with the \nimpl=\r\nemented activation function for a given node, or the ability to \nmaintain u=\r\nnique multiple inputs, each of which perform a summation of \nthe conntected=\r\n inputs to a given unique input. Is this stated any \nbetter?\n\nThanks,\n   An=\r\ndy Carl\n\n\n--- In neat@yahoogroups.com, &quot;Jason G&quot; &lt;jgmath2000@...&gt; wrote:\n&gt;\n=\r\n&gt; (a) I tried the FindPointExperiment and it crashed, so I&#39;ll have to \nlook=\r\n\n&gt; into what doesn&#39;t work there.  I ahven&#39;t paid much attention to it \nsinc=\r\ne\n&gt; implementing the FindClusterExperiment, but it&#39;s worth going back \nand =\r\nmaking\n&gt; it work.\n&gt; \n&gt; (b) I&#39;ll have to check with Ken on this, but I don&#39;t=\r\n think that I\n&gt; impelmented Trait parameters.  I think there was a reason f=\r\nor this, \nbut I&#39;ll\n&gt; find out more.\n&gt; \n&gt; (c) Right now the activation funct=\r\nions just take the node&#39;s summed \ninput as\n&gt; a parameter, but it&#39;s possible=\r\n to change the FastNetwork class to \nmake\n&gt; whatever activation function yo=\r\nu want.\n&gt; \n&gt; \n&gt; On 4/27/07, afcarl2 &lt;a.carl@...&gt; wrote:\n&gt; &gt;\n&gt; &gt;   Jason,\n&gt; =\r\n&gt;\n&gt; &gt; You are indeed correct, and thank you! The noted edit was my own\n&gt; &gt; =\r\nand not yours (most embarrassing...too many interrupts being\n&gt; &gt; serviced).=\r\n\n&gt; &gt;\n&gt; &gt; A couple questions re: HyperNEAT(?):\n&gt; &gt;\n&gt; &gt; (a) Would you have an=\r\ny xml output files and associated\n&gt; &gt; runtimes/platform/compiler/OS info fo=\r\nr the findpointexperiment? \n(the\n&gt; &gt; results folder appears to contain none=\r\n)\n&gt; &gt;\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; (b) Have trait parameters been dropped from you NEAT im=\r\nplementation?\n&gt; &gt;\n&gt; &gt; (c) Have you any mechanism to employ activation funct=\r\nions which \nhave\n&gt; &gt; additional parameters associated w/ them, rather than =\r\nsolely \ndepend\n&gt; &gt; on the evolved aggregation of individual monolith node a=\r\nctivation\n&gt; &gt; functions?\n&gt; &gt;\n&gt; &gt; Thanks,\n&gt; &gt; Andy Carl\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; --- In n=\r\neat@yahoogroups.com &lt;neat%40yahoogroups.com&gt;, &quot;Jason G&quot;\n&gt; &gt; &lt;jgmath2000@&gt; w=\r\nrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; I checked the original code and the change you requested =\r\nwas\n&gt; &gt; already there.\n&gt; &gt; &gt; Maybe you accidentally changed it and then cha=\r\nnged it back? I \nwent\n&gt; &gt; back\n&gt; &gt; &gt; several revisions and all of them had =\r\nthe code the way you \nsuggest\n&gt; &gt; it should\n&gt; &gt; &gt; be.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Here is a=\r\n copy of the code that is it the release:\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; void Experiment=\r\nRun::start()\n&gt; &gt; &gt; {\n&gt; &gt; &gt; cout &lt;&lt; &quot;Experiment started&#92;n&quot;;\n&gt; &gt; &gt; size_t max=\r\nGenerations =3D\n&gt; &gt; &gt; size_t(NEAT::Globals::getSingleton()-&gt;getParameterVal=\r\nue\n&gt; &gt; (&quot;MaxGenerations&quot;));\n&gt; &gt; &gt;\n&gt; &gt; &gt; started=3Drunning=3Dtrue;\n&gt; &gt; &gt;\n&gt; &gt;=\r\n &gt; for (size_t\n&gt; &gt; &gt; generations=3D(population-&gt;getGenerationCount()-\n&gt; &gt; 1=\r\n);generations&lt;maxGenerations;generations++)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; if (generations&gt;0=\r\n)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; mutex::scoped_lock scoped_lock(*populationMutex);\n&gt; &gt; &gt; cou=\r\nt &lt;&lt; &quot;PRODUCING NEXT GENERATION&#92;n&quot;;\n&gt; &gt; &gt; produceNextGeneration();\n&gt; &gt; &gt; co=\r\nut &lt;&lt; &quot;DONE PRODUCING&#92;n&quot;;\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; if (experiments[0]-&gt;performUs=\r\nerEvaluations())\n&gt; &gt; &gt; {\n&gt; &gt; &gt; frame-&gt;getUserEvaluationFrame()-\n&gt; &gt; &gt;update=\r\nEvaluationPanels();\n&gt; &gt; &gt; running=3Dfalse;\n&gt; &gt; &gt; while (!running)\n&gt; &gt; &gt; {\n&gt;=\r\n &gt; &gt; boost::xtime xt;\n&gt; &gt; &gt; boost::xtime_get(&xt, boost::TIME_UTC);\n&gt; &gt; &gt; x=\r\nt.sec +=3D 1;\n&gt; &gt; &gt; boost::thread::sleep(xt); // Sleep for 1/2\n&gt; &gt; second\n&gt;=\r\n &gt; &gt; //cout &lt;&lt; &quot;Sleeping while user evaluates!&#92;n&quot;;\n&gt; &gt; &gt; }\n&gt; &gt; &gt; }\n&gt; &gt; &gt; el=\r\nse\n&gt; &gt; &gt; {\n&gt; &gt; &gt; while (!running)\n&gt; &gt; &gt; {\n&gt; &gt; &gt; boost::xtime xt;\n&gt; &gt; &gt; boos=\r\nt::xtime_get(&xt, boost::TIME_UTC);\n&gt; &gt; &gt; xt.sec +=3D 1;\n&gt; &gt; &gt; boost::threa=\r\nd::sleep(xt); // Sleep for 1/2\n&gt; &gt; second\n&gt; &gt; &gt; }\n&gt; &gt; &gt; evaluatePopulation(=\r\n);\n&gt; &gt; &gt; }\n&gt; &gt; &gt;\n&gt; &gt; &gt; cout &lt;&lt; &quot;Finishing evaluations&#92;n&quot;;\n&gt; &gt; &gt; finishEvalu=\r\nations();\n&gt; &gt; &gt; cout &lt;&lt; &quot;Evaluations Finished&#92;n&quot;;\n&gt; &gt; &gt; }\n&gt; &gt; &gt; cout &lt;&lt; &quot;Ex=\r\nperiment finished&#92;n&quot;;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Notice that the finishEvaluat=\r\nions() is within the for loop. \nMaybe\n&gt; &gt; you\n&gt; &gt; &gt; accidentally deleted a =\r\nbrace or something when you were editing \nthe\n&gt; &gt; code?\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt;=\r\n &gt; &gt; On 4/27/07, afcarl2 &lt;a.carl@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Responses below:\n=\r\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; --- In neat@yahoogroups.com &lt;neat%40yahoogroups.com&gt;&lt;neat%\n=\r\n40yahoogroups.com&gt;, &quot;Jason G&quot;\n&gt; &gt; &gt; &gt; &lt;jgmath2000@&gt; wrote:\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n&gt; &gt; Have you tried taking the unmodified code with my \nexperiment and\n&gt; &gt; &gt;=\r\n &gt; running\n&gt; &gt; &gt; &gt; &gt; it? Do you still see these behaviors?\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; =\r\nThe supplied executable w/ associated dll&#39;s appears to work \nfine.\n&gt; &gt; &gt; &gt; =\r\nPerhaps the default undefined value for species ID in the dll\n&gt; &gt; &gt; &gt; imple=\r\nmentation allowed the equality test in getSpecies \n(i.e. &quot;if\n&gt; &gt; &gt; &gt; (speci=\r\nes[a]-&gt;getID()=3D=3Did)&quot;), to be satisfied.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Maybe you can=\r\n provide more details\n&gt; &gt; &gt; &gt; &gt; into what is happening that&#39;s causing the f=\r\ninishEvaluations \nnot\n&gt; &gt; to\n&gt; &gt; &gt; &gt; run.\n&gt; &gt; &gt; &gt; &gt; It&#39;s possible that fini=\r\nshEvaluations is causing an exception\n&gt; &gt; which\n&gt; &gt; &gt; &gt; it is\n&gt; &gt; &gt; &gt; &gt; pri=\r\nnting out, and then continuing on, resulting in what \nappears\n&gt; &gt; to\n&gt; &gt; &gt; =\r\n&gt; be no\n&gt; &gt; &gt; &gt; &gt; call to finishEvaluations.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; No, I have run=\r\n with multiple break points in debug. Execution \nis\n&gt; &gt; not\n&gt; &gt; &gt; &gt; flowing=\r\n to finishEvaluations prior to the exception in \ngetSpecies.\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n&gt; &gt;\n&gt; &gt; &gt; &gt; &gt; I&#39;ve compiled and run my program with MSVC 2003 before, and \n=\r\nit\n&gt; &gt; &gt; &gt; seemed to\n&gt; &gt; &gt; &gt; &gt; work, but that was a few months ago. I will =\r\ntry to compile \nand\n&gt; &gt; run\n&gt; &gt; &gt; &gt; the\n&gt; &gt; &gt; &gt; &gt; findclusterexperiment wit=\r\nh MSVC2005 here at home and let you\n&gt; &gt; know\n&gt; &gt; &gt; &gt; if I find\n&gt; &gt; &gt; &gt; &gt; an=\r\nything.\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; Maybe you can run it in the visual studio debug=\r\nger and find \nout\n&gt; &gt; why\n&gt; &gt; &gt; &gt; it&#39;s not\n&gt; &gt; &gt; &gt; &gt; executing finishevalua=\r\ntions?\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Have done this. I believe the logic in ExperimentRun=\r\n::start\n&gt; &gt; requires\n&gt; &gt; &gt; &gt; that the call to finishEvaluations should be i=\r\nnside the &quot;for\n&gt; &gt; (size_t\n&gt; &gt; &gt; &gt; generations=3D(population-getGenerationC=\r\nount()-\n&gt; &gt; &gt; &gt; 1);generations&lt;maxGenerations;generations++)&quot; braces. I hav=\r\ne\n&gt; &gt; tested\n&gt; &gt; &gt; &gt; this change and it appears to work correctly. The code=\r\n\n&gt; &gt; implementing\n&gt; &gt; &gt; &gt; this modification is supplied in the posted zip f=\r\nile to the \nfiles\n&gt; &gt; &gt; &gt; section of the group yesterday (04/26/07). Any fe=\r\nedback is\n&gt; &gt; &gt; &gt; appreciated!\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; Andy Carl\n&gt; =\r\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; On 4/26/07, afcarl2 &lt;a.carl@&gt; wrote:\n&gt; &gt; &gt; &gt; &gt; &gt;\n=\r\n&gt; &gt; &gt; &gt; &gt; &gt; Jason,\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Seeming good news/bad news. Firs=\r\nt, I had made reference to\n&gt; &gt; &gt; &gt; &gt; &gt; onGeneration equal to 0 in produceNe=\r\nxtGeneration and \nconfused\n&gt; &gt; it\n&gt; &gt; &gt; &gt; with\n&gt; &gt; &gt; &gt; &gt; &gt; generations equa=\r\nl to 1 in ExperimentRun::start, which is \nwhat\n&gt; &gt; you\n&gt; &gt; &gt; &gt; &gt; &gt; were ref=\r\nering to with the &quot;generations&gt;0&quot; test. Bad news, \nI\n&gt; &gt; &gt; &gt; believe\n&gt; &gt; &gt; =\r\n&gt; &gt; &gt; that for your intended purpose(?), the call to\n&gt; &gt; finishEvaluations\n=\r\n&gt; &gt; &gt; &gt; &gt; &gt; should be inside the &quot;for (size_t generations=3D(population-\n&gt; =\r\n&gt; &gt; &gt; &gt; &gt; &gt;getGenerationCount()-\n&gt; &gt; &gt; &gt; 1);generations&lt;maxGenerations;gene=\r\nrations++)&quot;\n&gt; &gt; &gt; &gt; &gt; &gt; braces.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; I am getting a call=\r\n to produceNextGeneration with \ngenerations\n&gt; &gt; &gt; &gt; &gt; &gt; equal to 1, with no=\r\n prior call to finishEvaluations, with\n&gt; &gt; &gt; &gt; &gt; &gt; species.size equal to 0 =\r\nand the species ID undefined,\n&gt; &gt; resulting in\n&gt; &gt; &gt; &gt; &gt; &gt; the exception as=\r\nsociated with a call to getSpecies. I note\n&gt; &gt; that\n&gt; &gt; &gt; &gt; there\n&gt; &gt; &gt; &gt; &gt;=\r\n &gt; is some editing in this area. Maybe a difference in \ncompilers\n&gt; &gt; &gt; &gt; (=\r\nMSVC\n&gt; &gt; &gt; &gt; &gt; &gt; 2003)? Please advise.\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; Andy Carl\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; --- In neat@yahoogrou=\r\nps.com &lt;neat%40yahoogroups.com&gt;&lt;neat%\n40yahoogroups.com&gt;&lt;neat%\n&gt; &gt; 40yahoog=\r\nroups.com&gt;, &quot;Jason\n&gt; &gt; &gt; &gt; Gauci&quot;\n&gt; &gt; &gt; &gt; &gt; &gt; &lt;jgmath2000@&gt; wrote:\n&gt; &gt; &gt; &gt; =\r\n&gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; ExperimentRun::finishEvaluations should be called befor=\r\ne\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; GeneticPopulation::produceNextGeneration. As long as \nyou d=\r\no\n&gt; &gt; &gt; &gt; that,\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; generation 0 will have species. You shouldn&#39;t=\r\n get the\n&gt; &gt; exception\n&gt; &gt; &gt; &gt; as\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; long as you don&#39;t call prod=\r\nuceNextGeneration before\n&gt; &gt; &gt; &gt; &gt; &gt; finishEvaluations.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; Notic=\r\ne how there is a &quot;generations&gt;0&quot; if within that for\n&gt; &gt; loop.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;=\r\n\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; Sorry for making it backwards like that, but if I put \nthe\n&gt;=\r\n &gt; &gt; &gt; &gt; &gt; &gt; produceNextGeneration at the end of the for loop \ninstead of\n&gt;=\r\n &gt; &gt; &gt; doing it\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; the way I did, then it would produce an extra=\r\n \ngeneration at\n&gt; &gt; the\n&gt; &gt; &gt; &gt; end\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; that would not get used.\n=\r\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; As a side note, I found out that within the\n&gt; &gt;=\r\n &gt; &gt; &gt; &gt; GeneticSpecies::makeBabies\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; routine, it can get stuck=\r\n in an infinite loop. I&#39;m not \nsure\n&gt; &gt; how\n&gt; &gt; &gt; &gt; it\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; happen=\r\nd, but until I figure it out, I&#39;ve replaced the \nwhile\n&gt; &gt; &gt; &gt; (true)\n&gt; &gt; &gt;=\r\n &gt; &gt; &gt; &gt; loops with for loops which try 1,000,000 times and then\n&gt; &gt; bail b=\r\ny\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; choosing the most fit in the species and doing asexual\n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; reproduction.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; It&#39;s only happend once so it might neve=\r\nr happen to you, \nbut\n&gt; &gt; just\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; thought I&#39;d let you know.\n&gt; &gt; =\r\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; I&#39;ve made several other improvements too, including=\r\n a \nbetter\n&gt; &gt; &gt; &gt; random\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; generator. Once I get beyond this n=\r\next milestone, I&#39;ll\n&gt; &gt; release\n&gt; &gt; &gt; &gt; an\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; improved version.\n=\r\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; Thanks a lot for your input, if you still can&#39;t=\r\n get it \nto\n&gt; &gt; run,\n&gt; &gt; &gt; &gt; don&#39;t\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; hesitate to reply and I&#39;ll=\r\n try to help you as best I \ncan.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; =\r\n--- In neat@yahoogroups.com &lt;neat%\n40yahoogroups.com&gt;&lt;neat%40yahoogroups.co=\r\nm&gt;&lt;neat%\n&gt; &gt; 40yahoogroups.com&gt;, &quot;afcarl2&quot;\n&gt; &gt; &gt; &gt; &lt;a.carl@&gt;\n&gt; &gt; &gt; &gt; &gt; &gt; wr=\r\note:\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; Jason,\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;=\r\n Review of the NEAT portion of the HyperNEAT code \nindicates\n&gt; &gt; &gt; &gt; &gt; &gt; th=\r\nat\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; speciate (and size thereof via pushback), is only \ncalle=\r\nd\n&gt; &gt; from\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; adjustFitness, which is called from\n&gt; &gt; &gt; &gt; &gt; &gt; =\r\nExperimentRun::finishEvaluations.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; The seeming signifcance o=\r\nf this is that the size of\n&gt; &gt; species is\n&gt; &gt; &gt; &gt; &gt; &gt; zero for\n&gt; &gt; &gt; &gt; &gt; &gt; =\r\n&gt; &gt; generation 0, which in itself is not a problem, but \nthere\n&gt; &gt; &gt; &gt; resu=\r\nlts\n&gt; &gt; &gt; &gt; &gt; &gt; an\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; exception in\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; GeneticPopu=\r\nlation::produceNextGeneration, associated \nwith\n&gt; &gt; a\n&gt; &gt; &gt; &gt; call\n&gt; &gt; &gt; &gt; =\r\n&gt; &gt; to\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; getSpecies. Since the species ID is undefined for\n&gt; =\r\n&gt; generation 0\n&gt; &gt; &gt; &gt; &gt; &gt; (since\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; speciate has not yet been=\r\n called), the test &quot;if\n(species\n&gt; &gt; [a]-\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;getID()=3D=3Did)&quot;=\r\n will not be true. Was this intended? \nPlease\n&gt; &gt; &gt; &gt; advise.\n&gt; &gt; &gt; &gt; &gt; &gt; &gt;=\r\n &gt;\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; Thanks,\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; Andy Carl\n&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; =\r\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; &gt;\n&gt;=\r\n &gt; &gt; &gt; &gt; --\n&gt; &gt; &gt; &gt; &gt; Jason G\n&gt; &gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;=\r\n\n&gt; &gt; &gt;\n&gt; &gt; &gt; --\n&gt; &gt; &gt; Jason G\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;  \n&gt; &gt;\n&gt; \n&gt; \n&gt; \n&gt; -- \n&gt; Jason G\n=\r\n&gt;\n\n\n\n"}}