{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"YH144KzTdWJcyrTyo0ZBMxrueyNQMPwHBuTqZ82sWHFDArxKwSgQ03PKQe35lJQxBmkGskw7Io3ZnKKXt7KCtlEPsmEstgRoqaA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Modularity and interfaces","postDate":"1107797628","msgId":1863,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMDcxMTQ2NTAuMDNiY2ViZTBAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PGN0dWs3NStybmY0QGVHcm91cHMuY29tPg==","referencesHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMDMxMTQ4NTkuMDNiYjg1ZDhAcG9wLm1haWwueWFob28uY28udWs+IDxjdHVrNzUrcm5mNEBlR3JvdXBzLmNvbT4="},"prevInTopic":1862,"nextInTopic":1867,"prevInTime":1862,"nextInTime":1864,"topicId":1853,"numMessagesInTopic":13,"msgSnippet":"Hi Mitchell and Ken,\n\n         I take all your points.  In fact, this is pretty much what I \nwanted to come around to discussing -- I was just trying to see","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 77181 invoked from network); 7 Feb 2005 17:32:07 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m1.grp.scd.yahoo.com with QMQP; 7 Feb 2005 17:32:07 -0000\r\nReceived: from unknown (HELO smtp003.mail.ukl.yahoo.com) (217.12.11.34)\n  by mta4.grp.scd.yahoo.com with SMTP; 7 Feb 2005 17:32:05 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp003.mail.ukl.yahoo.com with SMTP; 7 Feb 2005 17:32:04 -0000\r\nMessage-Id: &lt;6.2.0.14.0.20050207114650.03bcebe0@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.0.14\r\nDate: Mon, 07 Feb 2005 17:33:48 +0000\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;ctuk75+rnf4@...&gt;\r\nReferences: &lt;6.2.0.14.0.20050203114859.03bb85d8@...&gt;\n &lt;ctuk75+rnf4@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.34\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: Modularity and interfaces\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nHi Mitchell and Ken,\n\n         I take all your points.  In fact, this is pretty much what I \nwanted to come around to discussing -- I was just trying to see whether \nanybody had followed me this far before I got into the hard stuff.\n\nAt 01:47 04/02/2005, you wrote:\n\n\n&gt;Ian,\n&gt;\n&gt;One of the interesting things that comes up when you&#39;re working with\n&gt;evolution is how much you should allow your own analytic intuitions\n&gt;to constrain the final solution.  You&#39;ve put a lot of thought into\n&gt;the way modularity could work, but one question I have is how much\n&gt;of this architecture will just naturally arise out of the right kind\n&gt;of encoding and evolutionary algorithm on its own?\n\nIn one sense, you are entirely right be definition.  e.g. because what you \ndescribe is what nature did and that is the one actual example we have of \nthis working.  Although one could obviously argue about whether any of \nnature&#39;s &quot;modularies&quot; match our expectations...\n\nOn the other hand, one lesson from the history of genetic computing over \nthe last few decades is that you cannot just set up a &quot;reasonable&quot; encoding \nand expect the most sophisticated effects to occur.  In fact, the original \ndesign of NEAT is based on an observation of exactly this type -- namely \nthe observation that the encoding _must_ track the same &quot;feature&quot; across \nmultiple generations and know that it is the same thing when a future \nbreeding occurs -- hence innovation numbers.\n\ne.g. in adding innovation numbers, the encoding was being changed in a way \nthat you (Ken) had deduced was necessary for a certain type of evolution to \noccur.  That type of evolution being coherent match-up between features in \nthe genomes of different individuals during cross-over.  Thus side-stepping \nthe &quot;competing conventions problem&quot;.\n\nSo my claim is that in thinking about modules and interfaces as separate \nobjects (at least for the sake of discussion) I&#39;m trying to do the same \nsort of side-step that Ken did for the original NEAT.\n\nTo put this is perspective, remember that nature evolved its algorithm and \nencoding (for modularity) in a context where all of the underlying systems \nwere also free to evolve (or be them very heavily constrained by previously \nevolved systems) and, further, that evolution did in the context of already \nhaving given those underlying systems high evolvability.\n\nThat and nature also used a population size and generation count that we \ncan only dream about.\n\nSo, all in all I don&#39;t rate our chances of seeing the evolution of modules \nin anything less than a system which we have _designed_ to support it.\n\nThat said, what is &quot;design&quot; of that system except picking &quot;right kind of \nencoding and evolutionary algorithm&quot;.\n\nSo I&#39;ve come a long way around to try and say that your viewpoint and mine \nare the same, except that I don&#39;t expect to see a result unless I \ndeliberately design the system to support modularity.\n\nDo this make sense?\n\n&gt;   The other side\n&gt;of the question is that there may be a better way to think about\n&gt;this that evolution might discover, but it won&#39;t discover it if you\n&gt;predetermine what the right way to do things is.  That&#39;s not in any\n&gt;way a criticism of what you&#39;ve been talking about.  Rather, it&#39;s\n&gt;just to point out that it&#39;s sometimes hard to know how much thought\n&gt;we should be putting into the solution itself as opposed to a system\n&gt;that can automatically generate the solution on its own.  It&#39;s a\n&gt;sublte and confusing distinction sometimes.\n\nThat and there&#39;s a log of related ideas, all of which are in some sense \n&quot;modularity&quot; but which are not 100% the same thing and which might be found \nin different parts of &quot;nature&quot;, required by different problems, and \napproached by different experiments.\n\nSo what I would like to get around to is sort out some of the potential \nconfusion by talking through some experimental design(s).  e.g. if we had \nan experimental design (even a thought experiment) that we agreed captured \nsome aspect of modularity, then what we would have would be an &quot;agreement \nin principal&quot; that an aspect of modularity was addressable, and \ninteresting, and also a definition of what what it was (as long as the \nexperiment was unambiguous enough).\n\n&gt;I also agree with Mitchell in that we really need some problems that\n&gt;require the kinds of complex architectures that we are speculating\n&gt;about.  It&#39;s surprisingly hard to think of good benchmarks that need\n&gt;or utilize modularity explicitly, or that utilize any kind of high-\n&gt;level complexity for that matter.  What kind of problem would\n&gt;require an NN with a million neurons, but wouldn&#39;t take 300 years to\n&gt;solve?  In other words, what&#39;s the right simple proof of concept to\n&gt;show that you can evolve something complex?\n\nI don&#39;t anticipate for a moment that a network would need to have a million \nneurones before it benefited from some form of modularity.  e.g. if a \ngame-playing network had a need to evaluate different areas of the board in \nexactly the same manner, then applying the same 10-neurone module to all \nsuch areas would be an advantage...\n\n         Ian\n\n\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n\r\n\n"}}