{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"mxWuzLJF4zd3SjPknWlkeh9kmS4qogBq5qKM8tppWz2Tv97ctiuGY9ImC7H11c-meWRQSyv3LPYdIighSY62Tino66GNpGI8p18","spamInfo":{"isSpam":false,"reason":"12"},"subject":"SLEAT","postDate":"1126610875","msgId":2278,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4wLjE0LjAuMjAwNTA5MDkxNTA1MDQuMDMyZGFhYjhAcG9wLm1haWwueWFob28uY28udWs+"},"prevInTopic":0,"nextInTopic":2282,"prevInTime":2277,"nextInTime":2279,"topicId":2278,"numMessagesInTopic":5,"msgSnippet":"Hi,\n\tJust thought I d let you all know what I ve been up to.\n\n\tInspired by Colin, I have been taking a bit of a look at TicTacToe, and \ntrying to build a","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 94531 invoked from network); 13 Sep 2005 11:23:00 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m13.grp.scd.yahoo.com with QMQP; 13 Sep 2005 11:23:00 -0000\r\nReceived: from unknown (HELO smtp001.mail.ukl.yahoo.com) (217.12.11.32)\n  by mta5.grp.scd.yahoo.com with SMTP; 13 Sep 2005 11:22:54 -0000\r\nReceived: (qmail 47842 invoked from network); 13 Sep 2005 11:22:49 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp001.mail.ukl.yahoo.com with SMTP; 13 Sep 2005 11:22:48 -0000\r\nMessage-Id: &lt;6.2.0.14.0.20050909150504.032daab8@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.0.14\r\nDate: Tue, 13 Sep 2005 12:27:55 +0100\r\nTo: neat@yahoogroups.com\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: SLEAT\r\nX-Yahoo-Group-Post: member; u=7192225; y=_UnSoANyItj5yiP4hH_iKl_czbkma8UatVHPGPi29LC4UxKtCA\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nHi,\n\tJust thought I&#39;d let you all know what I&#39;ve been up to.\n\n\tInspired by Colin, I have been taking a bit of a look at TicTacToe, and \ntrying to build a system with some of my ideas for modularity built into it.\n\n\tTo this end I have created something I&#39;m calling SLEAT:\n\n\t\tSymbolic Logic Evolution by Augmenting Topologies\n\n\tThis is very much work-in-progress, so don&#39;t take anything I say here as a \ndefinition, just ideas.  Ideas that I have coded up as real software, however.\n\n--\n\n\tOK, so the basic idea is to take the ideas behind Ken&#39;s &quot;standard&quot; NEAT \nand add just enough new pieces to enable some modularity.  I also wanted to \nbuild in some ability to exploit symmetry, but my first take on that didn&#39;t \npan out, so I&#39;ve put that on hold for the moment.\n\n\tWhy &quot;Symbolic logic&quot;?  Well, if you consider a board:\n\nA B C\nD E F\nG H I\n\n\t(where A to I are symbolic names for the cells)\n\n\tand you were making deductions about the properties of cells and groups of \ncells, then you could make statements something like:\n\nX = IsMine(A) AND IsMine(C) AND IsEmpty(B)\n\n\tThis is a symbolic expression on some of the input, and you can see that \nthe value of X might be useful in deciding to play on cell B.\n\n\tAlthough I expressed this in terms of logical operations, you could write \nthat statement in terms of a neural network which uses three of the \navailable inputs(*) and produces a single output.  This is what I actually \ndo (e.g. neural nets) but I will continue to write it in logical terms \nbecause they are readable.\n\n[[ * - the number of inputs depends on your representation, e.g. there \nmight be 9, with three possible values for each -- mine, yours, empty -- or \nthere might be 27 with two values for each -- a separate block of 9 for \neach state and a simple yes/no in each -- I use the latter scheme, for \nreasons that will become clear ]]\n\n\tThere are three weaknesses to what I have so far:\n\n(i) you need a evolve a separate expression for every row or column on the \nboard, even though they are essentially identical\n(ii) each expression might form a module, but it has no way to communicate \nresults to other modules\n(iii) if you have multiple expressions, with multiple outputs, how do you \nresolve them into a single overall output for the whole system\n\n\tI have tried to address these in a unified manner.\n\n(i) by considering the input cells in terms of there geometric relationship \nto one another, we can rephrase our original expression as:\n\nX = IsMine(LeftOf(B)) AND IsMine(RightOf(B)) AND IsEmpty(B)\n\n\tThis gives us an expression that remains valid even if B is substituted \nfor some other cell, so we can rewrite it with a variable:\n\nX = IsMine(LeftOf(p)) AND IsMine(RightOf(p)) AND IsEmpty(p)\n\n\t[[lower case letters represent variables for &quot;any cell&quot; whereas upper-case \nletters still mean explicit cells.]]\n\n\tThis expression now defines 9 related output values, one for each \ndifferent explicit cell that could be assigned to p.  I treat these values \nas forming another board:\n\nX[A] X[B] X[C]\nX[D] X[E] X[F]\nX[G] X[H] X[I]\n\n\t[[ LeftOf(A) returns a cell which is always false for IsMine, IsYours and \nIsEmpty.  I could have an IsOff operator which would return true only for \ncells outside the board, but I didn&#39;t get around to that yet...]]\n\n\tIf we call these 9 new cells the board &quot;X&quot; then our original inputs were \nthe boards &quot;M&quot;, &quot;Y&quot; and &quot;E&quot;.  IsMine etc can now be replaced with \nreferences to the appropriate board:\n\nX[p] = M[LeftOf(p)] AND M[RightOf(p)] AND E[p]\n\n\tThe is a partial solution to (i) because it allows a single expression for \nall columns, but not one that covers rows and columns simultaneously.  I \nconsider this an interesting stage to investigate the properties of the \nsystem as an intermediate step on the way to something even more general...\n\n(ii) you&#39;ll note that I have now solved problem (ii) as well, because we \ncan write an expression to use values from X just as easily as from M, Y and E\n\n(iii) for the overall output, I have assigned each board an additional real \nvalue, which is its output weighting.  The overall output of the system is \nthe weighted sum of all generated boards, weighted by their output \nweighting.  the system is then taken to be choosing the play the cell with \nthe highest value on this output board.\n\n--\n\n\tThat&#39;s the basic idea.  Is anybody completely lost?\n\n\tI&#39;ll write again with implementation details in a day or two...\n\n\tIan\n\nIn fifteen minutes, everybody will be in the future.\n\n\n\n\t\n\t\n\t\t\n___________________________________________________________ \nYahoo! Messenger - NEW crystal clear PC to PC calling worldwide with voicemail http://uk.messenger.yahoo.com\r\n\n"}}