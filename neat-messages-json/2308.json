{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"UTV20_uBYoKmorfMHGfNv75U3jG_MrMf87_sqmLiPoKNmutaovBA1uZ0a0qGoARbzfGDAEUzN1Xu1jKT83lKtNhoAhLaXRCz818","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Arbitrary labelling / floating ID&#39;s","postDate":"1128426038","msgId":2308,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMi4wLjE0LjAuMjAwNTEwMDQxMjI5MTQuMDMyNjNmMzhAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PDQzM0ZCQzZGLjQwNjA2MDVAZHNsLnBpcGV4LmNvbT4=","referencesHeader":"PDYuMi4wLjE0LjAuMjAwNTA5MjcxOTU3MzkuMDJlNjdhNTBAcG9wLm1haWwueWFob28uY28udWs+IDw0MzNGQkM2Ri40MDYwNjA1QGRzbC5waXBleC5jb20+"},"prevInTopic":2300,"nextInTopic":2311,"prevInTime":2307,"nextInTime":2309,"topicId":2289,"numMessagesInTopic":7,"msgSnippet":"Hi Colin,\n\nAt 11:54 02/10/2005, you wrote:\n Ian Badcoe wrote:\n \n -- positions --\n \n Both types of position (board and rule) are achieve in the same way","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 41625 invoked from network); 4 Oct 2005 11:38:21 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m34.grp.scd.yahoo.com with QMQP; 4 Oct 2005 11:38:21 -0000\r\nReceived: from unknown (HELO smtp005.mail.ukl.yahoo.com) (217.12.11.36)\n  by mta1.grp.scd.yahoo.com with SMTP; 4 Oct 2005 11:38:20 -0000\r\nReceived: (qmail 52602 invoked from network); 4 Oct 2005 11:38:08 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp005.mail.ukl.yahoo.com with SMTP; 4 Oct 2005 11:38:08 -0000\r\nMessage-Id: &lt;6.2.0.14.0.20051004122914.03263f38@...&gt;\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.2.0.14\r\nDate: Tue, 04 Oct 2005 12:40:38 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;433FBC6F.4060605@...&gt;\r\nReferences: &lt;6.2.0.14.0.20050927195739.02e67a50@...&gt;\n &lt;433FBC6F.4060605@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Arbitrary labelling / floating ID&#39;s\r\nX-Yahoo-Group-Post: member; u=7192225; y=ogGSWBc14uVxF2BBZQVIyKxlvpKDvFbGnM1w7cjp5xOV1t-AOA\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nHi Colin,\n\nAt 11:54 02/10/2005, you wrote:\n&gt;Ian Badcoe wrote:\n&gt;\n&gt; &gt;-- &quot;positions&quot; --\n&gt; &gt;\n&gt; &gt;Both types of position (board and rule) are achieve in the same way using\n&gt; &gt;what I call a FID (Floating ID).  This is a single floating point value\n&gt; &gt;stored on each item (board or rule).  When an input node wishes to find an\n&gt; &gt;item, it uses a target FID of its own (it has two, one for rules and one\n&gt; &gt;for boards) and simply locates the closest FID in the list of items to the\n&gt; &gt;one it is looking for.\n&gt; &gt;\n&gt; &gt;I believe this technique (which is a form of what I call &quot;arbitrary\n&gt; &gt;labelling&quot;) to be very powerful, although whether 1 dimensional values are\n&gt; &gt;sufficient, I don&#39;t yet know.  But this is a different discussion.\n&gt; &gt;\n&gt; &gt;\n&gt;Just wanted to comment on this idea of Ian&#39;s. I used a similar scheme in\n&gt;an old NEAT-like prototype back in 2000. Each genome described neurons\n&gt;and connections just as in NEAT. The difference was that each neuron had\n&gt;a position represented by a single floating point value, so effectively\n&gt;the neurons existised in a line (one dimension), each neuron gene then\n&gt;was associated with a list of connection genes, each containing a length\n&gt;value. Negative length indicated a connection back along the line, and\n&gt;positive length a forward connection. Of course there is no guarantee\n&gt;that a neuron exists at the end point of a connection so I used a\n&gt;&#39;linking&#39; routine that just selected the nearest neuron. I suppose you\n&gt;could specify not to link if the nearest neuron&#39;s distance is greater\n&gt;than some value.\n&gt;\n&gt;I arrived at this scheme because the neuron genes were in fact  arranged\n&gt;in a tree structure, with their position being determined relative to\n&gt;their parent gene with only the root neuron gene having an absolute\n&gt;position defined within the genome. What this meant was that any\n&gt;sub-tree at any level could be moved around without destroying the\n&gt;network topology described by that sub-tree, and that it could\n&gt;potentially connect to other parts of the network outside the subtree,\n&gt;parts that the subtree was unaware of.\n&gt;\n&gt;Ok there was a bit more to it than this, but essentially that&#39;s what I\n&gt;did, or tried to do anyway. One result of this scheme is that re-use or\n&gt;modularity is built in but the modules aren&#39;t fixed entities, any\n&gt;sub-tree can be considered to be a module and can be copied and pasted\n&gt;to some other point on the genome.\n&gt;\n&gt;One notable problem was deciding on connection lengths, relative neuron\n&gt;positions for new genes etc. in relation to where all of the current\n&gt;neurons are in the decoded network. If you get this wrong then the\n&gt;system performs a very inefficient search of the search space, e.g.\n&gt;always connecting to the &#39;outer&#39; neurons at the ends of the 1D space.\n\nAt the moment I am addressing that by limiting all fIDs to a range of 0 - 1.\n\nAlso, for the boards, I start the system with the 4 build-in boards (mine, \nyours, empty, our-of-range) positioned evenly through the range (.125, \n.375, .625, .875) so I know there are no outrageously large gaps...\n\n&gt;I can&#39;t say whether this works due to other problems with my set up, but\n&gt;it&#39;s definitely something I would like to get back to someday if I get time.\n\n         It&#39;s good to know that great minds continue to think alike :)\n\n         This idea of offsetting the fIDs to give local connections and \nmodularity is one that I haven&#39;t considered so much.  I have considered a \nplan where nested data structures use multiple fIDs to identify the \nseparate parts.  e.g. if we have something roughtly equivalent to:\n\nstruct Coord {\n         float x;\n         float y;\n         float z;\n};\n\n         Then a fID on the outer item (the Coord) identifies it as a \ncoordinate, and separate fIDs on the x, y and z identify them.\n\n         Whether in this scheme you need fIDs for &quot;name&quot; as well as &quot;type&quot; \nI do not yet know (e.g. my_pos and your_pos are both &quot;coords&quot; but that \ndoesn&#39;t mean no system would need to distinguish between them).\n\n         I have gone into this in some detail in the Manifesto for Evolving \nAgents.  I&#39;ve put that on hold for a while so I can work on SLEAT, but I \nstill intend to finish it one day :)\n\n         Ian\n\n\nIn fifteen minutes, everybody will be in the future.\n\n\n\n\t\t\n___________________________________________________________ \nTo help you stay safe and secure online, we&#39;ve developed the all new Yahoo! Security Centre. http://uk.security.yahoo.com\r\n\n"}}