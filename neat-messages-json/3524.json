{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":320626171,"authorName":"Wael","from":"&quot;Wael&quot; &lt;lepacha@...&gt;","profile":"welyweah","replyTo":"LIST","senderId":"0bbVauaUDqHT7FgSGCECTf-B7cO3x1APSdXnTeT6EgEnp4rBCg164KdYQ-bCdUJR5e4vmWx9GLqpzP-7jsS0C6k","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Need Help","postDate":"1187287139","msgId":3524,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZhMjM5Mys3aTN1QGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":3525,"prevInTime":3523,"nextInTime":3525,"topicId":3524,"numMessagesInTopic":5,"msgSnippet":"I am developing an ANN for a smart card platform, which is from experience, the worst to work with, its tedious and very restricted. I am trying to implement","rawEmail":"Return-Path: &lt;lepacha@...&gt;\r\nX-Sender: lepacha@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 40446 invoked from network); 16 Aug 2007 17:59:54 -0000\r\nReceived: from unknown (66.218.66.68)\n  by m36.grp.scd.yahoo.com with QMQP; 16 Aug 2007 17:59:54 -0000\r\nReceived: from unknown (HELO n17a.bullet.scd.yahoo.com) (66.94.237.46)\n  by mta11.grp.scd.yahoo.com with SMTP; 16 Aug 2007 17:59:54 -0000\r\nReceived: from [66.218.69.1] by n17.bullet.scd.yahoo.com with NNFMP; 16 Aug 2007 17:59:00 -0000\r\nReceived: from [66.218.66.81] by t1.bullet.scd.yahoo.com with NNFMP; 16 Aug 2007 17:58:59 -0000\r\nDate: Thu, 16 Aug 2007 17:58:59 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;fa2393+7i3u@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Wael&quot; &lt;lepacha@...&gt;\r\nSubject: Need Help\r\nX-Yahoo-Group-Post: member; u=320626171; y=jIJxLlKadatayHkK1CDLZRmF4gAMjMtkusz-gcGq5XT_Op8\r\nX-Yahoo-Profile: welyweah\r\n\r\nI am developing an ANN for a smart card platform, which is from\nexperience,=\r\n the worst to work with, its tedious and very restricted. I\nam trying to im=\r\nplement an ANN to learn the XOR function, i can only\nuse shorts or  integer=\r\ns. i designed it on a pc, and it used to work\nfine until i changed everythi=\r\nng to integer, it stopped giving the\nright results. it should learn the XOR=\r\n function which it used to do\nwith double or float weights. i am using a ta=\r\nnh activation function,\nwhich i know will not work with the Integer weights=\r\n. Below is my code\nits short, can any one help please with this. i think i =\r\nneed the right\nactivation function. or may be i have some other bugs, pleas=\r\ne let me\nknow if u can spot any....\n\n\nimport java.lang.Math;\nimport java.ut=\r\nil.*;\nimport java.io.*;\nimport java.lang.*;\n\npublic class JavaMLP\n{\n\n //use=\r\nr defineable variables\n public static int numEpochs =3D 500;   //number of =\r\ntraining cycles\n public static int numInputs  =3D 3;    //number of inputs =\r\n- this\nincludes the input bias\n public static int numHidden  =3D 4;    //nu=\r\nmber of hidden units\n public static int numPatterns =3D 4;   //number of tr=\r\naining patterns\n\n\n //process variables\n public static int patNum;\n public s=\r\ntatic int errThisPat;\n public static int outPred;\n \n \n\n //training data\n\n p=\r\nublic static int [] Inputs =3D new int [12];\n\n public static int [] Output =\r\n=3D new int[numPatterns];\n\n //the outputs of the hidden neurons\n public sta=\r\ntic int [] hiddnValue  =3D new int [numHidden];\n\n //the weights\n public sta=\r\ntic int [] weghtsInH =3D new int [12];\n\n public static int [] weghtsOutH =\r\n=3D new int [numHidden];\n\n\n//=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n//******=\r\n**** THIS IS THE MAIN PROGRAM **************************\n//=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D\n\n public static void main(String[] args) throws IOExc=\r\neption {\n\t\tBufferedReader in =3D new BufferedReader(new\nInputStreamReader(S=\r\nystem.in));\n\t\t\n  // intialize user&#39;s secret data\n \n  //initiate the weights=\r\n\n  initWeights();\n\n  //load in the data\n  initData();\n    \n  //train the ne=\r\ntwork\n    for(int j =3D 0;j &lt;=3D numEpochs;j++)\n    {\n        for(int i =3D=\r\n 0;i&lt;numPatterns;i++)\n        {\n\n            //select a pattern at random\n =\r\n           patNum =3D (int)((Math.random()*numPatterns)-0.001);\n           =\r\n //System.out.println( &quot;************&quot; +patNum +\n&quot;*****************&quot;);\n\n    =\r\n        //calculate the current network output\n            //and error for =\r\nthis pattern\n            calcNet();\n\n            //change network weights\n =\r\n           WeightChangesOutH();\n            WeightChangesInH();\n        }\n\n=\r\n    }\n\n    //training has finished\n    //display the results\n    displayRes=\r\nults();\n      \n }\n\n//=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n//********** END OF THE=\r\n MAIN PROGRAM **************************\n//=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D\n\n\n//************************************\npublic static void calcNet()\n =\r\n{\n \tint t =3D 0;\n    //calculate the outputs of the hidden neurons\n    //th=\r\ne hidden neurons are tanh\n    for(int i =3D 0;i&lt;numHidden;i++)\n    {\n    \t\n=\r\n\thiddnValue[i] =3D 0;\n\n        for(int j =3D 0;j&lt;numInputs;j++)\n        {\n =\r\n       \tt =3D ((3*i)+j);\n        \thiddnValue[i] =3D (int)(hiddnValue[i] +\n(=\r\nint)((Inputs[(patNum*3)+j] * weghtsInH[t])));\t\n        }\n        hiddnValue=\r\n[i] =3D tanh(hiddnValue[i]);\n    }\n\n   //calculate the output of the networ=\r\nk\n   //the output neuron is linear\n   outPred =3D 0;\n\n   for(int i =3D 0;i&lt;=\r\nnumHidden;i++)\n    outPred =3D outPred + hiddnValue[i] * weghtsOutH[i];\n\n  =\r\n  //calculate the error\n    errThisPat =3D (int)(outPred - Output[patNum]);=\r\n\n }\n \n \n\n//************************************\n public static void WeightC=\r\nhangesOutH()\n //adjust the weights hidden-output\n {\n   for(int k =3D 0;k&lt;nu=\r\nmHidden;k++)\n   {\n    int weightChange =3D 7 * errThisPat * hiddnValue[k] /=\r\n 100;\n    weghtsOutH[k] =3D weghtsOutH[k] - weightChange;\n\n    //regularisa=\r\ntion on the output weights\n    if (weghtsOutH[k] &lt; -5)\n        weghtsOutH[k=\r\n] =3D -5;\n    else if (weghtsOutH[k] &gt; 5)\n        weghtsOutH[k] =3D 5;\n   }=\r\n\n }\n\n\n//************************************\n public static void WeightChan=\r\ngesInH()\n //adjust the weights input-hidden\n {\n \tint g=3D0;\n  for(int i =3D=\r\n 0;i&lt;numHidden;i++)\n  {\n   for(int k =3D 0;k&lt;numInputs;k++)\n   {\n    int x =\r\n=3D 1 - (hiddnValue[i] * hiddnValue[i]);\n    x =3D x * weghtsOutH[i] * errT=\r\nhisPat * 7 / 10;\n    x =3D(int) (x * Inputs[(patNum*3)+k]);\n    int weightC=\r\nhange =3D x;\n    g=3D((3*i)+k);\n    weghtsInH[g] =3D weghtsInH[g] - weightC=\r\nhange;\n    \n   }\n  }\n }\n \n//***********************************\n\n public st=\r\natic void initWeights()\n {\n  weghtsOutH[0] =3D -4276;\n  weghtsOutH[1] =3D 8=\r\n910;\n  weghtsOutH[2] =3D -3127;\n  weghtsOutH[3] =3D 1711;\n  \n  weghtsInH[0]=\r\n =3D -4393;\n  weghtsInH[1] =3D -1816;\n  weghtsInH[2] =3D 7144;\n  weghtsInH[=\r\n3] =3D 536;\n  weghtsInH[4] =3D -5010;\n  weghtsInH[5] =3D -1463;\n  weghtsInH=\r\n[6] =3D 6082;\n  weghtsInH[7] =3D -7693;\n  weghtsInH[8] =3D 3435;\n  weghtsIn=\r\nH[9] =3D 9213;\n  weghtsInH[10]=3D 4044;\n  weghtsInH[11]=3D 2009;\n  }\n \n \n \n=\r\n//************************************\n public static void initData()\n {\n\n =\r\n   System.out.println(&quot;initialising data&quot;);\n\n    // the data here is the XO=\r\nR data\n    // it has been rescaled to the range\n    // [-1][1]\n    // an ex=\r\ntra input valued 1 is also added\n    // to act as the bias\n\n    Inputs[0]  =\r\n=3D 1;\n    Inputs[1]  =3D -1;\n    Inputs[2]  =3D 1;//bias\n    Output[0]  =\r\n=3D 1;\n\n    Inputs[3]  =3D -1;\n    Inputs[4]  =3D 1;\n    Inputs[5]  =3D 1;/=\r\n/bias\n    Output[1]  =3D 1;\n\n    Inputs[6]  =3D 1;\n    Inputs[7]  =3D 1;\n  =\r\n  Inputs[8]  =3D 1;//bias\n    Output[2]  =3D -1;\n\n    Inputs[9]  =3D -1;\n  =\r\n  Inputs[10] =3D -1;\n    Inputs[11] =3D 1;//bias\n    Output[3]  =3D -1;\n\n\n =\r\n}\n\n\n//************************************\n public static int tanh(double x=\r\n)\n {\n    if (x &gt; 20)\n        return 1;\n    else if (x &lt; -20)\n        return=\r\n -1;\n    else\n        {\n        int a =3D (int)(Math.exp(x));\n        int b=\r\n =3D (int)(Math.exp(-x));\n        return (a-b)/(a+b);\n        }\n }\n\n\n//****=\r\n********************************\n public static void displayResults()\n    {=\r\n\n     for(int i =3D 0;i&lt;numPatterns;i++)\n        {\n        patNum =3D i;\n  =\r\n      calcNet();\n        System.out.println(&quot;pat =3D &quot; + (patNum+1) + &quot; act=\r\nual =3D &quot; +\nOutput[patNum] + &quot; neural model =3D &quot; + outPred);\n        }\n   =\r\n }\n\n//***************************************************************/*\n\n}\n=\r\n\n\n\n"}}