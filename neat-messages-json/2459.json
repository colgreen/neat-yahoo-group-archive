{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"zKegSqUKIpyoq57K12xCphbFMugT0uFErT1iAxjDpQkAHR5M3I5jfuCPmQRTWmguK9enVIRTwde-TFnITNL0w4Bw2p8D2XkxSfOonGUznx6b","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Terminology - Genome/Phenome super system","postDate":"1133860645","msgId":2459,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRuM2t2NSt2Y3A1QGVHcm91cHMuY29tPg==","inReplyToHeader":"PGFiNWU2ZmY3MDUxMjA1MTcwNmcxZTI5ZGJiY24zZmM2ZDMyZWM1OTk2MzBjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":2458,"nextInTopic":2461,"prevInTime":2458,"nextInTime":2460,"topicId":2451,"numMessagesInTopic":11,"msgSnippet":"I m probably also not fully following all the abstraction being discussed, but somewhere in the mix it sounds like Physics.  I mean Physics is the ultimate","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 80573 invoked from network); 6 Dec 2005 09:18:10 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m35.grp.scd.yahoo.com with QMQP; 6 Dec 2005 09:18:10 -0000\r\nReceived: from unknown (HELO n4a.bulk.scd.yahoo.com) (66.94.237.38)\n  by mta4.grp.scd.yahoo.com with SMTP; 6 Dec 2005 09:18:10 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [66.218.69.2] by n4.bullet.scd.yahoo.com with NNFMP; 06 Dec 2005 09:17:25 -0000\r\nReceived: from [66.218.66.78] by mailer2.bulk.scd.yahoo.com with NNFMP; 06 Dec 2005 09:17:25 -0000\r\nDate: Tue, 06 Dec 2005 09:17:25 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;dn3kv5+vcp5@...&gt;\r\nIn-Reply-To: &lt;ab5e6ff70512051706g1e29dbbcn3fc6d32ec599630c@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Terminology - Genome/Phenome super system\r\nX-Yahoo-Group-Post: member; u=54567749; y=KiJGxP2b8yH6MiKLW6kdtFneLrzoTBg_dEq9Kwrs7WdXb2zi4Djv\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nI&#39;m probably also not fully following all the abstraction being \ndiscussed,=\r\n but somewhere in the mix it sounds like &quot;Physics.&quot;  I \nmean Physics is the=\r\n ultimate abstraction of all mapping processes, \nsince they all follow ulti=\r\nmately the laws of physics.  \nUnfortunately, I don&#39;t think that necessary h=\r\nelps at all with \ndeciding how to do this from an efficient coding standpoi=\r\nnt.  Oh \nwell!\n\nBy the way after reading this thread I have been pondering =\r\nin \namazement how I made it through grad school without ever saying or \nwri=\r\nting the word &quot;phenome.&quot;  \n\nken\n\n--- In neat@yahoogroups.com, Philip Tucker=\r\n &lt;ptucker@g...&gt; wrote:\n&gt;\n&gt; Hi Colin,\n&gt; \n&gt; If I&#39;m understanding you correctl=\r\ny, you want an implementation of \nsupernome\n&gt; to contain the logic for crea=\r\nting a phenome from a genome (the \nDecode\n&gt; method) and the fitness functio=\r\nn logic for assigning a score to \nthat\n&gt; individual each generation (Evalua=\r\nte method).  Personally, I \nwouldn&#39;t couple\n&gt; these together like this.\n&gt; \n=\r\n&gt; For one thing, it seems to me this would make coevolution very \nawkward. =\r\n For\n&gt; coevolution, the fitness evaluation function needs visibility to \nal=\r\nl the\n&gt; genomes, not just one.\n&gt; \n&gt; For another, I&#39;ve found that the same f=\r\nitness evaluation function \ncan be\n&gt; reused for multiple genome/phenome enc=\r\noding schemes.  For example, \nwe&#39;re\n&gt; working on roshambo right now.  The f=\r\nitness evaluation function is \nvery\n&gt; simple: it iterates over some number =\r\nof steps where each phenome \nchooses\n&gt; rock|scissors|paper and assigns a wi=\r\nnner.  But, we have multiple \nencoding\n&gt; schemes where the phenome player h=\r\nas different numbers of inputs \nand\n&gt; outputs.  The simplest scenario input=\r\ns only the previous move, \nmore complex\n&gt; ones input a set number of previo=\r\nus moves, or allow for the player \nto scan\n&gt; the full history of moves.\n&gt; \n=\r\n&gt; Also, if you separate the fitness evaluation logic from the \nencoding sch=\r\neme,\n&gt; it makes it easier to plug in non-phenome participants into the \neva=\r\nluation\n&gt; population.  For example, with roshambo we have several hand-code=\r\nd \nplayers\n&gt; who compete with the phenomes in a tournament structure each \n=\r\ngeneration.\n&gt; \n&gt; As far as descriptive names go, we&#39;ve chosen the \nterm &quot;tr=\r\nanscription&quot; to\n&gt; refer to what you call &quot;decode&quot;; i.e., creating a neural =\r\nnetwork \nand the\n&gt; structure necessary to plug it into the environment.  Al=\r\nso, we&#39;ve \nbeen using\n&gt; &quot;genotype&quot; and &quot;phenotype&quot; for what you call &quot;genom=\r\ne&quot; \nand &quot;phenome&quot; - not\n&gt; much difference.\n&gt; \n&gt; - Philip\n&gt; \n&gt; On 12/5/05, C=\r\nolin Green &lt;cgreen@d...&gt; wrote:\n&gt; &gt;\n&gt; &gt; Ian Badcoe wrote:\n&gt; &gt;\n&gt; &gt; &gt;Hi Colin=\r\n,\n&gt; &gt; &gt;\n&gt; &gt; &gt;         Can you explain a little more what you mean by generi=\r\nc \nin\n&gt; &gt; &gt;this instance.  e.g. can you give examples of how \nimplementatio=\r\nns of\n&gt; &gt; &gt;those interfaces might vary, when different versions would be \nu=\r\nsed,\n&gt; &gt; &gt;whether different versions would be expected to talk to one \nanot=\r\nher...\n&gt; &gt; &gt;\n&gt; &gt; &gt;         Remember we use a variety of different languages=\r\n and \nthe\n&gt; &gt; &gt;exact meaning of some terms (e.g. &quot;interface&quot; may vary a \nli=\r\nttle).\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; These are fixed code/class interfaces I&#39;m talk=\r\ning about here. So \nas an\n&gt; &gt; example I might have interfaces defined as fo=\r\nllows (partly taken \nfrom my\n&gt; &gt; existing code):\n&gt; &gt;\n&gt; &gt; IGenome\n&gt; &gt; {\n&gt; &gt; =\r\n    // Some functions common to all genomes.\n&gt; &gt;     IGenome CreateOffsprin=\r\ng_Asexual();\n&gt; &gt;     IGenome CreateOffspring_Sexual(IGenome parent);\n&gt; &gt; }\n=\r\n&gt; &gt;\n&gt; &gt; INetwork or IPhenome\n&gt; &gt; {\n&gt; &gt;     void SetInputSignals(double[] si=\r\ngnalArray);\n&gt; &gt;     void SingleActivation();\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt; The problem is t=\r\nhat I currently have a NeatGenome class that \nimplements\n&gt; &gt; IGenome, but i=\r\nn actual fact there are a few points in the code \nwhere I\n&gt; &gt; really need t=\r\no get access to data specific to a NeatGenome in \norder to\n&gt; &gt; do things su=\r\nch as decoding it into a neural net. After all the \nwhole\n&gt; &gt; project is ba=\r\nsed around NEAT (at the moment). So basically my \ninitial\n&gt; &gt; half hearted =\r\nattempt at abstracting away what a genome is and \nwhat a\n&gt; &gt; phenome is jus=\r\nt wasn&#39;t going to work, and in fact it can&#39;t be \ndone at\n&gt; &gt; that level bec=\r\nause to decode a genome into a phenome you must \nknow how\n&gt; &gt; the genome is=\r\n describing the phenome!\n&gt; &gt;\n&gt; &gt; E.g. Consider the case where I want a new =\r\ngenome [C# code] class \nthat\n&gt; &gt; instead of describing graphs of nodes (lik=\r\ne the traditional NEAT \ngenome)\n&gt; &gt; it describes a surface(say for the wing=\r\n on an airoplane or \nsometing) by\n&gt; &gt; way of a load of parameters into some=\r\n fixed mathematical \nfunction, to\n&gt; &gt; decode this (convert the parameters i=\r\nnto a surface) I need to \nread the\n&gt; &gt; data out of the genome and apply the=\r\nm to the function, I then \nget my\n&gt; &gt; phenome (the actual surface).\n&gt; &gt;\n&gt; &gt;=\r\n So I figure I&#39;m just going to move the abstraction up a level, \nso we end\n=\r\n&gt; &gt; up with something like:\n&gt; &gt;\n&gt; &gt; ISupernome\n&gt; &gt; {\n&gt; &gt;     IPhenome Decod=\r\ne(IGenome genome);\n&gt; &gt;     double Evaluate(IPhenome phenome);\n&gt; &gt; }\n&gt; &gt;\n&gt; &gt;=\r\n ok so in this example, within the decode function we still have \nto cast\n&gt;=\r\n &gt; from IGenome to the specific genome class to do the decoding, I \nhaven&#39;t=\r\n\n&gt; &gt; gone into the implementation details yet. The point is that all \nof th=\r\ne\n&gt; &gt; genome/phenome specific code (specifically decoding, but maybe \nother=\r\n\n&gt; &gt; stuff as well) is encapsulated in one code class (a specific \nsupernom=\r\ne)\n&gt; &gt; that implements an interface common to all supernomes \n(ISupernome) =\r\nwhich\n&gt; &gt; can be plugged into the core SharpNEAT algorithm (which takes \nca=\r\nre of\n&gt; &gt; speciation, selecting individuals for mating, etc).\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; T=\r\nhe hope would be that I could then define a genome class for \nstandard\n&gt; &gt; =\r\nNEAT, one for for tree based GP, one for graph based GP, one for\n&gt; &gt; modula=\r\nr-NEAT, etc. So the core algorithm is just a general \npurpose\n&gt; &gt; evolution=\r\nary search code library, which makes me think I should \ncheck\n&gt; &gt; some exis=\r\nting evolutionary computing code libraries to see how \nthey are\n&gt; &gt; arrange=\r\nd.\n&gt; &gt;\n&gt; &gt; Colin.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt;=\r\n &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; \n&gt; \n&gt; --\n&gt; Philip Tucker\n&gt; ptucker@g...\n&gt;\n\n\n\n\n=\r\n\n"}}