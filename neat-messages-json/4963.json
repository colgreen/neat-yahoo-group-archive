{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":351262845,"authorName":"Anthony Ison","from":"&quot;Anthony Ison&quot; &lt;anthony.ison@...&gt;","profile":"isonaj","replyTo":"LIST","senderId":"8LN91Tu1acjwh-2Cn5eYWi2ZZfn7BrvIfwU-1MqqsHWOzzuffXCB9Od6ctl7gnJBBhjR9FuNa43PLhLhQ0Ulh7ZJyFFHsXl5zV1CR3d3udkRjXxOdnu7HQJt_YE","spamInfo":{"isSpam":false,"reason":"3"},"subject":"RE: [neat] Re: HyperNEAT Tutorial?","postDate":"1259633723","msgId":4963,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEE5ODRCM0YxNUFEMDU0NDlBQTNDRDMxNEY2QkQ1Q0NFRUY3QUU3QGJuZXhjaDAyLmJuZTJrLmxvYz4=","inReplyToHeader":"PGhmMXFjZCt1dGJ2QGVHcm91cHMuY29tPg==","referencesHeader":"PEE5ODRCM0YxNUFEMDU0NDlBQTNDRDMxNEY2QkQ1Q0NFRUNCQTJBQGJuZXhjaDAyLmJuZTJrLmxvYz4gPGhmMXFjZCt1dGJ2QGVHcm91cHMuY29tPg=="},"prevInTopic":4962,"nextInTopic":4970,"prevInTime":4962,"nextInTime":4964,"topicId":4884,"numMessagesInTopic":21,"msgSnippet":"Thanks Jason. I now understand that HyperNEAT is far more complicated than I originally thought.  I was picturing 2D similar to PicBreeder when I pictured a","rawEmail":"Return-Path: &lt;Anthony.Ison@...&gt;\r\nX-Sender: Anthony.Ison@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 10701 invoked from network); 1 Dec 2009 02:15:26 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m4.grp.sp2.yahoo.com with QMQP; 1 Dec 2009 02:15:26 -0000\r\nX-Received: from unknown (HELO mail.worldsmartretech.com.au) (203.122.238.33)\n  by mta1.grp.sp2.yahoo.com with SMTP; 1 Dec 2009 02:15:25 -0000\r\nContent-class: urn:content-classes:message\r\nMIME-Version: 1.0\r\nContent-Type: multipart/related;\n\tboundary=&quot;----_=_NextPart_001_01CA722C.2383F338&quot;;\n\ttype=&quot;multipart/alternative&quot;\r\nDate: Tue, 1 Dec 2009 12:15:23 +1000\r\nMessage-ID: &lt;A984B3F15AD05449AA3CD314F6BD5CCEEF7AE7@...&gt;\r\nX-MimeOLE: Produced By Microsoft Exchange V6.5\r\nIn-Reply-To: &lt;hf1qcd+utbv@...&gt;\r\nX-MS-Has-Attach: yes\r\nX-MS-TNEF-Correlator: \r\nThread-Topic: [neat] Re: HyperNEAT Tutorial?\r\nThread-Index: AcpyI160TKojAi2gTYuf3rPjMicUrQACCrhw\r\nReferences: &lt;A984B3F15AD05449AA3CD314F6BD5CCEECBA2A@...&gt; &lt;hf1qcd+utbv@...&gt;\r\nTo: &lt;neat@yahoogroups.com&gt;\r\nX-eGroups-Msg-Info: 2:3:4:0:0\r\nFrom: &quot;Anthony Ison&quot; &lt;anthony.ison@...&gt;\r\nSubject: RE: [neat] Re: HyperNEAT Tutorial?\r\nX-Yahoo-Group-Post: member; u=351262845; y=YC9eRe2Fr3o4PZ1HQiE4ybVtStncbyk_l5SrjvZpRNqo\r\nX-Yahoo-Profile: isonaj\r\n\r\n\r\n------_=_NextPart_001_01CA722C.2383F338\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----_=_NextPart_002_01CA722C.2383F338&quot;\r\n\r\n\r\n------_=_NextPart_002_01CA722C.2383F338\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nThanks Jason.\n\n \n\nI now understand that HyperNEAT is far more complicated t=\r\nhan I originally thought.  I was picturing 2D similar to PicBreeder when I =\r\npictured a CPPN.  I still don&#39;t fully understand, but I think I&#39;m a lot clo=\r\nser.  It&#39;s been 10 years since uni and my brain can&#39;t cope with 4-D as well=\r\n as it once did.\n\n \n\nI originally steered away from the C++ code as I am mo=\r\nre familiar with C#, though now I realise the experiments used in each are =\r\ndifferent.  I&#39;ll start with the currently available code and eagerly await =\r\nyour next release.\n\n \n\nKind regards,\n\nAnthony\n\n \n\nFrom: jgmath2000 [mailto:=\r\njgmath2000@...] \nSent: Tuesday, 1 December 2009 11:10 AM\nTo: neat@yah=\r\noogroups.com\nSubject: [neat] Re: HyperNEAT Tutorial?\n\n \n\n  \n\nHey Anthony,\n\n=\r\nI believe that the current HyperNEAT C++ distributable contains the Checker=\r\ns experiment. I&#39;ve been spending the past few days packaging up a new versi=\r\non of HyperNEAT C++ that includes a visualizer and a much more streamlined =\r\n(and documented) CPPN implementation that should clear up a lot of loose en=\r\nds with respect to the algorithm. When the new version is out, I will defin=\r\nitely post an announcement to the group.\n\nIn the meantime, hopefully I can =\r\nclear up some of your questions regarding HyperNEAT:\n\nThe &quot;Hyper&quot; in HyperN=\r\nEAT is tied to the CPPN. In the same way that PicBreeder allows users to ev=\r\nolve 2-D images, a CPPN is an evolved 4-D image. Instead of drawing the pix=\r\nels to the screen or something like that, the pixels are translated into co=\r\nnnection weights. Thus, in the same way that PicBreeder paints a square (2-=\r\nD) by querying the CPPN, HyperNEAT paints a Hypercube (4-D) of connection w=\r\neights (hence the term HyperNEAT). Once the substrates are created and eval=\r\nuated, the CPPNs are modified using NEAT and the process repeats. Hopefully=\r\n this explains where the &quot;Hyper&quot; ends and the &quot;NEAT&quot; begins. \n\nThere are tw=\r\no ways a CPPN can encode (represent) a substrate. Take the checkers experim=\r\nent for example, I chose to represent the substrate as three sheets. As you=\r\n noted correctly, the &quot;A&quot; sheet is populated based on the current board bei=\r\nng evaluated. However, the &quot;B&quot; sheet is a hidden layer used for computation=\r\n, not the substrate. The substrate is actually the entire structure with al=\r\nl sheets. The &quot;C&quot; sheet contains a single node because I want a single outp=\r\nut to decide how winning the board is for black. You can think of the &quot;A&quot; s=\r\nheet as the sensors and the &quot;C&quot; sheet as the output. It is easily possible =\r\nto have an array of outputs, just as the checkers domain has an array of in=\r\nputs. Using this multi-sheet model, the CPPN has multiple outputs, one for =\r\nevery sheet. In other words, you input a source (x1,y1) and destination (x2=\r\n,y2) position to the CPPN, and the CPPN outputs the link weights for every =\r\nconnection layer (hence the AB and BC outputs on the CPPN).\n\nThere is a sec=\r\nond way to encode a substrate, and that is to use a single sheet. In the ca=\r\nse of checkers, you could use a single 3-D sheet to represent the entire su=\r\nbstrate, and define (x,y,-1) to be the inputs and (0,0,1) to be the output =\r\nnode. Doing this, one could have a CPPN which takes source (x1,y1,z1) and d=\r\nestination (x2,y2,z2) position to the CPPN, and output the connection weigh=\r\nt. The end result is a &quot;soup&quot; of connectivity between the inputs and output=\r\ns.\n\nI hope this clarifies the CPPN -&gt; substrate process.\n\nJason G.\n\n--- In =\r\nneat@yahoogroups.com &lt;mailto:neat%40yahoogroups.com&gt; , &quot;Anthony Ison&quot; &lt;anth=\r\nony.ison@...&gt; wrote:\n&gt;\n&gt; Thanks for the reply Ken.\n&gt; \n&gt; \n&gt; \n&gt; I have indeed=\r\n been over the HyperNEAT Users page a number of times. I&#39;ve read many of th=\r\ne papers that are linked, but there&#39;s still something that&#39;s not quite jump=\r\ning out at me. I&#39;ve been trying to determine exactly what it is.\n&gt; \n&gt; \n&gt; \n&gt;=\r\n The checkers game seems to be the ideal example for HyperNEAT. (and to be =\r\nhonest, I still don&#39;t understand where Hyper ends and NEAT begins)\n&gt; \n&gt; I t=\r\nhink it&#39;s the 2 images at the top of the page. From the first, I can tell t=\r\nhere is something called a Substrate that covers an area from (-1,-1) to (1=\r\n, 1). I assume the number of rows and columns is customizable (depending on=\r\n chosen geometry) and each &quot;input node&quot; has an implied connection to every =\r\nother &quot;input node&quot;. In the case of the checkers game, there are 64 inputs w=\r\nith a total of 64x64 (4096) connections (assuming -1,-1 -&gt; -1,-1 makes sens=\r\ne).\n&gt; \n&gt; \n&gt; \n&gt; The CPPN (which is the learning part) and the Substrate (the=\r\n designed part) together produce a network (somehow). Is it always a single=\r\n output node? Where does the network structure come from? Is it the CPPN?\n&gt;=\r\n \n&gt; \n&gt; \n&gt; I must admit, I have no idea what the second image is trying to t=\r\nell me. I can see that we are applying HyperNEAT to the checkers problem. I=\r\n can see that we have an 8x8 Substrate to match the layout of the board. A =\r\nis the checkers board, B is the Substrate and C, I assume is a roving eye t=\r\nhat can query each location on the board (though I suspect I only know that=\r\n from a paper I&#39;ve read at some point). Is C another Substrate?\n&gt; \n&gt; \n&gt; \n&gt; =\r\nI don&#39;t understand the part in the middle of the second image: Inputs: Coor=\r\ndinates and Outputs: Connection Weights.\n&gt; \n&gt; \n&gt; \n&gt; I guess at the end of t=\r\nhe day, I&#39;m expecting some output that is a network with a predefined numbe=\r\nr of inputs and outputs. I&#39;m also assuming that the number of inputs will m=\r\natch the &quot;input nodes&quot; defined in the Substrate and the number of output no=\r\ndes will be ... I&#39;m not sure. One?\n&gt; \n&gt; \n&gt; \n&gt; Anyways, sorry about the wall=\r\n of text. I&#39;m hoping that by explaining what I&#39;m seeing, you may be able to=\r\n point out what part I&#39;m muddling up.\n&gt; \n&gt; \n&gt; \n&gt; Is there perhaps some code=\r\n available that solves the checkers problem?\n&gt; \n&gt; \n&gt; \n&gt; Thanks in advance,\n=\r\n&gt; \n&gt; Anthony\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; From: Ken [mailto:kstanley@...] \n&gt; Sent: Sund=\r\nay, 29 November 2009 8:00 AM\n&gt; To: neat@yahoogroups.com &lt;mailto:neat%40yaho=\r\nogroups.com&gt; \n&gt; Subject: [neat] Re: HyperNEAT Tutorial?\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt;=\r\n \n&gt; Anthony,\n&gt; \n&gt; We are hoping to make the HyperNEAT Users Page at http://=\r\neplex.cs.ucf.edu/hyperNEATpage/HyperNEAT.html into a place where people can=\r\n have questions like yours answered. The &quot;Introduction / What is HyperNEAT?=\r\n&quot; section on that page is intended to provide some general answers to begin=\r\nners without having to read a research paper. Did that section help you at =\r\nall? I&#39;d like to make the page as useful as possible and we will continue t=\r\no improve it.\n&gt; \n&gt; To answer your question, HyperNEAT is a significant step=\r\n beyond NEAT so it involves a lot of new ideas that aren&#39;t part of the orig=\r\ninal NEAT. Some of those concepts can theoretically be applied on top of no=\r\nn-NEAT methods. For example, in the following paper, NEAT is substituted wi=\r\nth GP to create a &quot;HyperGP,&quot; in which GP evolves the CPPN:\n&gt; \n&gt; Buk Z., Kou=\r\ntn=EF=BF=BDk J., =EF=BF=BDnorek M., NEAT in HyperNEAT Substituted with Gene=\r\ntic Programming, In: ICANNGA 2009. \n&gt; http://cig.felk.cvut.cz/research/publ=\r\nications/hypergp.pdf\n&gt; \n&gt; That said, HyperNEAT addresses a limitation of NE=\r\nAT, which is a limitation of all direct encodings: In NEAT, there is one ge=\r\nne for every connection in the network. Even with complexification, that ki=\r\nnd of representation cannot hope to scale to networks with millions or more=\r\n connections, because such networks would have millions or more genes, whic=\r\nh is an astronomical search space. \n&gt; \n&gt; However, there are in fact 100 tri=\r\nllion connections in the human brain, which means that in principle it is p=\r\nossible to evolve such structures. Yet there are only about 30,000 genes in=\r\n the human genome, which suggests that any evolutionary approach to evolvin=\r\ng large-scale neural networks must encode the connection weights in a compr=\r\nessed description, which is called an indirect encoding.\n&gt; \n&gt; In HyperNEAT,=\r\n the indirect encoding is the CPPN, which encodes the connectivity of a net=\r\nwork as a pattern across its geometry. HyperNEAT combines the idea of indir=\r\nect encoding with a strong notion of geometry and builds on our understandi=\r\nng of encoding patterns to produce an algorithm that encodes large-scale to=\r\npographies (i.e. connection weights across a geometry). Thus it extends NEA=\r\nT by giving it the power of indirect encoding, thereby greatly expanding th=\r\ne scope of networks it can evolve.\n&gt; \n&gt; Of course NEAT is still there under=\r\n the hood. NEAT is evolving the CPPNs, which in turn encode neural networks=\r\n (called substrates in HyperNEAT). The CPPNs themselves are still complexif=\r\nying. However, that complexification is no longer literally adding one conn=\r\nection at a time to a neural network. Rather it is adding *information* to =\r\nthe encoding, so that it can encode more complex *holistic* connectivity pa=\r\ntterns. In other words, HyperNEAT means that evolution is no longer limited=\r\n by the dimensionality of the inputs and outputs but rather can search for =\r\nthe correct implicit problem complexity, whatever that may be, inside the C=\r\nPPN. The substrate (which the CPPN encodes) will then have as many connecti=\r\nons as it needs, in principle up to millions or even trillions (with enough=\r\n CPU power).\n&gt; \n&gt; It is true that geometry may be vague or difficult to dec=\r\nide in some problems. Those may be more difficult for users to approach wit=\r\nh HyperNEAT. Yet I think most if not all problems can ultimately be posed w=\r\nithin some geometry, even if it is abstract or conceptual. As Jeff Clune ha=\r\ns shown (https://www.msu.edu/~jclune/webfiles/publications/Clune-HyperNEATS=\r\nensitivityToGeometry.pdf), geometry does not need to be perfect, or necessa=\r\nrily even close to perfect, for HyperNEAT to still find some regularities t=\r\no exploit, so while it may be an imperfect art, geometry is still ultimatel=\r\ny a useful tool for conveying exploitable information about a domain.\n&gt; \n&gt; =\r\nI hope that provides some insight,\n&gt; \n&gt; ken\n&gt; \n&gt; --- In neat@...=\r\nm &lt;mailto:neat%40yahoogroups.com&gt;  &lt;mailto:neat%40yahoogroups.com&gt; , &quot;Antho=\r\nny Ison&quot; &lt;anthony.ison@&gt; wrote:\n&gt; &gt;\n&gt; &gt; I&#39;d like to add my vote to some kin=\r\nd of non-research style tutorial -\n&gt; &gt; especially towards the HyperNEAT met=\r\nhodology.\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Is there somewhere I can get an overview of ho=\r\nw the CPPN is actually\n&gt; &gt; used and what it does? I&#39;ve looked through a num=\r\nber of papers on the\n&gt; &gt; main HyperNEAT site, but I feel like I&#39;m missing s=\r\nomething. I have read\n&gt; &gt; that HyperNEAT is the future of NEAT - does this =\r\napply to problems where\n&gt; &gt; there is no useful input geometry? I understand=\r\n how NEAT grows a\n&gt; &gt; network by adding nodes and connections and overall I=\r\n love the concept.\n&gt; &gt; It makes sense that a learning network can adjust it=\r\nself to improve its\n&gt; &gt; performance. What I don&#39;t really understand is how =\r\na CPPN is involved\n&gt; &gt; in this process. \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Is anyone able =\r\nto give a short overview on what HyperNEAT offers over\n&gt; &gt; NEAT?\n&gt; &gt; \n&gt; &gt; \n=\r\n&gt; &gt; \n&gt; &gt; Cheers,\n&gt; &gt; \n&gt; &gt; Anthony\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; From: dkuppi=\r\ntz [mailto:daniel_kuppitz@] \n&gt; &gt; Sent: Monday, 23 November 2009 9:08 AM\n&gt; &gt;=\r\n To: neat@yahoogroups.com &lt;mailto:neat%40yahoogroups.com&gt;  &lt;mailto:neat%40y=\r\nahoogroups.com&gt; \n&gt; &gt; Subject: [neat] Re: HyperNEAT Tutorial?\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; =\r\n\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; Hello Ken,\n&gt; &gt; \n&gt; &gt; here&#39;s just another vote for a tutorial,=\r\n with the difference that I\n&gt; &gt; would prefer it for HyperSharpNEAT.\n&gt; &gt; \n&gt; =\r\n&gt; It would be great to see something like a HOL (Hands on Labs) where a\n&gt; &gt;=\r\n new experiment is created from the scratch. Parameters should be\n&gt; &gt; expla=\r\nined in detail, for example: Which impact has the parameter\n&gt; &gt; Treshold, w=\r\nhich impact has WeightRange, etc.? How are the values for\n&gt; &gt; each paramete=\r\nr determined, what is taken into account when you set the\n&gt; &gt; values? There=\r\n are so many unanswered questions for those who are new to\n&gt; &gt; HyperNEAT an=\r\nd I think most people (including me) have a really great\n&gt; &gt; interest in th=\r\nis topic, but not the time to read (and understand) all\n&gt; &gt; the technical p=\r\napers. So any tutorial should target beginners and\n&gt; &gt; explain things that =\r\nhave become self-evident for intermediates. \n&gt; &gt; \n&gt; &gt; I think one such &quot;off=\r\nicial&quot; tutorial that explains every step in detail\n&gt; &gt; should be enough, mo=\r\nre will surely follow from the growing community.\n&gt; &gt; \n&gt; &gt; Cheers,\n&gt; &gt; Dani=\r\nel\n&gt; &gt; \n&gt; &gt; --- In neat@yahoogroups.com &lt;mailto:neat%40yahoogroups.com&gt;  &lt;m=\r\nailto:neat%40yahoogroups.com&gt; &lt;mailto:neat%40yahoogroups.com&gt; , &quot;Ken&quot;\n&gt; &gt; &lt;=\r\nkstanley@&gt; wrote:\n&gt; &gt; &gt;\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; Andrei, which version of HyperN=\r\nEAT are you interested in and what\n&gt; &gt; references have you looked at so far=\r\n? We can potentially improve the\n&gt; &gt; documentation based on your comments (=\r\nand a tutorial is a good idea),\n&gt; &gt; but first I want to understand which &quot;c=\r\nomment-less examples&quot; you are\n&gt; &gt; referring to.\n&gt; &gt; &gt; \n&gt; &gt; &gt; Note that seve=\r\nral experiments with complete source code are available\n&gt; &gt; in two existing=\r\n HyperNEAT releases of which I am aware. These and a\n&gt; &gt; variety of publica=\r\ntions from several groups are linked from the\n&gt; &gt; HyperNEAT Users Page, whi=\r\nch also provides a brief introduction:\n&gt; &gt; &gt; \n&gt; &gt; &gt; http://eplex.cs.ucf.edu=\r\n/hyperNEATpage/HyperNEAT.html\n&gt; &gt; &gt; \n&gt; &gt; &gt; I understand you may have alread=\r\ny been through this site and its\n&gt; &gt; associated software and papers, but I =\r\nwanted to point it out in case you\n&gt; &gt; had not been aware of it.\n&gt; &gt; &gt; \n&gt; &gt;=\r\n &gt; We want to make the algorithm as accessible as possible so your\n&gt; &gt; comm=\r\nents are appreciated.\n&gt; &gt; &gt; \n&gt; &gt; &gt; ken\n&gt; &gt; &gt; \n&gt; &gt; &gt; --- In neat@yahoogroups=\r\n.com &lt;mailto:neat%40yahoogroups.com&gt;  &lt;mailto:neat%40yahoogroups.com&gt; &lt;mail=\r\nto:neat%40yahoogroups.com&gt; , &quot;Andrei&quot;\n&gt; &gt; &lt;andrei.rusu@&gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt; &gt;=\r\n &gt; &gt; Can anyone please recommend some HyperNEAT documentation, a\n&gt; &gt; tutori=\r\nal, diagram, some clue, or anything that does not mean reverse\n&gt; &gt; engineer=\r\ning the comment-less examples ?\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Thanks! Andrei.\n&gt; &gt; &gt; &gt;\n&gt; =\r\n&gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n\r\n------_=_NextPart_002_01CA722C.2383F338\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html xmlns:v=3D&quot;urn:schemas-microsoft-com:vml&quot; xmlns:o=3D&quot;urn:schemas-micr=\r\nosoft-com:office:office&quot; xmlns:w=3D&quot;urn:schemas-microsoft-com:office:word&quot; =\r\nxmlns:m=3D&quot;http://schemas.microsoft.com/office/2004/12/omml&quot; xmlns=3D&quot;http:=\r\n//www.w3.org/TR/REC-html40&quot;&gt;\n\n&lt;head&gt;\n&lt;meta http-equiv=3DContent-Type conten=\r\nt=3D&quot;text/html; charset=3Diso-8859-1&quot;&gt;\n&lt;meta name=3DGenerator content=3D&quot;Mi=\r\ncrosoft Word 12 (filtered medium)&quot;&gt;\n&lt;!--[if !mso]&gt;\n&lt;style&gt;\nv&#92;:* {behavior:u=\r\nrl(#default#VML);}\no&#92;:* {behavior:url(#default#VML);}\nw&#92;:* {behavior:url(#d=\r\nefault#VML);}\n.shape {behavior:url(#default#VML);}\n&lt;/style&gt;\n&lt;![endif]--&gt;\n&lt;s=\r\ntyle&gt;\n&lt;!--\n /* Font Definitions */\n @font-face\n\t{font-family:Wingdings;\n\tpa=\r\nnose-1:5 0 0 0 0 0 0 0 0 0;}\n@font-face\n\t{font-family:&quot;Cambria Math&quot;;\n\tpano=\r\nse-1:2 4 5 3 5 4 6 3 2 4;}\n@font-face\n\t{font-family:Calibri;\n\tpanose-1:2 15=\r\n 5 2 2 2 4 3 2 4;}\n@font-face\n\t{font-family:Tahoma;\n\tpanose-1:2 11 6 4 3 5 =\r\n4 4 2 4;}\n@font-face\n\t{font-family:Consolas;\n\tpanose-1:2 11 6 9 2 2 4 3 2 4=\r\n;}\n@font-face\n\t{font-family:Verdana;\n\tpanose-1:2 11 6 4 3 5 4 4 2 4;}\n /* S=\r\ntyle Definitions */\n p.MsoNormal, li.MsoNormal, div.MsoNormal\n\t{margin:0cm;=\r\n\n\tmargin-bottom:.0001pt;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,=\r\n&quot;serif&quot;;}\na:link, span.MsoHyperlink\n\t{mso-style-priority:99;\n\tcolor:#1E66AE=\r\n;\n\ttext-decoration:underline;}\na:visited, span.MsoHyperlinkFollowed\n\t{mso-s=\r\ntyle-priority:99;\n\tcolor:#1E66AE;\n\ttext-decoration:underline;}\np\n\t{mso-styl=\r\ne-priority:99;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-margin-bot=\r\ntom-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New =\r\nRoman&quot;,&quot;serif&quot;;}\ncode\n\t{mso-style-priority:99;\n\tfont-family:&quot;Courier New&quot;;}=\r\n\npre\n\t{mso-style-priority:99;\n\tmso-style-link:&quot;HTML Preformatted Char&quot;;\n\tma=\r\nrgin:0cm;\n\tmargin-bottom:.0001pt;\n\tfont-size:10.0pt;\n\tfont-family:&quot;Courier =\r\nNew&quot;;}\ntt\n\t{mso-style-priority:99;\n\tfont-family:&quot;Courier New&quot;;}\nspan.cat\n\t{=\r\nmso-style-name:cat;}\nspan.ct\n\t{mso-style-name:ct;}\nspan.HTMLPreformattedCha=\r\nr\n\t{mso-style-name:&quot;HTML Preformatted Char&quot;;\n\tmso-style-priority:99;\n\tmso-s=\r\ntyle-link:&quot;HTML Preformatted&quot;;\n\tfont-family:Consolas;}\np.attach, li.attach,=\r\n div.attach\n\t{mso-style-name:attach;\n\tmso-margin-top-alt:auto;\n\tmargin-righ=\r\nt:0cm;\n\tmso-margin-bottom-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:9.0pt;\n\tfo=\r\nnt-family:&quot;Arial&quot;,&quot;sans-serif&quot;;}\np.bold, li.bold, div.bold\n\t{mso-style-name=\r\n:bold;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-margin-bottom-alt:=\r\nauto;\n\tmargin-left:0cm;\n\tfont-size:10.0pt;\n\tfont-family:&quot;Arial&quot;,&quot;sans-serif=\r\n&quot;;\n\tfont-weight:bold;}\np.green, li.green, div.green\n\t{mso-style-name:green;=\r\n\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-margin-bottom-alt:auto;\n=\r\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;=\r\n;\n\tcolor:#628C2A;}\np.replbq, li.replbq, div.replbq\n\t{mso-style-name:replbq;=\r\n\n\tmargin:3.0pt;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;}=\r\n\np.ad, li.ad, div.ad\n\t{mso-style-name:ad;\n\tmso-margin-top-alt:auto;\n\tmargin=\r\n-right:0cm;\n\tmso-margin-bottom-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:12.0p=\r\nt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;}\np.underline, li.underline, div.=\r\nunderline\n\t{mso-style-name:underline;\n\tmso-margin-top-alt:auto;\n\tmargin-rig=\r\nht:0cm;\n\tmso-margin-bottom-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\t=\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;}\nspan.yshortcuts\n\t{mso-style-name:ys=\r\nhortcuts;}\np.ad1, li.ad1, div.ad1\n\t{mso-style-name:ad1;\n\tmso-margin-top-alt=\r\n:auto;\n\tmargin-right:0cm;\n\tmso-margin-bottom-alt:auto;\n\tmargin-left:0cm;\n\tf=\r\nont-size:12.0pt;\n\tfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;}\np.ad2, li.ad2, di=\r\nv.ad2\n\t{mso-style-name:ad2;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tm=\r\nargin-bottom:7.5pt;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Time=\r\ns New Roman&quot;,&quot;serif&quot;;}\np.underline1, li.underline1, div.underline1\n\t{mso-st=\r\nyle-name:underline1;\n\tmso-margin-top-alt:auto;\n\tmargin-right:0cm;\n\tmso-marg=\r\nin-bottom-alt:auto;\n\tmargin-left:0cm;\n\tfont-size:12.0pt;\n\tfont-family:&quot;Time=\r\ns New Roman&quot;,&quot;serif&quot;;\n\ttext-decoration:underline;}\nspan.yshortcuts1\n\t{mso-s=\r\ntyle-name:yshortcuts1;\n\tfont-family:&quot;Verdana&quot;,&quot;sans-serif&quot;;\n\tfont-weight:bo=\r\nld;}\nspan.yshortcuts2\n\t{mso-style-name:yshortcuts2;\n\tfont-family:&quot;Verdana&quot;,=\r\n&quot;sans-serif&quot;;\n\tfont-weight:normal;}\nspan.EmailStyle36\n\t{mso-style-type:pers=\r\nonal-reply;\n\tfont-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\n\tcolor:#1F497D;}\n.MsoChpDe=\r\nfault\n\t{mso-style-type:export-only;\n\tfont-size:10.0pt;}\n@page Section1\n\t{si=\r\nze:612.0pt 792.0pt;\n\tmargin:72.0pt 72.0pt 72.0pt 72.0pt;}\ndiv.Section1\n\t{pa=\r\nge:Section1;}\n /* List Definitions */\n @list l0\n\t{mso-list-id:447546194;\n\tm=\r\nso-list-template-ids:915591112;}\n@list l0:level1\n\t{mso-level-number-format:=\r\nbullet;\n\tmso-level-text:&#92;F0B7;\n\tmso-level-tab-stop:36.0pt;\n\tmso-level-numbe=\r\nr-position:left;\n\ttext-indent:-18.0pt;\n\tmso-ansi-font-size:10.0pt;\n\tfont-fa=\r\nmily:Symbol;}\nol\n\t{margin-bottom:0cm;}\nul\n\t{margin-bottom:0cm;}\n--&gt;\n&lt;/style=\r\n&gt;\n&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\n &lt;o:shapedefaults v:ext=3D&quot;edit&quot; spidmax=3D&quot;1026=\r\n&quot; /&gt;\n&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;\n &lt;o:shapelayout v:ext=3D&quot;ed=\r\nit&quot;&gt;\n  &lt;o:idmap v:ext=3D&quot;edit&quot; data=3D&quot;1&quot; /&gt;\n &lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endi=\r\nf]--&gt;\n&lt;/head&gt;\n\n&lt;body bgcolor=3Dwhite lang=3DEN-AU link=3D&quot;#1E66AE&quot; vlink=3D=\r\n&quot;#1E66AE&quot;&gt;\n\n&lt;div class=3DSection1&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;fon=\r\nt-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;Thanks Jas=\r\non.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11=\r\n.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/=\r\nspan&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11.0pt;font-family=\r\n:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;I now understand that HyperNEAT is =\r\nfar more complicated than I\noriginally thought.=A0 I was picturing 2D simil=\r\nar to PicBreeder when I pictured a\nCPPN.=A0 I still don&#8217;t fully under=\r\nstand, but I think I&#8217;m a lot\ncloser.=A0 It&#8217;s been 10 years sinc=\r\ne uni and my brain can&#8217;t cope with\n4-D as well as it once did.&lt;o:p&gt;&lt;/=\r\no:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11.0pt;font-=\r\nfamily:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n=\r\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11.0pt;font-family:&quot;Calibri&quot;=\r\n,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;I originally steered away from the C++ code a=\r\ns I am more\nfamiliar with C#, though now I realise the experiments used in =\r\neach are\ndifferent.=A0 I&#8217;ll start with the currently available code a=\r\nnd eagerly\nawait your next release.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNo=\r\nrmal&gt;&lt;span style=3D&#39;font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\nco=\r\nlor:#1F497D&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=\r\n=3D&#39;font-size:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;Kin=\r\nd regards,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-=\r\nsize:11.0pt;font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;Anthony&lt;o:p&gt;=\r\n&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;font-size:11.0pt;fon=\r\nt-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;\ncolor:#1F497D&#39;&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p=\r\n&gt;\n\n&lt;div&gt;\n\n&lt;div style=3D&#39;border:none;border-top:solid #B5C4DF 1.0pt;padding:=\r\n3.0pt 0cm 0cm 0cm&#39;&gt;\n\n&lt;p class=3DMsoNormal&gt;&lt;b&gt;&lt;span lang=3DEN-US style=3D&#39;fo=\r\nnt-size:10.0pt;font-family:\n&quot;Tahoma&quot;,&quot;sans-serif&quot;&#39;&gt;From:&lt;/span&gt;&lt;/b&gt;&lt;span la=\r\nng=3DEN-US style=3D&#39;font-size:10.0pt;\nfont-family:&quot;Tahoma&quot;,&quot;sans-serif&quot;&#39;&gt; j=\r\ngmath2000 [mailto:jgmath2000@...] &lt;br&gt;\n&lt;b&gt;Sent:&lt;/b&gt; Tuesday, 1 Decemb=\r\ner 2009 11:10 AM&lt;br&gt;\n&lt;b&gt;To:&lt;/b&gt; neat@yahoogroups.com&lt;br&gt;\n&lt;b&gt;Subject:&lt;/b&gt; [n=\r\neat] Re: HyperNEAT Tutorial?&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;p clas=\r\ns=3DMsoNormal&gt;&lt;o:p&gt;&nbsp;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;p class=3DMsoNormal&gt;&nbsp; &lt;o:p&gt;&lt;/o:p=\r\n&gt;&lt;/p&gt;\n\n&lt;div id=3Dygrp-mlmsg&gt;\n\n&lt;div id=3Dygrp-msg&gt;\n\n&lt;div id=3Dygrp-text&gt;\n\n&lt;p=\r\n style=3D&#39;margin-bottom:12.0pt&#39;&gt;Hey Anthony,&lt;br&gt;\n&lt;br&gt;\nI believe that the cu=\r\nrrent HyperNEAT C++ distributable contains the Checkers\nexperiment. I&#39;ve be=\r\nen spending the past few days packaging up a new version of\nHyperNEAT C++ t=\r\nhat includes a visualizer and a much more streamlined (and\ndocumented) CPPN=\r\n implementation that should clear up a lot of loose ends with\nrespect to th=\r\ne algorithm. When the new version is out, I will definitely post an\nannounc=\r\nement to the group.&lt;br&gt;\n&lt;br&gt;\nIn the meantime, hopefully I can clear up some=\r\n of your questions regarding\nHyperNEAT:&lt;br&gt;\n&lt;br&gt;\nThe &quot;Hyper&quot; in H=\r\nyperNEAT is tied to the CPPN. In the same way that\nPicBreeder allows users =\r\nto evolve 2-D images, a CPPN is an evolved 4-D image.\nInstead of drawing th=\r\ne pixels to the screen or something like that, the pixels\nare translated in=\r\nto connection weights. Thus, in the same way that PicBreeder\npaints a squar=\r\ne (2-D) by querying the CPPN, HyperNEAT paints a Hypercube (4-D)\nof connect=\r\nion weights (hence the term HyperNEAT). Once the substrates are\ncreated and=\r\n evaluated, the CPPNs are modified using NEAT and the process\nrepeats. Hope=\r\nfully this explains where the &quot;Hyper&quot; ends and the\n&quot;NEAT&quo=\r\nt; begins. &lt;br&gt;\n&lt;br&gt;\nThere are two ways a CPPN can encode (represent) a sub=\r\nstrate. Take the checkers\nexperiment for example, I chose to represent the =\r\nsubstrate as three sheets. As\nyou noted correctly, the &quot;A&quot; sheet =\r\nis populated based on the current\nboard being evaluated. However, the &quot=\r\n;B&quot; sheet is a hidden layer used\nfor computation, not the substrate. T=\r\nhe substrate is actually the entire\nstructure with all sheets. The &quot;C&=\r\nquot; sheet contains a single node\nbecause I want a single output to decide=\r\n how winning the board is for black.\nYou can think of the &quot;A&quot; she=\r\net as the sensors and the &quot;C&quot;\nsheet as the output. It is easily p=\r\nossible to have an array of outputs, just as\nthe checkers domain has an arr=\r\nay of inputs. Using this multi-sheet model, the\nCPPN has multiple outputs, =\r\none for every sheet. In other words, you input a\nsource (x1,y1) and destina=\r\ntion (x2,y2) position to the CPPN, and the CPPN\noutputs the link weights fo=\r\nr every connection layer (hence the AB and BC\noutputs on the CPPN).&lt;br&gt;\n&lt;br=\r\n&gt;\nThere is a second way to encode a substrate, and that is to use a single =\r\nsheet.\nIn the case of checkers, you could use a single 3-D sheet to represe=\r\nnt the\nentire substrate, and define (x,y,-1) to be the inputs and (0,0,1) t=\r\no be the\noutput node. Doing this, one could have a CPPN which takes source =\r\n(x1,y1,z1)\nand destination (x2,y2,z2) position to the CPPN, and output the =\r\nconnection\nweight. The end result is a &quot;soup&quot; of connectivity bet=\r\nween the inputs\nand outputs.&lt;br&gt;\n&lt;br&gt;\nI hope this clarifies the CPPN -&gt; =\r\nsubstrate process.&lt;br&gt;\n&lt;br&gt;\nJason G.&lt;br&gt;\n&lt;br&gt;\n--- In &lt;a href=3D&quot;mailto:neat=\r\n%40yahoogroups.com&quot;&gt;neat@yahoogroups.com&lt;/a&gt;,\n&quot;Anthony Ison&quot; &lt;=\r\nanthony.ison@...&gt; wrote:&lt;br&gt;\n&gt;&lt;br&gt;\n&gt; Thanks for the reply Ken.&lt;br&gt;=\r\n\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; I have indeed been over the HyperNEAT U=\r\nsers page a number of times. I&#39;ve\nread many of the papers that are linked, =\r\nbut there&#39;s still something that&#39;s not\nquite jumping out at me. I&#39;ve been t=\r\nrying to determine exactly what it is.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&g=\r\nt; The checkers game seems to be the ideal example for HyperNEAT. (and to b=\r\ne\nhonest, I still don&#39;t understand where Hyper ends and NEAT begins)&lt;br&gt;\n&g=\r\nt; &lt;br&gt;\n&gt; I think it&#39;s the 2 images at the top of the page. From the fir=\r\nst, I can\ntell there is something called a Substrate that covers an area fr=\r\nom (-1,-1) to\n(1, 1). I assume the number of rows and columns is customizab=\r\nle (depending on\nchosen geometry) and each &quot;input node&quot; has an im=\r\nplied connection to\nevery other &quot;input node&quot;. In the case of the =\r\ncheckers game, there are\n64 inputs with a total of 64x64 (4096) connections=\r\n (assuming -1,-1 -&gt; -1,-1\nmakes sense).&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br=\r\n&gt;\n&gt; The CPPN (which is the learning part) and the Substrate (the designe=\r\nd\npart) together produce a network (somehow). Is it always a single output =\r\nnode?\nWhere does the network structure come from? Is it the CPPN?&lt;br&gt;\n&gt; =\r\n&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; I must admit, I have no idea what the second =\r\nimage is trying to tell me. I\ncan see that we are applying HyperNEAT to the=\r\n checkers problem. I can see that\nwe have an 8x8 Substrate to match the lay=\r\nout of the board. A is the checkers\nboard, B is the Substrate and C, I assu=\r\nme is a roving eye that can query each\nlocation on the board (though I susp=\r\nect I only know that from a paper I&#39;ve read\nat some point). Is C another Su=\r\nbstrate?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; I don&#39;t understand the part=\r\n in the middle of the second image: Inputs:\nCoordinates and Outputs: Connec=\r\ntion Weights.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; I guess at the end of =\r\nthe day, I&#39;m expecting some output that is a network\nwith a predefined numb=\r\ner of inputs and outputs. I&#39;m also assuming that the\nnumber of inputs will =\r\nmatch the &quot;input nodes&quot; defined in the\nSubstrate and the number o=\r\nf output nodes will be ... I&#39;m not sure. One?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; =\r\n&lt;br&gt;\n&gt; Anyways, sorry about the wall of text. I&#39;m hoping that by explain=\r\ning what\nI&#39;m seeing, you may be able to point out what part I&#39;m muddling up=\r\n.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Is there perhaps some code availab=\r\nle that solves the checkers problem?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt;=\r\n Thanks in advance,&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Anthony&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt;=\r\n &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; From: Ken [mailto:kstanley@...] &lt;br&gt;\n&gt; Se=\r\nnt: Sunday, 29 November 2009 8:00 AM&lt;br&gt;\n&gt; To: &lt;a href=3D&quot;mailto:neat%40=\r\nyahoogroups.com&quot;&gt;neat@yahoogroups.com&lt;/a&gt;&lt;br&gt;\n&gt; Subject: [neat] Re: Hype=\r\nrNEAT Tutorial?&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; =\r\n&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Anthony,&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; We are hoping to make the H=\r\nyperNEAT Users Page at &lt;a\nhref=3D&quot;http://eplex.cs.ucf.edu/hyperNEATpage/Hyp=\r\nerNEAT.html&quot;&gt;http://eplex.cs.ucf.edu/hyperNEATpage/HyperNEAT.html&lt;/a&gt;\ninto =\r\na place where people can have questions like yours answered. The\n&quot;Intr=\r\noduction / What is HyperNEAT?&quot; section on that page is intended\nto pro=\r\nvide some general answers to beginners without having to read a research\npa=\r\nper. Did that section help you at all? I&#39;d like to make the page as useful =\r\nas\npossible and we will continue to improve it.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; To answe=\r\nr your question, HyperNEAT is a significant step beyond NEAT so it\ninvolves=\r\n a lot of new ideas that aren&#39;t part of the original NEAT. Some of\nthose co=\r\nncepts can theoretically be applied on top of non-NEAT methods. For\nexample=\r\n, in the following paper, NEAT is substituted with GP to create a\n&quot;Hyp=\r\nerGP,&quot; in which GP evolves the CPPN:&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Buk Z., Koutn=\r\n=EF=BF=BDk J., =EF=BF=BDnorek M., NEAT in HyperNEAT Substituted with\nGeneti=\r\nc Programming, In: ICANNGA 2009. &lt;br&gt;\n&gt; &lt;a href=3D&quot;http://cig.felk.cvut.=\r\ncz/research/publications/hypergp.pdf&quot;&gt;http://cig.felk.cvut.cz/research/publ=\r\nications/hypergp.pdf&lt;/a&gt;&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; That said, HyperNEAT addresses =\r\na limitation of NEAT, which is a limitation\nof all direct encodings: In NEA=\r\nT, there is one gene for every connection in the\nnetwork. Even with complex=\r\nification, that kind of representation cannot hope to\nscale to networks wit=\r\nh millions or more connections, because such networks\nwould have millions o=\r\nr more genes, which is an astronomical search space. &lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Ho=\r\nwever, there are in fact 100 trillion connections in the human brain,\nwhich=\r\n means that in principle it is possible to evolve such structures. Yet\nther=\r\ne are only about 30,000 genes in the human genome, which suggests that any\n=\r\nevolutionary approach to evolving large-scale neural networks must encode t=\r\nhe\nconnection weights in a compressed description, which is called an indir=\r\nect\nencoding.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; In HyperNEAT, the indirect encoding is the=\r\n CPPN, which encodes the\nconnectivity of a network as a pattern across its =\r\ngeometry. HyperNEAT combines\nthe idea of indirect encoding with a strong no=\r\ntion of geometry and builds on\nour understanding of encoding patterns to pr=\r\noduce an algorithm that encodes\nlarge-scale topographies (i.e. connection w=\r\neights across a geometry). Thus it\nextends NEAT by giving it the power of i=\r\nndirect encoding, thereby greatly\nexpanding the scope of networks it can ev=\r\nolve.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; Of course NEAT is still there under the hood. NEAT=\r\n is evolving the CPPNs,\nwhich in turn encode neural networks (called substr=\r\nates in HyperNEAT). The\nCPPNs themselves are still complexifying. However, =\r\nthat complexification is no\nlonger literally adding one connection at a tim=\r\ne to a neural network. Rather it\nis adding *information* to the encoding, s=\r\no that it can encode more complex\n*holistic* connectivity patterns. In othe=\r\nr words, HyperNEAT means that\nevolution is no longer limited by the dimensi=\r\nonality of the inputs and outputs\nbut rather can search for the correct imp=\r\nlicit problem complexity, whatever\nthat may be, inside the CPPN. The substr=\r\nate (which the CPPN encodes) will then\nhave as many connections as it needs=\r\n, in principle up to millions or even\ntrillions (with enough CPU power).&lt;br=\r\n&gt;\n&gt; &lt;br&gt;\n&gt; It is true that geometry may be vague or difficult to deci=\r\nde in some\nproblems. Those may be more difficult for users to approach with=\r\n HyperNEAT. Yet\nI think most if not all problems can ultimately be posed wi=\r\nthin some geometry,\neven if it is abstract or conceptual. As Jeff Clune has=\r\n shown (&lt;a\nhref=3D&quot;https://www.msu.edu/~jclune/webfiles/publications/Clune-=\r\nHyperNEATSensitivityToGeometry.pdf&quot;&gt;https://www.msu.edu/~jclune/webfiles/pu=\r\nblications/Clune-HyperNEATSensitivityToGeometry.pdf&lt;/a&gt;),\ngeometry does not=\r\n need to be perfect, or necessarily even close to perfect, for\nHyperNEAT to=\r\n still find some regularities to exploit, so while it may be an\nimperfect a=\r\nrt, geometry is still ultimately a useful tool for conveying\nexploitable in=\r\nformation about a domain.&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; I hope that provides some insi=\r\nght,&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; ken&lt;br&gt;\n&gt; &lt;br&gt;\n&gt; --- In &lt;a href=3D&quot;mailto:nea=\r\nt%40yahoogroups.com&quot;&gt;neat@yahoogroups.com&lt;/a&gt;\n&lt;mailto:neat%40yahoogroups=\r\n.com&gt; , &quot;Anthony Ison&quot;\n&lt;anthony.ison@&gt; wrote:&lt;br&gt;\n&gt; &=\r\ngt;&lt;br&gt;\n&gt; &gt; I&#39;d like to add my vote to some kind of non-research styl=\r\ne tutorial -&lt;br&gt;\n&gt; &gt; especially towards the HyperNEAT methodology.&lt;br=\r\n&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; Is there somewhere=\r\n I can get an overview of how the CPPN is actually&lt;br&gt;\n&gt; &gt; used and w=\r\nhat it does? I&#39;ve looked through a number of papers on the&lt;br&gt;\n&gt; &gt; ma=\r\nin HyperNEAT site, but I feel like I&#39;m missing something. I have\nread&lt;br&gt;\n&=\r\ngt; &gt; that HyperNEAT is the future of NEAT - does this apply to problems=\r\n\nwhere&lt;br&gt;\n&gt; &gt; there is no useful input geometry? I understand how NE=\r\nAT grows a&lt;br&gt;\n&gt; &gt; network by adding nodes and connections and overal=\r\nl I love the\nconcept.&lt;br&gt;\n&gt; &gt; It makes sense that a learning network =\r\ncan adjust itself to improve\nits&lt;br&gt;\n&gt; &gt; performance. What I don&#39;t re=\r\nally understand is how a CPPN is involved&lt;br&gt;\n&gt; &gt; in this process. &lt;b=\r\nr&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; Is anyone able to=\r\n give a short overview on what HyperNEAT offers over&lt;br&gt;\n&gt; &gt; NEAT?&lt;br=\r\n&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; Cheers,&lt;br&gt;\n&gt; &=\r\ngt; &lt;br&gt;\n&gt; &gt; Anthony&lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;=\r\n\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; From: dkuppitz [mailto:daniel_kupp=\r\nitz@] &lt;br&gt;\n&gt; &gt; Sent: Monday, 23 November 2009 9:08 AM&lt;br&gt;\n&gt; &gt; T=\r\no: &lt;a href=3D&quot;mailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.com&lt;/a&gt;\n&lt;m=\r\nailto:neat%40yahoogroups.com&gt; &lt;br&gt;\n&gt; &gt; Subject: [neat] Re: HyperNE=\r\nAT Tutorial?&lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; &lt;br=\r\n&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; Hello Ken,&lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; here&#39;s j=\r\nust another vote for a tutorial, with the difference that I&lt;br&gt;\n&gt; &gt; w=\r\nould prefer it for HyperSharpNEAT.&lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; It would be=\r\n great to see something like a HOL (Hands on Labs) where a&lt;br&gt;\n&gt; &gt; ne=\r\nw experiment is created from the scratch. Parameters should be&lt;br&gt;\n&gt; &gt=\r\n; explained in detail, for example: Which impact has the parameter&lt;br&gt;\n&gt;=\r\n &gt; Treshold, which impact has WeightRange, etc.? How are the values for&lt;=\r\nbr&gt;\n&gt; &gt; each parameter determined, what is taken into account when yo=\r\nu set\nthe&lt;br&gt;\n&gt; &gt; values? There are so many unanswered questions for =\r\nthose who are new\nto&lt;br&gt;\n&gt; &gt; HyperNEAT and I think most people (inclu=\r\nding me) have a really great&lt;br&gt;\n&gt; &gt; interest in this topic, but not =\r\nthe time to read (and understand) all&lt;br&gt;\n&gt; &gt; the technical papers. S=\r\no any tutorial should target beginners and&lt;br&gt;\n&gt; &gt; explain things tha=\r\nt have become self-evident for intermediates. &lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt;=\r\n I think one such &quot;official&quot; tutorial that explains every\nstep in=\r\n detail&lt;br&gt;\n&gt; &gt; should be enough, more will surely follow from the gr=\r\nowing community.&lt;br&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; Cheers,&lt;br&gt;\n&gt; &gt; Daniel&lt;=\r\nbr&gt;\n&gt; &gt; &lt;br&gt;\n&gt; &gt; --- In &lt;a href=3D&quot;mailto:neat%40yahoogroups.co=\r\nm&quot;&gt;neat@yahoogroups.com&lt;/a&gt;\n&lt;mailto:neat%40yahoogroups.com&gt; &lt;mailt=\r\no:neat%40yahoogroups.com&gt; ,\n&quot;Ken&quot;&lt;br&gt;\n&gt; &gt; &lt;kstanley@&=\r\ngt; wrote:&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&=\r\ngt; &gt; &gt; Andrei, which version of HyperNEAT are you interested in and\n=\r\nwhat&lt;br&gt;\n&gt; &gt; references have you looked at so far? We can potentially=\r\n improve the&lt;br&gt;\n&gt; &gt; documentation based on your comments (and a tuto=\r\nrial is a good idea),&lt;br&gt;\n&gt; &gt; but first I want to understand which &q=\r\nuot;comment-less\nexamples&quot; you are&lt;br&gt;\n&gt; &gt; referring to.&lt;br&gt;\n&gt=\r\n; &gt; &gt; &lt;br&gt;\n&gt; &gt; &gt; Note that several experiments with complete=\r\n source code are\navailable&lt;br&gt;\n&gt; &gt; in two existing HyperNEAT releases=\r\n of which I am aware. These and a&lt;br&gt;\n&gt; &gt; variety of publications fro=\r\nm several groups are linked from the&lt;br&gt;\n&gt; &gt; HyperNEAT Users Page, wh=\r\nich also provides a brief introduction:&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&gt; &gt; &=\r\ngt; &lt;a href=3D&quot;http://eplex.cs.ucf.edu/hyperNEATpage/HyperNEAT.html&quot;&gt;http:/=\r\n/eplex.cs.ucf.edu/hyperNEATpage/HyperNEAT.html&lt;/a&gt;&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n=\r\n&gt; &gt; &gt; I understand you may have already been through this site and=\r\n its&lt;br&gt;\n&gt; &gt; associated software and papers, but I wanted to point it=\r\n out in case\nyou&lt;br&gt;\n&gt; &gt; had not been aware of it.&lt;br&gt;\n&gt; &gt; &gt;=\r\n &lt;br&gt;\n&gt; &gt; &gt; We want to make the algorithm as accessible as possibl=\r\ne so your&lt;br&gt;\n&gt; &gt; comments are appreciated.&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&=\r\ngt; &gt; &gt; ken&lt;br&gt;\n&gt; &gt; &gt; &lt;br&gt;\n&gt; &gt; &gt; --- In &lt;a href=3D&quot;=\r\nmailto:neat%40yahoogroups.com&quot;&gt;neat@yahoogroups.com&lt;/a&gt;\n&lt;mailto:neat%40y=\r\nahoogroups.com&gt; &lt;mailto:neat%40yahoogroups.com&gt; ,\n&quot;Andrei&quo=\r\nt;&lt;br&gt;\n&gt; &gt; &lt;andrei.rusu@&gt; wrote:&lt;br&gt;\n&gt; &gt; &gt; &gt;&lt;br&gt;\n&g=\r\nt; &gt; &gt; &gt; Can anyone please recommend some HyperNEAT documentation,=\r\n a&lt;br&gt;\n&gt; &gt; tutorial, diagram, some clue, or anything that does not me=\r\nan reverse&lt;br&gt;\n&gt; &gt; engineering the comment-less examples ?&lt;br&gt;\n&gt; &=\r\ngt; &gt; &gt; &lt;br&gt;\n&gt; &gt; &gt; &gt; Thanks! Andrei.&lt;br&gt;\n&gt; &gt; &gt; &=\r\ngt;&lt;br&gt;\n&gt; &gt; &gt;&lt;br&gt;\n&gt; &gt;&lt;br&gt;\n&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/p&gt;\n\n&lt;/div&gt;\n\n&lt;div&gt;=\r\n\n\n&lt;p class=3DMsoNormal&gt;&lt;span style=3D&#39;color:white&#39;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;\n\n=\r\n&lt;/div&gt;\n\n&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n\r\n------_=_NextPart_002_01CA722C.2383F338--\r\n\n\r\n------_=_NextPart_001_01CA722C.2383F338\r\nContent-Type: image/jpeg;\n\tname=&quot;image001.jpg&quot;\r\nContent-ID: &lt;image001.jpg@...931440&gt;\r\nContent-Description: image001.jpg\r\nContent-Location: image001.jpg\r\n\r\n[ Attachment content not displayed ]\r\n------_=_NextPart_001_01CA722C.2383F338\r\nContent-Type: image/jpeg;\n\tname=&quot;image002.jpg&quot;\r\nContent-ID: &lt;image002.jpg@...931440&gt;\r\nContent-Description: image002.jpg\r\nContent-Location: image002.jpg\r\n\r\n[ Attachment content not displayed ]\r\n------_=_NextPart_001_01CA722C.2383F338--\r\n\n"}}