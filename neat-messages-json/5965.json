{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"OsgBfTHHL328IurnjjwsZw6dkgM_b3zq0Jb63WzL-fY0vvn1j_VQWw3Vy6xNm2kmeQQioy8SowREmODuvUohGBWUaNyk","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Open science software/experiment repository","postDate":"1358566359","msgId":5965,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGtkZDQ0bitqOTUzQGVHcm91cHMuY29tPg=="},"prevInTopic":5964,"nextInTopic":5966,"prevInTime":5964,"nextInTime":5966,"topicId":5942,"numMessagesInTopic":18,"msgSnippet":"Maybe I can elaborate a little more on why I don t think code submission should be a requirement.  I appear to be on the minority side of this issue so I know","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 33345 invoked from network); 19 Jan 2013 03:32:40 -0000\r\nX-Received: from unknown (10.193.84.163)\n  by m12.grp.bf1.yahoo.com with QMQP; 19 Jan 2013 03:32:40 -0000\r\nX-Received: from unknown (HELO ng5-ip2.bullet.mail.bf1.yahoo.com) (98.139.165.28)\n  by mta3.grp.bf1.yahoo.com with SMTP; 19 Jan 2013 03:32:40 -0000\r\nX-Received: from [98.139.164.122] by ng5.bullet.mail.bf1.yahoo.com with NNFMP; 19 Jan 2013 03:32:40 -0000\r\nX-Received: from [10.193.94.106] by tg3.bullet.mail.bf1.yahoo.com with NNFMP; 19 Jan 2013 03:32:40 -0000\r\nDate: Sat, 19 Jan 2013 03:32:39 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;kdd44n+j953@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Open science software/experiment repository\r\nX-Yahoo-Group-Post: member; u=54567749; y=X_44OyFc3dmSW4M9qjAnsF0LplLwRVSckLpB869XzukxUKGxuEhN\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nMaybe I can elaborate a little more on why I don&#39;t think code submission =\r\nshould be a requirement.  I appear to be on the minority side of this issue=\r\n so I know it&#39;s an uphill battle but here&#39;s my reasoning:\n\nAs soon as you m=\r\nake something a requirement, you are adding to bureaucracy.  Inevitably, so=\r\nmeone will be charged with checking that you satisfied the requirement.  Ev=\r\nen if we start out saying you &quot;only&quot; have to submit the code but no one has=\r\n to run it, eventually an incident will be exposed when someone submitted i=\r\nncorrect or even fraudulent code, and then the code checks will become incr=\r\neasingly onerous.  And it&#39;s likely those code checks will be done by review=\r\ners, which means that people who already don&#39;t spend enough time reading ou=\r\nr papers will now spend even less time as they have to dedicate new effort =\r\nto looking at a giant impenetrable volume of spaghetti code.  \n\nI&#39;ve sat on=\r\n enough executive committees and editorial boards at this point to know tha=\r\nt things will only get stricter and more out of control.  Requirements neve=\r\nr get lighter, they only get heavier.  These committees often make decision=\r\ns with broad implications after short, rancorous arguments that ratchet up =\r\nthe paranoia about how someone might cheat the system, leading to more and =\r\nmore burdensome checks and requirements.  As Jeff points out, as if having =\r\nto write 15-page project description wasn&#39;t enough, now NSF requires propos=\r\nals to include an additional 2-page data management plan.  Not to mention t=\r\nhe new proliferation of endless plagiarism checks throughout the academic w=\r\norld.  So once we open this Pandora&#39;s box, don&#39;t think that someone won&#39;t u=\r\nltimately be trying to run your code and blaming you if it doesn&#39;t work for=\r\n them.\n\nAs far as the upsides, such as Jeff&#39;s example of how helpful it is =\r\nto have the code to reproduce results, if you really think about it, it&#39;s n=\r\not so clear cut.  In fact, Jeff, it&#39;s conceivable that you (or someone like=\r\n you) would not have made your discovery had the code been available to beg=\r\nin with, because you would have simply run it and seen (misleadingly) that =\r\nit works.  It&#39;s only because it wasn&#39;t available and you thereby were force=\r\nd to try to reproduce the concept for yourself that you learned the concept=\r\n doesn&#39;t work as advertised.  It may even be the case that having specific =\r\nexperimental code universally available leads the community to more decepti=\r\non (and thus to be more naive) because we would trust results that ultimate=\r\nly depend on obscure idiosyncrasies hidden in arcane code bases rather than=\r\n on the supposed main idea.  After all, we all know you can get virtually a=\r\nnything to &quot;work&quot; if you finesse it enough.  \n\nNot only that, but more deep=\r\nly it seems like making code a requirement is wishful thinking:  We&#39;re tryi=\r\nng to get a quick fix for a problem (i.e. deciding whether an idea is promi=\r\nsing) that is only really solved by good old fashioned time and effort.  Th=\r\nat is, what really validates a method is not the one time it was run to giv=\r\ne a published result, but rather the numerous reimplementations by independ=\r\nent parties over many subsequent years.  The main reason you can trust NEAT=\r\n is not because you can download my original pole balancing experiment and =\r\nrun it, but because of all the excellent independent packages like SharpNEA=\r\nT, ANJI, and many others in which I had no hand at all.   \n\nMoreover, why s=\r\nhould we even care about the code if the idea is uninspiring anyway?  By fo=\r\nrcing everyone to submit code we are implicitly suggesting that what matter=\r\ns is simply that something worked rather than that it is an interesting ide=\r\na.  In my view the biggest problem in reviewing today is not some kind of s=\r\nystematic flaw in experimental design but rather an unhealthy obsession wit=\r\nh experimental results to the complete exclusion of the main idea.  Jeff, y=\r\nou say that &quot;reviewers tend to be pretty good about this&quot; when it comes to =\r\nunfairly demanding excessive comparisons, but if that&#39;s true, it&#39;s only in =\r\nour own community.  In the larger machine learning community, reviewers are=\r\n biased against EC and would love another excuse simply to say, &quot;Why didn&#39;t=\r\n you compare to X&quot; as a way of avoiding actually needing to understand the =\r\ncentral idea.  We will be perpetuating that kind of culture and hence our o=\r\nwn ostracization and defunding.  \n\nLet&#39;s leave it voluntary and stop the se=\r\nnseless proliferation of endless requirements that technology tempts us to =\r\nperpetuate upon ourselves.  We are ultimately only hurting ourselves as we =\r\nforget that well-intended requirements steal from the precious little time =\r\nin life we have to actually sit and think, which is the most important thin=\r\ng we do as scientists.\n\nken\n\n\n--- In neat@yahoogroups.com, Jeff Clune  wrot=\r\ne:\n&gt;\n&gt; Hello all,\n&gt; \n&gt; I agree with JBM that code should be submitted, and =\r\nI don&#39;t mind it being a requirement. Submitting the code does not mean it h=\r\nas to compile the day after submission, be maintained, or even be clean/com=\r\nmented. It&#39;s just a written record of what happened in the experiment. If y=\r\nou are publishing the experiment and trying to describe exactly what you di=\r\nd, the code is the equivalent of a very detailed explanation of the experim=\r\nent that allows others to replicate it if they wish. \n&gt; \n&gt; For example, Jea=\r\nn-Baptiste and I tried and failed to replicate the results of a famous, hig=\r\nh-impact study. It was hard for us to know if there were bugs in our code, =\r\nif we had the wrong parameters, or if the result itself was suspicious (e.g=\r\n. a bug in their code). Eventually we got the code from the authors and we =\r\nsuddenly were able to replicate the results and learn under which condition=\r\ns the effect in question occurs. That never would have happened without the=\r\nir code. In our case the authors were still alive and willing to share thei=\r\nr code, but both of those conditions don&#39;t hold in a lot of cases (especial=\r\nly with older work). I think science is better of if we&#39;re able to see exac=\r\ntly how a result came to be. \n&gt; \n&gt; I do agree that there may be some disinc=\r\nentive for businesses to publish. But how many businesses publish papers ab=\r\nout things they don&#39;t really want to share completely? I don&#39;t run into too=\r\n many influential papers like that. And maybe those businesses can publish =\r\nin other journals, or get an exception from the editors. \n&gt; \n&gt; As for the a=\r\nccumulation of a lot of worthless code, is that really a big problem? If th=\r\ney papers are worthless, they&#39;re already accumulating=85this is just a link=\r\n in the paper that can be ignored, no?\n&gt; \n&gt; I do agree that it may create a=\r\n pressure on future papers to include previous algorithms more as controls,=\r\n because the reviewers can say &quot;the code is posted, why didn&#39;t you use it?&quot;=\r\n I think we just have to resist that as reviewers=85because everyone knows =\r\nwhat a pain it is to get someone else&#39;s code running in their domain. Revie=\r\nwers tend to be pretty good about this. \n&gt; \n&gt; In any case, it&#39;s an interest=\r\ning discussion=85.and likely the future whether we like it or not. My guess=\r\n is that a lot of journals will follow the lead of the top journals (plus t=\r\nhe NSF now requires such archiving, which is what is really driving it in a=\r\n lot of cases). \n&gt; \n&gt; Best regards,\n&gt; Jeff Clune\n&gt; \n&gt; Assistant Professor\n&gt;=\r\n Computer Science\n&gt; University of Wyoming\n&gt; jclune@...\n&gt; jeffclune.com\n&gt; \n&gt;=\r\n On Jan 18, 2013, at 7:21 AM,  wrote:\n&gt; \n&gt; &gt; Hi Ken,\n&gt; &gt; \n&gt; &gt; &gt; More practi=\r\ncally,\n&gt; &gt; &gt; it will mean that reviewers will start rejecting papers based =\r\non supposed\n&gt; &gt; &gt; code glitches in required code submissions. That will giv=\r\ne reviewers a\n&gt; &gt; &gt; whole new justification for completely ignoring the mai=\r\nn of idea of the\n&gt; &gt; &gt; paper.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Students will also become overwhe=\r\nlmed with code emergencies (since\n&gt; &gt; &gt; publication will depend now upon st=\r\nrangers running your code) and code\n&gt; &gt; &gt; cleanups demanded by random stran=\r\ngers who may themselves be at fault or\n&gt; &gt; &gt; simply ignorant. Furthermore, =\r\nin a few years we will have massive\n&gt; &gt; &gt; repositories of junk code (think =\r\nof the hundreds of papers published only\n&gt; &gt; &gt; at GECCO in one year) that i=\r\ns so out of date that it requires deprecated\n&gt; &gt; &gt; compilers and computing =\r\nplatforms even to run. But we will be required to\n&gt; &gt; &gt; maintain these repo=\r\nsitories, which will become increasingly ignored,\n&gt; &gt; &gt; simply to maintain =\r\nthe appearance of rigor.\n&gt; &gt; \n&gt; &gt; I think there is a large difference betwe=\r\nen reviewing the code and\n&gt; &gt; requesting that the authors make it available=\r\n. I don&#39;t expect reviewers to\n&gt; &gt; run the code when it&#39;s available. First, =\r\nre-launching experiments may\n&gt; &gt; require weeks of computations on large clu=\r\nsters. Second, I fully\n&gt; &gt; understand that releasing &quot;clean code&quot; is a huge=\r\n job and not our main job\n&gt; &gt; (Science).\n&gt; &gt; \n&gt; &gt; However, I view the code =\r\nas the detailed, technical description of a\n&gt; &gt; paper. It contains all the =\r\nparameters and all the implementation details,\n&gt; &gt; including those that the=\r\n authors thought were not important (but that may\n&gt; &gt; be actually important=\r\n). We don&#39;t need to be able to compile the code in\n&gt; &gt; the future, we only =\r\nneed to be able to read it.\n&gt; &gt; \n&gt; &gt; When I reuse an algorithm described in=\r\n a paper, I often re-implement it.\n&gt; &gt; It&#39;s a good exercise and it helps ke=\r\neping my framework clean and\n&gt; &gt; consistent. But I always find very helpful=\r\n to have have access to the\n&gt; &gt; source code so that I can understand the sm=\r\nall details and see the\n&gt; &gt; &quot;tricks&quot; used by the authors. For instance, I&#39;m=\r\n very happy that Sebastian\n&gt; &gt; and you released the source code of the node=\r\n placement algorithm for\n&gt; &gt; HyperNEAT: thanks to it, we were able to reimp=\r\nlement it in our framework\n&gt; &gt; in a few hours/days. Otherwise, it would hav=\r\ne been much more difficult.\n&gt; &gt; \n&gt; &gt; Best regards,\n&gt; &gt; -- JBM\n&gt; &gt; \n&gt; &gt;\n&gt;\n\n\n=\r\n\n"}}