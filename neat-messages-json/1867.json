{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"zBAWMyqEtnIBXzNQV5S5qvTd270CuoF3z4e0k1U3Bxrl28ag65XoKumGks9LEMgg3jO0sHj5phn8e47KqJwcwMu5B2VortEqOWhdykjjFiKP","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Aircraft control and parallelizing neat","postDate":"1107990158","msgId":1867,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGN1ZTRxZSs3OGxvQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDViNDUyMjA1YmI0ZWM5OWUyMzdkNjEwYWIyNDIxYTBhQGRpbG9neS5uZXQ+"},"prevInTopic":1863,"nextInTopic":1870,"prevInTime":1866,"nextInTime":1868,"topicId":1853,"numMessagesInTopic":13,"msgSnippet":"Hi Mark,  I uploaded a tar called NEATadaptcore.tar that has the genetics.* and networks.* files needed for adaptive NEAT.  Note that there is no documentation","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 94554 invoked from network); 9 Feb 2005 23:02:39 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m6.grp.scd.yahoo.com with QMQP; 9 Feb 2005 23:02:39 -0000\r\nReceived: from unknown (HELO n21a.bulk.scd.yahoo.com) (66.94.237.50)\n  by mta1.grp.scd.yahoo.com with SMTP; 9 Feb 2005 23:02:39 -0000\r\nReceived: from [66.218.69.1] by n21.bulk.scd.yahoo.com with NNFMP; 09 Feb 2005 23:02:38 -0000\r\nReceived: from [66.218.66.82] by mailer1.bulk.scd.yahoo.com with NNFMP; 09 Feb 2005 23:02:38 -0000\r\nDate: Wed, 09 Feb 2005 23:02:38 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;cue4qe+78lo@...&gt;\r\nIn-Reply-To: &lt;5b452205bb4ec99e237d610ab2421a0a@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3834\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.50\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Aircraft control and parallelizing neat\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\nHi Mark,  I uploaded a tar called NEATadaptcore.tar that has the\ngenetics.* and networks.* files needed for adaptive NEAT.  Note that\nthere is no documentation aside from this posting.\n\nIn these files, traits are now fully implemented and usable.  The\nparameters inside of &quot;trait&quot; terms in the genome are actually used. \nThe convention is that trait 1 in non-adaptive.  That is, any gene\nthat points to trait one will have a static weight regardless of what\nthe parameters of trait 1 are. The other traits, however, will be\nconsidered parameterizations of the adaptation function for the link\npointing to that trait.  There is also room for a lot of extra\narguments.  Only the first 3 are used in adaptive NEAT, even though\neach trait has I believe 8 parameters available other.\n\nI threw in a couple adaptstartgenes files to show how a genome might\nbe initialized to start off.\n\nSo for example:\n\ntrait 1 0 0 0 0 0 0 0 0\ntrait 2 0.05 0.01 0.01 0 0 0 0 0 \ntrait 3 0 0 0 0 0 0 0 0 \ntrait 4 0 0 0 0 0 0 0 0 \n\nIn this case, trait 2 is starting out with the parameters 0.05, 0.01,\nand 0.01.  These are learning and forgetting rates.  (Of course, these\nparameters evolve so how you start isn&#39;t necessarily going to bear\nthat much on how you end up).  You can look at\nthe hebbian(..) method in networks.cpp to see exactly how the\nparameters are used to change the weight of a particular link.\n\nA gene points to a trait as follows:\n\ngene 2 1 23 1.0 0 1 0 1\n\nThe first number after &quot;gene&quot; is its trait.  So This gene, with innov.\n# 1, adapts according to the rules of trait #2.\n\nI&#39;ve probably left some things out, so let me know if you have other\nquestions.\n\nken\n\n\n--- In neat@yahoogroups.com, Mark Ahlstrom &lt;lists@d...&gt; wrote:\n&gt; &gt;\n&gt; &gt; Hi Mark, just to make sure I understand, you are using my NEAT\ncode\n&gt; &gt; right?\n&gt; \n&gt; The code is identical in the important areas.  The only real\nchanges \n&gt; have been stripping out the guile, swig, and visualization guile\nand \n&gt; replacing it with the appropriate KDE code. It ends up for the user \n&gt; working a lot more like sharpNEAT.  The interfaces look a lot\ndifferent \n&gt; than the original, but the actual NEAT algorithm code hasn&#39;t\nchanged.\n&gt; \n&gt; &gt; One really big area that is easy to parallelize is individual\n&gt; &gt; evaluations.  If each individual in the population can be\nevaluated\n&gt; &gt; individually, then you can parallelize as many evaluations as you\n&gt; &gt; have processors.  In that case, you get an n-times speedup in\n&gt; &gt; evaluation where n is the # processors, and I am betting that in\n&gt; &gt; your domain evaluation is by far taking up most of the processing\n&gt; &gt; (as opposed to e.g. NEAT genetic operations).\n&gt; \n&gt; This seemed like the most likely place for a speedup to me as well.\n \n&gt; The other place that Im forking with hope of a speedup is in the \n&gt; reproduction loop.  My only concern here is that multithreading\nseems \n&gt; more appropriate than forking.  The memory usage of making all of\nthose \n&gt; duplicate copies may end up wiping out any performance advantage.  \n&gt; There are a few other loops that I have tagged as potential targets\nfor \n&gt; parallelization, but Im not certain that they will get me much\npayoff.\n&gt; \n&gt; &gt; I will try to put together a tar of my adaptive NEAT files in the\n&gt; &gt; next few days.  I can&#39;t provide experimental control code (it&#39;s\nfar\n&gt; &gt; too complicated and undocumented) but I can provide the genetics.*\n&gt; &gt; and networks.* files that implement adaptive synapses.  However,\nif\n&gt; &gt; you are using someone else&#39;s NEAT code this obviously won&#39;t help\nso\n&gt; &gt; let me know if I am right that you are using my code.\n&gt; \n&gt; Very much appreciated.  With the changes to the control side, the \n&gt; genetics.* and networks.* files should be much more helpful in any \n&gt; case.  Once the experiment is up and running, I&#39;ll post the \n&gt; implementation I&#39;ve got and the experiment.\n&gt; \n&gt; Mark Ahlstrom\n\n\n\n\n"}}