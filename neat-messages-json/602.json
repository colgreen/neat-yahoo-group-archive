{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"D74JdcefBfzdQT_HkiP1v-bEL8Jv7ALccFS6zTNML7goZymnmPKC2_Oy7RlORC6B8UQ-sPj2M14fb5Zd_jCb-61EktmUbJYINW_SjM1gWTSP","spamInfo":{"isSpam":false,"reason":"0"},"subject":"How Network Activation Should Work","postDate":"1080780388","msgId":602,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM0Zm9wNCt0MGVnQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQwNkI1N0M0LjMwMjA0MDJAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":601,"nextInTopic":603,"prevInTime":601,"nextInTime":603,"topicId":534,"numMessagesInTopic":19,"msgSnippet":"It s pretty clear from this discussion that the way Derek and Philip are activating their networks is not the standard way it works in NEAT, because in","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 63500 invoked from network); 1 Apr 2004 00:46:38 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m10.grp.scd.yahoo.com with QMQP; 1 Apr 2004 00:46:38 -0000\r\nReceived: from unknown (HELO n5.grp.scd.yahoo.com) (66.218.66.89)\n  by mta4.grp.scd.yahoo.com with SMTP; 1 Apr 2004 00:46:38 -0000\r\nReceived: from [66.218.67.171] by n5.grp.scd.yahoo.com with NNFMP; 01 Apr 2004 00:46:32 -0000\r\nDate: Thu, 01 Apr 2004 00:46:28 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c4fop4+t0eg@...&gt;\r\nIn-Reply-To: &lt;406B57C4.3020402@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 4309\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.89\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: How Network Activation Should Work\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nIt&#39;s pretty clear from this discussion that the way Derek and Philip\nare activating their networks is not the standard way it works in\nNEAT, because in standard NEAT, you don&#39;t need to keep activation in\nmemory from the previous timestep.  Every connection just sends the\nactivation coming in to the the node on the output on each timestep;\nit&#39;s that simple.  So there is no need to know what connection is\nrecurrent and what isn&#39;t for the purposes of activation.  (The reason\nNEAT keeps track of recurrency is just a convenience to the user, so\nthat you can disabled it or identify it if you want to.)\n\nIt sounds like what Derek and Philip are doing is trying to send\nactivation all the way through the network by traversing the network\non each activation.  That isn&#39;t in principle &quot;wrong,&quot; but it is\ndefinitely nonstandard and more complicated then necessary.  Also,\nsuch a network will not always behave the same as a network activated\nthe standard way, even with exactly the same structure, which could\ncause cross-platform confusion.  \n\nSee the NEAT FAQ question:\n\n&quot;How are networks with arbitrary topologies activated?&quot;\n\nken \n\n--- In neat@yahoogroups.com, Colin Green &lt;cgreen@d...&gt; wrote:\n&gt; \n&gt; Derek James wrote:\n&gt; \n&gt; &gt;--- In neat@yahoogroups.com, Colin Green &lt;cgreen@d...&gt; wrote:\n&gt; &gt;  \n&gt; &gt;\n&gt; &gt;&gt;Do you need the ID for your XSLT? \n&gt; &gt;&gt;    \n&gt; &gt;&gt;\n&gt; &gt;Yes.  The XSL writes the connection weight out along the path of\nthe \n&gt; &gt;connection, which has to have an id, so to associate the weight\ntext, \n&gt; &gt;there needs to a unique identifier associated with the connection.\n \n&gt; &gt;\n&gt; &gt;  \n&gt; &gt;\n&gt; &gt;&gt;I think the same applies to the \n&gt; &gt;&gt;recurrent flag.\n&gt; &gt;&gt;    \n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt;The XSL draws recurrent connections in red and forward ones in\nblack, \n&gt; &gt;which is useful for visualization.  Any XSL style sheet is not\ngoing \n&gt; &gt;to be smart enough to determine whether a connection is recurrent\nor \n&gt; &gt;not (which, as has been pointed out, can be very complicated\nlogic).\n&gt; &gt;  \n&gt; &gt;\n&gt; Ok, understood. So would you say that both the id and the\n&#39;recurrent&#39; \n&gt; flag can be considered optional? Sorry to seem pedantic on this one\nbut \n&gt; I want to be 100% sure we&#39;re all undestanding each other.\n&gt; \n&gt; &gt;It is probably best to determine whether or not a given connection\nis \n&gt; &gt;recurrent or not, then explicitly store that information in the\nXML.  \n&gt; &gt;This will be necessary for anyone either drawing (if you want to \n&gt; &gt;render that information visually) the network or trying to\nreproduce \n&gt; &gt;its functionality.  \n&gt; &gt;  \n&gt; &gt;\n&gt; Agreed. Right now my own code doesn&#39;t detect recurrency at all, so\nif I \n&gt; have to output a flag then I&#39;ll just set it to false and get all\nblack \n&gt; connections. Not a problem.\n&gt; \n&gt; &gt;In our framework, when a connection is designated &quot;recurrent&quot;, all\nit \n&gt; &gt;really means, from an implementation standpoint, is that the\noutput \n&gt; &gt;from the previous timestep is stored and re-input.\n&gt; &gt;\n&gt; ok. I&#39;m beginning to realise that everyone&#39;s network code may not \n&gt; function quite as I had thought. In SharpNEAT (my pet project) ALL\nof  \n&gt; the neurons store their output value, this then is the basis of \n&gt; calculating the activation input and output for the next time step. \n&gt; Right now I actually loop through each of the neurons once per time \n&gt; slice in the order they appear in the genome, calculating the new\noutput \n&gt; values for each neuron and storing it in a seperate variable on the \n&gt; neuron. A second loop then switches all of the neurons over to\ntheir \n&gt; newly calculated output value ready for the next time step.  This \n&gt; technique is distinct from a routine that actually traverses the \n&gt; network, calculating output values as it goes - which I guess would \n&gt; require a recurrency flag to prevent the traversal from following\nthe \n&gt; loop indefinitely.  Is this network traversal what others are\ndoing?    \n&gt; Anyway, the point being that the technique I use doesn&#39;t know and \n&gt; doesn&#39;t need to know about recurrency, at least not during a\nsimulation, \n&gt; hence my confusion about the recurrency flag up until now :)\n&gt; \n&gt; &gt;  And because it is \n&gt; &gt;not clear whether or not some neurons should be designated\nrecurrent, \n&gt; &gt;it is best to explicitly include that information with the XML.  \n&gt; &gt;\n&gt; If the recuurency flag is an integral part of the network&#39;s\noperation \n&gt; then yes I agree.\n&gt; \n&gt; Regards,\n&gt; \n&gt; Colin.\n\n\n"}}