{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"rPhXMA8EBr-uy0eqPgBrCRA-NEUo9z998KMwsQq5GgrspEP0BqoLBCGlUw4aXt_XQH3zhEhnjzE0p5PVCy0jiOIvjjbQx_CuRiMojvnbg2Xg9kB4yqk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: An improvement over object evolution with CPPNs","postDate":"1227652914","msgId":4487,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGdnaHV2aStnOHJmQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGdmaWF1ZSs5aWEyQGVHcm91cHMuY29tPg=="},"prevInTopic":4470,"nextInTopic":4489,"prevInTime":4486,"nextInTime":4488,"topicId":4444,"numMessagesInTopic":14,"msgSnippet":"Hi, This is not exactly NEAT-related post. I managed to resolve the bug that makes executables that I build with MSVC 2008 not run on all machines even though","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 30874 invoked from network); 25 Nov 2008 22:41:55 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m1.grp.re1.yahoo.com with QMQP; 25 Nov 2008 22:41:55 -0000\r\nX-Received: from unknown (HELO n19c.bullet.scd.yahoo.com) (66.218.67.207)\n  by mta16.grp.scd.yahoo.com with SMTP; 25 Nov 2008 22:41:54 -0000\r\nX-Received: from [66.218.69.3] by n19.bullet.scd.yahoo.com with NNFMP; 25 Nov 2008 22:41:54 -0000\r\nX-Received: from [69.147.65.147] by t3.bullet.scd.yahoo.com with NNFMP; 25 Nov 2008 22:41:54 -0000\r\nX-Received: from [66.218.67.33] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 25 Nov 2008 22:41:54 -0000\r\nDate: Tue, 25 Nov 2008 22:41:54 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;gghuvi+g8rf@...&gt;\r\nIn-Reply-To: &lt;gfiaue+9ia2@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: An improvement over object evolution with CPPNs\r\nX-Yahoo-Group-Post: member; u=283334584; y=HnYIF84sHLjHPLtim_boBpOcuM8LJGQ1RY-8p7TuwYMa26i9vtnlqTFtgw\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nHi, \n\nThis is not exactly NEAT-related post. I managed to resolve the bug \n=\r\nthat makes executables that I build with MSVC 2008 not run on all \nmachines=\r\n even though they have Windows OS. It is about the runtime \nlibraries. \nThe=\r\nre is one small package &quot;Visual C++ 2008 redistributable&quot; at \nMicrosoft&#39;s s=\r\nite, I&#39;ll post a link here so everyone can download it. \nInstall this one a=\r\nnd all executables developed with MSVC 2008 should \nrun without any problem=\r\n. There is also such one for MSVC 2005. I \nwonder why such redistributable =\r\npackages are needed, though. It is \nfrustrating to want to share something =\r\nand errors pop up on the other \nside :/\nSo tell me if there is any problem =\r\nwith the DCPPN and other of my \ndemos now. Thanks. \n\nPeter\n\nVisual C++ 2008=\r\n redistributable:\nhttp://www.microsoft.com/downloadS/details.aspx?familyid=\r\n=3D9B2DA534-\n3E03-4391-8A4D-074B9F2BC1BF&displaylang=3Den\n\nVisual C++ 2005 =\r\nredistributable:\nhttp://www.microsoft.com/downloads/details.aspx?FamilyId=\r\n=3D32BC1BEE-\nA3F9-4C13-9C99-220B62A191EE&displaylang=3Den\n\n\n--- In neat@yah=\r\noogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt; wrote:\n&gt;\n&gt; Peter, DCPPN_.exe=\r\n seems to have a bug.  It crashes when I try to run\n&gt; it.  It says, &quot;the ap=\r\nplication configuration is incorrect&quot; when it\n&gt; crashes.\n&gt; \n&gt; Can you expla=\r\nin a little more the coordinate explosion.  How many\n&gt; coordinates are ther=\r\ne once development is done?  \n&gt; \n&gt; ken\n&gt; \n&gt; --- In neat@yahoogroups.com, &quot;p=\r\netar_chervenski&quot; &lt;petar_chervenski@&gt;\n&gt; wrote:\n&gt; &gt;\n&gt; &gt; The executable is loc=\r\nated in the Files section with the name \n&gt; &gt; &quot;DCPPN_3.exe&quot;.\n&gt; &gt; \n&gt; &gt; Yes I =\r\nhave the same opinion, that the links should be created \nafter \n&gt; &gt; develop=\r\nment. But how should I deal with the &quot;coordinate explosion&quot; \n&gt; &gt; then? Beca=\r\nuse I don&#39;t really know how big the phenotype can get. \nThere \n&gt; &gt; is some =\r\nlimit, of course, but I am looking for an elegant way to \nsolve \n&gt; &gt; the pr=\r\noblem. Rescaling to [-1..1] is more of a hack than a \nsolution.\n&gt; &gt; \n&gt; &gt; Pe=\r\nter\n&gt; &gt; \n&gt; &gt; --- In neat@yahoogroups.com, &quot;Kenneth Stanley&quot; &lt;kstanley@&gt; wro=\r\nte:\n&gt; &gt; &gt;\n&gt; &gt; &gt; Peter, sounds interesting.  I&#39;ll be interested to see the \n=\r\nexecutable\n&gt; &gt; &gt; version to get an intuition of the kinds of structures you=\r\nr \nmethod\n&gt; &gt; &gt; creates.  \n&gt; &gt; &gt; \n&gt; &gt; &gt; About the links:  My guess is that =\r\nit&#39;s best to compute their \nvalues\n&gt; &gt; &gt; at the end of development since th=\r\nat is the &quot;final geometry&quot; of \nthe\n&gt; &gt; &gt; brain that I believe makes sense t=\r\no exploit.  In other words, it \n&gt; &gt; gives\n&gt; &gt; &gt; the brain the opportunity t=\r\no exploit the changes occur over\n&gt; &gt; &gt; development.  Otherwise, it would se=\r\nem that those changes and \nthe\n&gt; &gt; &gt; genes that encode them are not really =\r\nbeing used for any \npurpose.\n&gt; &gt; &gt; \n&gt; &gt; &gt; ken\n&gt; &gt; &gt; \n&gt; &gt; &gt; --- In neat@yaho=\r\nogroups.com, &quot;petar_chervenski&quot; \n&lt;petar_chervenski@&gt;\n&gt; &gt; &gt; wrote:\n&gt; &gt; &gt; &gt;\n&gt;=\r\n &gt; &gt; &gt; Hi all!\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; For those of you who are not familiar with =\r\nthis particular \n&gt; &gt; subject, it \n&gt; &gt; &gt; &gt; is about physical object evolutio=\r\nn with CPPNs. There are some \n&gt; &gt; problems \n&gt; &gt; &gt; &gt; when trying to use CPPN=\r\ns directly to map onto 2/3D objects \nwith \n&gt; &gt; &gt; &gt; finite, though variable =\r\n(among individuals) size. I am \n&gt; &gt; particularly\n&gt; &gt; &gt; interested in this i=\r\nssue because it also holds the key to the \n&gt; &gt; &gt; &gt; automatic generation of =\r\nHyperNEAT substrates as well. And \nperhaps \n&gt; &gt; it \n&gt; &gt; &gt; &gt; may open up new=\r\n ways to have content generation in games, too. \nAnd \n&gt; &gt; &gt; &gt; Artificial Li=\r\nfe, of course.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; I remember that Ken suggested that animal m=\r\norphologies and \nsuch \n&gt; &gt; things \n&gt; &gt; &gt; &gt; may be easier to describe in hig=\r\nher dimensional space and then \n&gt; &gt; mapped \n&gt; &gt; &gt; &gt; back to 2D/3D, just lik=\r\ne in HyperNEAT. Day after day I was \ntrying \n&gt; &gt; to \n&gt; &gt; &gt; &gt; find such a hi=\r\ngher-dimensional description of something that \nhas \n&gt; &gt; &gt; &gt; limbs, joints,=\r\n all with variable numbers and size. Even in the \n&gt; &gt; most \n&gt; &gt; &gt; &gt; simplis=\r\ntic 2D case, I never got even close to such an elegant \n&gt; &gt; &gt; &gt; solution. \n=\r\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Suppose I want to have a 2D creature with rectangular limb=\r\ns. \nBut \n&gt; &gt; how \n&gt; &gt; &gt; &gt; many of them is unknown. How they are connected -=\r\n too. A limb \nis  \n&gt; &gt; &gt; &gt; represented as position in 2D and width/height a=\r\nnd an angle of \n&gt; &gt; &gt; &gt; orientation. This makes 5D space in which I have to=\r\n query all \n&gt; &gt; possible \n&gt; &gt; &gt; &gt; things and ask the CPPN if there is a lim=\r\nb or not. Sounds too \n&gt; &gt; &gt; &gt; expensive, and more, even if I do that, there=\r\n are \n&gt; &gt; &gt; &gt; algorithmic/implementation issues that are just too hard. \n&gt; =\r\n&gt; &gt; &gt; \n&gt; &gt; &gt; &gt; The problem I had is, actually, that I missed the fact that =\r\na \nCPPN \n&gt; &gt; is \n&gt; &gt; &gt; &gt; an infinite mathematical description of the phenot=\r\nype. Any use \nof \n&gt; &gt; a \n&gt; &gt; &gt; &gt; CPPN involves approximating the phenotype =\r\nwith some kind of \nlevel \n&gt; &gt; of \n&gt; &gt; &gt; &gt; detail. The CPPN makes no differe=\r\nnce if I use it for 16x16 \nvisual \n&gt; &gt; &gt; &gt; substrate or 65536x65536, for ex=\r\nample (note: I mean not in \n&gt; &gt; phenotype \n&gt; &gt; &gt; &gt; evaluation). So there mu=\r\nst be a way to have such level of \ndetail \n&gt; &gt; &gt; &gt; scaling in animal morpho=\r\nlogies as well. \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; So I went back to the cellular growth app=\r\nroach, looking for \nwhat I \n&gt; &gt; &gt; &gt; missed before. The biggest unsolved pro=\r\nblem with my previous \n&gt; &gt; system is \n&gt; &gt; &gt; &gt; that coordinates may grow to =\r\ninfinite and the activation \nfunctions \n&gt; &gt; are \n&gt; &gt; &gt; &gt; actually best suit=\r\ned to work in [-1..1] substrates (given the \nfact \n&gt; &gt; I \n&gt; &gt; &gt; &gt; have fixe=\r\nd CPPN weight range and mutation powers). Plus, the \nCPPN \n&gt; &gt; is \n&gt; &gt; &gt; &gt; =\r\nrequeried on each cell on each timestep in the process of \n&gt; &gt; development.=\r\n \n&gt; &gt; &gt; &gt; Too expensive and as the phenotype gets bigger, development \nslow=\r\ns \n&gt; &gt; down \n&gt; &gt; &gt; &gt; to a rate that is not acceptable. And more, it is not =\r\nclear \nhow \n&gt; &gt; &gt; &gt; scaling could work if I want to, say, have the same obj=\r\nect, \nthe \n&gt; &gt; same \n&gt; &gt; &gt; &gt; shape, much bigger, but the cell size and the =\r\ncoordinate \nframes - \n&gt; &gt; &gt; &gt; still fixed. Something was terribly wrong wit=\r\nh that model. But \nI \n&gt; &gt; think \n&gt; &gt; &gt; &gt; I have finally found a solution! O=\r\nr at least something very \nclose \n&gt; &gt; to \n&gt; &gt; &gt; &gt; it.\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; The =\r\nCPPN already encodes all the development of a phenotype \nwith \n&gt; &gt; any \n&gt; &gt;=\r\n &gt; &gt; precision via composing coordinate frames. A whole phenotype \nwith \n&gt; =\r\n&gt; all \n&gt; &gt; &gt; &gt; its patterns with infinite (well at least huge) precision ca=\r\nn \nbe \n&gt; &gt; fit \n&gt; &gt; &gt; &gt; into just the patch of [-1 .. 1] in Cartesian space=\r\n. Assume I \nwill \n&gt; &gt; be \n&gt; &gt; &gt; &gt; talking about 2D space only for simplicit=\r\ny. That patch [-1 .. \n1] \n&gt; &gt; in \n&gt; &gt; &gt; &gt; both X and Y I call &quot;the Egg&quot;. \n&gt;=\r\n &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; The first approach I took with the idea of the egg was too =\r\n\nsimple, \n&gt; &gt; but \n&gt; &gt; &gt; &gt; it is interesting to know about. After the CPPN =\r\n&quot;paints&quot; the \negg \n&gt; &gt; with \n&gt; &gt; &gt; &gt; cell color and stuff, then it is re-qu=\r\neried again, this time \nthe \n&gt; &gt; &gt; &gt; outputs are 2D vectors. The magnitude =\r\nof these vectors was re-\n&gt; &gt; scaled \n&gt; &gt; &gt; &gt; to be within [0 .. MAX_DISTANC=\r\nE]. So the entire phenotype \nbuilding \n&gt; &gt; &gt; &gt; procedure became very simple=\r\n - first build the egg, then send \neach \n&gt; &gt; &gt; &gt; cell where its vector poin=\r\nts. Well that looks so ugly in \npractice, \n&gt; &gt; &gt; &gt; with empty holes and.. e=\r\nh.. forget that! This is not anything \nmore \n&gt; &gt; &gt; &gt; advanced than just pai=\r\nnting the CPPN output directly like in \n&gt; &gt; &gt; &gt; Picbreeder, just a fancy wa=\r\ny of doing the same. \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Then I realized that these &quot;cells&quot; c=\r\nan be also thought of an \n&gt; &gt; &gt; &gt; abstractions of &quot;masses/groups of cells&quot;.=\r\n In nature, cells \ndon&#39;t \n&gt; &gt; just \n&gt; &gt; &gt; &gt; go &quot;that way&quot; moving through ea=\r\nch other, but stick together. \n&gt; &gt; Entire \n&gt; &gt; &gt; &gt; tissues develop fast as =\r\na mass of cells divides and increases \n&gt; &gt; size. So \n&gt; &gt; &gt; &gt; I had this ins=\r\night. I changed the concept of a cell and \nimproved \n&gt; &gt; over \n&gt; &gt; &gt; &gt; the =\r\nprevious model. A cell is a circle with a radius, has a \ncolor \n&gt; &gt; and \n&gt; =\r\n&gt; &gt; &gt; has mass. It also has more properties but more on that after a \nfew \n=\r\n&gt; &gt; &gt; &gt; other words. \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; This is the key idea. In my previous=\r\n model, the CPPN was \n&gt; &gt; instructing a \n&gt; &gt; &gt; &gt; big mass of many cells on =\r\nthe fly, during development time. It \n&gt; &gt; took \n&gt; &gt; &gt; &gt; advantage of using =\r\ntime as input, so the development was like \na \n&gt; &gt; &gt; &gt; spatial pattern in 4=\r\nD. But it suffered from the coordinates \nand \n&gt; &gt; other \n&gt; &gt; &gt; &gt; problems I=\r\n mentioned above. In this model, the CPPN does not \n&gt; &gt; operate \n&gt; &gt; &gt; &gt; on=\r\n the cells during development. The CPPN predetermines the \nfate \n&gt; &gt; of \n&gt; =\r\n&gt; &gt; &gt; each cell right in the egg, before development begins. \nEverything \n&gt;=\r\n &gt; else \n&gt; &gt; &gt; &gt; during development is a consequence of the cell&#39;s fate and=\r\n the \n&gt; &gt; &gt; &gt; internal 2D physics world in which the phenotype develops. So=\r\n, \nin \n&gt; &gt; &gt; &gt; simpler words, the CPPN is programming the egg.\n&gt; &gt; &gt; &gt; \n&gt; &gt;=\r\n &gt; &gt; A cell has the following properties that are determined by the \n&gt; &gt; CP=\r\nPN:\n&gt; &gt; &gt; &gt; - Color (of course :)\n&gt; &gt; &gt; &gt; - Growth rate. How fast it increa=\r\nses size in % of circle area. \n&gt; &gt; &gt; &gt; - Time to begin growth. It is a valu=\r\ne in [0 .. 1] where 1 is \nthe \n&gt; &gt; total \n&gt; &gt; &gt; &gt; number of time steps allo=\r\ncated for development.\n&gt; &gt; &gt; &gt; - Growth time duration. Between some min and=\r\n max value.\n&gt; &gt; &gt; &gt; - Angle for division splitting. Between [-1 .. 1], duri=\r\nng \n&gt; &gt; development \n&gt; &gt; &gt; &gt; rescaled to [0 .. pi]\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; As cell=\r\ns grow, they will inevitably overlap each other. This \nissue \n&gt; &gt; is \n&gt; &gt; &gt;=\r\n &gt; handled by the internal simple 2D physics engine that adds \nforces \n&gt; &gt; =\r\nif \n&gt; &gt; &gt; &gt; the circles overlap. So they eventually will converge to a \nsta=\r\nte \n&gt; &gt; that \n&gt; &gt; &gt; &gt; they only touch each other, and the whole phenotype b=\r\nigger of \n&gt; &gt; course. \n&gt; &gt; &gt; &gt; Cells can divide. Division is automatic. If =\r\na cell&#39;s radius \n&gt; &gt; reaches a \n&gt; &gt; &gt; &gt; a fixed treshold value, it is split=\r\n into 2 cells, each one \nhaving \n&gt; &gt; &gt; &gt; exactly half the area of the mothe=\r\nr cell. The mother cell is \nsplit \n&gt; &gt; &gt; &gt; along a predetermined angle, so =\r\nthe CPPN can control the \noverall \n&gt; &gt; &gt; &gt; directions of growth for the phe=\r\nnotype. The 2 children overlap \nin \n&gt; &gt; the \n&gt; &gt; &gt; &gt; beginning, but as time=\r\n progresses, they are pulled apart by \nthe \n&gt; &gt; &gt; &gt; physics. Children cells=\r\n inherit the properties of the mother, \nbut \n&gt; &gt; &gt; &gt; change their positions=\r\n and reset their lifetime timers. The \ncells \n&gt; &gt; in \n&gt; &gt; &gt; &gt; the egg count=\r\n their children and their grandchildren as well. \nNo \n&gt; &gt; more \n&gt; &gt; &gt; &gt; tha=\r\nn 3 generations of division can occur, in order to keep the \n&gt; &gt; number \n&gt; =\r\n&gt; &gt; &gt; of cells relatively small for performance considerations. \nThough \n&gt; =\r\n&gt; this \n&gt; &gt; &gt; &gt; value can be changed. \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; In order to keep th=\r\ne phenotype solid, not torn apart from \ninternal \n&gt; &gt; &gt; &gt; velocities, a mas=\r\ns-spring grid mesh is created in the egg \nbefore \n&gt; &gt; &gt; &gt; development. Cell=\r\n divisions update the mesh. The mass-spring \nmesh \n&gt; &gt; plus \n&gt; &gt; &gt; &gt; the ce=\r\nll-to-cell overlapping prevention forces act together as \nthe \n&gt; &gt; &gt; &gt; phen=\r\notype increases in size and number of cells. Eventually it \n&gt; &gt; will \n&gt; &gt; &gt;=\r\n &gt; become more stiff, where large group of recently divided cells \nare \n&gt; &gt;=\r\n &gt; &gt; packed together. I don&#39;t know if that is a bug or a feature :) \n&gt; &gt; &gt; =\r\n&gt; \n&gt; &gt; &gt; &gt; There is one insight I had after seeing the results. Watching \nt=\r\nhe \n&gt; &gt; mesh \n&gt; &gt; &gt; &gt; develops, and some with interesting shapes and config=\r\nurations, \n&gt; &gt; makes \n&gt; &gt; &gt; &gt; me think this approach is very well suited to=\r\n evolve HyperNEAT \n&gt; &gt; &gt; &gt; substrates as well. In fact I am about to add br=\r\nains to these \n&gt; &gt; &gt; &gt; creatures right this evening :) But I don&#39;t know, if=\r\n the links \n&gt; &gt; should \n&gt; &gt; &gt; &gt; be determined from the beginning right in t=\r\nhe egg or after \n&gt; &gt; &gt; &gt; development. Any suggestions? \n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; We=\r\nll this is it. I hope this may be some advance into the \nfield. I \n&gt; &gt; &gt; &gt; =\r\nwill be happy to see any thoughts about this stuff. I&#39;ll post \nan \n&gt; &gt; &gt; &gt; =\r\nexecutable compiled with VS2008 in the files section now, so \nyou \n&gt; &gt; will=\r\n \n&gt; &gt; &gt; &gt; see it in action. Note however, that it is just a demo of \n&gt; &gt; de=\r\nvelopment, \n&gt; &gt; &gt; &gt; not evolution. There is no doubt that this thing combin=\r\ned with \n&gt; &gt; NEAT \n&gt; &gt; &gt; &gt; will make at least something very very cool. :) =\r\n\n&gt; &gt; &gt; &gt; \n&gt; &gt; &gt; &gt; Peter\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n\n"}}