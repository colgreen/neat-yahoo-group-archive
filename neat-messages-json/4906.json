{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"GhOUSZC1pQf-Te3CDqpvapiRFPVQuzZMGmxKrZfgYPuVsKJe6uXejUKInmXWldQYaFiS045PVmjpZWPugRxfHApKONeK","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: spawning overflow","postDate":"1258928097","msgId":4906,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhlY2Q1MStpNmZtQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGhlNmZzaStubnRkQGVHcm91cHMuY29tPg=="},"prevInTopic":4904,"nextInTopic":4981,"prevInTime":4905,"nextInTime":4907,"topicId":4903,"numMessagesInTopic":4,"msgSnippet":"Different versions of NEAT will vary in precisely how they allocate offspring to species.  However, ideally the number of children assigned to each species","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 64889 invoked from network); 22 Nov 2009 22:15:24 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m5.grp.sp2.yahoo.com with QMQP; 22 Nov 2009 22:15:24 -0000\r\nX-Received: from unknown (HELO n42b.bullet.mail.sp1.yahoo.com) (66.163.168.156)\n  by mta2.grp.sp2.yahoo.com with SMTP; 22 Nov 2009 22:15:24 -0000\r\nX-Received: from [69.147.65.173] by n42.bullet.mail.sp1.yahoo.com with NNFMP; 22 Nov 2009 22:14:58 -0000\r\nX-Received: from [98.137.34.184] by t15.bullet.mail.sp1.yahoo.com with NNFMP; 22 Nov 2009 22:14:58 -0000\r\nDate: Sun, 22 Nov 2009 22:14:57 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hecd51+i6fm@...&gt;\r\nIn-Reply-To: &lt;he6fsi+nntd@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: spawning overflow\r\nX-Yahoo-Group-Post: member; u=54567749; y=RVOda-sxfhJgL7HTx6NAofWhS0S0YpcX0HOx05xupw82u0DYbKjh\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nDifferent versions of NEAT will vary in precisely how they allocate offsp=\r\nring to species.  However, ideally the number of children assigned to each =\r\nspecies should be determined before the children are actually created.  Thu=\r\ns there should never be a need to delete any &quot;excess&quot; genomes, because they=\r\n will not be created until the numbers are worked out to sum to the proper =\r\ntotal.\n\nken\n\n--- In neat@yahoogroups.com, &quot;rvonwahlde&quot; &lt;rvonwahlde@...&gt; wro=\r\nte:\n&gt;\n&gt; How do you work around the problem when the total number of childre=\r\nn each species spawns is greater than the desired population size?\n&gt; \n&gt; Buc=\r\nkland&#39;s NEAT for Windows code is meant to stop spawning members when the po=\r\npulation size is reached.  I think this prevents the last species in the li=\r\nst from spawing.\n&gt; \n&gt; The code at http://neat-python.googlecode.com removes=\r\n the last added members.\n&gt; \n&gt; In either case, as the python code notes, &quot;Th=\r\nis is dangerous! I can&#39;t remove a species&#39; representant!&quot; i.e. a species ex=\r\nemplar with which newly spawned genomes will be compared.\n&gt; \n&gt; I have consi=\r\ndered killing off any species that is not allowed to spawn all its offsprin=\r\ng.  I already do so if the spawns required from a given species rounds to z=\r\nero.\n&gt; \n&gt; Or should I just remove any overflow genomes first making sure it=\r\n is not a species exemplar?\n&gt;\n\n\n\n"}}