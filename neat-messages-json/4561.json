{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":211599040,"authorName":"Jeff Clune","from":"Jeff Clune &lt;jclune@...&gt;","profile":"jeffreyclune","replyTo":"LIST","senderId":"mrVDIB_ab9eZ0vCWtlM6z0BR26S0yXx3FnZ_R4YRPzKq-b8o35lTKgO4OzaWrvo3yBI2iazyS2AiBLImkKz3oT6d","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [neat] Re: Evolving Coordinated Quadruped Gaits with the  HyperNEAT Generative Encoding","postDate":"1234756126","msgId":4561,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEM1QkU0QzRFLjI4NUQxJWpjbHVuZUBtc3UuZWR1Pg==","inReplyToHeader":"PDcyN2E0MDZjMDkwMjE1MTU1NXc1ZTM1NDFlM3BkNWI5NThlY2M2Njg4MjQ5QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4560,"nextInTopic":4562,"prevInTime":4560,"nextInTime":4562,"topicId":4550,"numMessagesInTopic":42,"msgSnippet":"... Thanks Colin. By commercial opportunities, do you mean in the domain of real (not simulated) legged robots? If so, I agree. I d love to test this out on a","rawEmail":"Return-Path: &lt;jclune@...&gt;\r\nX-Sender: jclune@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 41675 invoked from network); 16 Feb 2009 03:48:52 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m54.grp.scd.yahoo.com with QMQP; 16 Feb 2009 03:48:52 -0000\r\nX-Received: from unknown (HELO mail-qy0-f20.google.com) (209.85.221.20)\n  by mta18.grp.scd.yahoo.com with SMTP; 16 Feb 2009 03:48:51 -0000\r\nX-Received: by qyk13 with SMTP id 13so1587623qyk.21\n        for &lt;neat@yahoogroups.com&gt;; Sun, 15 Feb 2009 19:48:51 -0800 (PST)\r\nX-Received: by 10.224.73.143 with SMTP id q15mr7139964qaj.309.1234756130950;\n        Sun, 15 Feb 2009 19:48:50 -0800 (PST)\r\nReturn-Path: &lt;jclune@...&gt;\r\nX-Received: from ?10.0.1.199? (c-76-20-191-220.hsd1.mi.comcast.net [76.20.191.220])\n        by mx.google.com with ESMTPS id 5sm16499838yxt.44.2009.02.15.19.48.49\n        (version=TLSv1/SSLv3 cipher=RC4-MD5);\n        Sun, 15 Feb 2009 19:48:49 -0800 (PST)\r\nUser-Agent: Microsoft-Entourage/12.13.0.080930\r\nDate: Sun, 15 Feb 2009 22:48:46 -0500\r\nTo: &quot;neat@yahoogroups.com&quot; &lt;neat@yahoogroups.com&gt;\r\nMessage-ID: &lt;C5BE4C4E.285D1%jclune@...&gt;\r\nThread-Topic: [neat] Re: Evolving Coordinated Quadruped Gaits with the \n HyperNEAT Generative Encoding\r\nThread-Index: AcmP6Xf9pPfX5ml5/0CBuvFzeEvX6w==\r\nIn-Reply-To: &lt;727a406c0902151555w5e3541e3pd5b958ecc6688249@...&gt;\r\nMime-version: 1.0\r\nContent-type: text/plain;\n\tcharset=&quot;US-ASCII&quot;\r\nContent-transfer-encoding: 7bit\r\nX-eGroups-Msg-Info: 2:4:8:0:0\r\nFrom: Jeff Clune &lt;jclune@...&gt;\r\nSubject: Re: [neat] Re: Evolving Coordinated Quadruped Gaits with the \n HyperNEAT Generative Encoding\r\nX-Yahoo-Group-Post: member; u=211599040; y=TTZS-1el0yRzPvQDhFj2Cl8fNy7oI2h157WWPmfxncU5PlUSOJ45\r\nX-Yahoo-Profile: jeffreyclune\r\n\r\n&gt; Thanks for posting the paper, nice work. It&#39;s another clear win for\n&gt; HyperNEAT and in an area with commercialisation opportunities I would\n&gt; suggest.\n\nThanks Colin. By commercial opportunities, do you mean in the domain of real\n(not simulated) legged robots? If so, I agree. I&#39;d love to test this out on\na real robot. Unfortunately, I can&#39;t find any commercially available robots\nthat also have a decent simulator. I have searched a fair bit and have not\ncome up with anything. The community used to use AIBO but Sony killed that\nproduct. Unfortunately, and surprisingly, nothing has really replaced it\n(that I have found).\n\nDo you know of any robots that can be bought and have a high-fidelity\nsimulator (preferably in ODE)?\n\n&gt;&gt; 1) Biped gaits are harder to evolve than quadruped gaits.\n&gt; \n&gt; I think most would agree that biped is more difficult because of the\n&gt; need to maintain balance, something which probably requires slightly\n&gt; different strategies for different speeds - certainly between walking\n&gt; and running - and for acceleration and deceleration.\n\nI completely agree that bipeds are more difficult. But since others have had\nsuccess evolving bipeds (e.g., Tyler Streeter&#39;s work), I doubt this gap in\ndifficulty explains all of the difference in results between Petar&#39;s\nexperiment and my own.\n\n&gt;&gt; 2) The sine wave I provided made it really easy to evolve periodic gaits\n&gt; [...]\n&gt;&gt; As a side note, I tried to evolve the period for a short while and it was a\n&gt;&gt; miserable failure.\n&gt; \n&gt; Was the period encoded into each genome or a global experiment\n&gt; variable? Perhaps you could try using one of the free outputs as the\n&gt; sine wave period?\n\nFor the experiments in the paper, the period was a global experiment\nvariable. I did try to evolve the period once and it did not really work.\nI&#39;ll tell you what I did and maybe you&#39;ll have an idea as to what went\nwrong. \n\nThe first question is whether to allow the period of the sine wave to change\nduring the lifetime of the organism. I decided that I should start simple\nand use a value that was constant during the life of the organism. Instead\nof the normal inputs and outputs of the substrate, which change every time\nstep, the period thus needs to be specified only once. That led me away from\nusing the *substrate&#39;s* output to specify the period. I instead used the\nCPPN&#39;s output. I did not want to add an extra output node to the CPPN,\nbecause I only need one value for the period and the CPPN gets queried for\neach link in the substrate. I settled on querying the CPPN once with a\ngeometric coordinate that was not associated with any of the other inputs or\noutputs, and using that value as the period. Specifically, I queried the\nCPPN with NumInputNodesX+10, numInputNodesY+10 once at the beginning of the\nrun. The output, which ranged from -1 to 1, was then scaled up to a given\nrange. \n\nI found that organisms nearly always (90% or more of the time) maxed out the\nnumber that was used to determine the period (higher output numbers meant a\nslower period). , and then ignored the sine wave input in their evolved\ngait. This would happen even if the range was set to allow ridiculously slow\nperiods that were longer than the duration of their lives. So, I don&#39;t think\nit was selection for a slow gait pushing the output value up. I wondered\nwhether there was saturation of the CPPN output neuron (maybe because I was\ninputting numbers that were larger than the CPPN normally dealt with),  so I\ntried selecting for lower periods. They promptly evolved low outputs\n(meaning fast periods), proving that it was not impossible for selection to\nachieve that aim. Maybe it has to do with fitness landscapes: early on it\nmay be easier to not have that sine wave as noise, so they try to minimize\nit. That precludes them from then using a good period which would have\nhelped them if they were forced to deal with it. I should also note that\nthese experiments were conducted in an older setup with a few kinks in it,\nso I should give it another go. But if anyone can immediately spot the\nproblem I&#39;d love to hear suggestions.\n\n&gt;&gt; 3) Leaky integrators hurt performance for some reason.\n&gt; \n&gt; I suspect the need for them is reduced by your use of a PID\n&gt; controller. Without a hard coded PID controller on each joint the\n&gt; leaky integrators may allow the neural net to evolve that\n&gt; functionality, and perhaps improve on the standard PID approach.\n\nThat was my thinking as well (that with a PID setup the leaky integrators\nwere not essential). It would be interesting and cool to see if evolution\ncould use LIs to improve on the PID controller (which really does take a lot\nof control out of evolution&#39;s hands, but also makes it an easier problem).\n\n&gt; Also if we were using a recursive neural net then leaky integrators\n&gt; should (I think) allow the network to generate a since wave\n&gt; internally, thus removing the need for an externally provided wave.\n\nI did try recursion without LIs and it hurt performance, but it would be\ninteresting to try your idea.\n\nThanks for the suggestions. I really appreciate the feedback.\n\n&gt; \n&gt; Colin.\n\n\n\n"}}