{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"4_klL5K7b6jjdUmWXVd81SD2ByCgfjVLhxqgh9b1hzpsjmo9X9nXsY-JwAMs1eKPDM5DjSrn1faIxMRi_k54gAejvKZgUARRfT4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: multi-agent vision systems","postDate":"1085047343","msgId":809,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMS4wLjYuMC4yMDA0MDUyMDEwNTcyNi4wMjRiOGY2OEBwb3AubWFpbC55YWhvby5jby51az4=","inReplyToHeader":"PGM4YmNpMytncmJyQGVHcm91cHMuY29tPg==","referencesHeader":"PGZlM2EwMWM0M2M1MSQyZTFkODJjMCQ2NmNiMDEwYUBtYWlsMndvcmxkLmNvbT4gPGM4YmNpMytncmJyQGVHcm91cHMuY29tPg=="},"prevInTopic":799,"nextInTopic":0,"prevInTime":808,"nextInTime":810,"topicId":794,"numMessagesInTopic":3,"msgSnippet":"... Just from the speed point of view, if your objects are circles (or spheres) then you can still usefully use sectors: 1) calculate the center of each object","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 65095 invoked from network); 20 May 2004 10:00:54 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m23.grp.scd.yahoo.com with QMQP; 20 May 2004 10:00:54 -0000\r\nReceived: from unknown (HELO smtp001.mail.ukl.yahoo.com) (217.12.11.32)\n  by mta4.grp.scd.yahoo.com with SMTP; 20 May 2004 10:00:53 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp001.mail.ukl.yahoo.com with SMTP; 20 May 2004 10:00:51 -0000\r\nMessage-Id: &lt;6.1.0.6.0.20040520105726.024b8f68@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.1.0.6\r\nDate: Thu, 20 May 2004 11:02:23 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;c8bci3+grbr@...&gt;\r\nReferences: &lt;fe3a01c43c51$2e1d82c0$66cb010a@...&gt;\n &lt;c8bci3+grbr@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.32\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: multi-agent vision systems\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 22:58 17/05/2004, you wrote:\n&gt;Hi Chad, now I see where the question came from.  I didn&#39;t realize you\n&gt;were looking at objects that weren&#39;t just considered as &quot;points.&quot;\n&gt;\n&gt;When looking at large contiguous objects, it no longer makes sense to\n&gt;use radar-like sensors.  Rays are better for that kind of thing.  So\n&gt;you send out several rays (at different angles) and see where they\n&gt;intersect.  Generally radar sensors are better for point-like objects,\n&gt;such as people.  The reason is that rays are likely to miss small\n&gt;objects that don&#39;t span most of the arc.\n\nJust from the speed point of view, if your objects are circles (or spheres) \nthen you can still usefully use sectors:\n\n1) calculate the center of each object as an angle from the viewpoint - \ncall this bearing\n2) calculate the angle spanned by the diameter of the object at the range \nit has - call this width\n3) report the object in all sectors from bearing - (width/2) to bearing + \n(width/2)\n\nYou need a couple of inverse trig functions but if that is a (speed) \nproblem for you, precalculate some look up tables.\n\n         Ian Badcoe\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n\n"}}