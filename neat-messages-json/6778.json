{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":561746680,"authorName":"Fred Mitchell","from":"Fred Mitchell &lt;lordalveric@...&gt;","profile":"lordalveric","replyTo":"LIST","senderId":"bfYCQMrhaciKx39o_pe20NhX8_jWRivY4FrNL-POYNwTGe1m0J261_fIRzi4uZi5xGIlupHHuBd_kzpLz5UcgvJj2zrPrbOz6Ehf5w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Batching the population on GPU?","postDate":"1492855774","msgId":6778,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDExOTg4MzkyOTEuNzQ2ODUxNy4xNDkyODU1Nzc0NDM5QG1haWwueWFob28uY29tPg==","inReplyToHeader":"PENBRTBNK1llVjQyQ0pQVlV4TGtlZDh5djBFWHV4bkJ1OUJOeTZkYTdhMk5xTjJKOEJ4Z0BtYWlsLmdtYWlsLmNvbT4=","referencesHeader":"PG9kNDNrOCszZTdiNDRAWWFob29Hcm91cHMuY29tPiA8Q0FFME0rWWVWNDJDSlBWVXhMa2VkOHl2MEVYdXhuQnU5Qk55NmRhN2EyTnFOMko4QnhnQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":6772,"nextInTopic":6779,"prevInTime":6777,"nextInTime":6779,"topicId":6770,"numMessagesInTopic":7,"msgSnippet":"RubyNEAT does not use matrices at all, but instead uses functional programming, as the neural networks are a set of functions that call each other. I have had","rawEmail":"Return-Path: &lt;lordalveric@...&gt;\r\nX-Sender: lordalveric@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 9618 invoked by uid 102); 22 Apr 2017 10:12:52 -0000\r\nX-Received: from unknown (HELO mtaq3.grp.bf1.yahoo.com) (10.193.84.142)\n  by m3.grp.bf1.yahoo.com with SMTP; 22 Apr 2017 10:12:52 -0000\r\nX-Received: (qmail 27069 invoked from network); 22 Apr 2017 10:12:52 -0000\r\nX-Received: from unknown (HELO mta1005.groups.mail.ne1.yahoo.com) (98.138.100.120)\n  by mtaq3.grp.bf1.yahoo.com with SMTP; 22 Apr 2017 10:12:52 -0000\r\nX-Original-Return-Path: &lt;lordalveric@...&gt;\r\nX-Received-SPF: pass (domain of yahoo.com designates 98.136.216.247 as permitted sender)\r\nX-YMailISG: Bq.YWK0WLDtvifBdRV.o_qdW5ZxkbsCCc0FUsWm0s7zbPRX1\n nM3.k4FXCtsjQQnukXUnlVf5U2qemWpOq09JBvhyBIqHssVZchOjfkg3ij7S\n ARC_DZCPMp4TzaTm8cvDXn.ATtD7xcI_XX8bm6ESTfqTwKJTuBytJ7iPeVWT\n oht7q7G3M.QimZODkSJy1QEnSvm4VOqIIBaIq170eV1aC12QoTqSuLj7tWXZ\n VF9fDA2ehdFgTuu_eA4uvSktEoycRRzznVWJ5sHUgIeZerrHK2A7zFQgwc3i\n b3B2Gde9EVk2t.O0Uor_G4PJp7ld3u7w7tf8vAQcEuMBVQ1QKwblVIp5hkE0\n a4Bp_h5Us6uqXlvcvbPjvSpYrxzZfP0LMGiBMjmCNLxvX6UEDmf9qPfXSeVc\n Ix.p_br7ySAn1XekJiWuTDe94C4V9aPnq6CNasXmcXuJe0mTgVHCudJ0ZAgk\n Wkaxx7nTbO5T34Nl6sm3.JuACiyIGwyg3ji2xLJMI0jbyHArE2791YG_nmfT\n 7pBaxYp9UvTBCof92wZSNwKrEqnmjB8qmPEExeRssEdGEF_ofYjGEbXs8zkY\n rGBMHxeT5Jzf3c1pd1n0a0YRdvbL1cy1znl5cB_lUm08FWsnzCB17br7r_f.\n WfKf3FBmmX4U8gaeCVeBhwOirZVTqFzj644CNU.I7sY3KblGsJJiW2rrApPu\n 7BGcvN6N5FlOlsM5p1y0RXi_YnwMA35OD5g8kyvqm3LKQePizpAnrwohCB6N\n yWJX_5VAkdp6AjFu_FntQc2PlUB5BfTs23CmduawC6TMUc9VDtw1FxZ7SYDG\n .ghj3Se1JmxMH94dz2HO5fbIz5BAi7STtpD5nl4ZItel4nFdljfwv82acPhM\n kMAQnKz1cJuU936HJwR3CjSMZdEU6rSI7GhoXSaMKdB6JKDySsG.VNFRvnvn\n ispobEZ24xFlWU5.4IESo6BWy5iA5Z3Tlfsiq915VCJS4fviH1PxV7oSdeED\n WdBJAbKa1ypaOorZHtH0tAc0_MJoM33wMGeoShJhpjsZC5UKbU5W4MA0hB.k\n eZi4cd.SIPgeDtzH2DdOROG9TJ9YaEbymkwwrJnHVkNStofkTUs5I0oZEs9Z\n vcdo0I2pBT56PxogkKh5eC71y7mBOIDY0BnmOPdO_yBkjXN3tXCR8iub0wMj\n GQgpUGSkvxcLr7FZHqkDmHUMo.A7qxozDgmN.X017OBfnAzWsbCyBXMNMXar\n dF4ZDoqbAFjhH7GfbxigLWlFmWvjyNr5WNUME.oeh11UV7HM1vi_gHwpaO5o\n 6mhAGaFBcR2mhD8MHpPzcIrksw9WLMQ4w4DhbXCt_oIYQMMAK0P.qzM.6ByG\n zrzJutGyrnJpjJgxQicHecG4ylzEda9_ewlizPl0imL16awD1ndjhb3vonYb\n AOE66ZvI6KaXUnWonwYmqevd76MQd0uP2zrz.bP7MIYrAWqhE_GM9aE2dzA3\n yjdyR5TnkKemri4_TxYQIbF4W.c-\r\nAuthentication-Results: mta1005.groups.mail.ne1.yahoo.com  from=yahoo.com; domainkeys=neutral (no sig);  from=yahoo.com; dkim=pass (ok)\r\nX-Received: from 127.0.0.1  (EHLO nm33-vm8.bullet.mail.gq1.yahoo.com) (98.136.216.247)\n  by mta1005.groups.mail.ne1.yahoo.com with SMTPS; Sat, 22 Apr 2017 10:12:51 +0000\r\nX-Received: from [127.0.0.1] by nm33.bullet.mail.gq1.yahoo.com with NNFMP; 22 Apr 2017 10:12:50 -0000\r\nX-Received: from [216.39.60.181] by nm33.bullet.mail.gq1.yahoo.com with NNFMP; 22 Apr 2017 10:10:01 -0000\r\nX-Received: from [98.137.12.223] by tm17.bullet.mail.gq1.yahoo.com with NNFMP; 22 Apr 2017 10:10:01 -0000\r\nX-Received: from [127.0.0.1] by omp1031.mail.gq1.yahoo.com with NNFMP; 22 Apr 2017 10:10:01 -0000\r\nX-Yahoo-Newman-Property: ymail-4\r\nX-Yahoo-Newman-Id: 766777.79069.bm@...\r\nX-YMail-OSG: 6mCogegVM1lqgWlIugQ2ZJZUrrBmzLv8J6H6twomt4rjoHKfobL6ua1eOrpjp.d\n .yS39Lj0wC9OjeHxLSvHVUOnAwKzDaUcDlP2ZYcruwIdOk.CgyZ7PUn0pAZrT_fzY6Vx51W0g6wr\n gID0o0NRirQjjzyLPuN9oubwAE134dEhsCf7w6Pu9jQwX5HwyuDzd_eXPdftUUyizk5Vx7xYFiUR\n fENF0kFV0v9nwn91Z3nReZChaPWWY_14BCgqoCRqACwMzIBakiJL2fsAVIGcjM8gGVUq6uBxQV8m\n 36YlaDU3q0afqM5f3XTowGtBB64ENCZbX6TxRk01fhlxKYfyImmK29l1pTeqYG5sp5YuoZhSHrkT\n oyacGJI8bHIx7Id1GUtriIp1mMPDnAajvknn7tWgOEZ9Aqg7hEBSiGXL0FJfi_jfEq5VRk8MRAyi\n kUJva2DYeRaqYLhXUYs0q9ywBv5ysNHc7wyvfyhP9x4jZ9CjU4Ghfq1exbIa5hL3nx8XW4Dp.OHM\n GinK0KiayfpDA\r\nX-Received: from jws300082.mail.gq1.yahoo.com by sendmailws148.mail.gq1.yahoo.com; Sat, 22 Apr 2017 10:10:01 +0000; 1492855801.385\r\nDate: Sat, 22 Apr 2017 10:09:34 +0000 (UTC)\r\nTo: &quot;neat@yahoogroups.com&quot; &lt;neat@yahoogroups.com&gt;\r\nMessage-ID: &lt;1198839291.7468517.1492855774439@...&gt;\r\nIn-Reply-To: &lt;CAE0M+YeV42CJPVUxLked8yv0EXuxnBu9BNy6da7a2NqN2J8Bxg@...&gt;\r\nReferences: &lt;od43k8+3e7b44@...&gt; &lt;CAE0M+YeV42CJPVUxLked8yv0EXuxnBu9BNy6da7a2NqN2J8Bxg@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; \n\tboundary=&quot;----=_Part_7468516_1398327402.1492855774434&quot;\r\nX-Mailer: WebService/1.1.9408 YahooMailNeo Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\r\nContent-Length: 31069\r\nReply-To: Fred Mitchell &lt;lordalveric@...&gt;\r\nSubject: Re: [neat] Batching the population on GPU?\r\nX-Yahoo-Group-Post: member; u=561746680; y=ze4aheYGB4YFOxI4qprnSznZv2s2rrxQiKLyf0EUFwYGGiWE2O4\r\nX-Yahoo-Profile: lordalveric\r\nFrom: Fred Mitchell &lt;lordalveric@...&gt;\r\n\r\n\r\n------=_Part_7468516_1398327402.1492855774434\r\nContent-Type: text/plain; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nRubyNEAT does not use matrices at all, but instead uses functional programm=\r\ning, as the neural networks are a set of functions that call each other. I =\r\nhave had some thoughts on doing this on a GPU, but it may not make sense in=\r\n my case.=C2=A0\nAt any rate, this turned out to be the fastest way to do NE=\r\nAT in Ruby without resorting to calling a C layer. I am currently working o=\r\nn emitting the code as ASTs and distributing them across a queuing mechanis=\r\nm, like RabbitMQ, to workers who can run on many separate (virtual) machine=\r\ns to yank a network, compile it, evaluate it and send the results back.=C2=\r\n=A0\nHas anyone else taken this functional approach? Or are most implementat=\r\nions relying on matrices? Any thoughts as to which approach is better?=C2=\r\n=A0\nKind Regards,\n\nFred Mitchell,=C2=A0\n\n\nSkype: flajann\n \n\n    On Tuesday,=\r\n 18 April 2017, 7:15, &quot;Colin Green colin.green1@... [neat]&quot; &lt;neat@yah=\r\noogroups.com&gt; wrote:\n \n\n =C2=A0   Hi Stefano,\n\n&gt; The issue is that in NE we=\r\n have many relatively small matrices\n&gt; whereas with traditional ML methods =\r\nwe have few very large matrices.\n&gt; The latter are trivially easy to take ad=\r\nvantage of with GPU hardware.\n\nTraditional NEAT could be viewed as evolving=\r\n one large sparse matrix,\ni.e. imagine one large matrix with all of the nod=\r\ne IDs across the top,\nand again down the side. All of the main math librari=\r\nes with matrix\noptimizations have support for sparse matrices and a handful=\r\n of\nstandard compressed formats, CSR being the main format:\n\nhttps://en.wik=\r\nipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_.28CSR.2C_CRS_or_Yale_f=\r\normat.29\n\nE.g. CUDA has support, as does Intel MKL, ATLAS, OpenBLAS, etc. E=\r\n.g.:\n\nhttps://developer.nvidia.com/cusparse\n https://software.intel.com/en-=\r\nus/node/471374\n\nHowever, the performance compared to dense matrices is far =\r\nless in\nterms of number of connections handled per sec, because fundamental=\r\nly\nthe data is no longer in contiguous chunks that can be loaded,\noperated =\r\non, and stored, in efficient hardware vector operations. But\nthere is still=\r\n a boost to be had, especially on GPUs where you have\nlots of parallel comp=\r\nute units as well as vector instructions.\n\nIt may also be possible to analy=\r\nse the connectivity graph to assign a\nlayer number to each node, and then u=\r\nse one matrix between each pair\nof layers that are connected, because in NE=\r\nAT we have no restriction\non which nodes are connected to each other (e.g. =\r\nlayer 1 connecting\ndirectly to layer 10, or in even layer 10 connecting to =\r\nlayer 1 (as an\naside, in sharpneat I define depth in cyclic nets as the min=\r\nimum\nnumber of hops to get to a node from the input layer). The idea/hope\nb=\r\neing that each intra-layer matrix would be dense enough that we could\nuse d=\r\nense matrix format with zero weights for the absent connections.\nHowever, u=\r\nnless they are reasonably dense then this won&#39;t outperform a\nsingle large s=\r\nparse matrix.\n\nWe could also conceive of modifying NEAT so that it evolved =\r\nstructure\nmore conducive to the optimizations that are available, so e.g.\ne=\r\nvolving actual layers where connectivity is strictly enforced to be\nbetween=\r\n adjacent layers. My hunch is that there may be merit to this\napproach.\n\nIn=\r\n HyerNEAT we get to define the substrate by hand, so the networks\ntend to b=\r\ne more regular and dense, so I believe dense matrices could\nbe a big boost =\r\nin running the final networks, but not CPPNs because\nthey have the above di=\r\nscussed problems - since CPPNs are essentially\nNEAT but with the added prob=\r\nlem of allowing different activation\nfunctions per node (maybe I should cal=\r\nl that heterogeneous node\nactivation functions).\n\nI&#39;m working towards exper=\r\nimenting with some of the above ideas, but my\ncurrent focus is on a large s=\r\ncale code re-organisation so I&#39;m not\nworking on these ideas right now.\n\nWhi=\r\nle I&#39;m here - where can I find a high level description of your K^2 graphs?=\r\n\n\nColin\n  #yiv3427300122 #yiv3427300122 -- #yiv3427300122ygrp-mkp {border:1=\r\npx solid #d8d8d8;font-family:Arial;margin:10px 0;padding:0 10px;}#yiv342730=\r\n0122 #yiv3427300122ygrp-mkp hr {border:1px solid #d8d8d8;}#yiv3427300122 #y=\r\niv3427300122ygrp-mkp #yiv3427300122hd {color:#628c2a;font-size:85%;font-wei=\r\nght:700;line-height:122%;margin:10px 0;}#yiv3427300122 #yiv3427300122ygrp-m=\r\nkp #yiv3427300122ads {margin-bottom:10px;}#yiv3427300122 #yiv3427300122ygrp=\r\n-mkp .yiv3427300122ad {padding:0 0;}#yiv3427300122 #yiv3427300122ygrp-mkp .=\r\nyiv3427300122ad p {margin:0;}#yiv3427300122 #yiv3427300122ygrp-mkp .yiv3427=\r\n300122ad a {color:#0000ff;text-decoration:none;}#yiv3427300122 #yiv34273001=\r\n22ygrp-sponsor #yiv3427300122ygrp-lc {font-family:Arial;}#yiv3427300122 #yi=\r\nv3427300122ygrp-sponsor #yiv3427300122ygrp-lc #yiv3427300122hd {margin:10px=\r\n 0px;font-weight:700;font-size:78%;line-height:122%;}#yiv3427300122 #yiv342=\r\n7300122ygrp-sponsor #yiv3427300122ygrp-lc .yiv3427300122ad {margin-bottom:1=\r\n0px;padding:0 0;}#yiv3427300122 #yiv3427300122actions {font-family:Verdana;=\r\nfont-size:11px;padding:10px 0;}#yiv3427300122 #yiv3427300122activity {backg=\r\nround-color:#e0ecee;float:left;font-family:Verdana;font-size:10px;padding:1=\r\n0px;}#yiv3427300122 #yiv3427300122activity span {font-weight:700;}#yiv34273=\r\n00122 #yiv3427300122activity span:first-child {text-transform:uppercase;}#y=\r\niv3427300122 #yiv3427300122activity span a {color:#5085b6;text-decoration:n=\r\none;}#yiv3427300122 #yiv3427300122activity span span {color:#ff7900;}#yiv34=\r\n27300122 #yiv3427300122activity span .yiv3427300122underline {text-decorati=\r\non:underline;}#yiv3427300122 .yiv3427300122attach {clear:both;display:table=\r\n;font-family:Arial;font-size:12px;padding:10px 0;width:400px;}#yiv342730012=\r\n2 .yiv3427300122attach div a {text-decoration:none;}#yiv3427300122 .yiv3427=\r\n300122attach img {border:none;padding-right:5px;}#yiv3427300122 .yiv3427300=\r\n122attach label {display:block;margin-bottom:5px;}#yiv3427300122 .yiv342730=\r\n0122attach label a {text-decoration:none;}#yiv3427300122 blockquote {margin=\r\n:0 0 0 4px;}#yiv3427300122 .yiv3427300122bold {font-family:Arial;font-size:=\r\n13px;font-weight:700;}#yiv3427300122 .yiv3427300122bold a {text-decoration:=\r\nnone;}#yiv3427300122 dd.yiv3427300122last p a {font-family:Verdana;font-wei=\r\nght:700;}#yiv3427300122 dd.yiv3427300122last p span {margin-right:10px;font=\r\n-family:Verdana;font-weight:700;}#yiv3427300122 dd.yiv3427300122last p span=\r\n.yiv3427300122yshortcuts {margin-right:0;}#yiv3427300122 div.yiv3427300122a=\r\nttach-table div div a {text-decoration:none;}#yiv3427300122 div.yiv34273001=\r\n22attach-table {width:400px;}#yiv3427300122 div.yiv3427300122file-title a, =\r\n#yiv3427300122 div.yiv3427300122file-title a:active, #yiv3427300122 div.yiv=\r\n3427300122file-title a:hover, #yiv3427300122 div.yiv3427300122file-title a:=\r\nvisited {text-decoration:none;}#yiv3427300122 div.yiv3427300122photo-title =\r\na, #yiv3427300122 div.yiv3427300122photo-title a:active, #yiv3427300122 div=\r\n.yiv3427300122photo-title a:hover, #yiv3427300122 div.yiv3427300122photo-ti=\r\ntle a:visited {text-decoration:none;}#yiv3427300122 div#yiv3427300122ygrp-m=\r\nlmsg #yiv3427300122ygrp-msg p a span.yiv3427300122yshortcuts {font-family:V=\r\nerdana;font-size:10px;font-weight:normal;}#yiv3427300122 .yiv3427300122gree=\r\nn {color:#628c2a;}#yiv3427300122 .yiv3427300122MsoNormal {margin:0 0 0 0;}#=\r\nyiv3427300122 o {font-size:0;}#yiv3427300122 #yiv3427300122photos div {floa=\r\nt:left;width:72px;}#yiv3427300122 #yiv3427300122photos div div {border:1px =\r\nsolid #666666;height:62px;overflow:hidden;width:62px;}#yiv3427300122 #yiv34=\r\n27300122photos div label {color:#666666;font-size:10px;overflow:hidden;text=\r\n-align:center;white-space:nowrap;width:64px;}#yiv3427300122 #yiv3427300122r=\r\neco-category {font-size:77%;}#yiv3427300122 #yiv3427300122reco-desc {font-s=\r\nize:77%;}#yiv3427300122 .yiv3427300122replbq {margin:4px;}#yiv3427300122 #y=\r\niv3427300122ygrp-actbar div a:first-child {margin-right:2px;padding-right:5=\r\npx;}#yiv3427300122 #yiv3427300122ygrp-mlmsg {font-size:13px;font-family:Ari=\r\nal, helvetica, clean, sans-serif;}#yiv3427300122 #yiv3427300122ygrp-mlmsg t=\r\nable {font-size:inherit;font:100%;}#yiv3427300122 #yiv3427300122ygrp-mlmsg =\r\nselect, #yiv3427300122 input, #yiv3427300122 textarea {font:99% Arial, Helv=\r\netica, clean, sans-serif;}#yiv3427300122 #yiv3427300122ygrp-mlmsg pre, #yiv=\r\n3427300122 code {font:115% monospace;}#yiv3427300122 #yiv3427300122ygrp-mlm=\r\nsg * {line-height:1.22em;}#yiv3427300122 #yiv3427300122ygrp-mlmsg #yiv34273=\r\n00122logo {padding-bottom:10px;}#yiv3427300122 #yiv3427300122ygrp-msg p a {=\r\nfont-family:Verdana;}#yiv3427300122 #yiv3427300122ygrp-msg p#yiv3427300122a=\r\nttach-count span {color:#1E66AE;font-weight:700;}#yiv3427300122 #yiv3427300=\r\n122ygrp-reco #yiv3427300122reco-head {color:#ff7900;font-weight:700;}#yiv34=\r\n27300122 #yiv3427300122ygrp-reco {margin-bottom:20px;padding:0px;}#yiv34273=\r\n00122 #yiv3427300122ygrp-sponsor #yiv3427300122ov li a {font-size:130%;text=\r\n-decoration:none;}#yiv3427300122 #yiv3427300122ygrp-sponsor #yiv3427300122o=\r\nv li {font-size:77%;list-style-type:square;padding:6px 0;}#yiv3427300122 #y=\r\niv3427300122ygrp-sponsor #yiv3427300122ov ul {margin:0;padding:0 0 0 8px;}#=\r\nyiv3427300122 #yiv3427300122ygrp-text {font-family:Georgia;}#yiv3427300122 =\r\n#yiv3427300122ygrp-text p {margin:0 0 1em 0;}#yiv3427300122 #yiv3427300122y=\r\ngrp-text tt {font-size:120%;}#yiv3427300122 #yiv3427300122ygrp-vital ul li:=\r\nlast-child {border-right:none !important;}#yiv3427300122 \n\n   \r\n------=_Part_7468516_1398327402.1492855774434\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;div style=3D&quot;color:#000; background-color:#fff; f=\r\nont-family:Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif;font=\r\n-size:16px&quot;&gt;&lt;div id=3D&quot;yui_3_16_0_ym19_1_1492854941169_6719&quot;&gt;&lt;span id=3D&quot;yu=\r\ni_3_16_0_ym19_1_1492854941169_6720&quot;&gt;RubyNEAT does not use matrices at all, =\r\nbut instead uses functional programming, as the neural networks are a set o=\r\nf functions that call each other. I have had some thoughts on doing this on=\r\n a GPU, but it may not make sense in my case.&nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div id=3D&quot;=\r\nyui_3_16_0_ym19_1_1492854941169_6719&quot;&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div id=3D&quot;yui=\r\n_3_16_0_ym19_1_1492854941169_6719&quot; dir=3D&quot;ltr&quot;&gt;&lt;span id=3D&quot;yui_3_16_0_ym19_=\r\n1_1492854941169_7199&quot;&gt;At any rate, this turned out to be the fastest way to=\r\n do NEAT in Ruby without resorting to calling a C layer. I am currently wor=\r\nking on emitting the code as ASTs and distributing them across a queuing me=\r\nchanism, like RabbitMQ, to workers who can run on many separate (virtual) m=\r\nachines to yank a network, compile it, evaluate it and send the results bac=\r\nk.&nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div id=3D&quot;yui_3_16_0_ym19_1_1492854941169_6719&quot; dir=\r\n=3D&quot;ltr&quot;&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div id=3D&quot;yui_3_16_0_ym19_1_1492854941169_=\r\n6719&quot; dir=3D&quot;ltr&quot;&gt;&lt;span id=3D&quot;yui_3_16_0_ym19_1_1492854941169_7450&quot;&gt;Has any=\r\none else taken this functional approach? Or are most implementations relyin=\r\ng on matrices? Any thoughts as to which approach is better?&lt;/span&gt;&lt;/div&gt;&lt;di=\r\nv&gt;&lt;/div&gt;&lt;div id=3D&quot;yui_3_16_0_ym19_1_1492854941169_6718&quot;&gt;&nbsp;&lt;/div&gt;&lt;div c=\r\nlass=3D&quot;signature&quot; id=3D&quot;yui_3_16_0_ym19_1_1492854941169_6670&quot;&gt;&lt;blockquote =\r\nstyle=3D&quot;margin:0 0 0 40px;border:none;padding:0px;&quot; id=3D&quot;yui_3_16_0_ym19_=\r\n1_1492854941169_6669&quot;&gt;Kind Regards,&lt;br&gt;&lt;br&gt;Fred Mitchell,&nbsp;&lt;/blockquote=\r\n&gt;&lt;br&gt;&lt;blockquote style=3D&quot;margin:0 0 0 40px;border:none;padding:0px;&quot; id=3D=\r\n&quot;yui_3_16_0_ym19_1_1492854941169_6675&quot;&gt;&lt;span style=3D&quot;font-style:italic;&quot; i=\r\nd=3D&quot;yui_3_16_0_ym19_1_1492854941169_7455&quot;&gt;Skype&lt;/span&gt;&lt;span style=3D&quot;font-=\r\nstyle:italic;&quot; id=3D&quot;yui_3_16_0_ym19_1_1492854941169_7454&quot;&gt;: &lt;/span&gt;&lt;span s=\r\ntyle=3D&quot;font-style:italic;font-weight:bold;&quot; id=3D&quot;yui_3_16_0_ym19_1_149285=\r\n4941169_7452&quot;&gt;flajann&lt;/span&gt;&lt;/blockquote&gt;&lt;/div&gt; &lt;div class=3D&quot;qtdSeparateBR=\r\n&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div class=3D&quot;yahoo_quoted&quot; style=3D&quot;display: block;&quot;&gt; &lt;div=\r\n style=3D&quot;font-family: Helvetica Neue, Helvetica, Arial, Lucida Grande, san=\r\ns-serif; font-size: 16px;&quot;&gt; &lt;div style=3D&quot;font-family: HelveticaNeue, Helve=\r\ntica Neue, Helvetica, Arial, Lucida Grande, Sans-Serif; font-size: 16px;&quot;&gt; =\r\n&lt;div dir=3D&quot;ltr&quot;&gt;&lt;font size=3D&quot;2&quot; face=3D&quot;Arial&quot;&gt; On Tuesday, 18 April 2017=\r\n, 7:15, &quot;Colin Green colin.green1@... [neat]&quot; &lt;neat@...=\r\nm&gt; wrote:&lt;br&gt;&lt;/font&gt;&lt;/div&gt;  &lt;br&gt;&lt;br&gt; &lt;div class=3D&quot;y_msg_container&quot;&gt;&lt;div=\r\n id=3D&quot;yiv3427300122&quot;&gt;&lt;div&gt;\n&lt;span style=3D&quot;display:none;&quot;&gt;&nbsp;&lt;/span&gt;\n\n\n&lt;=\r\ndiv id=3D&quot;yiv3427300122ygrp-mlmsg&quot; style=3D&quot;position:relative;&quot;&gt;\n  &lt;div id=\r\n=3D&quot;yiv3427300122ygrp-msg&quot; style=3D&quot;z-index:1;&quot;&gt;\n\n\n    &lt;div id=3D&quot;yiv342730=\r\n0122ygrp-text&quot;&gt;\n      \n      \n      &lt;div&gt;Hi  Stefano,&lt;br clear=3D&quot;none&quot;&gt;\n&lt;b=\r\nr clear=3D&quot;none&quot;&gt;\n&gt; The issue is that in NE we have many relatively smal=\r\nl matrices&lt;br clear=3D&quot;none&quot;&gt;\n&gt; whereas with traditional ML methods we h=\r\nave few very large matrices.&lt;br clear=3D&quot;none&quot;&gt;\n&gt; The latter are trivial=\r\nly easy to take advantage of with GPU hardware.&lt;br clear=3D&quot;none&quot;&gt;\n&lt;br clea=\r\nr=3D&quot;none&quot;&gt;\nTraditional NEAT could be viewed as evolving one large sparse m=\r\natrix,&lt;br clear=3D&quot;none&quot;&gt;\ni.e. imagine one large matrix with all of the nod=\r\ne IDs across the top,&lt;br clear=3D&quot;none&quot;&gt;\nand again down the side. All of th=\r\ne main math libraries with matrix&lt;br clear=3D&quot;none&quot;&gt;\noptimizations have sup=\r\nport for sparse matrices and a handful of&lt;br clear=3D&quot;none&quot;&gt;\nstandard compr=\r\nessed formats, CSR being the main format:&lt;br clear=3D&quot;none&quot;&gt;\n&lt;br clear=3D&quot;n=\r\none&quot;&gt;\nhttps://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_.28=\r\nCSR.2C_CRS_or_Yale_format.29&lt;br clear=3D&quot;none&quot;&gt;\n&lt;br clear=3D&quot;none&quot;&gt;\nE.g. CU=\r\nDA has support, as does Intel MKL, ATLAS, OpenBLAS, etc. E.g.:&lt;br clear=3D&quot;=\r\nnone&quot;&gt;\n&lt;br clear=3D&quot;none&quot;&gt;\nhttps://developer.nvidia.com/cusparse&lt;br clear=\r\n=3D&quot;none&quot;&gt;\n    https://software.intel.com/en-us/node/471374&lt;br clear=3D&quot;non=\r\ne&quot;&gt;\n&lt;br clear=3D&quot;none&quot;&gt;\nHowever, the performance compared to dense matrices=\r\n is far less in&lt;br clear=3D&quot;none&quot;&gt;\nterms of number of connections handled p=\r\ner sec, because fundamentally&lt;br clear=3D&quot;none&quot;&gt;\nthe data is no longer in c=\r\nontiguous chunks that can be loaded,&lt;br clear=3D&quot;none&quot;&gt;\noperated on, and st=\r\nored, in efficient hardware vector operations. But&lt;br clear=3D&quot;none&quot;&gt;\nthere=\r\n is still a boost to be had, especially on GPUs where you have&lt;br clear=3D&quot;=\r\nnone&quot;&gt;\nlots of parallel compute units as well as vector instructions.&lt;br cl=\r\near=3D&quot;none&quot;&gt;\n&lt;br clear=3D&quot;none&quot;&gt;\nIt may also be possible to analyse the co=\r\nnnectivity graph to assign a&lt;br clear=3D&quot;none&quot;&gt;\nlayer number to each node, =\r\nand then use one matrix between each pair&lt;br clear=3D&quot;none&quot;&gt;\nof layers that=\r\n are connected, because in NEAT we have no restriction&lt;br clear=3D&quot;none&quot;&gt;\no=\r\nn which nodes are connected to each other (e.g. layer 1 connecting&lt;br clear=\r\n=3D&quot;none&quot;&gt;\ndirectly to layer 10, or in even layer 10 connecting to layer 1 =\r\n(as an&lt;br clear=3D&quot;none&quot;&gt;\naside, in sharpneat I define depth in cyclic nets=\r\n as the minimum&lt;br clear=3D&quot;none&quot;&gt;\nnumber of hops to get to a node from the=\r\n input layer). The idea/hope&lt;br clear=3D&quot;none&quot;&gt;\nbeing that each intra-layer=\r\n matrix would be dense enough that we could&lt;br clear=3D&quot;none&quot;&gt;\nuse dense ma=\r\ntrix format with zero weights for the absent connections.&lt;br clear=3D&quot;none&quot;=\r\n&gt;\nHowever, unless they are reasonably dense then this won&#39;t outperform a&lt;br=\r\n clear=3D&quot;none&quot;&gt;\nsingle large sparse matrix.&lt;br clear=3D&quot;none&quot;&gt;\n&lt;br clear=\r\n=3D&quot;none&quot;&gt;\nWe could also conceive of modifying NEAT so that it evolved stru=\r\ncture&lt;br clear=3D&quot;none&quot;&gt;\nmore conducive to the optimizations that are avail=\r\nable, so e.g.&lt;br clear=3D&quot;none&quot;&gt;\nevolving actual layers where connectivity =\r\nis strictly enforced to be&lt;br clear=3D&quot;none&quot;&gt;\nbetween adjacent layers. My h=\r\nunch is that there may be merit to this&lt;br clear=3D&quot;none&quot;&gt;\napproach.&lt;br cle=\r\nar=3D&quot;none&quot;&gt;\n&lt;br clear=3D&quot;none&quot;&gt;\nIn HyerNEAT we get to define the substrate=\r\n by hand, so the networks&lt;br clear=3D&quot;none&quot;&gt;\ntend to be more regular and de=\r\nnse, so I believe dense matrices could&lt;br clear=3D&quot;none&quot;&gt;\nbe a big boost in=\r\n running the final networks, but not CPPNs because&lt;br clear=3D&quot;none&quot;&gt;\nthey =\r\nhave the above discussed problems - since CPPNs are essentially&lt;br clear=3D=\r\n&quot;none&quot;&gt;\nNEAT but with the added problem of allowing different activation&lt;br=\r\n clear=3D&quot;none&quot;&gt;\nfunctions per node (maybe I should call that heterogeneous=\r\n node&lt;br clear=3D&quot;none&quot;&gt;\nactivation functions).&lt;br clear=3D&quot;none&quot;&gt;\n&lt;br clea=\r\nr=3D&quot;none&quot;&gt;\nI&#39;m working towards experimenting with some of the above ideas,=\r\n but my&lt;br clear=3D&quot;none&quot;&gt;\ncurrent focus is on a large scale code re-organi=\r\nsation so I&#39;m not&lt;br clear=3D&quot;none&quot;&gt;\nworking on these ideas right now.&lt;br c=\r\nlear=3D&quot;none&quot;&gt;\n&lt;br clear=3D&quot;none&quot;&gt;\nWhile I&#39;m here - where can I find a high=\r\n level description of your K^2 graphs?&lt;br clear=3D&quot;none&quot;&gt;\n&lt;br clear=3D&quot;none=\r\n&quot;&gt;\nColin&lt;br clear=3D&quot;none&quot;&gt;\n&lt;/div&gt;\n\n    &lt;/div&gt;\n     \n\n    \n    &lt;div style=\r\n=3D&quot;color:#fff;height:0;&quot;&gt;&lt;/div&gt;&lt;/div&gt;\n\n\n&lt;/div&gt;&lt;style type=3D&quot;text/css&quot;&gt;\n#y=\r\niv3427300122 #yiv3427300122 --\n  #yiv3427300122ygrp-mkp {\nborder:1px solid =\r\n#d8d8d8;font-family:Arial;margin:10px 0;padding:0 10px;}\n\n#yiv3427300122 #y=\r\niv3427300122ygrp-mkp hr {\nborder:1px solid #d8d8d8;}\n\n#yiv3427300122 #yiv34=\r\n27300122ygrp-mkp #yiv3427300122hd {\ncolor:#628c2a;font-size:85%;font-weight=\r\n:700;line-height:122%;margin:10px 0;}\n\n#yiv3427300122 #yiv3427300122ygrp-mk=\r\np #yiv3427300122ads {\nmargin-bottom:10px;}\n\n#yiv3427300122 #yiv3427300122yg=\r\nrp-mkp .yiv3427300122ad {\npadding:0 0;}\n\n#yiv3427300122 #yiv3427300122ygrp-=\r\nmkp .yiv3427300122ad p {\nmargin:0;}\n\n#yiv3427300122 #yiv3427300122ygrp-mkp =\r\n.yiv3427300122ad a {\ncolor:#0000ff;text-decoration:none;}\n#yiv3427300122 #y=\r\niv3427300122ygrp-sponsor #yiv3427300122ygrp-lc {\nfont-family:Arial;}\n\n#yiv3=\r\n427300122 #yiv3427300122ygrp-sponsor #yiv3427300122ygrp-lc #yiv3427300122hd=\r\n {\nmargin:10px 0px;font-weight:700;font-size:78%;line-height:122%;}\n\n#yiv34=\r\n27300122 #yiv3427300122ygrp-sponsor #yiv3427300122ygrp-lc .yiv3427300122ad =\r\n{\nmargin-bottom:10px;padding:0 0;}\n\n#yiv3427300122 #yiv3427300122actions {\n=\r\nfont-family:Verdana;font-size:11px;padding:10px 0;}\n\n#yiv3427300122 #yiv342=\r\n7300122activity {\nbackground-color:#e0ecee;float:left;font-family:Verdana;f=\r\nont-size:10px;padding:10px;}\n\n#yiv3427300122 #yiv3427300122activity span {\n=\r\nfont-weight:700;}\n\n#yiv3427300122 #yiv3427300122activity span:first-child {=\r\n\ntext-transform:uppercase;}\n\n#yiv3427300122 #yiv3427300122activity span a {=\r\n\ncolor:#5085b6;text-decoration:none;}\n\n#yiv3427300122 #yiv3427300122activit=\r\ny span span {\ncolor:#ff7900;}\n\n#yiv3427300122 #yiv3427300122activity span .=\r\nyiv3427300122underline {\ntext-decoration:underline;}\n\n#yiv3427300122 .yiv34=\r\n27300122attach {\nclear:both;display:table;font-family:Arial;font-size:12px;=\r\npadding:10px 0;width:400px;}\n\n#yiv3427300122 .yiv3427300122attach div a {\nt=\r\next-decoration:none;}\n\n#yiv3427300122 .yiv3427300122attach img {\nborder:non=\r\ne;padding-right:5px;}\n\n#yiv3427300122 .yiv3427300122attach label {\ndisplay:=\r\nblock;margin-bottom:5px;}\n\n#yiv3427300122 .yiv3427300122attach label a {\nte=\r\nxt-decoration:none;}\n\n#yiv3427300122 blockquote {\nmargin:0 0 0 4px;}\n\n#yiv3=\r\n427300122 .yiv3427300122bold {\nfont-family:Arial;font-size:13px;font-weight=\r\n:700;}\n\n#yiv3427300122 .yiv3427300122bold a {\ntext-decoration:none;}\n\n#yiv3=\r\n427300122 dd.yiv3427300122last p a {\nfont-family:Verdana;font-weight:700;}\n=\r\n\n#yiv3427300122 dd.yiv3427300122last p span {\nmargin-right:10px;font-family=\r\n:Verdana;font-weight:700;}\n\n#yiv3427300122 dd.yiv3427300122last p span.yiv3=\r\n427300122yshortcuts {\nmargin-right:0;}\n\n#yiv3427300122 div.yiv3427300122att=\r\nach-table div div a {\ntext-decoration:none;}\n\n#yiv3427300122 div.yiv3427300=\r\n122attach-table {\nwidth:400px;}\n\n#yiv3427300122 div.yiv3427300122file-title=\r\n a, #yiv3427300122 div.yiv3427300122file-title a:active, #yiv3427300122 div=\r\n.yiv3427300122file-title a:hover, #yiv3427300122 div.yiv3427300122file-titl=\r\ne a:visited {\ntext-decoration:none;}\n\n#yiv3427300122 div.yiv3427300122photo=\r\n-title a, #yiv3427300122 div.yiv3427300122photo-title a:active, #yiv3427300=\r\n122 div.yiv3427300122photo-title a:hover, #yiv3427300122 div.yiv3427300122p=\r\nhoto-title a:visited {\ntext-decoration:none;}\n\n#yiv3427300122 div#yiv342730=\r\n0122ygrp-mlmsg #yiv3427300122ygrp-msg p a span.yiv3427300122yshortcuts {\nfo=\r\nnt-family:Verdana;font-size:10px;font-weight:normal;}\n\n#yiv3427300122 .yiv3=\r\n427300122green {\ncolor:#628c2a;}\n\n#yiv3427300122 .yiv3427300122MsoNormal {\n=\r\nmargin:0 0 0 0;}\n\n#yiv3427300122 o {\nfont-size:0;}\n\n#yiv3427300122 #yiv3427=\r\n300122photos div {\nfloat:left;width:72px;}\n\n#yiv3427300122 #yiv3427300122ph=\r\notos div div {\nborder:1px solid #666666;height:62px;overflow:hidden;width:6=\r\n2px;}\n\n#yiv3427300122 #yiv3427300122photos div label {\ncolor:#666666;font-s=\r\nize:10px;overflow:hidden;text-align:center;white-space:nowrap;width:64px;}\n=\r\n\n#yiv3427300122 #yiv3427300122reco-category {\nfont-size:77%;}\n\n#yiv34273001=\r\n22 #yiv3427300122reco-desc {\nfont-size:77%;}\n\n#yiv3427300122 .yiv3427300122=\r\nreplbq {\nmargin:4px;}\n\n#yiv3427300122 #yiv3427300122ygrp-actbar div a:first=\r\n-child {\nmargin-right:2px;padding-right:5px;}\n\n#yiv3427300122 #yiv342730012=\r\n2ygrp-mlmsg {\nfont-size:13px;font-family:Arial, helvetica, clean, sans-seri=\r\nf;}\n\n#yiv3427300122 #yiv3427300122ygrp-mlmsg table {\nfont-size:inherit;font=\r\n:100%;}\n\n#yiv3427300122 #yiv3427300122ygrp-mlmsg select, #yiv3427300122 inp=\r\nut, #yiv3427300122 textarea {\nfont:99% Arial, Helvetica, clean, sans-serif;=\r\n}\n\n#yiv3427300122 #yiv3427300122ygrp-mlmsg pre, #yiv3427300122 code {\nfont:=\r\n115% monospace;}\n\n#yiv3427300122 #yiv3427300122ygrp-mlmsg * {\nline-height:1=\r\n.22em;}\n\n#yiv3427300122 #yiv3427300122ygrp-mlmsg #yiv3427300122logo {\npaddi=\r\nng-bottom:10px;}\n\n\n#yiv3427300122 #yiv3427300122ygrp-msg p a {\nfont-family:=\r\nVerdana;}\n\n#yiv3427300122 #yiv3427300122ygrp-msg p#yiv3427300122attach-coun=\r\nt span {\ncolor:#1E66AE;font-weight:700;}\n\n#yiv3427300122 #yiv3427300122ygrp=\r\n-reco #yiv3427300122reco-head {\ncolor:#ff7900;font-weight:700;}\n\n#yiv342730=\r\n0122 #yiv3427300122ygrp-reco {\nmargin-bottom:20px;padding:0px;}\n\n#yiv342730=\r\n0122 #yiv3427300122ygrp-sponsor #yiv3427300122ov li a {\nfont-size:130%;text=\r\n-decoration:none;}\n\n#yiv3427300122 #yiv3427300122ygrp-sponsor #yiv342730012=\r\n2ov li {\nfont-size:77%;list-style-type:square;padding:6px 0;}\n\n#yiv34273001=\r\n22 #yiv3427300122ygrp-sponsor #yiv3427300122ov ul {\nmargin:0;padding:0 0 0 =\r\n8px;}\n\n#yiv3427300122 #yiv3427300122ygrp-text {\nfont-family:Georgia;}\n\n#yiv=\r\n3427300122 #yiv3427300122ygrp-text p {\nmargin:0 0 1em 0;}\n\n#yiv3427300122 #=\r\nyiv3427300122ygrp-text tt {\nfont-size:120%;}\n\n#yiv3427300122 #yiv3427300122=\r\nygrp-vital ul li:last-child {\nborder-right:none !important;\n}\n#yiv342730012=\r\n2 \n&lt;/style&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;  &lt;/div&gt; &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\r\n------=_Part_7468516_1398327402.1492855774434--\r\n\n"}}