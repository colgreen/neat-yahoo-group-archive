{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"HjIfjPGnJkkEZaLpgK0g13tdacG0dAjwFQA95RMGLz0MkvOQ-xaJ4ftFGKQONhGgUTac45BhvjTvJnWtYRo0b6-ZNm0ip89isg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] SharpNEAT goings on.","postDate":"1090276947","msgId":1216,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQwRkM0RTUzLjYwMjA1MDJAZHNsLnBpcGV4LmNvbT4=","inReplyToHeader":"PDE5YjEwZDUxMDQwNzE4MTYyMzcwN2YyNTBjQG1haWwuZ21haWwuY29tPg==","referencesHeader":"PDQwRjg0RjUyLjUwNTA5MDBAZHNsLnBpcGV4LmNvbT4gPDE5YjEwZDUxMDQwNzE4MTYyMzcwN2YyNTBjQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":1214,"nextInTopic":1218,"prevInTime":1215,"nextInTime":1217,"topicId":1210,"numMessagesInTopic":6,"msgSnippet":"... Very simply at this stage I would say that the random players represent a more difficult challenge for NEAT. I did some tests early on while I was coding","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 91554 invoked from network); 19 Jul 2004 22:42:29 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m23.grp.scd.yahoo.com with QMQP; 19 Jul 2004 22:42:29 -0000\r\nReceived: from unknown (HELO shockwave.systems.pipex.net) (62.241.160.9)\n  by mta4.grp.scd.yahoo.com with SMTP; 19 Jul 2004 22:42:28 -0000\r\nReceived: from [10.0.0.10] (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby shockwave.systems.pipex.net (Postfix) with ESMTP id E7EFA1C000D0\n\tfor &lt;neat@yahoogroups.com&gt;; Mon, 19 Jul 2004 23:42:20 +0100 (BST)\r\nMessage-ID: &lt;40FC4E53.6020502@...&gt;\r\nDate: Mon, 19 Jul 2004 23:42:27 +0100\r\nUser-Agent: Mozilla Thunderbird 0.7.1 (Windows/20040626)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;40F84F52.5050900@...&gt; &lt;19b10d510407181623707f250c@...&gt;\r\nIn-Reply-To: &lt;19b10d510407181623707f250c@...&gt;\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 62.241.160.9\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Re: [neat] SharpNEAT goings on.\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nDerek James wrote:\n\n&gt;On Fri, 16 Jul 2004 22:57:38 +0100, Colin Green &lt;cgreen@...&gt; wrote:\n&gt;  \n&gt;\n&gt;&gt;1) Tic Tac Toe -  \n&gt;&gt;    \n&gt;&gt;\n&gt;[...]\n&gt;  \n&gt;\n&gt;&gt;This extra player hasn&#39;t greatly improved the evolved networks so far,\n&gt;&gt;although some experimenting with the above startegy is still required.\n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;Keep us posted.\n&gt;  \n&gt;\nVery simply at this stage I would say that the &#39;random&#39; players \nrepresent a more difficult challenge for NEAT. I did some tests early on \nwhile I was coding the players where I evolved against just one strategy \nand if I rememebr right, NEAT was able to evolve perfect startegies for \nplaying single opponents that were more (but not 100%) deterministic. \nIt&#39;s only when you give NEAT a range of different opponents and increase \nthe randomness that it starts to suffer.\n\n\n&gt;One thing we&#39;ve noticed is that some of the activation function\n&gt;approximations (e.g., the EvSail sigmoid) tend to increase speed, but\n&gt;produce less-than-desirable results.  In both XOR and TTT, the\n&gt;approximated activation functions lead to signficantly reduced\n&gt;performance.  I&#39;d be interested to know if anyone else has done such\n&gt;comparisons.\n&gt;  \n&gt;\nI haven&#39;t done any proper comparisons, just quick comparisons by eye \nfrom which I concluded there wasn&#39;t much in it. I&#39;ll make a note to look \ninto this since I switched the default in all of my experiments to be an \napproximated fn. In the mean time I&#39;ll switch to a non-approximated \nfunction until some proper comparisons have been performed.\n\n&gt;&gt;3)OCR - Optical Character Recognition. \n&gt;&gt;    \n&gt;&gt;\n&gt;\n&gt;We&#39;re going to be doing OCR as well. :)  We&#39;ll be using an active\n&gt;vision/roving eye approach.\n&gt;\n&gt;We hope to be able to post some results in a few weeks.\n&gt;\n&gt;  \n&gt;\nHere are some initial details. I took the Courier New font size 6 as a \nbasis. I extract rendered characters from an image structure into my own \nBitImage class - which is hopefully more efficient and simpler to use \nthan having to access OS specific image structures in the actual NEAT \nsearch code. I have trimmed the excess whitespace from the characters as \na whole which leaves me with characters of size 7x9 pixels. I found that \nanything smaller than this created unrecognisable characters - well they \nmight still represent a set of distinct characters for the experiments \nbut they are unrecognisable as letters of the alphabet.\n\nHere are some of the actual resulting characters (in an ASCII art format \nfor email readability!). If they look mangled then cut/paste them into a \ntext editor and make sure you select a fixed width font such as Courier \nNew...\n\n```````\n```````\n``OOO``\n`O```O`\n``OOOO`\n`O```O`\n`OOOOOO\n```````\n```````\n\nOO`````\n`O`````\n`O`OO``\n`OO``O`\n`O```O`\n`O```O`\nOOOOO``\n```````\n```````\n\n```````\n```````\n``OOOO`\n`O```O`\n`O`````\n`O`````\n``OOOO`\n```````\n```````\n\n\n[...]\n\n```````\n```````\n``OOO``\n`O```O`\n`O```O`\n`O```O`\n``OOO``\n```````\n```````\n\n```````\n```````\nOO`OO``\n`OO``O`\n`O```O`\n`O```O`\n`OOOO``\n`O`````\nOOO````\n\n```````\n```````\n``OO`OO\n`O``OO`\n`O```O`\n`O```O`\n``OOOO`\n`````O`\n````OOO\n\n\nSo if you want I could generate some OCR data sets (say as XML or java \nsource code) relatively easily from the code I have so far.\n\nA quick experiment with the lower case alphabet resulted in a network \nthat could correctly recognise 10 out of 26 chars. Each run seems to \nquickly achieve between 7 and 9 out of 10 and then get &#39;stuck&#39;.\n\n\nColin\n\n\n"}}