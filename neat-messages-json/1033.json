{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"TmiOxSEWJH9Nj6QVNUYrs66Bk7fkXQSx6JqItCMcZJCCRDaw_1qDAfLCeTrchyqZ1B3dWey19DDungH69C1G5XZVdfrAqbky5VWWGnPHGnw2","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Speciation","postDate":"1086712579","msgId":1033,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNhNHB1MytuY3MzQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEJBWTItRjEwOUhUamJkNkVqQ1YwMDAzMjM3ZkBob3RtYWlsLmNvbT4="},"prevInTopic":1027,"nextInTopic":0,"prevInTime":1032,"nextInTime":1034,"topicId":1027,"numMessagesInTopic":2,"msgSnippet":"... things ... there are ... period. ... allocation.  This ... searches that ... selected ... randomly from ... gets the ... room in ... mutation is ... elites","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 46583 invoked from network); 8 Jun 2004 16:37:01 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m23.grp.scd.yahoo.com with QMQP; 8 Jun 2004 16:37:01 -0000\r\nReceived: from unknown (HELO n32.grp.scd.yahoo.com) (66.218.66.100)\n  by mta1.grp.scd.yahoo.com with SMTP; 8 Jun 2004 16:37:01 -0000\r\nReceived: from [66.218.67.181] by n32.grp.scd.yahoo.com with NNFMP; 08 Jun 2004 16:36:21 -0000\r\nDate: Tue, 08 Jun 2004 16:36:19 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ca4pu3+ncs3@...&gt;\r\nIn-Reply-To: &lt;BAY2-F109HTjbd6EjCV0003237f@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 4536\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.100\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Speciation\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n--- In neat@yahoogroups.com, &quot;John Arrowwood&quot; &lt;jarrowwx@h...&gt; wrote:\n&gt; I&#39;m almost done with the Perl code of my NEAT version.  I did some \nthings \n&gt; differently than tradition, and I&#39;d like some feedback  on whether \nthere are \n&gt; any obvious blunders to it...\n&gt; \n&gt; First, each network topology is a distinct species, period.\n&gt; \n&gt; Second, I only form a maximum of one new topology per generation, \nperiod.  \n&gt; And then, only if there is room in the population for one.\n&gt; \n&gt; &quot;room&quot; is determined by how many are left after offspring \nallocation.  This \n&gt; is made possible by the fact that I have a very precise set of \nsearches that \n&gt; are done within any given topology:\n&gt; \n&gt; 1. best member passes on unchanged (elites)\n&gt; 2. best member has its weights tweaked\n&gt; 3. best member is crossed with 2nd best, and weights are averaged\n&gt; 4. best member is crossed with 2nd best, and weights are randomly \nselected \n&gt; from one parent or the other\n&gt; 5. 2nd best passes on unchanged (2nd elite)\n&gt; 6. 2nd best has its weights tweaked\n&gt; 7. 1st best is crossed with a random other, weights averaged\n&gt; 8. 2nd best is crossed with a random other, weights averaged\n&gt; 9. 1st best is crossed with a random other, weights chosen \nrandomly from \n&gt; parents\n&gt; 10. 2nd best crossed with random other, randomly\n&gt; 11. all new weights are chosen at random\n&gt; \n&gt; If, due to fitness sharing, only 5 offspring are allowed, it only \ngets the \n&gt; first 5.  If it should get 12, it still only gets 11, but there is \nroom in \n&gt; the population for searching more topology, and so a topological \nmutation is \n&gt; allowed.  One, for the whole population, chosen at random from the \nelites in \n&gt; the population.\n&gt; \n\nI&#39;m not sure I completely follow this rule....when exactly does it \nget its full amount? \n\n&gt; There is also a stagnation penalty.  When calculating fitness \nsharing, each \n&gt; species/topology is penalized 1% for every generation since the \nlast time it \n&gt; improved.  If it does improve, that penalty is not immediately \nremoved, but \n&gt; cut in half.  That way, investment rises rapidly, but not all the \nway.\n&gt; \n&gt; The idea is that since a species is a fixed topology, it can&#39;t get \nun-stuck \n&gt; by adding structure.  Adding structure creates new species.  So, \nas the \n&gt; topology stagnates, the likelihood of making a breakthrough in \nthat \n&gt; particular structure diminishes.  Thus, our computational \ninvestment in it \n&gt; diminishes.  As our investment in that species decreases, that \nmakes \n&gt; available more resources for more profitable avenues of \nsearching.  But \n&gt; since there is a limited number of slots per topology, eventually \nwe will \n&gt; have more available slots than we can use.  That&#39;s when structure \ngets \n&gt; added.  When that happens, there is a 75% chance that the change \nwill be the \n&gt; addition of a new connection.  20% chance of splitting an existing \n&gt; connection.  And %5 chance of deleting an existing connection.\n&gt; \n\nI understand how this works in principle, but I&#39;m not sure it makes \nsense under fitness sharing mathematically?  Usually no matter how \nmuch fitness drops across even the entire population, all slots will \nalways be accounted for.  In other words, if the population is size \nn then the # offspring assigned to each species sum up to n.  Where \ndoes the open slot come from?\n\n&gt; The idea is to thoroughly focus on weight adjustment to the \nexclusion of \n&gt; topological variation so long as it is making headway.  Then to \nfocus on \n&gt; connectivity before layers.  And addition before deletion.\n&gt; \n&gt; Like I said, any obvious problems with this idea?  Any suggestions \nof \n&gt; specific data that should be gathered to make sure the design \nworks, besides \n&gt; ability so solve a particular problem?\n&gt; \n\nIt&#39;s an intriguing idea.  I will be interested to hear how it works \nout.  One problem may be that you are adding topology so \ninfrequently that you end up not trying enough different changes in \nstructure over time and therefore fail to find good additions.\nAnother potential concern is the stagnation penalty to species \nfitness.  Penalties like that are always really tricky to balance \nproperly since they implicitly assume a prior knowledge of how fast \nthings should be moving, and you can easily calibrate it wrong \nleading to premature extinctions.\n\nAlso, theoretically, it&#39;s an interesting question whether structure \nshould *only* be added during periods of stagnation.  It might work \nwell, but then again, it might be better to &quot;look ahead&quot; a little \neven when you&#39;re doing well in order to plan for the future.\n\nken\n\n\n\n"}}