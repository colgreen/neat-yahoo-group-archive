{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115403844,"authorName":"John Arrowwood","from":"&quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;","profile":"jarrowwx","replyTo":"LIST","senderId":"Ole_EolSSvZNMD4J80kL20Xbp_cVrkxqyQrDU2M2OzxGp5Gf8c2QpaeQRzO-Iu6c3ySiAfoDzp1eEgywz9IFahXZFcajQYkXeyLIZSe4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Computation Time","postDate":"1088006180","msgId":1131,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTItRjI5dDNjZXc4azY5UkswMDAwOGQyNEBob3RtYWlsLmNvbT4="},"prevInTopic":1129,"nextInTopic":1141,"prevInTime":1130,"nextInTime":1132,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"... Well, the activation functions are completely unrolled.  And that s the way I want it.  There is no loop, only a linear calculation of node values.  And ","rawEmail":"Return-Path: &lt;jarrowwx@...&gt;\r\nX-Sender: jarrowwx@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 90220 invoked from network); 23 Jun 2004 15:56:26 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m1.grp.scd.yahoo.com with QMQP; 23 Jun 2004 15:56:26 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.247.29)\n  by mta3.grp.scd.yahoo.com with SMTP; 23 Jun 2004 15:56:25 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Wed, 23 Jun 2004 08:56:20 -0700\r\nReceived: from 64.122.44.102 by by2fd.bay2.hotmail.msn.com with HTTP;\n\tWed, 23 Jun 2004 15:56:20 GMT\r\nX-Originating-Email: [jarrowwx@...]\r\nX-Sender: jarrowwx@...\r\nTo: neat@yahoogroups.com\r\nBcc: \r\nDate: Wed, 23 Jun 2004 08:56:20 -0700\r\nMime-Version: 1.0\r\nContent-Type: text/plain; format=flowed\r\nMessage-ID: &lt;BAY2-F29t3cew8k69RK00008d24@...&gt;\r\nX-OriginalArrivalTime: 23 Jun 2004 15:56:20.0428 (UTC) FILETIME=[A038F8C0:01C4593A]\r\nX-eGroups-Remote-IP: 65.54.247.29\r\nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\r\nReply-To: john@...\r\nSubject: Re: [neat] Computation Time\r\nX-Yahoo-Group-Post: member; u=115403844\r\nX-Yahoo-Profile: jarrowwx\r\n\r\n&gt;From: Ian Badcoe &lt;ian_badcoe@...&gt;\n&gt;Maybe we should stop theorizing and wait for the real code?  I&#39;m perfectly\n&gt;happy to help you dissect one of your real, big generated functions when\n&gt;the you have it.\n\nWell, the activation functions are completely unrolled.  And that&#39;s the way \nI want it.  There is no loop, only a linear calculation of node values.  And \nthat&#39;s plenty fast.  Once I have a more complicated network to look at, I&#39;ll \nsend you the code so you can see what it looks like.  In the mean time, the \ncode I was asking about was this:\n\n       2727 int main( void )\n       2728 {\n       2729     int f;          // function index\n       2730     afp activate;   // activation function pointer\n       2731     int i;          // input index\n       2732     double output;  // output of single activation\n       2733     double error;   // error\n       2734     double fitness; // network fitness, or error\n       2735\n       2736     SetExpectedValues();\n       2737\n       2738     // calculate fitness of each network\n       2739     for ( f=0 ; f&lt;500 ; f++ )\n       2740     {\n       2741         activate = af[f];\n       2742         fitness = 1.0;\n       2743\n       2744         for ( i=0 ; i&lt;1005720 ; i++ )\n       2745         {\n       2746             output = activate(\n       2747                 expected[i].top,\n       2748                 expected[i].left,\n       2749                 expected[i].bottom,\n       2750                 expected[i].right );\n       2751             error = expected[i].expected - output;\n       2752             fitness += abs( error );  // getting nan if using \n(error*error)\n       2753         }\n       2754         printf( &quot;%s=%0.55f&#92;n&quot;, net[f], 1 / fitness );  // \nfitness is converted to a number between 0 and 1\n       2755     }\n       2756     return 0;\n       2757 } //\n\nSuggestions on what I&#39;m doing with the fitness calculation are also welcome.\n\n\n\n"}}