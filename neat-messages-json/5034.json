{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":411255308,"authorName":"torvhydda","from":"&quot;torvhydda&quot; &lt;torvhydda@...&gt;","profile":"torvhydda","replyTo":"LIST","senderId":"LyoGY7Or_Zf8dwR7q--4meHlfJ0dGc48YmAOSQc5AHlyADpBTQDHsgCo-hmK803J9IFei3jnM83x9SPeqxmKd79F8Q5aDknB","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Evolving feedforward networks","postDate":"1261501280","msgId":5034,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhncXUxMCs1NGJoQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMjE0MTMzNnYyZWUxOTA3MGo0YzczM2MyMjM4ZGNhMWE0QG1haWwuZ21haWwuY29tPg=="},"prevInTopic":5033,"nextInTopic":5035,"prevInTime":5033,"nextInTime":5035,"topicId":5013,"numMessagesInTopic":14,"msgSnippet":"... If I am not mistaken all other nodes that have the source node in their A-list must also add the new node to their A-list. This means that some kind  of","rawEmail":"Return-Path: &lt;torvhydda@...&gt;\r\nX-Sender: torvhydda@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 41926 invoked from network); 22 Dec 2009 17:02:14 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m11.grp.re1.yahoo.com with QMQP; 22 Dec 2009 17:02:14 -0000\r\nX-Received: from unknown (HELO n44d.bullet.mail.sp1.yahoo.com) (66.163.169.158)\n  by mta3.grp.sp2.yahoo.com with SMTP; 22 Dec 2009 17:02:14 -0000\r\nX-Received: from [69.147.65.147] by n44.bullet.mail.sp1.yahoo.com with NNFMP; 22 Dec 2009 17:01:21 -0000\r\nX-Received: from [98.137.34.184] by t10.bullet.mail.sp1.yahoo.com with NNFMP; 22 Dec 2009 17:01:21 -0000\r\nDate: Tue, 22 Dec 2009 17:01:20 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hgqu10+54bh@...&gt;\r\nIn-Reply-To: &lt;727a406c0912141336v2ee19070j4c733c2238dca1a4@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;torvhydda&quot; &lt;torvhydda@...&gt;\r\nSubject: Re: Evolving feedforward networks\r\nX-Yahoo-Group-Post: member; u=411255308; y=VWD-KThQ-VlDNlRqJHOu181IJkPRBt7kRi5TUMVqzOgu_XuL\r\nX-Yahoo-Profile: torvhydda\r\n\r\n\n\n--- In neat@yahoogroups.com, Colin Green &lt;colin.green1@...&gt; wrote:\n\n&gt; 4) =\r\nWhen we create a new node by splitting a conenction, the new node\n&gt; creates=\r\n it&#39;s own A-list by takign a copy the source node&#39;s A-List plus\n&gt; the sourc=\r\ne node&#39;s ID.\n\nIf I am not mistaken all other nodes that have the source nod=\r\ne in their A-list must also add the new node to their A-list. This means th=\r\nat some kind  of graph traversal needs to be done, at least in my case. The=\r\n mutate_toggle_enable() & mutate_add_gene() is also causing graph traversal=\r\n to occur.\nMaybe one big graph traversal building these A-lists would be in=\r\n order. Later on one can test for recurrency as many times as one wants in =\r\nO(1) time.\n \n&gt; over time, along with the innovation ID counter). We can how=\r\never\n&gt; reduce this memory requirement by periodically stoppign NEAT and\n&gt; d=\r\nefragmenting the ID space, this allows us to reuse the low IDs that\n&gt; are n=\r\no longer in use anymore (no node anywhere in the population uses\n&gt; it) and =\r\nthus the size of the A-list only needs to refelct the number\n&gt; of /active/ =\r\nnode IDs rather than the number of IDs there has ever\n&gt; been.\n\nI made a pat=\r\nch for v0.7 that reuses ID on the fly. When an innovation is not in use by =\r\nany organism no longer that innovation is freed and the ID is put on a free=\r\n stack. These ID will be used before allocating new bigger ones.\n\nI also ma=\r\nde a small patch to output the maximum number of ID&#39;s in use at the same ti=\r\nme.\nRunning the pole1 test I can see that no more than 40 ID&#39;s for the node=\r\ns is in use at the same time. (100 link ID&#39;s)\nThe xor test gives me 60 node=\r\n ID&#39;s. (325 link ID&#39;s)\n\nThis means that one would need around 60 bits for e=\r\nach node doing the A-list bit array stuff when running the xor test. Not so=\r\n much memory :) One could make it dynamic growing so that when the network =\r\ngrows the bit array grows to.\n\nIf anyone wants to try these patches downloa=\r\nd them from the eco dir and apply them like this:\n&quot;zcat reuse.patch.gz trac=\r\ne.patch.gz | patch -p1&quot;\n\n/Magnus\n\n\n\n\n"}}