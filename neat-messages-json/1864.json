{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":92207196,"authorName":"Reuben Grinberg","from":"Reuben Grinberg &lt;reuben.grinberg@...&gt;","profile":"ReubGR","replyTo":"LIST","senderId":"IxMoALiscZE-xkNzXGzoAJ6cMC-3JXVcvDN9dXQ9B4m-_A3lBGchiB1FvFA6ZuCAVEfbkHAN1-pHlcWDPS79OG8T-cSKzznEDN6c9YUcQN-Y","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Distributed computing","postDate":"1107930058","msgId":1864,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDk2MTM3MmI3NTZiNmNkZTBkMWY1M2ZkZTMxNzZhNGJmQHlhbGUuZWR1Pg=="},"prevInTopic":0,"nextInTopic":1868,"prevInTime":1863,"nextInTime":1865,"topicId":1864,"numMessagesInTopic":3,"msgSnippet":"Hey Guys, I just wrote a distributed computation library in Java that I want to integrate into JGAP and ANJI. I know the JGAP people are interested in doing","rawEmail":"Return-Path: &lt;reuben.grinberg@...&gt;\r\nX-Sender: reuben.grinberg@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 95306 invoked from network); 9 Feb 2005 06:21:02 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m11.grp.scd.yahoo.com with QMQP; 9 Feb 2005 06:21:02 -0000\r\nReceived: from unknown (HELO pantheon-po07.its.yale.edu) (130.132.50.49)\n  by mta3.grp.scd.yahoo.com with SMTP; 9 Feb 2005 06:21:01 -0000\r\nReceived: from [10.0.1.2] (yale128036070185.student.yale.edu [128.36.70.185])\n\t(authenticated bits=0)\n\tby pantheon-po07.its.yale.edu (8.12.11/8.12.11) with ESMTP id j196L0S0009859\n\t(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=NOT)\n\tfor &lt;neat@yahoogroups.com&gt;; Wed, 9 Feb 2005 01:21:01 -0500\r\nMime-Version: 1.0 (Apple Message framework v619.2)\r\nTo: neat@yahoogroups.com\r\nMessage-Id: &lt;961372b756b6cde0d1f53fde3176a4bf@...&gt;\r\nContent-Type: multipart/alternative; boundary=Apple-Mail-9-773839932\r\nDate: Wed, 9 Feb 2005 01:20:58 -0500\r\nX-Mailer: Apple Mail (2.619.2)\r\nX-YaleITSMailFilter: Version 1.2a (attachment(s) not renamed)\r\nX-eGroups-Remote-IP: 130.132.50.49\r\nFrom: Reuben Grinberg &lt;reuben.grinberg@...&gt;\r\nSubject: Distributed computing\r\nX-Yahoo-Group-Post: member; u=92207196\r\nX-Yahoo-Profile: ReubGR\r\n\r\n\r\n--Apple-Mail-9-773839932\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/plain;\n\tcharset=US-ASCII;\n\tformat=flowed\r\n\r\nHey Guys,\n\nI just wrote a distributed computation library in Java that I want to \nintegrate into JGAP and ANJI. I know the JGAP people are interested in \ndoing distributed evolution where each computer is a separate \npopulation. While the library I built could be used for that, I&#39;m more \ninterested in doing distributed evaluation to speed up evolution of a \nsingle population.\n\nI&#39;ve applied for a project on SourceForge (it will take 2 weeks for me \nto get it because the project name I want - Jadic - JAva Distributed \nComputing is in use for another abandoned project).\n\nThe project uses Jetty (a Java http file server) to serve remote \nclasses to the clients. The nice thing about this is that you don&#39;t \nhave to copy your updated evolution code to all the clients - they \naccess it automatically. I&#39;m also using XML-RPC, Rendezvous (jmdns is \nthe java implementation), and xstream (XML object serialization).\n\nThe implementation I have now works (I wrote some arbitrary code on my \ncomputer and had my roommate&#39;s computer connect to mine an execute it \nwithout having the arbitrary code), but it doesn&#39;t have any security \nrestrictions. Security should be pretty easy to implement thanks to \nJava&#39;s great security model.\n\nMy project is somewhat similar to Java Distributed Systems. There are \nsome differences though - JDS uses RMI, I use XML-RPC. JDS uses a \nstandalone server that needs to be run separately from the job \nsubmitting code - in my library, the server doesn&#39;t need to be run \nseparately. JDS uses hard coded IP address info. Mine uses jmdns so \nthat servers/clients on the same subnet can automatically discover each \nother.\n\nLet me know if any of you would like to help me either integrate this \nwith ANJI/JGAP or to make it more robust (or both!).\n\nI&#39;ve uploaded my project to the files section of the users group as \njadic-0.1.zip\n\nThe project should run / compile under java 1.4. Sorry - I haven&#39;t \nincluded windows scripts, but I&#39;d be much obliged if someone were to \nmake them. Also - comments and Javadoc didn&#39;t make it into this release \n;).\n\nThanks,\nReuben\n\nP.S.\n\nHere is some bare bones code that prints out a message on both the \nclient.\n\nimport org.jadic.*;\n\n// Jadic in action. The client prints out &quot;Hello World!&quot;\nclass TestServer\n{\n\tpublic static void main(String[] args) {\n\t\tJobServer server = new JobServer();\n\t\n\t\tObject[] args = new Object[] {&quot;Hello &quot;, &quot;World!&quot;};\n\n\t\tserver.postJob(\n\t\t\tnew PrintJob(), args, new NullJobListener());\n\t}\n}\n\n// Job Listener gets results when a job is finished\nclass NullJobListener implements JobListener\n{\n\tpublic void jobFinished(Job j, Object[] results) {}\n}\n\n//A job is defined in the doJob function which\n//takes any arguments and returns any arguments.\n//Of course, doJob can make other classes, call\n//other code, etc...\npublic class PrintJob implements Job\n{\n     public Object[] doJob(Object[] args) {\n\t\tfor (int i = 0; i &lt; args.length; i++)\n\t\t\tSystem.out.println(args[i]);\n\t\treturn new Object[] {};\n\t}\n\t\n\tpublic String description() {return &quot;Prints out arguments&quot;;}\n}\n\n\n--\nReuben Grinberg\nreuben.grinberg@...\n(203)436-1156\nTrumbull College\n\n&quot;`If there&#39;s anything more important than my ego around, I want it \ncaught and shot now.&#39;&quot;\n-The Hitchiker&#39;s Guide to the Galaxy\r\n--Apple-Mail-9-773839932\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/enriched;\n\tcharset=US-ASCII\r\n\r\nHey Guys,\n\n\nI just wrote a distributed computation library in Java that I want to\nintegrate into JGAP and ANJI. I know the JGAP people are interested in\ndoing distributed evolution where each computer is a separate\npopulation. While the library I built could be used for that, I&#39;m more\ninterested in doing distributed evaluation to speed up evolution of a\nsingle population.\n\n\nI&#39;ve applied for a project on SourceForge (it will take 2 weeks for me\nto get it because the project name I want - Jadic - JAva Distributed\nComputing is in use for another abandoned project).\n\n\nThe project uses Jetty (a Java http file server) to serve remote\nclasses to the clients. The nice thing about this is that you don&#39;t\nhave to copy your updated evolution code to all the clients - they\naccess it automatically. I&#39;m also using XML-RPC, Rendezvous (jmdns is\nthe java implementation), and xstream (XML object serialization).\n\n\nThe implementation I have now works (I wrote some arbitrary code on my\ncomputer and had my roommate&#39;s computer connect to mine an execute it\nwithout having the arbitrary code), but it doesn&#39;t have any security\nrestrictions. Security should be pretty easy to implement thanks to\nJava&#39;s great security model.\n\n\nMy project is somewhat similar to Java Distributed Systems. There are\nsome differences though - JDS uses RMI, I use XML-RPC. JDS uses a\nstandalone server that needs to be run separately from the job\nsubmitting code - in my library, the server doesn&#39;t need to be run\nseparately. JDS uses hard coded IP address info. Mine uses jmdns so\nthat servers/clients on the same subnet can automatically discover\neach other.\n\n\nLet me know if any of you would like to help me either integrate this\nwith ANJI/JGAP or to make it more robust (or both!).\n\n\nI&#39;ve uploaded my project to the files section of the users group as\njadic-0.1.zip\n\n\nThe project should run / compile under java 1.4. Sorry - I haven&#39;t\nincluded windows scripts, but I&#39;d be much obliged if someone were to\nmake them. Also - comments and Javadoc didn&#39;t make it into this\nrelease ;).\n\n\nThanks,\n\nReuben\n\n\nP.S.\n\n\nHere is some bare bones code that prints out a message on both the\nclient.\n\n\n&lt;fixed&gt;&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;import&lt;/color&gt; org.jadic.*;\n\n\n// Jadic in action. The client prints out &quot;Hello World!&quot;\n\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;class&lt;/color&gt; TestServer\n\n{\n\n\t&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;public&lt;/color&gt;\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;static&lt;/color&gt;\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;void&lt;/color&gt; main(String[] args) {\n\n\t\tJobServer server = &lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;new&lt;/color&gt;\nJobServer();\n\n\t\n\n\t\tObject[] args = new Object[] {&quot;Hello &quot;, &quot;World!&quot;};\n\n\n\t\tserver.postJob(\n\n\t\t\t&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;new PrintJob()&lt;/color&gt;, args,\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;new&lt;/color&gt; NullJobListener());\n\n\t}\n\n}\n\n\n// Job Listener gets results when a job is finished\n\nclass NullJobListener implements JobListener\n\n{\n\n\t&lt;color&gt;&lt;param&gt;7675,0F0E,504F&lt;/param&gt;public&lt;/color&gt;\n&lt;color&gt;&lt;param&gt;7675,0F0E,504F&lt;/param&gt;void&lt;/color&gt; jobFinished(Job j,\nObject[] results) {}\n\n}\n\n\n//A job is defined in the doJob function which\n\n//takes any arguments and returns any arguments.\n\n//Of course, doJob can make other classes, call\n\n//other code, etc...\n\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;public&lt;/color&gt;\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;class&lt;/color&gt; PrintJob\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;implements&lt;/color&gt; Job\n\n{\n\n    &lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;public&lt;/color&gt; Object[]\ndoJob(Object[] args) {\n\n\t\t&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;for&lt;/color&gt;\n(&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;int&lt;/color&gt; i =\n&lt;color&gt;&lt;param&gt;0000,0000,FFFF&lt;/param&gt;0&lt;/color&gt;; i &lt;&lt; args.length; i++)\n\n\t\t\tSystem.out.println(args[i]);\n\n\t\t&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;return&lt;/color&gt;\n&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;new&lt;/color&gt; Object[] {};\n\n\t}\n\n\t\n\n\t&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;public&lt;/color&gt; String\ndescription() {&lt;color&gt;&lt;param&gt;7676,0F0F,5050&lt;/param&gt;return&lt;/color&gt;\n&lt;color&gt;&lt;param&gt;8989,1313,1515&lt;/param&gt;&quot;Prints out arguments&quot;&lt;/color&gt;;}\n\n}\n\n&lt;/fixed&gt;\n\n\n--\n\nReuben Grinberg\n\nreuben.grinberg@...\n\n(203)436-1156\n\nTrumbull College\n\n\n&quot;`If there&#39;s anything more important than my ego around, I want it\ncaught and shot now.&#39;&quot; \n\n-The Hitchiker&#39;s Guide to the Galaxy\r\n--Apple-Mail-9-773839932--\r\n\n"}}