{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":345796568,"authorName":"peterberrington","from":"&quot;peterberrington&quot; &lt;peterberrington@...&gt;","profile":"peterberrington","replyTo":"LIST","senderId":"Z8YnLpTKmf8CxTNnTks6yFkgE7qdadZsnqZd1OGyKTIFuWLhFcdyJhthPw86E_x5nKf9joaNy_nXHugNWHCTBfHqCnEMNG6Lknw6BHiTp-u_lxs","spamInfo":{"isSpam":false,"reason":"6"},"subject":"How would novelty search best be applied to a virtual creature controller","postDate":"1210707582","msgId":4044,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGcwY3FwdStpa2g2QGVHcm91cHMuY29tPg=="},"prevInTopic":0,"nextInTopic":4045,"prevInTime":4043,"nextInTime":4045,"topicId":4044,"numMessagesInTopic":14,"msgSnippet":"I ve read Ken s latest paper on novelty search and its a fascinating new approach. For the past couple of months I ve been working on virtual creature","rawEmail":"Return-Path: &lt;peterberrington@...&gt;\r\nX-Sender: peterberrington@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 91246 invoked from network); 13 May 2008 19:39:43 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m55.grp.scd.yahoo.com with QMQP; 13 May 2008 19:39:43 -0000\r\nX-Received: from unknown (HELO n34b.bullet.mail.sp1.yahoo.com) (66.163.168.148)\n  by mta15.grp.scd.yahoo.com with SMTP; 13 May 2008 19:39:43 -0000\r\nX-Received: from [216.252.122.216] by n34.bullet.mail.sp1.yahoo.com with NNFMP; 13 May 2008 19:39:43 -0000\r\nX-Received: from [209.73.164.86] by t1.bullet.sp1.yahoo.com with NNFMP; 13 May 2008 19:39:43 -0000\r\nX-Received: from [66.218.66.73] by t8.bullet.scd.yahoo.com with NNFMP; 13 May 2008 19:39:43 -0000\r\nDate: Tue, 13 May 2008 19:39:42 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;g0cqpu+ikh6@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;peterberrington&quot; &lt;peterberrington@...&gt;\r\nSubject: How would novelty search best be applied to a virtual creature controller\r\nX-Yahoo-Group-Post: member; u=345796568; y=DDsS_gbvHLzOWG_EovMEFWGNxdP-Eg5BalOF2QL1Pmjd3entsqyqAp8d\r\nX-Yahoo-Profile: peterberrington\r\n\r\nI&#39;ve read Ken&#39;s latest paper on novelty search and its a fascinating\nnew ap=\r\nproach. For the past couple of months I&#39;ve been working on\nvirtual creature=\r\n controllers; specifically I have a ragdoll rig which\nI&#39;ve set up in Breve =\r\nSimulation Environment (available at\nhttp://spiderland.org )\nThis ragdoll i=\r\ns modelled after the one in Toribash, a free game which\nuses the open dynam=\r\nics engine for physics, like breve. \n\nSo far a lot of the results I&#39;ve been=\r\n having discouraging; as Ken\npoints out early on in his latest paper, tryin=\r\ng to make a walking\nbiped usually results in it falling over perpetually. Y=\r\nou can see some\nWIP videos at my youtube page here:\nhttp://www.youtube.com/=\r\nuser/thehaircrow\n\nUltimately, I would like to package AI&#39;s with the Toribas=\r\nh game so\nthat they are fun to play against in single player- I think this =\r\ngoal\nis attainable despite being difficult.\nDeception is a BIG problem here=\r\n; if my fitness criteria is time\nintegrated distance from a goal, it encour=\r\nages the behaviour of the\n&quot;Tori&quot; balancing in a stable configuration foreve=\r\nr, rather than\nwalking, which is what I&#39;m trying to encourage. As there is =\r\n20 joints\nin this rig, I am providing joint position and velocity informati=\r\non\nfor each joint, as well as a bias, a sine-wave, the x, y, and z\ncomponen=\r\nts linear velocity in the reference frame of the Tori&#39;s head,\nand finally 3=\r\n variables which correspond to the vertical, horizontal\nand forward orienta=\r\ntion of the tori&#39;s head with respect to world\ncoordinates.  \nThe current ex=\r\nperimental configuration I am started out as a &quot;pure&quot;\nragdoll control where=\r\n neural net outputs correspond directly joint\nvelocity; a tanh activation f=\r\nunction is used to allow positive and\nnegative joint movement.\nI then remod=\r\neled the experiment to perform as in the Toribash game;\nthe net will receiv=\r\ne inputs (and effect joint movements) only every 10\ntime steps. More import=\r\nantly, I increased the amount of outputs from\n20 (1 per joint) to 40, in or=\r\nder to accomodate the 4 possible joint\nactions which can occur on a turn: h=\r\nolding, relaxing, extending, and\nflexing. \n\nStarting with a fully connected=\r\n net, that gives a staggeringly huge\nsearch space with over 1000 connection=\r\ns. Due to the implementation,\nits prohibitively slow to evolve large nets a=\r\ns the starting net can\ntake up over 600mb of ram on the heap. Realizing thi=\r\ns was a bit\nridiculous, I implemented feature selection and phased pruning.=\r\n\nHowever, even with this, deception seems to prevent any useful\nbehaviour; =\r\nthe Tori will always get stuck in ruts.\n\n\nI am using a python implementatio=\r\nn of neat developed by Cesar Gomez\nunder the GPL, which is available at htt=\r\np://code.google.com/p/neat-python/\n\nThis implementation is a WIP and I&#39;ve a=\r\nlready done a lot of tests\ntrying to incorporate the linear genome encoding=\r\n taken from the EANT\nmethod. I&#39;ve also been trying to incorporate CMA-ES in=\r\n order to\noptimize weights but I haven&#39;t had much success meshing this with=\r\n the\nrest of the code yet.\n\nLater today when I am home I will post my sourc=\r\ne files for anyone who\nwishes to experiment with virtual creature neuroevol=\r\nution.\n\n\n\nFINALLY, my question. The behaviour of a Tori is currently repres=\r\nented\nas a list of 20 base 4 variables multiplied by the amount of time\nste=\r\nps the Tori is evaluated for. The novelty search method proposed\nfor the 2d=\r\n maze navigation is fairly simple; if theres a new ending\npoint then \nwe ad=\r\nd that point to a list of discovered behaviours. This works well\n(I imagine=\r\n) because a point isn&#39;t a lot of information to hold.\n\nWhat I want to know =\r\nis how I can compare the behaviour of 2 ragdoll\ncontrollers for novelty; is=\r\n there any compact encoding that would\nwork? Since it often takes 25 000 se=\r\nperate evaluations to get any\nuseful behaviour out of this right now, there=\r\ns going to have to be\nsome way to store 20k seperate behaviours in some way=\r\n that is fast and\neasy to compare; what if a Tori has identical behaviour t=\r\no another but\ndoes things a couple of time steps later instead? Just compar=\r\ning the\ntwo behaviours it would appear that they were 100% unique, yet a hu=\r\nman\nobserver would instantly notice the similarity in how they act.\n\nAny id=\r\neas?\n\n\n"}}