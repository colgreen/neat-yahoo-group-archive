{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"3OPhGR1TqSMNJlO-2mggRvBFnsX627MGjXt5leZROacqKJQNegoGKfdCxfjAZSJbtccdDde9WhjmtXhi3TGsIq_qU6Vsl5zguqX0PZ4UzZr3","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Modularity and interfaces","postDate":"1109284278","msgId":1874,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGN2bGtqbStqMG9uQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDYuMi4wLjE0LjAuMjAwNTAyMTYxNDU0NTkuMDNiZDBhYjhAcG9wLm1haWwueWFob28uY28udWs+"},"prevInTopic":1872,"nextInTopic":1875,"prevInTime":1873,"nextInTime":1875,"topicId":1853,"numMessagesInTopic":13,"msgSnippet":"Hi Ian,  I ve read your recent modularity posts.  It s a good idea to lay out the different connotations modularity can have.  I think Joe Reisinger has done","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 68334 invoked from network); 24 Feb 2005 22:34:58 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m23.grp.scd.yahoo.com with QMQP; 24 Feb 2005 22:34:58 -0000\r\nReceived: from unknown (HELO n3a.bulk.scd.yahoo.com) (66.94.237.37)\n  by mta3.grp.scd.yahoo.com with SMTP; 24 Feb 2005 22:34:58 -0000\r\nReceived: from [66.218.69.1] by n3.bulk.scd.yahoo.com with NNFMP; 24 Feb 2005 22:31:43 -0000\r\nReceived: from [66.218.66.81] by mailer1.bulk.scd.yahoo.com with NNFMP; 24 Feb 2005 22:31:42 -0000\r\nDate: Thu, 24 Feb 2005 22:31:18 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;cvlkjm+j0on@...&gt;\r\nIn-Reply-To: &lt;6.2.0.14.0.20050216145459.03bd0ab8@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 4639\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.94.237.37\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Modularity and interfaces\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\nHi Ian,  I&#39;ve read your recent modularity posts.  It&#39;s a good idea \nto lay out the different connotations &quot;modularity&quot; can have.  I \nthink Joe Reisinger has done that kind of work too, so he might have \nsome insight into different kinds of modularity as well.  Also, \nRichard Watson (who is not in this group as far as I know) has done \na lot of work on modularity during his Ph.D. and Postdoc research:\n\nhttp://www.oeb.harvard.edu/faculty/wakeley/richard/\n\nAnyway, the experiment is interesting as a first stab at things.  \nYet it is strucutred in such a way that there is really only one way \nto break down the task, or am I wrong on that?  I mean, the module \nhas to return the line length.  I can&#39;t think of another computation \nit could do that would provide the necessary info to the &quot;user&quot; \nnetwork.  \n\nSo the question is, let&#39;s say the experiment succeeds, i.e. it \nevolves the module and user to solve the problem.  What new insight \ndoes that provide?  I guess at minimum it&#39;s a proof-of-concept that \nit&#39;s possible.  Yet at the same time I don&#39;t know if it&#39;s really \npointing in the right direction.  For example, I *think* we want to \nmove towards giving evolution in a computer the tools to develop \nmodules that it can reuse and encapsulate just as in your proposed \nexperiment, except that evolution would discover the breakdown \nitself.  Does this experiment give us more or less hope in that \nregard?\n\nken\n\n--- In neat@yahoogroups.com, Ian Badcoe &lt;ian_badcoe@y...&gt; wrote:\n&gt; \n&gt; Hi,\n&gt; \n&gt; \tHere&#39;s a first stab at an experiment into an aspect of \nmodularity.  This \n&gt; is very preliminary, so feel free to argue with it but also bear \nin mind \n&gt; that its deliberately designed to be a first step and therefor \nvery \n&gt; unambitious...\n&gt; \n&gt; \tThe idea here is to gift the system with:\n&gt; \n&gt; 1) the topology of connections between a module and a &quot;user&quot; \nnetwork (but \n&gt; not necessarily the links in each connection)\n&gt; 2) a genome with separate regions for one module, one user network \nand the \n&gt; connections between them\n&gt; 3) a problem that can very obviously and simply use modularity\n&gt; \n&gt; \tAnd the objective is to see (i) whether the module and the \nuser network \n&gt; can evolve to solve the problem, and (ii) whether the solution \nfound is \n&gt; similar to the method we anticipate, with a clear division of work \nbetween \n&gt; module and user.\n&gt; \n&gt; \tI suggest we set a problem where the question is &quot;which of \ntwo lines is \n&gt; shorter&quot; where the inputs are:\n&gt; \n&gt; V1S - line 1 start\n&gt; \n&gt; V1E - line 1 end\n&gt; \n&gt; V2S - line 2 start\n&gt; \n&gt; V2E - line 2 end\n&gt; \n&gt; (the number of coordinates in each of these points can be changed \nfor \n&gt; different complexities of experiment, but we should start with 1D \nintervals)\n&gt; \n&gt; \tAnd there is a single output that we want to be 0 or 1 (-1 \nor +1) \n&gt; according to the correct answer...\n&gt; \n&gt; \tThe topology of the network will be hardwired as follows:\n&gt; \n&gt; 1) two copies of the module each take one of the two lines as an \ninput and \n&gt; output one value\n&gt; 2) one copy of the user network takes output from both modules and \noutputs \n&gt; one value, this is the final output\n&gt; 3) the module can _only_ form connections to the line it inputs \nfrom, or \n&gt; internal to itself\n&gt; 4) the user network can only form connections to module outputs, \nor \n&gt; internal to itself\n&gt; \n&gt; \tI guess that the genomes of the module and the user are (at \nthis stage) \n&gt; essentially completely separate experiments...\n&gt; \n&gt; \tAnd there would be further genomes for the module interface \nand overall \n&gt; topology, except I have locked those for the moment...\n&gt; \n&gt; \t--\n&gt; \n&gt; \tI hope you can see here that what I am trying to do is to \nforce the \n&gt; overall solution into a form:\n&gt; \n&gt; \tanswer = f_user(f_module(line1), f_module(line_2))\n&gt; \n&gt; \t(where f_user(x, y) will be something like x &gt; y, and \nf_module will do \n&gt; something like return the length of the line)\n&gt; \n&gt; \te.g. I am not yet creating a system which is able to to \ndecide \n&gt; whether/where to use a module, or even define the interface for \nit, I am \n&gt; just setting up a scheme with a module, and trying to co-evolve \ninsides for \n&gt; it and its user.\n&gt; \n&gt; \tIf that works, then I would start to look at things like:\n&gt; \n&gt; 1) speed of solution vs non-modular approach\n&gt; 2) different dimensionality of line\n&gt; 3) let the module-&gt;user interface evolve (e.g. it could gain or \nlose \n&gt; connections)\n&gt; 4) use a similar approach for different problems, possibly with \nmore than \n&gt; one type of module\n&gt; 5) how to create genomes for interfaces and topology...\n&gt; \n&gt; \tFeedback please chaps,\n&gt; \n&gt; \t\tIan\n&gt; \n&gt; \n&gt; Living@Home - Open Source Evolving Organisms - \n&gt; http://livingathome.sourceforge.net/\n\n\n\n\n"}}