{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":200957992,"authorName":"jgmath2000","from":"&quot;jgmath2000&quot; &lt;jgmath2000@...&gt;","profile":"jgmath2000","replyTo":"LIST","senderId":"54b8IevVguIx3RKZ1BPgi6No1PaWZ1lyFLFvfTSDMS6wuCZZcG8m6Jdp0REpI4SXijlEVqy_gbGpSG5QbWoumjalEfEc_PvZDWg","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Memory usage and the generations stack in NEAT","postDate":"1295655859","msgId":5463,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGloZDgzaitiZGVjQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDREM0EwODA0LjgwNTAyMDRAZ2lzdGl4LmNvbT4="},"prevInTopic":5462,"nextInTopic":5465,"prevInTime":5462,"nextInTime":5464,"topicId":5459,"numMessagesInTopic":5,"msgSnippet":"Hey Rob, You are correct, the generational data is maintained for each generation, so this will continue to use more memory as you run evolution. With that","rawEmail":"Return-Path: &lt;jgmath2000@...&gt;\r\nX-Sender: jgmath2000@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 49263 invoked from network); 22 Jan 2011 00:24:21 -0000\r\nX-Received: from unknown (98.137.34.46)\n  by m1.grp.sp2.yahoo.com with QMQP; 22 Jan 2011 00:24:21 -0000\r\nX-Received: from unknown (HELO n40b.bullet.mail.sp1.yahoo.com) (66.163.168.154)\n  by mta3.grp.sp2.yahoo.com with SMTP; 22 Jan 2011 00:24:21 -0000\r\nX-Received: from [69.147.65.172] by n40.bullet.mail.sp1.yahoo.com with NNFMP; 22 Jan 2011 00:24:21 -0000\r\nX-Received: from [98.137.34.184] by t14.bullet.mail.sp1.yahoo.com with NNFMP; 22 Jan 2011 00:24:21 -0000\r\nDate: Sat, 22 Jan 2011 00:24:19 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ihd83j+bdec@...&gt;\r\nIn-Reply-To: &lt;4D3A0804.8050204@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;jgmath2000&quot; &lt;jgmath2000@...&gt;\r\nSubject: Re: Memory usage and the generations stack in NEAT\r\nX-Yahoo-Group-Post: member; u=200957992; y=d018dkSUmf1kDOhQtiiV1qRvVnlh-iIboWAQjGXMhFJ2a0ZxaQ\r\nX-Yahoo-Profile: jgmath2000\r\n\r\nHey Rob,\n\nYou are correct, the generational data is maintained for each gen=\r\neration, so this will continue to use more memory as you run evolution.\n\nWi=\r\nth that said, you can remove the individuals from older generations to save=\r\n memory.  I believe that the code currently removes all individuals except =\r\nthe generation champion from old generations, but you could even remove the=\r\n generation champion if you desire to save the extra space.\n\nBecause the ge=\r\nnerations don&#39;t have an ID and are index-based, to be completely free of me=\r\nmory usage creep, you&#39;d have to add a &quot;generation ID&quot; variable to the gener=\r\nations, and use that instead of the list index to find a generation. Then y=\r\nou could remove older generations entirely.\n\n--- In neat@yahoogroups.com, R=\r\nob Marsden &lt;rob@...&gt; wrote:\n&gt;\n&gt; \n&gt; Yes :-)\n&gt; \n&gt; It would appear so, but the=\r\nn I&#39;m not too familiar with the inner working \n&gt; of NEAT, just the generali=\r\nsations.\n&gt; \n&gt; In NEAT_GeneticPopulation.h, the class GeneticPopulation has =\r\na stack \n&gt; defined as:\n&gt; \n&gt; vector&lt;shared_ptr&lt;GeneticGeneration&gt; &gt; generati=\r\nons;\n&gt; \n&gt; and in the function:\n&gt; void GeneticPopulation::produceNextGenerat=\r\nion()\n&gt; at the end is:\n&gt; \n&gt;      generations.push_back(newGeneration);\n&gt;   =\r\n   onGeneration++;\n&gt; }\n&gt; \n&gt; A trace through the code, with the debugger, sh=\r\nows that the generations \n&gt; stack grows progressively. I haven&#39;t found anyt=\r\nhing that trims it down. \n&gt; In any event, trimming would seem to be problem=\r\natic, as it is accessed \n&gt; using the generation number as an index.\n&gt; \n&gt; I&#39;=\r\nm quite happy to be told that I&#39;m talking a load of rubbish, but a \n&gt; point=\r\ner or two would be appreciated.\n&gt; \n&gt; -- \n&gt; Rob Marsden\n&gt; Gistix (Northern) =\r\nLimited\n&gt;\n\n\n\n"}}