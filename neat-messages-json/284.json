{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"kstanley@cs.utexas.edu","from":"kstanley@...","profile":"kenstanley01","replyTo":"LIST","senderId":"0UxOsXWLz4LLsZS7Rfqujdr6cb56iOf52-4cOLWyxrXAHqEyrFG_4L4g0hyShDMmSaa0dLnY2OjsZ7isgg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: New file uploaded to neat","postDate":"1071727392","msgId":284,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGJycmZ2MCtwZG1vQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDIwMDMxMjE4MDMyNDE1LjkxMzc3LnFtYWlsQHdlYjYwODA2Lm1haWwueWFob28uY29tPg=="},"prevInTopic":283,"nextInTopic":322,"prevInTime":283,"nextInTime":285,"topicId":40,"numMessagesInTopic":95,"msgSnippet":"... This question is answered in the NEAT Software FAQ on the NEAT User s page, under the question, How are networks with arbitrary topologies activated?","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 11659 invoked from network); 18 Dec 2003 06:03:16 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m18.grp.scd.yahoo.com with QMQP; 18 Dec 2003 06:03:16 -0000\r\nReceived: from unknown (HELO n8.grp.scd.yahoo.com) (66.218.66.92)\n  by mta4.grp.scd.yahoo.com with SMTP; 18 Dec 2003 06:03:16 -0000\r\nReceived: from [66.218.67.163] by n8.grp.scd.yahoo.com with NNFMP; 18 Dec 2003 06:03:16 -0000\r\nDate: Thu, 18 Dec 2003 06:03:12 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;brrfv0+pdmo@...&gt;\r\nIn-Reply-To: &lt;20031218032415.91377.qmail@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2556\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.92\r\nFrom: kstanley@...\r\nSubject: Re: New file uploaded to neat\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n--- In neat@yahoogroups.com, Mitchell Timin &lt;zenguyuno@y...&gt; wrote:\n&gt; --- kstanley@c... wrote:\n&gt; &gt; Darren can correct me if I&#39;m wrong, but if I recall\n&gt; &gt; correctly this\n&gt; &gt; solution was accidentally evolved with recurrency\n&gt; &gt; turned off!  In\n&gt; &gt; other words, NEAT was forced to solve the problem\n&gt; &gt; without recurrent\n&gt; &gt; connections.  That may sound impossible, but\n&gt; &gt; actually it explains why\n&gt; &gt; there are so many nodes.   The &quot;chains&quot; of nodes act\n&gt; &gt; like a memory,\n&gt; &gt; because it takes several steps for activation to\n&gt; &gt; travel all the way\n&gt; &gt; down the chain, so it is able to effectively store\n&gt; &gt; information from\n&gt; &gt; the past that does not come to the outputs for\n&gt; &gt; several iterations.  If\n&gt; &gt; I am right about this, this architecture is actually\n&gt; &gt; somewhat\n&gt; &gt; remarkable, since it implements a kind of &quot;memory&quot;\n&gt; &gt; that is hardly ever\n&gt; &gt; discussed when people talk about NN&#39;s.\n&gt; \n&gt; In the usual feed-forward network, the MLP, updating\n&gt; starts with the inputs and proceeds forward until the\n&gt; outputs are updated.  Hence the new input values\n&gt; completely determine all values throughout the net,\n&gt; obliterating any memory.  \n&gt; \n&gt; A memory such as you describe would occur if you first\n&gt; updated the outputs, and then proceeded backward,\n&gt; finally updating the input layer last.\n&gt; \n&gt; Does the latter occur in NEAT?  How does NEAT decide\n&gt; when to update each neuron?\n&gt; \n&gt; \n\nThis question is answered in the NEAT Software FAQ on the NEAT User&#39;s\npage, under the question, &quot;How are networks with arbitrary topologies\nactivated?&quot;  Here is an [edited] copy of the answer:\n\n&quot;The activation function, bool Network::activate(), gives the\nspecifics. The implementation is of course considerably different than\nfor a simple layered feedforward network. Each node adds up the\nactivation from all incoming nodes from the previous timestep. \nAnother way to understand it is to realize that activation does not\ntravel all the way from the input layer to the output layer in a\nsingle timestep. In a single timestep, activation only travels from\none neuron to the next. So it takes several timesteps for activation\nto get from the inputs to the outputs. If you think about it, this is\nthe way it works in a real brain, where it takes time for a signal\nhitting your eyes to get to the cortex because it travels over several\nneural connections.&quot;\n\nSo in other words, the network has to be activated several times\nbefore input travels all the way over a long chain of nodes.  This\nmethod of activation is actually standard for arbitrary topology nets.\n\nken\n\n\n"}}