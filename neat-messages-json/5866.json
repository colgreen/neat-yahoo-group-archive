{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344770077,"authorName":"Colin Green","from":"Colin Green &lt;colin.green1@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"4rdCXCD15lWDWqgTiz7o0Y-Ouun_Os5dCW8bbapiDLW7OAHMk2jhVoLVEGf9SlUIECl0mAND0l2i-hManbp5PHMiGu2VBaHZ9SAc","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Problem domains that inherently foster novelty","postDate":"1347657293","msgId":5866,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBRTBNK1llV2VhenhEZGNaMTdGVFZXTz1IRWlEdHpCdkdaMnV2NUR3dUdETVJvWlBLUUBtYWlsLmdtYWlsLmNvbT4="},"prevInTopic":0,"nextInTopic":0,"prevInTime":5865,"nextInTime":5867,"topicId":5866,"numMessagesInTopic":1,"msgSnippet":"Hi all, Ken s video got me thinking (again). Consider for example a food foraging domain in a typical 2D grid format with food randomly distributed and","rawEmail":"Return-Path: &lt;colin.green1@...&gt;\r\nX-Sender: colin.green1@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 83686 invoked from network); 14 Sep 2012 21:14:54 -0000\r\nX-Received: from unknown (98.137.34.45)\n  by m8.grp.sp2.yahoo.com with QMQP; 14 Sep 2012 21:14:54 -0000\r\nX-Received: from unknown (HELO mail-ee0-f50.google.com) (74.125.83.50)\n  by mta2.grp.sp2.yahoo.com with SMTP; 14 Sep 2012 21:14:54 -0000\r\nX-Received: by eekc50 with SMTP id c50so2767838eek.37\n        for &lt;neat@yahoogroups.com&gt;; Fri, 14 Sep 2012 14:14:53 -0700 (PDT)\r\nMIME-Version: 1.0\r\nX-Received: by 10.14.211.3 with SMTP id v3mr5532728eeo.43.1347657293449; Fri, 14\n Sep 2012 14:14:53 -0700 (PDT)\r\nX-Received: by 10.14.136.15 with HTTP; Fri, 14 Sep 2012 14:14:53 -0700 (PDT)\r\nDate: Fri, 14 Sep 2012 22:14:53 +0100\r\nMessage-ID: &lt;CAE0M+YeWeazxDdcZ17FTVWO=HEiDtzBvGZ2uv5DwuGDMRoZPKQ@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Colin Green &lt;colin.green1@...&gt;\r\nSubject: Problem domains that inherently foster novelty\r\nX-Yahoo-Group-Post: member; u=344770077; y=LxCagFhFr63cUK2wKfeUwcg8PfObxNVdTaUywZtU7U95OQ7RHD-M\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nHi all,\n\nKen&#39;s video got me thinking (again). Consider for example a food\nforaging domain in a typical 2D grid format with food randomly\ndistributed and replaced. Fitness is based on how much food each agent\neats - so this is classic objective driven EC. It seems to me that\nagents with simple behaviours will be restricted in how much food they\ncan gather, e.g. perhaps by moving in a circular motion or some fixed\npattern of movement.\n\nSo now we need more complex behaviours to get additional food, and not\nonly that but if the agents are in the same locality of the same 2D\ngrid then they potentially need different behaviours to get food\nwithout clashing with other agents - so there&#39;s potentially a sort of\nbuilt in drive towards novelty in such domains, even though the\nfitness function is a simple objective.\n\nMore generally, it seems to me that a key benefit of novelty search is\nthat it preserves variation in the population, whereas classical EC\ntries to breed better solutions from a small gene pool of the top N%.\nIf you take the 2D food foraging example, one way of setting it up is\nto just say that any agent that eats enough to stay alive continues to\nlive, which in turn probbaly means killing off a small proportion of\nthe population per generation (although in this case it&#39;s easier to\nmake the domain non-generational or &#39;continuous&#39; evolution).\n\nThe more I think about it the more I think that the classical approach\nto EC is looking to be an overly simplistic model of evolution, and\nmissing some of they key qualities of evolution in the natural world.\nGeographic space allows not only scale (which we are severely limited\nin simulating) but also the option to survive using a strategy in your\nown territory even though millions of other agents use the same\nstrategy (in /their/ own territory). This geographical separation\nallows agents to freely search new behaviors without risk of fallng\nbelow some &#39;N% fittest agents&#39; threhold and getting passed over for\nselection.\n\nAlso it&#39;s not just geographical territory and separation, but\nbehavioral separation (the behavioural search space). E.g. two\nfamilies of big cats won&#39;t co-exist in the same territory, but they\ncan co-exist with other living creatures with wildly different\nsurvival strategies - such as small mammals, birds, insects, or even\nbacteria.\n\nAnother random thought related to continuous as opposed to\ngenerational evolution is that continuous evol allows for much better\nscaling on parallel CPU architectures. What I mean is, in a per\ngeneration set-up we divide each gens evals between CPUs/threads and\nthose threads that finish early must wait until the last thread has\ncompleted before we can continue with the next generation. This\nproblem gets worse with more CPUs, but in principle goes away for\ncontinuous evolution. This scalign problem depends somewhat on the\nsize of population and variation on evaluation time, but it&#39;s\ncertainly observable in most of the domains built into sharpneat if\nyou go to 4 cores, and becomes a bigger issue at 8 cores, it&#39;s not\nuncommon to see 70-75%  CPU utilisation, the equivalent of 1 or 2\ncores not being used at all.\n\nColin\n\n"}}