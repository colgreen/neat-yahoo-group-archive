{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"LVM4y1Siru1-kIzwT_gsBwm5W_5NI-TmE_Im9T51rQRlgCMQEGmSumpYv4kwQDf600VLPV5MbqvufE1qzZlLnKffxzl_EAr3nc_VUeXmWmqg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: Alternative crossover technique","postDate":"1094143782","msgId":1505,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNoN2l2Nis5dnNvQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDYuMS4yLjAuMC4yMDA0MDkwMjExMzQxNi4wMjU3NmQ5OEBwb3AubWFpbC55YWhvby5jby51az4="},"prevInTopic":1495,"nextInTopic":1510,"prevInTime":1504,"nextInTime":1506,"topicId":1151,"numMessagesInTopic":34,"msgSnippet":"In the usual GA view of evolution, the issue of genes that are functionally dependent being inherited together seems to be considered significant.  However, I","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 27736 invoked from network); 2 Sep 2004 16:50:08 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m21.grp.scd.yahoo.com with QMQP; 2 Sep 2004 16:50:08 -0000\r\nReceived: from unknown (HELO n4.grp.scd.yahoo.com) (66.218.66.88)\n  by mta3.grp.scd.yahoo.com with SMTP; 2 Sep 2004 16:50:08 -0000\r\nReceived: from [66.218.66.118] by n4.grp.scd.yahoo.com with NNFMP; 02 Sep 2004 16:49:45 -0000\r\nDate: Thu, 02 Sep 2004 16:49:42 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ch7iv6+9vso@...&gt;\r\nIn-Reply-To: &lt;6.1.2.0.0.20040902113416.02576d98@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 5753\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.218.66.88\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: Alternative crossover technique\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nIn the usual GA view of evolution, the issue of genes that are \nfunctionally dependent being inherited together seems to be \nconsidered significant.  However, I question whether this is really \na major problem in nature or NEAT?  Since crossover for the most \npart takes place in a single species, and two organisms in the same \nspecies more or less have the same set of genes, the issue of \ndifferent building blocks being broken apart from the parents to the \noffspring seems overblown.  Of course, if a duck mated with a pig, \nit would be a huge problem to make sure the duck genes largely stuck \ntogether.  However, why is this such a concern when a duck mates \nwith a duck?\n\nken\n\n--- In neat@yahoogroups.com, Ian Badcoe &lt;ian_badcoe@y...&gt; wrote:\n&gt; At 23:49 26/08/2004, you wrote:\n&gt; &gt;Colin Green wrote:\n&gt; &gt;\n&gt; &gt; &gt;hmm, so genes that are close together tend to be functionaly \ndependent.\n&gt; &gt; &gt;Genotype proximity indicates phenotype proximity. Whereas in \nNEAT the\n&gt; &gt; &gt;genes always remain in the order they were added to the genome \n(this\n&gt; &gt; &gt;makes comparison nice and fast), but perhaps we are loosing some\n&gt; &gt; &gt;important properties by doing this - namely, crossover could be \nallowed\n&gt; &gt; &gt;to re-arrange genes into functionaly dependent groups. Hey I \nlike this\n&gt; &gt; &gt;idea a lot Ian.\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;I just had another idea. If I remember correctly, in nature genes \nare\n&gt; &gt;usually marked out with certain short sequences of DNA. Perhaps \nwe could\n&gt; &gt;introduce the concept of a marker gene into the NEAT genome. We \ncould\n&gt; &gt;then implement a multipoint crossover technique that is marker \naware and\n&gt; &gt;hopefully genes would become re-ordered into functionaly dependent\n&gt; &gt;groups far more efficiently than using plain old random multipoint\n&gt; &gt;crossover.\n&gt; &gt;\n&gt; &gt;Of course I am assuming that nature uses the markers during \ncrossover as\n&gt; &gt;well as during expression of the genes. Actually it might not \nmatter, if\n&gt; &gt;crossover ignores the markers then the genes will still form \nfunctional\n&gt; &gt;groups during expression. There may be a great deal of junk \neither side\n&gt; &gt;of the markers if crossover is ignoring them - but then there is \nall\n&gt; &gt;that &#39;junk&#39; DNA isn&#39;t there.\n&gt; \n&gt; \n&gt; I guess you are talking about the common, short repetitive \nsequences found \n&gt; in the Junk DNA?\n&gt; \n&gt; They are not used as labels.  It&#39;s purely position on the \nchromosome and \n&gt; homology between the two chromosomes which determines their \nalignment \n&gt; before crossover (they are physically lined-up next to each \nother).  There \n&gt; is (used to be) some talk that repetitive sequences increase the \n&gt; probability of sequence duplication (which happens by misaligning \nthe \n&gt; chromosomes before crossover, and leads to one output with two \ncopies of a \n&gt; section, and one with none).\n&gt; \n&gt; You can easily reason that repetitive sequences create themselves \nin this \n&gt; way, in a &quot;selfish DNA&quot; manner, without affecting the individuals \nfitness.\n&gt; \n&gt; --\n&gt; \n&gt; Don&#39;t let that stop you, however, we don&#39;t need to take every idea \nfrom nature.\n&gt; \n&gt; --\n&gt; \n&gt; What you are describing is what I call an Arbitrary Label System \n&gt; (ALS).  It&#39;s part of a body of proposed research that I am slowly \nwriting \n&gt; up as a position document.  I will announce the document here when \nI get it \n&gt; done.  (I&#39;m not claiming to have invented the idea, I don&#39;t know \nwhere I \n&gt; got it from.)\n&gt; \n&gt; An ALS works as follows:\n&gt; \n&gt; 1) some sort of &quot;entities&quot; (genes, networks, channels) have labels\n&gt; 2) labels are subject to mutation along with the rest of the genome\n&gt; 3) connections between entities are established using label \ncompatibility\n&gt; \n&gt; That&#39;s deliberately vague, because the idea has several \napplications.  The \n&gt; broad idea is that label values co-evolve with the content of the \nentities \n&gt; they are attached to.  The labels thus provide the &quot;weak binding&quot; \nrequired \n&gt; for evolvability (in one body of theory, at least).\n&gt; \n&gt; For example, to support modular neat:\n&gt; \n&gt; 1) use multiple (different) networks in the individual -- code \neach network \n&gt; on a different &quot;chromosome&quot;\n&gt; 2) label each input to the individual\n&gt; 3) label each input to a network\n&gt; 4) label each output from the individual\n&gt; 5) label each output from a network\n&gt; \n&gt; When the individual is instantiated, bind each input to the output \nwith the \n&gt; most-closely matching label.\n&gt; \n&gt; Thus, for example, if one of the networks evolves as (say) a \nfeature \n&gt; extractor, then it will also evolve a label which will come to \nmean \n&gt; &quot;feature extractor #1&quot;.  Chromosome duplication can add a second \ncopy of \n&gt; the same feature extractor.  Initially it binds the same, is \nlabelled the \n&gt; same, and functions the same.  Labels (and thus bindings) and \nfunction can \n&gt; now drift between the two copies, until we have a different \nfeature \n&gt; extractor, with a label meaning &quot;feature extractor #2&quot;.\n&gt; \n&gt; My list of uses for ALS is:\n&gt; \n&gt; 1) label the individuals inputs and outputs (as above)\n&gt; 2) label connection points in a multi-component phenotype (needs \n#1, also \n&gt; as above)\n&gt; 3) gene labels for crossover (your point)\n&gt; 4) labels on working data stored in an individual (networks _can_ \nstore \n&gt; data internally, but I don&#39;t plan to only use ANN)\n&gt; 5) label individuals to define relatedness for crossover\n&gt; \n&gt; --\n&gt; \n&gt; An ALS might have features:\n&gt; \n&gt; Matching by similarity, or, matching by complementarity (A matches \nA vs A \n&gt; matches ~A).\n&gt; \n&gt; Labels are split into &quot;sockets&quot; and &quot;pugs&quot; or all labels bind one \nanother.\n&gt; \n&gt; Labels optionally also carry a &quot;specificity&quot; parameter determining \nhow \n&gt; close a match must be.\n&gt; \n&gt; Label values can be single numbers, character sequences, vectors, \nsets...\n&gt; \n&gt;          Ian\n&gt; \n&gt; \n&gt; \n&gt; Living@Home - Open Source Evolving Organisms - \n&gt; http://livingathome.sourceforge.net/\n\n\n"}}