{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":151231063,"authorName":"Joseph Reisinger","from":"Joseph Reisinger &lt;joeraii@...&gt;","profile":"joeraii","replyTo":"LIST","senderId":"tD0nRNQKD4-FMREVz9PV086BVBgdBE-riQOIXv7A9Cf0SEBHTjOm7oqxloTbPDoqRzahlericJnHN4fsnKvQuegXj3ZQlqEHudshtd45EQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Introduction/Some Questions","postDate":"1121720675","msgId":2115,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuTE5YLjQuNjMuMDUwNzE4MDkyOTEyMC4xNzI5OEBvcmFuZ2UtcGVrb2UuY3MudXRleGFzLmVkdT4=","inReplyToHeader":"PG9wc3QzdWJlaDd4NHAzM21AbWFpbC51dGV4YXMuZWR1Pg==","referencesHeader":"PGRiN240ZStqOXNmQGVHcm91cHMuY29tPiA8UGluZS5MTlguNC42My4wNTA3MTUwOTMyMDYwLjQzMDNAb3JhbmdlLXBla29lLmNzLnV0ZXhhcy5lZHU+IDxvcHN0ejZ1c3MzeDRwMzNtQG1haWwudXRleGFzLmVkdT4gPDA3QzE1NDczLTNGNjYtNDc3Qi1BRjc1LUU2RjlDRjM3N0NBNEBjcy51dGV4YXMuZWR1PiA8b3BzdDN1YmVoN3g0cDMzbUBtYWlsLnV0ZXhhcy5lZHU+"},"prevInTopic":2114,"nextInTopic":2117,"prevInTime":2114,"nextInTime":2116,"topicId":2088,"numMessagesInTopic":13,"msgSnippet":"... Yes, I know Ken has been giving it some thought. I ve implemented a genetic regulatory network (GRN) encoding that uses the NEAT algorithm (incremental","rawEmail":"Return-Path: &lt;joeraii@...&gt;\r\nX-Sender: joeraii@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 75631 invoked from network); 18 Jul 2005 21:04:35 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m30.grp.scd.yahoo.com with QMQP; 18 Jul 2005 21:04:35 -0000\r\nReceived: from unknown (HELO nobodaddy.cs.utexas.edu) (128.83.120.154)\n  by mta6.grp.scd.yahoo.com with SMTP; 18 Jul 2005 21:04:35 -0000\r\nReceived: from orange-pekoe.cs.utexas.edu (joeraii@... [128.83.120.122])\n\tby nobodaddy.cs.utexas.edu (8.13.4/8.13.4) with ESMTP id j6IL4ZJE012195\n\tfor &lt;neat@yahoogroups.com&gt;; Mon, 18 Jul 2005 16:04:35 -0500 (CDT)\r\nReceived: (from joeraii@localhost)\n\tby orange-pekoe.cs.utexas.edu (8.13.4/8.13.4/Submit) id j6IL4ZxX021960;\n\tMon, 18 Jul 2005 16:04:35 -0500\r\nDate: Mon, 18 Jul 2005 16:04:35 -0500 (CDT)\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;opst3ubeh7x4p33m@...&gt;\r\nMessage-ID: &lt;Pine.LNX.4.63.0507180929120.17298@...&gt;\r\nReferences: &lt;db7n4e+j9sf@...&gt; &lt;Pine.LNX.4.63.0507150932060.4303@...&gt;\n &lt;opstz6uss3x4p33m@...&gt; &lt;07C15473-3F66-477B-AF75-E6F9CF377CA4@...&gt;\n &lt;opst3ubeh7x4p33m@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Joseph Reisinger &lt;joeraii@...&gt;\r\nSubject: Re: [neat] Introduction/Some Questions\r\nX-Yahoo-Group-Post: member; u=151231063; y=jTyU77MIGyiGemsguk_A0B9g-Ml-ryzHfVEtD4LKcf3AGw\r\nX-Yahoo-Profile: joeraii\r\n\r\n&gt; So does this mean someone is working on a NEAT with indirect encoding?\n\nYes, I know Ken has been giving it some thought. I&#39;ve implemented a \ngenetic regulatory network (GRN) encoding that uses the NEAT algorithm \n(incremental complexification, artificial synapsis, etc), but I haven&#39;t \ngotten around to tacking on the &#39;N&#39; part to it. I actually took a break \nfrom NE for a bit to study representations and how they affect evolution \n(basically you can build in knowledge to your genetic representation to \nbias search towards better solutions), but I intend to come back to NE at \nsome point and write an indirect version of NEAT.\n\n&gt; Although thinking about this some more, I don&#39;t think a developmental \n&gt; encoding will accomplish what you are talking about here right?  Stuff \n&gt; like this in nature can happen because the whole &#39;ga&#39; is encoded in the \n&gt; genome.\n\nThe point you are getting at is very perceptive, but this statement is not \n/quite/ true. Genomes by themselves can&#39;t replicate, mutate, or make new \norganisms. If you were to take out my dna and put it in a petri dish, it \nwon&#39;t make a new me. In Nature genomes need &quot;epigenetic&quot; machinery to \naccomplish this. Of course this machinery is generated by interpreting the \ngenome, but to interpret the genome you need the machinery. This is, quite \nliterally, the chicken and egg problem.\n\n&gt; I suppose you could do something like perform the mutations \n&gt; themselves with an NN or a GP (that is part of each individual), or at \n&gt; least evolve some routine that is parameterized to some extent.  I think \n&gt; also that you need a very very long fitness climb before this kind of \n&gt; stuff will become statistically significant.  Of course I&#39;m not sure if \n&gt; this is what you meant in that paper but I actually read about someone \n&gt; who was either prposing or had written an entire GP system that was \n&gt; self-contained, I can&#39;t seem to find it now though.\n&gt;\n\nAnyway to get back to your main point. When you say &quot;the genome encodes \nthe ga&quot; you mean that it actually specifies the mechanisms for crossover \nand mutation, right? This is exactly what we are trying to get at with \nindirect encodings, but through a simpler method. There is this idea of a \n&quot;search space&quot; right? The search space /structure/ is determined by three \nthings: 1) the fitness function, 2) the genetic operators you employ for \nsearch (this includes things like speciation and multi-point populations), \nand 3) the representation you choose to enumerate solutions. It turns out \nthat to a large extent you can make changes in any of these three areas \nthat mimic changes to another area. For example you can make changes to \nyour representation that makes the mutation space more smooth. This could \nalso be accomplished by manually altering the fitness function.\n\nAnyway to get back to you point, what this boils down to is that we can \nfix the fitness function and search operators, but allow the \nrepresentation (the genotype to phenotype mapping) to change during the \ncourse of evolution, with the expectation that the mapping learns to \nencode some idea of the search space structure, in order to search \n&quot;smarter.&quot; This is referred to under the blanket term &quot;evolvability.&quot; This \nboils down to allowing the representation to change, and affect how \ncrossover and mutation take place (which would be equivalent to changing \ncrossover and mutation: pick your poison).\n\n&gt; When you say ad-hoc approaches do you mean relative to developmental \n&gt; systems, or something else?  It seems to me that if we engineer the \n&gt; system in this ad-hoc, but transparent fashion, at least at first, it \n&gt; will be easier to control the vital details.\n\nWith regards to modularity, I mean ad-hoc in the sense that you have to \nexplicitly add in measures to allow modularity, i.e. its not emergent from \nthe representation. For example mNEAT is very ad-hoc because of the forced \nnon-hierarchical modularization. I don&#39;t want to say that engineering \nsolutions this way is the wrong approach or anything (its gotten us \nairplanes and microprocessors), rather, since so many people engineer \nsolutions, I want to try a different angle and see what more a more \nnatural approach can come up with.\n\n&gt; Right, well thats what I was saying, my initial intuition is to actually \n&gt; do the opposite of what you are proposing =] (even more \n&gt; &#39;average-fitness&#39; than average..)  It just turns out that this also \n&gt; works to reward networks that did well on all trials over ones that \n&gt; &#39;specialize&#39; on particular cases.\n\nAh I see. In this case I think you have to be careful though, because if \nyour selection pressure is /too/ general, you might get useless, mushy \nsolutions (as we did in mNEAT). Just a word of caution. If you can \nsuitably constrain what the modules are being selected for, average \nfitness can be better I think.\n\nOn a side note in order to reduce the generalization bias I looked at \nconstructing pareto-fronts in the module population. Basically it ensures \nthat modules that aren&#39;t used in the same way won&#39;t compared to each \nother (much like speciation, but more general).\n\n&gt;&gt; Its deadly if the selective pressures aren&#39;t well aligned (which is\n&gt;&gt; very often the case), i.e. if one module is receiving reward for\n&gt;&gt; something else entirely, and therefore doesn&#39;t have to &quot;play nice&quot;\n&gt;&gt; with the other module in order to evolve. You can imagine a case\n&gt;&gt; where the downstream module keeps having its inputs changed whenever\n&gt;&gt; the upstream module changes, therefore during evolution, downstream\n&gt;&gt; modules that perform well in one fitness trial may perform poorly in\n&gt;&gt; the next. In general its very difficult to perform evolution on a\n&gt;&gt; population like this that has little control over its own fitness\n&gt;&gt; from generation to generation, as it basically destroys information\n&gt;&gt; about evolvability.\n&gt;\n&gt; Ok, yea I see what you are saying now, this is analogous to the bloat problem?\n\nYes, I suppose this can be considered a kind of a super-set of the bloat \nproblem. This kind of evaluation certainly causes bloat, since the network \nis desperately searching for a way to get a hold on its fitness.\n\n&gt;&gt; These correspond to the engineering view of modularity as a black-box\n&gt;&gt; processing unit (inputs/outputs well defined). Another way of\n&gt;&gt; thinking about modularity is based on the degree of component\n&gt;&gt; linkage. In biology, regulatory interactions form a (roughly) scale-\n&gt;&gt; free networks structure (i.e. a network where most nodes have few\n&gt;&gt; inputs/outputs, but some a few &quot;hub&quot; nodes have many). Combining this\n&gt;&gt; with the ability of RNA to bind with a varying degree of\n&gt;&gt; effectiveness to different binding sites you get a notion of weak-\n&gt;&gt; vs. strong-linkage. Components that are weakly connected don&#39;t affect\n&gt;&gt; each other very much (i.e. are compartmentalized as &quot;modules&quot;),\n&gt;&gt; whereas strongly connected components are very interdependent and\n&gt;&gt; cannot be changed easily without requiring that the linked components\n&gt;&gt; change as well. By allowing the degrees of &quot;linkedness&quot; to change,\n&gt;&gt; you get a really nice smooth, non-ad-hoc way of implementing\n&gt;&gt; hierarchy and reusable modularity.\n&gt;\n&gt; sounds like OOP =]\n&gt;\n&gt; Thats a valuable frame as well, but I don&#39;t think that the two \n&gt; definitions are contradictory, one is just fuzzy.  You will still have \n&gt; the types of modularity that I mentioned even under this system.\n\nRight, but the important point is that the reverse does not hold: you \ncan&#39;t have degrees of independence between modules with explicit \nmodularization (or rather you can, but then it is no longer explicit \nmodularity). Therefore you could argue that the biological sense of \nmodularity is more powerful.\n\n&gt;&gt; A lot of the vocab is still really up in the air (especially\n&gt;&gt; regarding modularity). I tend to defer to biology if possible, but\n&gt;&gt; the way biologists talk about modularity and the way engineers do is\n&gt;&gt; a bit different.\n&gt;&gt; -- Joe\n&gt;&gt;\n&gt;\n&gt; What about mathematicians? ;)\n\nMathematicians are even harder to get along with. :) I&#39;m still trying to \nfigure out what it means that useful metrics can only be defined on \ngenotypic spaces, and that phenotypic spaces instead can only be described \nas pre-topologies.\n\nJoe\n\n-- \n\nJoseph Reisinger\nhttp://www.cs.utexas.edu/users/joeraii\n\n"}}