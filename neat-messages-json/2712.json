{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"5sT3s90e3fPvPtgKlxgR0J5WMBS4xGhNBZqCwk_3aKHPFAn9X96ewt5i5u7l5wykCu3bRKBankM115nlXqLiPT0frtwARB0CDgPFyTW7mdp9","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: NEAT and highly recurrent networks","postDate":"1156711944","msgId":2712,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGVjdDBtOSs1NWtyQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGVjbmtlMiszZWgxQGVHcm91cHMuY29tPg=="},"prevInTopic":2711,"nextInTopic":2714,"prevInTime":2711,"nextInTime":2713,"topicId":2711,"numMessagesInTopic":7,"msgSnippet":"It sounds like the main issue before you can really start looking at delayed-XOR is to get XOR working more closely to my own NEAT (and others developed","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 98014 invoked from network); 27 Aug 2006 20:53:33 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m40.grp.scd.yahoo.com with QMQP; 27 Aug 2006 20:53:33 -0000\r\nReceived: from unknown (HELO n24.bullet.scd.yahoo.com) (66.94.237.53)\n  by mta6.grp.scd.yahoo.com with SMTP; 27 Aug 2006 20:53:33 -0000\r\nReceived: from [66.218.69.6] by n24.bullet.scd.yahoo.com with NNFMP; 27 Aug 2006 20:52:27 -0000\r\nReceived: from [66.218.66.80] by t6.bullet.scd.yahoo.com with NNFMP; 27 Aug 2006 20:52:27 -0000\r\nDate: Sun, 27 Aug 2006 20:52:24 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;ect0m9+55kr@...&gt;\r\nIn-Reply-To: &lt;ecnke2+3eh1@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: NEAT and highly recurrent networks\r\nX-Yahoo-Group-Post: member; u=54567749; y=wnGP-m7hrjTA11qMDDrJrWQ1yCeoEXZxebPZYEDAKHUoQ3X7sm5h\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nIt sounds like the main issue before you can really start looking at \ndelay=\r\ned-XOR is to get XOR working more closely to my own NEAT\n(and others develo=\r\nped since).  Certainly the 500-1000 generations \nit&#39;s taking you indicates =\r\nsomethign is likely wrong in your \nimplementation.\n\nI would suggest the fol=\r\nlowing experiment:  Start evolution with  a \npopulation of networks that al=\r\nready have the correct topology for a \nsolution to XOR and turn off structu=\r\nral mutations.  Then run your \nversion of NEAT as usual, except in this cas=\r\ne, it will only be \nsearching over weight space.  If it takes forever, it t=\r\nells you that \nthe problem is in the way your weights are being mutated, or=\r\n the way \nthey are being combined in crossover.  It may also indicate a \npr=\r\noblem in speciation (related to weight comparison).  In any case, \nit will =\r\ngreatly narrow down the problem.\n\nOnce you get it working on pure weight-ev=\r\nolution, then you can move \nto the normal topology evolution, and you will =\r\neither see it work \nright away, or find that there is a problem in adding s=\r\ntructure as \nwell.\n\nAbout compatibility testing for speciation, when you me=\r\nnion &quot;N,&quot; do \nyou mean the normalization term in my papers?  Regrettably, m=\r\nany \npeople miss that I did not use N (for normalization) in practice, \ntha=\r\nt is, I set N to 1 in all cases.  That may explain why you using \nthe same =\r\ncoefficients as me does not work.  If you look at my papers \nclosely, they =\r\nsay that N can be set to 1 if genomes are not too \nlarge.  I have found in =\r\npractice that it always works fine with it \nset to 1, so that&#39;s what I&#39;ve d=\r\none.  This confusion is my fault and \nI apologize for it- the papers should=\r\n be more clear- but I wanted \npeople to be aware of N and the option for no=\r\nrmalization in case it \nindeed does come into play with very large genomes.=\r\n\n\nAs for deviations from typical values, you can see all the values \nI&#39;ve u=\r\nsed in the appendix to my dissertation.  There is some \nexplanation there t=\r\noo for why different values were chosen.  One \nconsideration might be wheth=\r\ner very fine grained weight changed are \nkey or not in a particular problem=\r\n.  If they are, you might want the \ncoefficient of weight differences to be=\r\n higher.\n\nOnce you get XOR working, please let the group know how things go=\r\n \nwith the delayed XOR!  By the way, what language/platform did you \nuse fo=\r\nr your version of NEAT?\n\nken\n\n--- In neat@yahoogroups.com, &quot;mneylon01&quot; &lt;mne=\r\nylon01@...&gt; wrote:\n&gt;\n&gt; I&#39;ve been working on my own implimentation of NEAT (=\r\nhaving to fit \nto a\n&gt; predescribed framework) and while it&#39;s mostly working=\r\n, I&#39;m looking \nat\n&gt; a couple of questions.\n&gt; \n&gt; First, I know that the netw=\r\norks that NEAT generates can have\n&gt; recurrency (feedback), and this is like=\r\nly why some of the robot \ngame\n&gt; examples work well.  However, I&#39;m looking =\r\nat trying to use NEAT to\n&gt; find patterns in time series data, as one would =\r\nuse fully recurrent\n&gt; networks for (In these, also known as Elmen networks,=\r\n all of the\n&gt; hidden layer and output layer values are &#39;propagated&#39; into th=\r\ne next\n&gt; time step to give the network memory, with full connectivity \nbetw=\r\neen\n&gt; all the input and previous nodes to the hidden/output nodes).\n&gt; \n&gt; Su=\r\nch a network should be possible to be generated by NEAT, though I\n&gt; figure =\r\nthat not every recurrent type problem needs a fully \nrecurrent\n&gt; network.  =\r\nSo I&#39;m trying to use NEAT to generate such, using the\n&gt; classic delayed-XOR=\r\n problem (such that the result of xor of the two\n&gt; current inputs will be t=\r\nhe actual output some time steps away).  \nFully\n&gt; recurrent networks can be=\r\n trained to do this, but I want to \ngenerate a\n&gt; NEAT network that, after r=\r\nunning through the fixed data series a\n&gt; number of relaxation times, that t=\r\nhe weights have already been \ntrained\n&gt; through NEAT evolution such that I =\r\ndon&#39;t have to perform additional\n&gt; training on the network.  \n&gt; \n&gt; Has anyo=\r\nne had any success directly in generating such recurrent\n&gt; networks?  I kno=\r\nw my fitnesses improve with time, but it takes a \nlot\n&gt; of generations (100=\r\n0+ with a 150 member population) to even see\n&gt; something, and even then, it=\r\n&#39;s not anywhere close to what simple\n&gt; recurrent training can provide.  (Th=\r\nis may be also related to my\n&gt; second question).\n&gt; \n&gt; The other question I =\r\nhad was about convergence times.  I&#39;m trying \nto\n&gt; test my network on the n=\r\normal XOR problem (non-recurrent mode) and\n&gt; find that it takes many more e=\r\nvolution generations for the fitness \nto\n&gt; get to acceptable levels (based =\r\nsolely on the distance of expected \nvs\n&gt; observed output), exceptionaly mor=\r\ne than listed in the NEAT papers\n&gt; (500-1000 evolution steps as opposed to =\r\n10-30 steps) even when \nusing\n&gt; what I believe are the same values describe=\r\nd by Kenneth in his \npapers.\n&gt;  I&#39;ve tried nearly every parameter, and the =\r\nonly one that I know I\n&gt; want to keep low is the new node probability to av=\r\noid excessive \ngrowth\n&gt; of the network.  Anyone have any pointers on what p=\r\narameters are\n&gt; critical to help with rapid convergence on the best network=\r\n?  Mind\n&gt; you, it could still be something in my code which I&#39;ve been \npoun=\r\nding\n&gt; through to try to find differences.\n&gt; \n&gt; Another related question is=\r\n on the species comparison expression \nand\n&gt; tolerance.  I tend to use N=3D=\r\nnumber of genes in largest species\n&gt; regardless of the case, and for that I=\r\n have to play with the \ntolerance\n&gt; as to get 5 or more species in a popula=\r\ntion of 150.  Is there an \nideal\n&gt; average number of species that you want =\r\nto carry through in the\n&gt; population in order to take advantage of NEAT&#39;s u=\r\nse of species?  \nAnd\n&gt; when do people move away from the &#39;typical&#39; values o=\r\nf the \ncoefficients\n&gt; (1 and 1 for disjoint and excess elements, 0.4 for we=\r\night \ndifference\n&gt; average)\n&gt;\n\n\n\n\n\n"}}