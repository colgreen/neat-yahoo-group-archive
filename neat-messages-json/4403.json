{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":230385553,"authorName":"Cesar G. Miguel","from":"&quot;Cesar G. Miguel&quot; &lt;cesar.gomes@...&gt;","profile":"fdital","replyTo":"LIST","senderId":"9T-A4lgmzU9-qzpK8GqKyeJLNBapHz1Vr4fwDKx4yjhD0vERkKLeOBc8VrzE5T-lceUxx45MPdMHtwYoxz4EeR6pAKEkhC9-0oTndlS_8WU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: rtNEAT: max_depth() in an endless loop","postDate":"1225727023","msgId":4403,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRkZjEwMDc4MDgxMTAzMDc0M3M1YWI2ZTFhM2c4OWU1YTIwMjA3YjEwM2VmQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGdlam40aSttMnZwQGVHcm91cHMuY29tPg==","referencesHeader":"PGRkZjEwMDc4MDgxMTAxMTczOWg0YWVlMzgyNnI5MjE1NzhiZjYxNGEzOTk1QG1haWwuZ21haWwuY29tPgkgPGdlam40aSttMnZwQGVHcm91cHMuY29tPg=="},"prevInTopic":4402,"nextInTopic":4404,"prevInTime":4402,"nextInTime":4404,"topicId":4396,"numMessagesInTopic":16,"msgSnippet":"Hi Peter! ... I agree if recurrence is allowed, which is not the case in problems like XOR or when I strictly need feedforward topologies. In these situations","rawEmail":"Return-Path: &lt;cesar.gomes@...&gt;\r\nX-Sender: cesar.gomes@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 61982 invoked from network); 3 Nov 2008 15:43:46 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m44.grp.scd.yahoo.com with QMQP; 3 Nov 2008 15:43:46 -0000\r\nX-Received: from unknown (HELO ey-out-2122.google.com) (74.125.78.27)\n  by mta16.grp.scd.yahoo.com with SMTP; 3 Nov 2008 15:43:45 -0000\r\nX-Received: by ey-out-2122.google.com with SMTP id 25so941301eya.65\n        for &lt;neat@yahoogroups.com&gt;; Mon, 03 Nov 2008 07:43:44 -0800 (PST)\r\nX-Received: by 10.103.244.4 with SMTP id w4mr106807mur.131.1225727024119;\n        Mon, 03 Nov 2008 07:43:44 -0800 (PST)\r\nX-Received: by 10.103.241.10 with HTTP; Mon, 3 Nov 2008 07:43:43 -0800 (PST)\r\nMessage-ID: &lt;ddf100780811030743s5ab6e1a3g89e5a20207b103ef@...&gt;\r\nDate: Mon, 3 Nov 2008 13:43:43 -0200\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;gejn4i+m2vp@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;ddf100780811011739h4aee3826r921578bf614a3995@...&gt;\n\t &lt;gejn4i+m2vp@...&gt;\r\nX-Google-Sender-Auth: 890bd4e7bc1c1d6c\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nX-eGroups-From: &quot;Cesar G. Miguel&quot; &lt;cesargm@...&gt;\r\nFrom: &quot;Cesar G. Miguel&quot; &lt;cesar.gomes@...&gt;\r\nSubject: Re: [neat] Re: rtNEAT: max_depth() in an endless loop\r\nX-Yahoo-Group-Post: member; u=230385553; y=GJwNeOT7IcVl33uWcMUn_Usq8IGiJ4Dm-J1NoxOYjrCi\r\nX-Yahoo-Profile: fdital\r\n\r\nHi Peter!\n\n&gt; The best solution in my opinion is to put a limit on the possible\n&gt; depth, say 32, if the depth exceeds 32, quit the recursion and\n&gt; activate the network 32 times. It slows things down but at least it\n&gt; will not hurt evolution as if you penalize looped networks.\n\nI agree if recurrence is allowed, which is not the case in problems\nlike XOR or when I strictly need feedforward topologies. In these\nsituations a genotype containing a loop connection is useless (so its\nfitness is set to zero).\n\nFor recurrent networks I use a different approach for activation: at\neach time step all the neurons are updated using information only from\nthe previous step. The same is for CTRNNs, as in Beer&#39;s code [1]. The\napproach is like having a network with depth one (all nodes activated\nonly once). If I&#39;m not mistaken, rtNEAT works the same.\n\n[]&#39;s\nCesar\n\n[1] http://mypage.iu.edu/~rdbeer/Software/EvolutionaryAgents/CTRNN.cpp\n\n&gt;\n&gt; Peter\n&gt;\n&gt; --- In neat@yahoogroups.com, &quot;Cesar G. Miguel&quot; &lt;cesar.gomes@...&gt;\n&gt; wrote:\n&gt;\n&gt;&gt;\n&gt;&gt; Hi all,\n&gt;&gt;\n&gt;&gt; I&#39;m not sure if someone else has notice this &quot;bug&quot; in rtNEAT, but\n&gt; the\n&gt;&gt; max_depth() method in network.cpp has the potential to be forever in\n&gt;&gt; loop if a recurrent link is added in a feedforward topology, e.g.,\n&gt; the\n&gt;&gt; XOR experiment (and that can happen even when the recur_only_prob\n&gt;&gt; parameter is set to zero). A real example is attached.\n&gt;&gt;\n&gt;&gt; It seems to happen in 1 out of 10 runs. The max_depth() method calls\n&gt;&gt; depth() in nnode.cpp, which should return the max depth of that\n&gt; node.\n&gt;&gt; But it can get trapped in a loop if any recurrent link is present\n&gt; (as\n&gt;&gt; it is commented out in the source: DEPTH NOT DETERMINED FOR NETWORK\n&gt;&gt; WITH LOOP).\n&gt;&gt;\n&gt;&gt; For those cases I have to force a return if an endless loop is\n&gt;&gt; detected and then set the chromosome&#39;s fitness to zero in order to\n&gt;&gt; continue.\n&gt;&gt;\n&gt;&gt; Has anyone dealed with that before?\n&gt;&gt;\n&gt;&gt; []&#39;s\n&gt;&gt; Cesar\n&gt;&gt;\n&gt;\n&gt; \n\n"}}