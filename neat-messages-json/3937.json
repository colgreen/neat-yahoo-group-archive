{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":206967455,"authorName":"Julian Togelius","from":"&quot;Julian Togelius&quot; &lt;julian@...&gt;","profile":"jtogel","replyTo":"LIST","senderId":"JHijlhuZkUyr5kuxBRCjpu6g-adls6v0Z6VGCDVmMqlKyCQ2qNT1aQHZY2Q8jfpk6foCkj26sSdbZQS-9jMUDAK3WreU6eSlBG4c7KtW","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Re: Combining evolution with evolution (request for references)","postDate":"1207529436","msgId":3937,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIzMGU0NjNlMDgwNDA2MTc1MHg4ZDJkNTQ3Zzg0M2NlNDJhNDZjZDYwNDJAbWFpbC5nbWFpbC5jb20+","inReplyToHeader":"PGZ0OG9rNStpZWh0QGVHcm91cHMuY29tPg==","referencesHeader":"PDIzMGU0NjNlMDgwNDA0MTgwOW8zMjkwZGI2MmczYTAwNzg5OTQ4MGY1NmIyQG1haWwuZ21haWwuY29tPgkgPGZ0OG9rNStpZWh0QGVHcm91cHMuY29tPg=="},"prevInTopic":3936,"nextInTopic":3941,"prevInTime":3936,"nextInTime":3938,"topicId":3922,"numMessagesInTopic":14,"msgSnippet":"... Apparently... I d really like to know if the stuff is out there somewhere. It would be embarrassing to go and publish more papers on algorithms based on","rawEmail":"Return-Path: &lt;julian.togelius@...&gt;\r\nX-Sender: julian.togelius@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 60864 invoked from network); 7 Apr 2008 00:50:36 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m53.grp.scd.yahoo.com with QMQP; 7 Apr 2008 00:50:36 -0000\r\nX-Received: from unknown (HELO wa-out-1112.google.com) (209.85.146.177)\n  by mta17.grp.scd.yahoo.com with SMTP; 7 Apr 2008 00:50:36 -0000\r\nX-Received: by wa-out-1112.google.com with SMTP id j4so1116499wah.1\n        for &lt;neat@yahoogroups.com&gt;; Sun, 06 Apr 2008 17:50:36 -0700 (PDT)\r\nX-Received: by 10.114.93.17 with SMTP id q17mr5262168wab.70.1207529436463;\n        Sun, 06 Apr 2008 17:50:36 -0700 (PDT)\r\nX-Received: by 10.115.95.17 with HTTP; Sun, 6 Apr 2008 17:50:36 -0700 (PDT)\r\nMessage-ID: &lt;230e463e0804061750x8d2d547g843ce42a46cd6042@...&gt;\r\nDate: Mon, 7 Apr 2008 02:50:36 +0200\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;ft8ok5+ieht@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nReferences: &lt;230e463e0804041809o3290db62g3a007899480f56b2@...&gt;\n\t &lt;ft8ok5+ieht@...&gt;\r\nX-Google-Sender-Auth: d3a4c9f82f9c7dd3\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;Julian Togelius&quot; &lt;julian@...&gt;\r\nSubject: Re: [neat] Re: Combining evolution with evolution (request for references)\r\nX-Yahoo-Group-Post: member; u=206967455; y=E8ROHn56kUd7-px4dS6pmKYhGOPgxuT8OWlDdVOP3DHr\r\nX-Yahoo-Profile: jtogel\r\n\r\n&gt; I see what you&#39;re saying- no one thought to really explore the\n&gt;  interaction of the two different time scales.\n\nApparently... I&#39;d really like to know if the stuff is out there\nsomewhere. It would be embarrassing to go and publish more papers on\nalgorithms based on this idea if it turns out to already have been\ndone.\n\n&gt;  But don&#39;t most of the older TWEANN neuroevolution algorithms have a\n&gt;  different topological mutation rate from the weight mutation rate? In\n&gt;  other words, while they do not explicitly enact two different time\n&gt;  scales (as you thought to do), is not the effect the same implicitly?\n&gt;\n&gt;  I&#39;m not certain about this issue because I don&#39;t remember precisely\n&gt;  how people set their relative mutation rates for different types of\n&gt;  changes in various systems, but I would guess that most have weights\n&gt;  changing more often than topologies. At least that is how NEAT was\n&gt;  originally set up, and it seemed to straightforward thing to do.\n&gt;\n&gt;  Or do you feel that perhaps having different mutation rates is not\n&gt;  really the same as having explicitly differing time scales that\n&gt;  separate periods of weight an topology search?\n\nYes. It&#39;s not the same thing at all. In the algorithms you mention,\neven if the topology mutation rate is set very low, the problem is\nthat each new topology is evaluated immediately, before a good set of\nweights has been found. As topology mutations are typically very\ndisruptive, this makes it hard for a new topology to survive. The\nreason these algorithms work at all is probably that they are\npopulation-based and have a rather low selection pressure. If you just\nperform topology and weight mutations in a hill climber, and evaluate\nthe fitness of the network after each topology mutation, the hill\nclimber will not work at all.\n\nThe memetic climber evaluates the fitness of a new topology only after\nsome local search to find better weights for the new topology. This\nway, far more new topologies can be accepted. So the real difference\nto the algorithms you mention is not the proportion of weight or\ntopology mutations, but that they essentially treat both types of\nmutations the same way, instead of interleaving local with global\nsearch.\n\nAs I understand it, you solve the problem with topology mutations in\ntwo ways in NEAT (if I remember the details right, was a while since I\nread the NEAT paper last time). The most important method is\ninnovation protection, where you allow a new topology to live on for a\nwhile even if it is initially substandard. Innovation protection is a\nvery similar idea to the memetic climber, and is the most important\nprior work I&#39;ve been able to find (and is of course cited as such in\nthe paper). The other method is that you design your topology\nmutations to be as non-disruptive as possible, as is the case with\nlink splitting. Obviously, this works really well; what I&#39;m trying to\ndo is isolate a core mechanism and understand it properly.\n\nThe more I try to explain this, the clearer it is that I lack the\nproper terminology...\n\nJulian\n\n&gt;  ken\n&gt;\n&gt;\n&gt;  --- In neat@yahoogroups.com, &quot;Julian Togelius&quot; &lt;julian@...&gt; wrote:\n&gt;  &gt;\n&gt;\n&gt;  &gt; &gt; I think that some people did see themselves as taking the next step\n&gt;  &gt; &gt; when neuroevoltuion algorithms started proliferating in the 90s.\n&gt;  &gt; &gt; I think a lot of those early algorithms were motivated by people who\n&gt;  &gt; &gt; saw themselves as cutting backprop completely out of the loop. You\n&gt;  &gt; &gt; know, if you look back at some of the papers on neuroevolution at\n&gt;  &gt; &gt; that time, some would evolve topology and combine it with backprop,\n&gt;  &gt; &gt; and some would simply evolve everything (weights and topology, which\n&gt;  &gt; &gt; are sometimes called TWEANNs for topology and weight evolving\n&gt;  &gt; &gt; artificial neural networks). Probably some of those people evolving\n&gt;  &gt; &gt; TWEANNs saw themselves as taking the next step you describe. (Xin\n&gt;  &gt; &gt; Yao&#39;s 1999 review covers a lot of those methods from that time)\n&gt;  &gt; &gt;\n&gt;  &gt; &gt; The difference is that no one did it with a population of one, but\n&gt;  &gt; &gt; that probably just did not occur to them because as soon as you go\n&gt;  &gt; &gt; to a non-gradient type of problem (like evolving topologies)\n&gt;  &gt; &gt; populations seem natural at first thought. Of course what you&#39;ve\n&gt;  &gt; &gt; shown is that you can make it work at least in some cases without a\n&gt;  &gt; &gt; population.\n&gt;  &gt;\n&gt;  &gt; Actually, the big difference is that we&#39;re doing it at different\n&gt;  &gt; timescales. This is really the whole reason it works.\n&gt;  &gt;\n&gt;  &gt; The simplest extension is to mutate both topology and weights at the\n&gt;  &gt; same timescale, either in the very same mutation or in different\n&gt;  &gt; mutation types (say, half of the time it mutates topology and half of\n&gt;  &gt; the it mutates weights). The algorithm we call &quot;simultaneous climber&quot;\n&gt;  &gt; in the paper does just that: it applies both topology and weight\n&gt;  &gt; mutation at the same time. It doesn&#39;t work at all - in fact it&#39;s much\n&gt;  &gt; worse than a simple hillclimber that only searches weight space. The\n&gt;  &gt; reason is that topology mutations are destructive, and needs to be\n&gt;  &gt; offset with local weight search to explore the potential of the\n&gt;  &gt; topology, otherwise no topology mutations would survive.\n&gt;  &gt;\n&gt;  &gt; Tino and me have been trying to work our way through the references in\n&gt;  &gt; Yao&#39;s paper, but many of the early TWEANN papers are very hard to get\n&gt;  &gt; hold of (Journal of Parallel Computing from 1990 etc.). What we&#39;ve\n&gt;  &gt; found are examples of either evolving topologies and using backprop to\n&gt;  &gt; set the weights, or evolving topologies and weights at the same time\n&gt;  &gt; (i.e. topology and weights are treated the same way, and topology\n&gt;  &gt; changes are not followed by any kind of weight search before the new\n&gt;  &gt; topology is evaluated). So what puzzles me is why people have not\n&gt;  &gt; simply tried replacing backprop with evolution, while keeping the idea\n&gt;  &gt; that topology changes are evaluated only after a period of weight\n&gt;  &gt; search.\n&gt;  &gt;\n&gt;  &gt; Either this has been done in one of these papers we haven&#39;t found or\n&gt;  &gt; gotten hold of yet, or the idea wasn&#39;t so obvious after all...\n&gt;  &gt;\n&gt;  &gt; Julian\n&gt;  &gt;\n&gt;  &gt; &gt; ken\n&gt;  &gt; &gt;\n&gt;  &gt; &gt;\n&gt;  &gt;\n&gt;  &gt;\n&gt;  &gt;\n&gt;  &gt; --\n&gt;  &gt; Julian Togelius\n&gt;  &gt; IDSIA\n&gt;  &gt; Galleria 2\n&gt;  &gt; 6928 Manno-Lugano\n&gt;  &gt; Switzerland\n&gt;  &gt; julian@...\n&gt;\n&gt;  &gt; http://julian.togelius.com\n&gt;  &gt; http://www.idsia.ch/~togelius\n&gt;  &gt; +41-764-110679\n&gt;  &gt; +46-705-192088\n&gt;  &gt;\n&gt;\n&gt;  \n\n\n\n-- \nJulian Togelius\nIDSIA\nGalleria 2\n6928 Manno-Lugano\nSwitzerland\njulian@...\nhttp://julian.togelius.com\nhttp://www.idsia.ch/~togelius\n+41-764-110679\n+46-705-192088\n\n"}}