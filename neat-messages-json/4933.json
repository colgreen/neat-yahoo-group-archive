{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":344770313,"authorName":"Colin Green","from":"Colin Green &lt;colin.green1@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"I6gTwEVeebJV7aVJaWvcHH8MFqED7Z2GkHmS4lDI4PkuEf52UczkOfk8Lpd9KUp64dM3TMtqR_Y7Insgwm3KUqodOMpUIZM9iRA11vc8kTg","spamInfo":{"isSpam":false,"reason":"4"},"subject":"Re: [neat] Re: FloatFastConcurrentNetwork - Performance Optimization","postDate":"1259446738","msgId":4933,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDcyN2E0MDZjMDkxMTI4MTQxOGwxOGUxMjZjMHk3YjA3MTc1ZDI0MmE0YjMzQG1haWwuZ21haWwuY29tPg==","inReplyToHeader":"PGhlcHFnaSt0dHJlQGVHcm91cHMuY29tPg==","referencesHeader":"PGhlbjZzZit1dGUwQGVHcm91cHMuY29tPiA8aGVwcWdpK3R0cmVAZUdyb3Vwcy5jb20+"},"prevInTopic":4931,"nextInTopic":4934,"prevInTime":4932,"nextInTime":4934,"topicId":4917,"numMessagesInTopic":12,"msgSnippet":"Hi, Yeh the SN2 code is essentially a complete re-write with a primary goal being a more flexible, general-purpose EC framework. There were perhaps some","rawEmail":"Return-Path: &lt;colin.green1@...&gt;\r\nX-Sender: colin.green1@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 78922 invoked from network); 28 Nov 2009 22:18:59 -0000\r\nX-Received: from unknown (98.137.34.44)\n  by m1.grp.sp2.yahoo.com with QMQP; 28 Nov 2009 22:18:59 -0000\r\nX-Received: from unknown (HELO mail-yw0-f173.google.com) (209.85.211.173)\n  by mta1.grp.sp2.yahoo.com with SMTP; 28 Nov 2009 22:18:59 -0000\r\nX-Received: by mail-yw0-f173.google.com with SMTP id 3so2207845ywh.22\n        for &lt;neat@yahoogroups.com&gt;; Sat, 28 Nov 2009 14:18:58 -0800 (PST)\r\nMIME-Version: 1.0\r\nX-Received: by 10.91.55.22 with SMTP id h22mr3773010agk.62.1259446738704; Sat, \n\t28 Nov 2009 14:18:58 -0800 (PST)\r\nIn-Reply-To: &lt;hepqgi+ttre@...&gt;\r\nReferences: &lt;hen6sf+ute0@...&gt; &lt;hepqgi+ttre@...&gt;\r\nDate: Sat, 28 Nov 2009 22:18:58 +0000\r\nMessage-ID: &lt;727a406c0911281418l18e126c0y7b07175d242a4b33@...&gt;\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nX-eGroups-Msg-Info: 2:4:8:0:0\r\nFrom: Colin Green &lt;colin.green1@...&gt;\r\nSubject: Re: [neat] Re: FloatFastConcurrentNetwork - Performance Optimization\r\nX-Yahoo-Group-Post: member; u=344770313; y=0A1Hj86ILskfOf-_2A66I6xMxVrJfY5SuA8u7kxAJGS5uHq3Afy3\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nHi,\n\nYeh the SN2 code is essentially a complete re-write with a primary\ngoal being a more flexible, general-purpose EC framework. There were\nperhaps some forgotten corners in SN1 and this is addressed by the\nre-write. Now that the core code is settled I&#39;ve been re-reviewing it\nall as a whole before progressing further, fixing the odd bug,\nrefactoring a few sections that were tagged with FIXMEs, TODOs, and\nENHANCEMENTs (some of these remain as they are low priority) and\nensuring the comments (XML and in-line) are meaningful.\n\nPerformance in SN1 was a primary design goal and is pretty good I\nthink. I ran it through a profiler and homed in and rewrote some of\nthe less efficient sections - neural net decoding and activation being\nthe main areas I can recall, oh and genome comparison was sped up 100x\nor so at one point. SN2 hasn&#39;t been through a profiler yet but I&#39;ve\nbeen writing pretty tight code IMO and taking lessons and code from\nSN1. Even so it always pays to run code through a profiler in case\nsomething has been missed or some unintended things are going on - new\nthinsg like k-means algorithm migth need extra work (e.g.\nmultithreading).\n\nThere probably are a few points where events would make sense and this\nis something that can be layered on now that the core code is settled,\nhowever, events in high frequency code such as mutations could hit\nperformance so care should be taken. My main aim here is to get the\ncore stuff right, others can then take the code and bend it to their\nparticular needs.\n\nFxCop I have used briefly. IMO the default checks aren&#39;t quite aligned\nto what I&#39;m trying to achieve, that is, I&#39;m not aiming for a\nfixed/pre-compiled API for commercial use by the masses. There&#39;s also\nsome degree of personal opinion on what checks to make - I personally\ndisagree with /some/ of the default checks, but its worth taking a\nfresh look at and maybe tweaking some of the rules.\n\nIf you have any more thoughts on the SN2 code then let me know, IMO\nreleasing source code into the wild is how good quality code gets\nwritten, the more pairs of eyes the better, and at the end of the day\nif people disagree strongly with the direction it&#39;s going then it&#39;s\nopen source.\n\nHope that all makes sense,\n\nColin\n\n"}}