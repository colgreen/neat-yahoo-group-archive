{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"Colin Green &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"anNFpRPPzmZo27kXYp4bN4WcK7TSC_rBUhli3kf1X71kpVkHCPJ2AbYn-1HgAuAbdR-hfD1KgFwdc54JWeGqH96k76rdfBEo6w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Prey capture revisited","postDate":"1100723407","msgId":1727,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxOUJCNENGLjcwNjA3MDlAZHNsLnBpcGV4LmNvbT4="},"prevInTopic":0,"nextInTopic":1728,"prevInTime":1726,"nextInTime":1728,"topicId":1727,"numMessagesInTopic":5,"msgSnippet":"Following the recent Refining Search thread, Derek described a problem where an evolved network scored 100% on the fitness function, but then scores less","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 64108 invoked from network); 17 Nov 2004 20:29:58 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m17.grp.scd.yahoo.com with QMQP; 17 Nov 2004 20:29:58 -0000\r\nReceived: from unknown (HELO astro.systems.pipex.net) (62.241.163.6)\n  by mta6.grp.scd.yahoo.com with SMTP; 17 Nov 2004 20:29:58 -0000\r\nReceived: from [10.0.0.10] (81-86-175-101.dsl.pipex.com [81.86.175.101])\n\tby astro.systems.pipex.net (Postfix) with ESMTP id DB36CE000221\n\tfor &lt;neat@yahoogroups.com&gt;; Wed, 17 Nov 2004 20:29:57 +0000 (GMT)\r\nMessage-ID: &lt;419BB4CF.7060709@...&gt;\r\nDate: Wed, 17 Nov 2004 20:30:07 +0000\r\nUser-Agent: Mozilla Thunderbird 0.7.1 (Windows/20040626)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nContent-Type: text/plain; charset=us-ascii; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nX-eGroups-Remote-IP: 62.241.163.6\r\nFrom: Colin Green &lt;cgreen@...&gt;\r\nSubject: Prey capture revisited\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\nFollowing the recent &#39;Refining Search&#39; thread, Derek described a problem \nwhere an evolved network scored 100% on the fitness function, but then \nscores less than 100% on subsequent more exhaustive tests. This is a \nconsequence of using random tests for each evaluation, and therefore the \nscore is partly dependent on which test cases come up.\n\nTo alleviate the problem I suggested keeping a list of test cases that \nhave previously failed and to test against these on each eval, as well \nas the normal set of random tests. Now it just so happens that this same \nproblem exists with the prey capture domain currently implemented in \nSharpNEAT, so I was curious to see if the technique would work.\n\nAfter some experimenting I have settled on a slightly different approach \nthan the one I described, but the concept is the same - keep track of \nfailed tests and evaluate against them. The results are very good, the \nprogress of the search is much slower than the existing code that used \nonly random tests, typically it takes about 12 hrs now to achieve \nmaximum fitness, whereas before it took about 1-2hrs. But the quality of \nthe evolved networks at the end of the process is much higher, in fact \nthe networks are near-perfect, although not quite 100% perfect, most \nlikely due to non-determinism creeping back into the system as the \ndifficulty level is increased (the prey begins to move in a \nnon-deterministic manner).\n\nI hope to address this last little problem in an attempt to evolve 100% \nperfect networks for this task, but as it stands this experiment has \ndemonstrated the effectiveness of the technique. It may not be \napplicable to all non-deterministic domains, but I think it is a useful \ntechnique for the NEAT toolkit.\n\nFollowing a bit more experimentation I hope to put together another \nwrite-up on all of this to fill out the details.\n\nColin\n\n"}}