{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":127853030,"authorName":"Colin Green","from":"&quot;Colin Green&quot; &lt;cgreen@...&gt;","profile":"alienseedpod","replyTo":"LIST","senderId":"Ssd4awiYdFYiYH4J-X5Ssg4xpN9td__ZCi0AvS2MWrUg58PCHZPFtqDOIterBYuej9rGKapEasjjEGDJ6207P7-uEgsPHqAc0nNn","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: 3D cross product domain","postDate":"1091787209","msgId":1339,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGNldmxrOSt2MHUxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDUwNmMwMWM0N2I3OCQxNDZmY2RlMCQ3NGNiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":1338,"nextInTopic":1341,"prevInTime":1338,"nextInTime":1340,"topicId":1298,"numMessagesInTopic":17,"msgSnippet":"... basically I ... the ... therefore ... from 3 ... all ... Ok. ... subtracting ... No, the two schemes are equivalent. I use a fitness value instead of a","rawEmail":"Return-Path: &lt;cgreen@...&gt;\r\nX-Sender: cgreen@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 73207 invoked from network); 6 Aug 2004 10:14:48 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m1.grp.scd.yahoo.com with QMQP; 6 Aug 2004 10:14:48 -0000\r\nReceived: from unknown (HELO n27.grp.scd.yahoo.com) (66.218.66.83)\n  by mta6.grp.scd.yahoo.com with SMTP; 6 Aug 2004 10:14:47 -0000\r\nReceived: from [66.218.67.163] by n27.grp.scd.yahoo.com with NNFMP; 06 Aug 2004 10:13:32 -0000\r\nDate: Fri, 06 Aug 2004 10:13:29 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;cevlk9+v0u1@...&gt;\r\nIn-Reply-To: &lt;506c01c47b78$146fcde0$74cb010a@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 2319\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Remote-IP: 66.218.66.83\r\nFrom: &quot;Colin Green&quot; &lt;cgreen@...&gt;\r\nSubject: Re: 3D cross product domain\r\nX-Yahoo-Group-Post: member; u=127853030\r\nX-Yahoo-Profile: alienseedpod\r\n\r\n--- In neat@yahoogroups.com, &quot;Chad Bohannan&quot; &lt;chad@b...&gt; wrote:\n&gt; \n&gt; &gt;I have a cross product experiment up and running. I have used the \n&gt; &gt;&quot;spikey sphere&quot; of 26 vectors giving 26*26=676 test cases that I \n&gt; &gt;described. I assign each test case a max fitness of 1.0, \nbasically I \n&gt; &gt;compare the network&#39;s output with the expected result and total \nthe \n&gt; &gt;error for the three components (x,y and z). This gives me a value \n&gt; &gt;between 0 and 3 because my vectors are all length 1.0 and \ntherefore\n&gt; each \n&gt; &gt;component should be between 0 and 1. I then subtract that error \nfrom 3 \n&gt; &gt;and divide by 3 to give a fitness between 0 and 1 - did you get \nall\n&gt; that :)\n&gt; \n&gt; nope.\n\nOk.\n\n&gt; \n&gt; Is there any advantage in all this compared to just directly \nsubtracting\n&gt; the error from zero? \n\nNo, the two schemes are equivalent. I use a fitness value instead of \na punishment because that is currently what SharpNEAT requires. So \nall I do is subtract your error value from the maximum possible \nerror to convert the error value into a fitness value - and then I \nscale it a bit. But again the scaling has no real benefit other than \ngiving a convienient number that matches how many test cases I have \n(676).\n\nThe only difference between mine and your schemes is the way I \nassign a fitness of 0 for results where the sign is incorrect. So if \nthe x coord should have been 0.1 and the network return -0.1, you \nwould assign an error of 0.2 (right?) whereas I would assign a \nfitness of 0 (equivalent to you assigning a maximum error).\n\n&gt; [...]\n&gt; Granted it still doesn&#39;t work, and I&#39;ve run pretty long runs, but \nthey\n&gt; level off very quickly. \n\nYes, I see similar behaviour - a quick rise and then some slow \nsteady \nimprovements that seem to be asymptoticaly approaching a fitness \nthat is quite a bit short of a perfect result.\n\n&gt; If you can get any headway on this problem, I&#39;ll gladly\n&gt; try what works. \n&gt; Even positive reinforcement psychology, or just plain sweet \ntalking... (\n&gt; oh your such a good network, yeah, good network,\n\n:) I think your networks would have to be sentient for this to work. \nEven then they may think you&#39;re being patronizing :)\n\nI do think the key with solving this lies with the way we evaluate \nnetworks. Like I say I&#39;ll try out some different schemes and see \nwhat I come up with. \n\nColin.\n\n\n\n\n\n\n"}}