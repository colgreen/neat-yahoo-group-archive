{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"s15ggWKcBQuac3J-BJgfPg4zWySjJGMiQQqXbaFElYbO3H5-h_NSEvyCkry_EwyZSAdTVUiDlMtE3YBf4gt5DrvGwbu33FFwvZwDcSkzur7k","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: A new approach to build structure with CPPNs","postDate":"1217931724","msgId":4249,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGc3OTlrYysybGNlQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGc3NXRrMytqNzFlQGVHcm91cHMuY29tPg=="},"prevInTopic":4247,"nextInTopic":4267,"prevInTime":4248,"nextInTime":4250,"topicId":4243,"numMessagesInTopic":4,"msgSnippet":"Peter, I d be interested to see some of the objects that you grew. By the way, another way to create contiguous objects might be to evolve them as connectivty","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 71056 invoked from network); 5 Aug 2008 10:22:05 -0000\r\nX-Received: from unknown (66.218.67.94)\n  by m54.grp.scd.yahoo.com with QMQP; 5 Aug 2008 10:22:05 -0000\r\nX-Received: from unknown (HELO n41b.bullet.mail.sp1.yahoo.com) (66.163.168.155)\n  by mta15.grp.scd.yahoo.com with SMTP; 5 Aug 2008 10:22:05 -0000\r\nX-Received: from [216.252.122.217] by n41.bullet.mail.sp1.yahoo.com with NNFMP; 05 Aug 2008 10:22:05 -0000\r\nX-Received: from [209.73.164.83] by t2.bullet.sp1.yahoo.com with NNFMP; 05 Aug 2008 10:22:05 -0000\r\nX-Received: from [66.218.67.199] by t7.bullet.scd.yahoo.com with NNFMP; 05 Aug 2008 10:22:05 -0000\r\nDate: Tue, 05 Aug 2008 10:22:04 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;g799kc+2lce@...&gt;\r\nIn-Reply-To: &lt;g75tk3+j71e@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: A new approach to build structure with CPPNs\r\nX-Yahoo-Group-Post: member; u=54567749; y=Qo8xhmB2LCFGQmcPCVdtDa-fDtQmBL_DWc4ZH87Zjxk-j_i3hKcQ\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nPeter, I&#39;d be interested to see some of the objects that you grew.  \n\nBy th=\r\ne way, another way to create contiguous objects might be to \nevolve them as=\r\n connectivty patterns in HyperNEAT with a maximum \nconnection radius of one=\r\n node away (in other words you don&#39;t query \nconnections greater than the di=\r\nstance between two adjacent nodes in \nthe substrate).  So basically it&#39;s a =\r\n4D CPPN that describes a mesh.  \nOf course, this mesh substrate is faster t=\r\no query than a network \nwith connectiosn of any length.  Depending on what =\r\nyou want your \ncreatures to be like, the mesh (i.e. pixels and how they are=\r\n \nconnected) might be a more meaningful representation of an \nartificial cr=\r\neature than just a set of pixels.  It could also be \nused to describe thing=\r\ns like joints or connection types that have \nspecial meaning.\n\nken\n\n--- In =\r\nneat@yahoogroups.com, &quot;petar_chervenski&quot; \n&lt;petar_chervenski@...&gt; wrote:\n&gt;\n&gt;=\r\n Hi all, \n&gt; \n&gt; Well my project is not finished yet, but here is something t=\r\nhat I \n&gt; want to share with the community. It is about using CPPNs to grow =\r\n\n&gt; physical or basically any kind of objects over time. \n&gt; \n&gt; The problem i=\r\nnvolved when using a CPPN to describe a material, \n&gt; physical objects is th=\r\nis. There is no constraint in the matter \nthat \n&gt; is available to build an =\r\nobject. One CPPN can output 100000000000 \n&gt; parts and another just one. All=\r\n in the same genome complexity. \n&gt; Inverted &quot;images&quot; of the CPPN output can=\r\n lead to infinite building \nof \n&gt; parts. And more, most objects may just be=\r\n too bizzare, like a \npattern \n&gt; of concentric circles. The search practiti=\r\noner has to decide and \n&gt; develop too hard things. Like the Alife domain, w=\r\nhere you should \n&gt; discard individuals that do not meet the requirements fo=\r\nr \nsomething \n&gt; that is meanigful. \n&gt; \n&gt; The idea I propose is that the phe=\r\nnotype can be built without \n&gt; quieriyng at each possible coordinate. The C=\r\nPPN does not have to \nbe a \n&gt; snapshot, &quot;printing&quot; an image on the phenotyp=\r\ne surface. \n&gt; \n&gt; Consider a 2D grid where you have one cell (which I call &quot;=\r\nthe \nseed&quot;) \n&gt; at coordinate 0,0. The CPPN is then asked what to do with th=\r\nat \ncell. \n&gt; Should it divide, or change type/color/whatever? The CPPN is \n=\r\nprovided \n&gt; with geometric data, of course, that is the coordinates of the =\r\n\n&gt; particular cell that is asked and the time step of development \ntime. \n&gt;=\r\n After that, the CPPN is asked again, but for those 2 cells, if the \n&gt; firs=\r\nt one divides. And then for four. And eight. etc... \n&gt; \n&gt; In effect, the CP=\r\nPN instructs a mass of cells over time (TIME IS \nRE-\n&gt; INTRODUCED!) of how =\r\nto develop. A cell divides in this way. If it \nis \n&gt; not completely suround=\r\ned by other cells, choose randomly a place \n&gt; where to put a new cell. The =\r\nparent cell still retains its \nposition. \n&gt; The CPPN has the input of the c=\r\nurrent cell&#39;s position and time \nuntil \n&gt; end of development. The developme=\r\nnt of the phenotype happens in \n&gt; discrete time steps where all the cells a=\r\nre checked at once and \nthen \n&gt; the phenotype is replaced. \n&gt; \n&gt; During dev=\r\nelopment time, objects of cells appear. I can confirm \nthat \n&gt; these object=\r\ns&#39;s shapes are directly related to the functions used \nin \n&gt; the CPPNs. In =\r\nfact, when I use sin(x) and sin(y) for inputs, they \nare \n&gt; so.. cool! Like=\r\n flowers and any kind of shapes. \n&gt; \n&gt; Besides, there are no empty holes, a=\r\nnd there is no shit like if \nyou&#39;d \n&gt; try it with the snapshot approach. Al=\r\nl objects are just made \n&gt; of &quot;matter&quot;. They can be directly moved over a p=\r\nhysical simulation \nor \n&gt; something like this. \n&gt; \n&gt; This in fact brings th=\r\ne CPPN theory more closely to engeneering \n&gt; applications and stuff. Also i=\r\nn Artificial Life. In fact my \nproject \n&gt; is dedicated to Alife mostly. \n&gt; =\r\n\n&gt; Peter Chervenski\n&gt;\n\n\n\n"}}