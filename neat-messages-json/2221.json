{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":191742632,"authorName":"maitrikaruna","from":"&quot;maitrikaruna&quot; &lt;kevin@...&gt;","profile":"maitrikaruna","replyTo":"LIST","senderId":"udR69eJ39-wuGWuIieV7Jof5mTRJ8X7-5cinw7Q_v1mezbNYAjsYniChS_niJdAhUn9XZz54dhxpKoHDquytSgzIgfG5COOHvw4c-wrTPw","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Introduction---recurrency question","postDate":"1125164051","msgId":2221,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGRlcTg2aithcnBxQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGRlaWgydis0MHVvQGVHcm91cHMuY29tPg=="},"prevInTopic":2218,"nextInTopic":2222,"prevInTime":2220,"nextInTime":2222,"topicId":2209,"numMessagesInTopic":42,"msgSnippet":"Hi Ken, Your explanation was very helpful..I thought I had it, but I discovered more subtlety to this than I originally thought.  this is best given in a","rawEmail":"Return-Path: &lt;kevin@...&gt;\r\nX-Sender: kevin@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 82326 invoked from network); 27 Aug 2005 17:34:14 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m2.grp.scd.yahoo.com with QMQP; 27 Aug 2005 17:34:14 -0000\r\nReceived: from unknown (HELO n6.bulk.dcn.yahoo.com) (216.155.201.59)\n  by mta1.grp.scd.yahoo.com with SMTP; 27 Aug 2005 17:34:14 -0000\r\nComment: DomainKeys? See http://antispam.yahoo.com/domainkeys\r\nReceived: from [216.155.201.64] by n6.bulk.dcn.yahoo.com with NNFMP; 27 Aug 2005 17:34:13 -0000\r\nReceived: from [66.218.69.2] by mailer1.bulk.dcn.yahoo.com with NNFMP; 27 Aug 2005 17:34:13 -0000\r\nReceived: from [66.218.66.83] by mailer2.bulk.scd.yahoo.com with NNFMP; 27 Aug 2005 17:34:13 -0000\r\nDate: Sat, 27 Aug 2005 17:34:11 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;deq86j+arpq@...&gt;\r\nIn-Reply-To: &lt;deih2v+40uo@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Length: 8791\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;maitrikaruna&quot; &lt;kevin@...&gt;\r\nSubject: Re: Introduction---recurrency question\r\nX-Yahoo-Group-Post: member; u=191742632; y=Vzanct75fr8wXkjvCOmrWMPE5U7zmo_Bwq1SXmu8H4cQqF2zwj2Z\r\nX-Yahoo-Profile: maitrikaruna\r\n\r\nHi Ken,\n\nYour explanation was very helpful..I thought I &quot;had&quot; it, but I \ndi=\r\nscovered more subtlety to this than I originally thought.  this is \nbest gi=\r\nven in a scenario network where:\n\nNODE1 is input node\nNODE2 is input node\nN=\r\nODE3 is hidden node\nNODE4 is output node\n\nNODE4 tells an agent to move eith=\r\ner up or down.  Any movement of \nthis agent will necessarily require a revi=\r\new of its sensory input \ncoming in from node1 and node2(or does it?).\n\nLink=\r\ns are as follows(all neuron thresholds are 1.0):\n\nNODE1--&gt;NODE3 weight 1.0\n=\r\nNODE2--&gt;NODE4 weight 1.0\nNODE3--&gt;NODE4 weight 1.0\nNODE4--&gt;NODE3 weight -.3 =\r\n//this is the recurrent connection\n\nSo suppose we have binary inputs from t=\r\nhe &quot;world&quot; with values of 1 \nfor both NODE1 and NODE2.  As this propogates,=\r\n the input totals for \nthe neurons should be:\n\nNODE3=3D1.0 enough to fire, =\r\nbut as i understand it, we do not yet \nactually fire it by adding its links=\r\n weight to NODE4\n\nNODE4=3D1.0 enough to fire, but as i understand it, we do=\r\n not yet \nactually fire it by adding its links weight to NODE3\n\nSo this lea=\r\nds to my first question...since at this first timestep \nNODE4 can fire, and=\r\n it *is* an output node, do we fire it in the \nsense that it tells the agen=\r\nt to make a move?  But my dilemma is \nthat if the answer to that is &quot;yes&quot;, =\r\nthen this changes the state of \nthe world and we need on the next timestep =\r\nto re-propogate from the \ninputs.  If this is so, then how will a signal ev=\r\ner get from the \nhidden layer in this network to the output layer since &quot;a =\r\nsignal \nnever travels from input--&gt;hidden--&gt;output in one step.&quot;?  It does =\r\n\nnot seem logical to make an agent move and not reconsider the \ncurrent sen=\r\nsor input.\n\nI have a fwe more questions, but i&#39;ll leave them for later...so=\r\nrry \nif this is elementary stuff.\n\n--Kevin\n\n\n\n\n\n\n--- In neat@...=\r\nm, &quot;Kenneth Stanley&quot; &lt;kstanley@c...&gt; wrote:\n&gt; Kevin,\n&gt; \n&gt; Let me add to Cha=\r\nrles comments a bit...although Charles does a \ngood \n&gt; job giving some back=\r\nground, I believe there are some things \nCharles \n&gt; didn&#39;t mention you shou=\r\nld be aware of.\n&gt; \n&gt; First, see the question, &quot;How are networks with arbitr=\r\nary \ntopologies \n&gt; activated?&quot; in the NEAT FAQ located at:\n&gt; \n&gt; http://www.=\r\ncs.utexas.edu/users/kstanley/neat.html\n&gt; \n&gt; That question gives some backgr=\r\nound on your own question.\n&gt; \n&gt; The short answer is that every node is acti=\r\nvated on every timestep \n&gt; from ALL incoming connections.  Any node that ha=\r\ns not yet received \n&gt; input it assumed to be outputting a zero.  In other w=\r\nords, time \n&gt; delay does not enter into it at all (I have never actually us=\r\ned \nthe \n&gt; time-delay code).  Also, activation does not travel all the way =\r\n\nfrom \n&gt; inputs to outputs in a single timestep unless there is a direct \n&gt;=\r\n connection from inputs to outputs.  But activation traveling over \n&gt; inter=\r\nvening nodes will take extra time to get there.\n&gt; \n&gt; So what happens is tha=\r\nt a node that connects to itself receives \nthe \n&gt; activation that itself ou=\r\ntput on the *previous* timestep.  \nNetworks \n&gt; are activated over a series =\r\nof timesteps.\n&gt; \n&gt; It is important to note that you should *not* be relaxin=\r\ng a \nnetwork \n&gt; during a control task like food gathering.  Charles mention=\r\ns \n&gt; relaxation but that is only appropriate for classification tasks \n&gt; wh=\r\nere the network is trying to decide on a final answer.  See the \n&gt; question=\r\n, &quot;How do I ensure that a network stabilizes before taking \n&gt; its output(s)=\r\n for a classification problem?&quot; in the NEAT FAQ for \n&gt; more info on this.\n&gt;=\r\n \n&gt; In a continual control task like food gathering (or most tasks \nNEAT \n&gt;=\r\n is used for) there is always new input coming in and new output \n&gt; coming =\r\nout, so the network will never relax, since there is \n&gt; no &quot;final&quot; answer. =\r\n The only question that comes up is how many \n&gt; times (steps) to activate t=\r\nhe network per world tick.  Almost any \n&gt; experiment I&#39;ve heard of activate=\r\ns once per tick, but it is \npossible \n&gt; to imagine activating &gt;1 time per t=\r\nick, which is equivalent to \n&gt; speeding up the rate of thought.   However, =\r\nnote that more \n&gt; activations also means more CPU time per world tick.\n&gt; \n&gt;=\r\n I hope this help; feel free to ask any other questions.\n&gt; \n&gt; ken\n&gt; \n&gt; \n&gt; \n=\r\n&gt; \n&gt; --- In neat@yahoogroups.com, Charles Tarun &lt;ctarun@g...&gt; wrote:\n&gt; &gt; He=\r\nllo Maitrikaruna,\n&gt; &gt; I would like to offer any help I can, and I&#39;m sure ot=\r\nhers will \n&gt; also help,\n&gt; &gt; \n&gt; &gt; I also don&#39;t have any training on NN eithe=\r\nr, but I&#39;ve been read \na \n&gt; lot about \n&gt; &gt; them. Each implementation of NEA=\r\nT handles the firing of the node \n&gt; in their \n&gt; &gt; own way, as NEAT doesn&#39;t =\r\ndefine it exactly. My method of choice \nis \n&gt; one of \n&gt; &gt; the SharpNEAT one=\r\ns, &quot;FastConcurrentNetwork&quot;. This network \n&gt; simulates each \n&gt; &gt; neuron acti=\r\nvating concurrently.\n&gt; &gt; \n&gt; &gt; 1) Assign the values to all input nodes\n&gt; &gt; 2=\r\n) Activate the network \n&gt; &gt; 3) Relax the network\n&gt; &gt; 4) Read the outputs\n&gt; =\r\n&gt; \n&gt; &gt; Activate network is pass a parameter of how many times to run \nfor, =\r\n\n&gt; this is \n&gt; &gt; basically how many steps to run for. Each step uses the sig=\r\nnal \n&gt; strength from \n&gt; &gt; the previous.\n&gt; &gt; \n&gt; &gt; The Relax network function=\r\n is very much like the Activate \n&gt; function, but also \n&gt; &gt; take in a maxAll=\r\nowedSignalDelta. It runs until the signal change \n&gt; for each \n&gt; &gt; node is &lt;=\r\nmaxAllowedSignalDelta or the maxSteps count is reached. \n&gt; &gt; \n&gt; &gt; |-------\n=\r\n&gt; &gt; v |\n&gt; &gt; NODE1--&gt;NODE2--&gt;NODE3\n&gt; &gt; \n&gt; &gt; They way I see this working with=\r\n your diagram is(assuming the \n&gt; links had \n&gt; &gt; enough weight to cause the =\r\nnext to fire):\n&gt; &gt; \n&gt; &gt; Step 1:\n&gt; &gt; Node1(input) is firing.\n&gt; &gt; node2 get e=\r\nnough signal to fire at this time stamp\n&gt; &gt; node3 only getting signal from =\r\nthe previous step when node2 \nwasn&#39;t \n&gt; firing \n&gt; &gt; does not have enough si=\r\ngnal to fire.\n&gt; &gt; \n&gt; &gt; Step2:\n&gt; &gt; Node1(input) is firing.\n&gt; &gt; node2 gets en=\r\nough signal to fire from node1&#39;s last step, but is \n&gt; not getting \n&gt; &gt; sign=\r\nal from node3.\n&gt; &gt; node3 gets enough signal to fire from node2&#39;s last step =\r\nand fires\n&gt; &gt; \n&gt; &gt; step3:\n&gt; &gt; Node1(input) is firing(As always, input nodes=\r\n don&#39;t change)\n&gt; &gt; node2 is getting signal from node1 and node3 now\n&gt; &gt; nod=\r\ne3 is getting signal from node2 last time step, the recurrent \n&gt; connection=\r\n \n&gt; &gt; hasn&#39;t effected the signal from 2 to 3 yet.\n&gt; &gt; \n&gt; &gt; Under such a sys=\r\ntem it is possible to get oscillation in the \n&gt; signals, that&#39;s \n&gt; &gt; why th=\r\nere is a maxSteps on the relax function. The creator of \n&gt; SharpNEAT is \n&gt; =\r\n&gt; part of this list as well(Colin D. Green). I hope this will be \n&gt; helpful=\r\n.\n&gt; &gt; \n&gt; &gt; Chuck Tarun\n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; \n&gt; &gt; On 8/24/05, maitrikaruna &lt;ke=\r\nvin@t...&gt; wrote:\n&gt; &gt; &gt; \n&gt; &gt; &gt; Hello all,\n&gt; &gt; &gt; \n&gt; &gt; &gt; I stumbled on NEAT ju=\r\nst a short week ago and have found it very\n&gt; &gt; &gt; interesting. I spent the l=\r\nast few days implementing NEAT in\n&gt; &gt; &gt; PowerBASIC and I&#39;m nearly done. I a=\r\nm doing a rather simple\n&gt; &gt; &gt; simulation.\n&gt; &gt; &gt; \n&gt; &gt; &gt; I basically set up a=\r\n &quot;room&quot; and drop an agent in the middle.\n&gt; &gt; &gt; The\n&gt; &gt; &gt; agent needs to eat=\r\n=85so I place a large circle representing\n&gt; food in\n&gt; &gt; &gt; the\n&gt; &gt; &gt; room. T=\r\nhe agent has so many steps to find the food or it\n&gt; &gt; &gt; disappears. The foo=\r\nd is then moved to a new location and the \n&gt; agent\n&gt; &gt; &gt; can try again. The=\r\n agent is tested against four different food\n&gt; &gt; &gt; locations. The agent has=\r\n 8 sensors that allow it to &quot;see&quot; in\n&gt; &gt; &gt; those 8\n&gt; &gt; &gt; directions.\n&gt; &gt; &gt; =\r\n\n&gt; &gt; &gt; Right now with only 50 parents and 10 generations it is able \nto \n&gt; =\r\nfind\n&gt; &gt; &gt; all the 4 different food bins after about9 or 10 gens...which \ni=\r\ns\n&gt; &gt; &gt; pretty good.. Especially since I discovered that I have a \nneuron\n&gt;=\r\n &gt; &gt; firing issue in my code..\n&gt; &gt; &gt; \n&gt; &gt; &gt; Anyway..I am completely new to =\r\nNN&#39;s...i have no training on \nthem \n&gt; at\n&gt; &gt; &gt; all, although I do know GA&#39;s=\r\n fairly well (I am CEO of \n&gt; bioinformatics\n&gt; &gt; &gt; firm that uses GA&#39;s to an=\r\nalyze genetics data).\n&gt; &gt; &gt; \n&gt; &gt; &gt; I have a question I hope you can help wi=\r\nth. the way I setup the\n&gt; &gt; &gt; networks allows for recurrent connections to =\r\noccur. So suppose \n&gt; you\n&gt; &gt; &gt; have a simple netowrk where input node 1 con=\r\nnects to hidden \nnode \n&gt; 2,\n&gt; &gt; &gt; which connects to hidden node 3, which co=\r\nnnects to back to \nnode \n&gt; 2.\n&gt; &gt; &gt; How is firing to proceed in such a scen=\r\nario? Node 2 can&#39;t fire\n&gt; &gt; &gt; until it has all its inputs, yet one of its o=\r\nutputs(the one to \n&gt; node\n&gt; &gt; &gt; 3) affects what its input will be. Thanks f=\r\nor your help...\n&gt; &gt; &gt; |-------\n&gt; &gt; &gt; v |\n&gt; &gt; &gt; NODE1--&gt;NODE2--&gt;NODE3\n&gt; &gt; &gt; =\r\n\n&gt; &gt; &gt; And what if a node links back to itself? Then how is the firing\n&gt; &gt; =\r\n&gt; sequence to work? I saw a time delay in teh C code and I am\n&gt; &gt; &gt; guessin=\r\ng this is involved, but I&#39;m not quite sure how...\n&gt; &gt; &gt; \n&gt; &gt; &gt; When I get t=\r\nhis working, I would like to tackle the tic-tac-toe\n&gt; &gt; &gt; problem you guys =\r\nare working on.\n&gt; &gt; &gt; \n&gt; &gt; &gt; i really appreciate all your posts...very enli=\r\nghtening...\n&gt; &gt; &gt; \n&gt; &gt; &gt; Best,\n&gt; &gt; &gt; Kevin Cramer\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; =\r\n&gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; Yahoo! Groups Links\n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt; \n&gt; &gt; =\r\n&gt; \n&gt; &gt; &gt; \n&gt; &gt; &gt;\n\n\n\n\n"}}