{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":29390171,"authorName":"Mattias Fagerlund","from":"&quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;","profile":"mattias_fagerlund","replyTo":"LIST","senderId":"Yp8KQk56vEQG3pW6RAybNEHjBD8FBoE4beGJTt5FMbMRUMYzfeS-VfZSTGxrIDtAUxGDWudU2SFDsISctPpmlYkAiHdadv-I0MkyNQfnei9EMRC9VA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: multi-agent net inputs","postDate":"1084607894","msgId":788,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFdvcmxkQ2xpZW50LUYyMDA0MDUxNTA5NTguQUE1ODE0MDExMUBvY3RhZ2F0ZS5jb20+","inReplyToHeader":"PGE5OTgwMWM0M2EwOSQ4NTZmNTg0MCQ3MGNiMDEwYUBtYWlsMndvcmxkLmNvbT4=","referencesHeader":"PGE5OTgwMWM0M2EwOSQ4NTZmNTg0MCQ3MGNiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":787,"nextInTopic":789,"prevInTime":787,"nextInTime":789,"topicId":780,"numMessagesInTopic":11,"msgSnippet":"... Using ODE to simulate sensors is probably overkill. Determine the distance and direction to each and every opponent that s within range. If there s a","rawEmail":"Return-Path: &lt;mattias@...&gt;\r\nX-Sender: mattias@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 70242 invoked from network); 15 May 2004 07:52:03 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m14.grp.scd.yahoo.com with QMQP; 15 May 2004 07:52:03 -0000\r\nReceived: from unknown (HELO endeavour.mit.um.bostream.net) (81.26.227.9)\n  by mta1.grp.scd.yahoo.com with SMTP; 15 May 2004 07:52:03 -0000\r\nReceived: from bredin.nu (h181n5c1o285.bredband.skanova.com [81.227.100.181])\n\tby endeavour.mit.um.bostream.net (Postfix) with ESMTP id 3380968030\n\tfor &lt;neat@yahoogroups.com&gt;; Sat, 15 May 2004 09:51:57 +0200 (CEST)\r\nReceived: from WorldClient ([127.0.0.1])\n\t(authenticated user mattias@...)\n\tby bredin.nu (bredin.nu [127.0.0.1])\n\t(MDaemon.PRO.v7.0.1.R)\n\twith ESMTP id md50000006992.msg\n\tfor &lt;neat@yahoogroups.com&gt;; Sat, 15 May 2004 09:58:15 +0200\r\nReceived: from [127.0.0.1] via WorldClient with HTTP;\n\tSat, 15 May 2004 09:58:14 +0200\r\nDate: Sat, 15 May 2004 09:58:14 +0200\r\nTo: neat@yahoogroups.com\r\nMIME-Version: 1.0\r\nContent-Type: text/plain\r\nMessage-ID: &lt;WorldClient-F200405150958.AA58140111@...&gt;\r\nX-Mailer: WorldClient 7.0.1\r\nIn-Reply-To: &lt;a99801c43a09$856f5840$70cb010a@...&gt;\r\nReferences: &lt;a99801c43a09$856f5840$70cb010a@...&gt;\r\nX-Authenticated-Sender: mattias@...\r\nX-Spam-Processed: bredin.nu, Sat, 15 May 2004 09:58:15 +0200\n\t(not processed: message from valid local sender)\r\nX-MDRemoteIP: 127.0.0.1\r\nX-Return-Path: mattias@...\r\nX-MDaemon-Deliver-To: neat@yahoogroups.com\r\nX-MDAV-Processed: bredin.nu, Sat, 15 May 2004 09:58:15 +0200\r\nX-eGroups-Remote-IP: 81.26.227.9\r\nFrom: &quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;\r\nSubject: Re: [neat] Re: multi-agent net inputs\r\nX-Yahoo-Group-Post: member; u=29390171\r\nX-Yahoo-Profile: mattias_fagerlund\r\n\r\n&gt; ken posted while I was typing, now I feel silly...\n&gt; I should have asked the same question earlier. How do you detect if\n&gt; something is inside the radar arc? I think ODE lets me draw a ray in\n&gt; space, and I can see if and where that ray intersects with something.\n&gt; Is\n&gt; that how to do it?\n&gt; This sounds exactly like a vision system, and it sounds easier than I\n&gt; thought to write.\n\nUsing ODE to simulate sensors is probably overkill. Determine the \ndistance and direction to each and every opponent that&#39;s within range. \nIf there&#39;s a _great_ number of opponents, you&#39;ll need some form of \nspacial partitioning so you don&#39;t get a O(N^2) system. Use the distance \nand direction to sort the hits into your sensors. Trivial and only takes \na minute of coding.\n\nfor each opponent\n  dir = arctan(dx/dy) // or is it the other way around?\n  dist2 = dx^2 + dy^2\n  for each sensor\n    if dir&lt;sensor.ang+sensor.width and \n       dir&gt;sensor.ang-sensor.width and\n       dist2 &lt; sensor.dist2 then\n    begin\n      sensor.dist2 = dist2\n      sensor.opponent = opponent\n    end\n\nfor each sensor\n  sensor.dist = sqrt(sensor.dist2)\n\n(the dist2 thing is merely to save sqrt that will be dropped anyway)\n\ncheers,\nm\n\n\n\n"}}