{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Ken","from":"&quot;Ken&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"uA95Cey1UMBmnt9qjXCC5_EMai6voBSZr-L_Y-heXUeaCisFMfbXJ6Bd1tkAzQueeO_l-kg8ak22GdVwdFeCdmWzICmp","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: CPPNs. Recursive vs Feedforward","postDate":"1257269692","msgId":4876,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGhjcHBqcytjc2FhQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDcyN2E0MDZjMDkxMTAyMTYyMms1Yzg4ZDBhNGo3NGRiZDUyYTQ4YWY0NGVmQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":4875,"nextInTopic":4877,"prevInTime":4875,"nextInTime":4877,"topicId":4874,"numMessagesInTopic":10,"msgSnippet":"Colin, it is probably not a critical decision whether CPPNs are recurrent or not (at least for the purposes of HyperNEAT), but it does have implications.  In","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 95864 invoked from network); 3 Nov 2009 17:35:08 -0000\r\nX-Received: from unknown (66.196.94.107)\n  by m11.grp.re1.yahoo.com with QMQP; 3 Nov 2009 17:35:08 -0000\r\nX-Received: from unknown (HELO n39b.bullet.mail.sp1.yahoo.com) (66.163.168.153)\n  by mta3.grp.re1.yahoo.com with SMTP; 3 Nov 2009 17:35:08 -0000\r\nX-Received: from [69.147.65.171] by n39.bullet.mail.sp1.yahoo.com with NNFMP; 03 Nov 2009 17:34:54 -0000\r\nX-Received: from [98.137.34.33] by t13.bullet.mail.sp1.yahoo.com with NNFMP; 03 Nov 2009 17:34:54 -0000\r\nDate: Tue, 03 Nov 2009 17:34:52 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;hcppjs+csaa@...&gt;\r\nIn-Reply-To: &lt;727a406c0911021622k5c88d0a4j74dbd52a48af44ef@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ken&quot; &lt;kstanley@...&gt;\r\nSubject: Re: CPPNs. Recursive vs Feedforward\r\nX-Yahoo-Group-Post: member; u=54567749; y=F-mYpYBeto3eDi4A0XQZDpAnD1NsD9G9MKbn8s8trio8nZLnnxfB\r\nX-Yahoo-Profile: kenstanley01\r\n\r\n\n\nColin, it is probably not a critical decision whether CPPNs are recurrent=\r\n or not (at least for the purposes of HyperNEAT), but it does have implicat=\r\nions.  In the context of patterns, recurrence has the effect of potentially=\r\n creating fractals, that is, self-similarity at different levels of scale. =\r\n If you think about it, recurrence is like recreating a coordinate frame si=\r\ntuated within its own self, which means you will get it repeating at differ=\r\nent scales.  Note that because of the complexity of the overall network, su=\r\nch repetitions may not be exact (and likely won&#39;t be), so you&#39;d get repetit=\r\nion with variation at different scales.\n\nSo it introduces a new kind of reg=\r\nularity that the other activation functions don&#39;t really genuinely offer.  =\r\nHowever, my feeling from looking at 2-D patterns created by recurrent CPPNs=\r\n is that they are brittle and can be difficult to optimize such patterns.  =\r\nWhile they may produce fractals in principle, in practice, they can produce=\r\n messy noise-like patterns because of their brittleness and interaction wit=\r\nh the other parts of the networks (which may include even more recurrence).=\r\n  I have a hunch that a more elegant kind of recurrence could be introduced=\r\n to artificially enforce certain types of activation paths (while freezing =\r\nothers) to produce much more elegant fractal-like patterns consistently, bu=\r\nt barring that, the CPPN with recurrent connections will not necessarily pr=\r\noduce patterns that are easy to characterize.  (Note that it is also an ope=\r\nn and interesting question whether a neural networks should have fractal-li=\r\nke characteristics or not.)\n\nNevertheless, it is not clear ultimately that =\r\nsuch connections cause a problem or not.  While they may not look like very=\r\n pretty fractals, for the purposes of HyperNEAT, it is not clear that they =\r\nneed to look pretty, and maybe they aren&#39;t hurting anything, or even helpin=\r\ng a bit by giving extra degrees of freedom through the search space of patt=\r\nerns.  I believe HyperSharpNEAT actually does allow such connections and it=\r\n doesn&#39;t seem to have any serious performance implication, though it&#39;s hard=\r\n to be certain without extensive testing.\n\nBut if you really want to kind o=\r\nf understand what types of things CPPNs will output, it&#39;s best left feedfor=\r\nward, because then it can be understood as sums and compositions of functio=\r\nns, which is conceptually pure and follows the theory in the papers.  For e=\r\nxample. Picbreeder is strictly feedforward, and that helps us to understand=\r\n the function of internal nodes in Picbreeder networks (we hope to soon mak=\r\ne public the structure of CPPNs within Picbreeder, which is very educationa=\r\nl).\n\nI hope this provides some insight.  \n\nken\n\n\n\n--- In neat@yahoogroups.c=\r\nom, Colin Green &lt;colin.green1@...&gt; wrote:\n&gt;\n&gt; Quick question. What&#39;s the pr=\r\nevailing opinion on whether CPPNs should\n&gt; be recursive or feedforward-only=\r\n?\n&gt; \n&gt; Also there were discussions some years back about algorithms for\n&gt; e=\r\nfficiently implementing feedforward networks - e.g. calculating the\n&gt; longe=\r\nst path from input to output. I think Derek and Phillip worked on\n&gt; these i=\r\ndeas in ANJI so I&#39;ll be looking in the ANJI code (and NEAT\n&gt; group archive)=\r\n but if anyone&#39;s got any more recent ideas/pointers on\n&gt; the subject then I=\r\n&#39;d be interested to hear them. Thanks.\n&gt;\n\n\n\n"}}