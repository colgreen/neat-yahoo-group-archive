{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":170210925,"authorName":"Ashot Petrosian","from":"&quot;Ashot Petrosian&quot; &lt;ashot@...&gt;","profile":"Ashot_Petrosian","replyTo":"LIST","senderId":"9mYQuNDS7AISj0myAbMGoyyG7escudF9HXqVq2s_0ZwOv9FDHHy0zy_HARj9Cn176lH0qzTr0SmCeP1DVrkXLJEreDEcLOy9Z8vV9DDS3TU","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [neat] Introduction/Some Questions","postDate":"1121694110","msgId":2111,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PG9wc3QzMnowY3p4NHAzM21AbWFpbC51dGV4YXMuZWR1Pg==","inReplyToHeader":"PDYuMi4wLjE0LjAuMjAwNTA3MTgxMjEzMTEuMDMzNWE1MjBAcG9wLm1haWwueWFob28uY28udWs+","referencesHeader":"PGRiN240ZStqOXNmQGVHcm91cHMuY29tPiA8Ni4yLjAuMTQuMC4yMDA1MDcxODEyMTMxMS4wMzM1YTUyMEBwb3AubWFpbC55YWhvby5jby51az4="},"prevInTopic":2110,"nextInTopic":2114,"prevInTime":2110,"nextInTime":2112,"topicId":2088,"numMessagesInTopic":13,"msgSnippet":"... or it may also indicate that we are shooting somewhat in the dark.. ... well, it can really be an n-level system ... I m not sure I understand what this","rawEmail":"Return-Path: &lt;ashot@...&gt;\r\nX-Sender: ashot@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 55199 invoked from network); 18 Jul 2005 13:41:51 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m23.grp.scd.yahoo.com with QMQP; 18 Jul 2005 13:41:51 -0000\r\nReceived: from unknown (HELO wb1-a.mail.utexas.edu) (128.83.126.134)\n  by mta4.grp.scd.yahoo.com with SMTP; 18 Jul 2005 13:41:51 -0000\r\nReceived: (qmail 15100 invoked from network); 18 Jul 2005 13:41:50 -0000\r\nReceived: from pcp07743086pcs.nrockv01.md.comcast.net (HELO mail.utexas.edu) (ashot@69.138.172.137)\n  by wb1.mail.utexas.edu with RC4-SHA encrypted SMTP; 18 Jul 2005 13:41:50 -0000\r\nDate: Mon, 18 Jul 2005 08:41:50 -0500\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;db7n4e+j9sf@...&gt; &lt;6.2.0.14.0.20050718121311.0335a520@...&gt;\r\nContent-Type: text/plain; format=flowed; delsp=yes; charset=iso-8859-15\r\nMIME-Version: 1.0\r\nContent-Transfer-Encoding: 8bit\r\nMessage-ID: &lt;opst32z0czx4p33m@...&gt;\r\nIn-Reply-To: &lt;6.2.0.14.0.20050718121311.0335a520@...&gt;\r\nUser-Agent: Opera M2/7.50 (Win32, build 3778)\r\nX-eGroups-Msg-Info: 1:12:0\r\nX-eGroups-From: &quot;Ashot Petrosian&quot; &lt;ashot@...&gt;\r\nFrom: &quot;Ashot Petrosian&quot; &lt;ashot@...&gt;\r\nSubject: Re: [neat] Introduction/Some Questions\r\nX-Yahoo-Group-Post: member; u=170210925; y=rQ-REpuP9x_Wx7pe7-4QQ-SogJO3ZHxeBP8ZMCl7Caah1UtZilDha9Ui\r\nX-Yahoo-Profile: Ashot_Petrosian\r\n\r\nOn Mon, 18 Jul 2005 12:32:31 +0100, Ian Badcoe &lt;ian_badcoe@...&gt; wrote:\n\n&gt; Welcome!\n&gt;\n&gt;&gt; which I am having trouble with because I\n&gt;&gt; have so many brilliant ideas ;)\n&gt;\n&gt; I think that&#39;s quite a common problem around here.  I think it indicates\n&gt; that the subject is so rich in potential that we all see many many more\n&gt; possibilities than we have time to try...\n\n\nor it may also indicate that we are shooting somewhat in the dark..\n\n\n\n&gt;&gt;         My initial idea was a type of modular NEAT. Essentially the way it\n&gt;&gt; works is that each new innovation actually creates a coevolving NEAT\n&gt;&gt; population which starts as simple but can complexify (which then have\n&gt;&gt; nodes which can complexify).\n&gt;\n&gt; So this is a two-level system, with the top network built only from modules\nwell, it can really be an n-level system\n\n&gt; and the modules then containing nodes and connections in the traditional\n&gt; manner.  For me this raises quite a lot of questions:\n&gt;\n&gt; - how are module&lt;-&gt;module connections coded?\n\nI&#39;m not sure I understand what this means, how are they implemented?\n\n&gt; - can a module change its &quot;signature&quot; and display new inputs/outputs?\n\nsee below\n\n&gt; - can a module appear more than once in a genome?\n\nIn the sense that the same module is reused in networks that have been mutated, or crossed-over, yes.\n\n\n&gt;\n&gt;&gt; Every network that uses this innovation\n&gt;&gt; would actually share the same &#39;module&#39; which would be the module with\n&gt;&gt; the best average fitness across all networks.\n&gt;\n&gt; So can there be more than one &quot;allele&quot; of the same module in the\n&gt; population, competing with one another?\n\nThere are no actual modules in the parent chromosome, only pointers to the sub-populations.\n\n&gt;&gt;   Modules would be\n&gt;&gt; evolved for several generations before the &#39;top&#39; NEAT population was\n&gt;&gt; given one generation.\n&gt;\n&gt; That sounds quite promising, although you can make the reverse argument\n&gt; just as easily:\n&gt;\n&gt; current - evolve modules faster than genomes so that they can adapt to best\n&gt; fill the slots they occupy\n&gt; reverse - evolve genomes faster than modules so they can explore the best\n&gt; usage of the modules they have\n&gt;\n&gt; :)\n\nYea, after talking to Joe, I can see that my intuition on this was incorrect.  Specifically, evolving the modules before they were in significantly diverse environments doesn&#39;t make any sense.\n\nOne idea to solve the issue of changing selective pressures is to clear and start clean at each phase.  In other words, evolve the parents, evolve the modules, clear the parents and evolve them from scratch with the modules fixed, and go back and forth this way.\n\n&gt;\n&gt;&gt;   The benefits here are that this would allow\n&gt;&gt; evolution to choose the level of modularity that was fitting for the\n&gt;&gt; problem, would be a continous &#39;evolution&#39;(pardon) on NEAT rather than\n&gt;&gt; a radical change (in other words it reduces to NEAT), and would solve\n&gt;&gt; the problem of adding on new modules while maintaining smooth mutation\n&gt;&gt; (by starting them small).\n&gt;\n&gt; That is a very good take on modules.  Another variant of the same thing\n&gt; that occurs to me is, introduce a new module by selecting a sub-net of an\n&gt; existing genome.  All entry-points to that sub-net are the module inputs\n&gt; and all exit-points are its outputs.  The modules initial contents are the\n&gt; original contents of the subnet.  Thus the initial addition of the module\n&gt; is guaranteed not to change the network.\n&gt;\n&gt; [[note that if the sub-net is one node then the module is the smallest\n&gt; possible non-inert fragment and if the sub-net is one link then the module\n&gt; is starting as a &quot;piece of wire&quot; which is _very_ simple, but has only one\n&gt; input and one output]]\n\nBut how to create a selective pressure for modularity if we pick a specific sub-net from a specific network?\n\n&gt;&gt;   Sort of an ESP meets NEAT idea perhaps.\n&gt;&gt; I&#39;ve looked over some of Joe&#39;s stuff, but I think this is different in\n&gt;&gt; that modularity is optional rather than forced.\n&gt;&gt;         The main questions with this approach is what the base building\n&gt;&gt; block\n&gt;&gt; should be and how to produce the inital selection pressure for\n&gt;&gt; modularity (since the &#39;module&#39; would be used in the same network).\n&gt;&gt; The building block can be just a node, just a link, or more.  By more\n&gt;&gt; perhaps the new module should have the option of connecting from a\n&gt;&gt; random set of up to n to another random set of up to n nodes.  By\n&gt;&gt; changing the n we can have different binding specificty for the\n&gt;&gt; modules.\n&gt;\n&gt; This might be answering some of my questions, but I can&#39;t quite follow\n&gt; you.  What&#39;s the &quot;building block&quot;?\n\nBy building block I just meant the form of the original mutation, what the sub-populations start as.\n\n&gt;\n&gt;&gt;         Think along these lines brought up some other questions.  When NEAT\n&gt;&gt; adds a node it actually is functionally no different then a weight\n&gt;&gt; mutation (with the exception of the non-linearity of the sigmoid).\n&gt;&gt; For a node to really add functionality above what direct link can\n&gt;&gt; accomplish it must at least have two inputs or two outputs.  So for\n&gt;&gt; NEAT to take advantage of a new node mutation it actually has to get\n&gt;&gt; lucky twice, once to add node in the right place, and another two add\n&gt;&gt; a link to/from it.  I think in general this problem is sidestepped by\n&gt;&gt; having a much higher add-connection rate.  If I&#39;m right on this (am I?\n&gt;&gt; ) then perhaps the mutation should  be changed to add a node which\n&gt;&gt; connects two inputs/outputs simulatneously, or n inputs/outputs?\n&gt;\n&gt; I think this was discussed a year or two back (about when I first started\n&gt; lurking on the group).\n&gt;\n&gt; One counter argument is the theory that the accumulation of neutral\n&gt; mutations is essential as a mechanism for searching-out adaptive\n&gt; ones.  e.g. that (i) neutral mutations provide a library of diversity in\n&gt; the population and (ii) only a faction of adaptive changes could be found\n&gt; by one mutation, however complex you tweak the mutations to be, so passage\n&gt; through the intermediate step of accumulating neutral changes is always\n&gt; going to be necessary...\n\nThe mutation could still be neutral though in the sense in that it doesn&#39;t affect the network, just set the weight of the connection to the node to 0.   I do see how we are immediately biased towards that connection versus others.  Perhaps instead then we can just add the node originally, but increase the chances of this node getting a connection substantially in the next several generation(s), or something like that, otherwise we are wasting time optimizing weights and a bias that has no meaning, not to mention increasing the probability of bloat.\n\n\nI haven&#39;t been able to find this thread yet, but I&#39;ll look some more.\n\n\n&gt;&gt;         Along the same lines of thinking, has anyone tried using more\n&gt;&gt; powerful functions at the nodes rather than just a threshold? For\n&gt;&gt; example an average, or maximum, or minimum, or a switch, or so on?\n&gt;\n&gt; We discussed this as well and I believe some people started to try it.  I\n&gt; plan to try it.  I&#39;m not sure &quot;more powerful&quot; functions are the most\n&gt; important angle, however, I think just a choice of different simple\n&gt; functions can be useful.  Look for a discussion about how hard it is to\n&gt; evolve a network that multiplies two inputs...\n\nI agree, I meant powerful from the perspective of the Neural Net, in other words a task which is elementary, yet difficult to for the NN to do now.\n\n\n&gt;&gt; The only place I could find something similar to this was in Karl Sims\n&gt;&gt; old stuff on virtual creatures, but it was only a sidenote and not the\n&gt;&gt; focus of the paper.  Essentially it seems like more powerful operators\n&gt;&gt; should give the networks much more power and we can still keep the\n&gt;&gt; mutations incremental by being clever.  The only drawback I see here\n&gt;&gt; is that this is less biologically &#39;accurate&#39;, but this is irrelevant\n&gt;&gt; for us right?\n&gt;\n&gt; I think so.  But note that the traditional function is not that accurate\n&gt; anyway and that biology does use several types of neurone.\n&gt;\n&gt;&gt;   I can think of several functions that would be\n&gt;&gt; particularly useful in combining modules together, or resuing modules\n&gt;&gt; in new places.\n&gt;\n&gt; Can you exaplain.  I&#39;m not sure I see the link between activation function\n&gt; and modules.\n\n\nBy functions here I meant abilities.  For example right now it is difficult for the NN to take the negation of an output (which can actually be achieved with a linear activation function), or to choose one output from a set, or to choose the maximum of a set of outputs (Joe mentioned the idea of competitive connections to do this), etc.  Just in general abilities that at first glance seem necessary to be able to use the same module in non-trivially different ways.  In my mind its a higher-level glue, although I am more and more concsious of the fact that I am thinking of NN&#39;s essentially as a GP which may be a mistake.\n\n\n\n\n&gt;          Ian Badcoe\n&gt;\n&gt;\n&gt; In fifteen minutes, everybody will be in the future.\n&gt;\n&gt;\n\n"}}