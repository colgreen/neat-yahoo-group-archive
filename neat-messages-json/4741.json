{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":283334584,"authorName":"petar_chervenski","from":"&quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"E2aEKmWQwel6jQibvRIbJY_2DPZp_ITXI60zF7f0Mr8VJdJywLuvXiEQv97SUdwXBNfhy7_3UqPZZ3R5ITt0xdOELD4GwEusun7900QjkAwvEjP4FPA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: incremental search","postDate":"1246923769","msgId":4741,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGgydTI1cCt1ZzRmQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGgydGs5cCs5cWFzQGVHcm91cHMuY29tPg=="},"prevInTopic":4740,"nextInTopic":0,"prevInTime":4740,"nextInTime":4742,"topicId":4740,"numMessagesInTopic":2,"msgSnippet":"Hi Nikolai, I think that just lowering the add-node mutation rate should be enough, but why so many inputs? Is it a kind of image processing task? Maybe","rawEmail":"Return-Path: &lt;petar_chervenski@...&gt;\r\nX-Sender: petar_chervenski@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 62210 invoked from network); 6 Jul 2009 23:43:54 -0000\r\nX-Received: from unknown (69.147.108.201)\n  by m3.grp.sp2.yahoo.com with QMQP; 6 Jul 2009 23:43:54 -0000\r\nX-Received: from unknown (HELO n41b.bullet.mail.sp1.yahoo.com) (66.163.168.155)\n  by mta2.grp.re1.yahoo.com with SMTP; 6 Jul 2009 23:43:54 -0000\r\nX-Received: from [69.147.65.149] by n41.bullet.mail.sp1.yahoo.com with NNFMP; 06 Jul 2009 23:42:50 -0000\r\nX-Received: from [98.137.34.33] by t9.bullet.mail.sp1.yahoo.com with NNFMP; 06 Jul 2009 23:42:50 -0000\r\nDate: Mon, 06 Jul 2009 23:42:49 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;h2u25p+ug4f@...&gt;\r\nIn-Reply-To: &lt;h2tk9p+9qas@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;petar_chervenski&quot; &lt;petar_chervenski@...&gt;\r\nSubject: Re: incremental search\r\nX-Yahoo-Group-Post: member; u=283334584; y=GExk2JbNsBOCgE-K4_ApMN1Sq52qiBIZghr_XcEbfizkeBwPe4_w4LM1DQ\r\nX-Yahoo-Profile: petar_chervenski\r\n\r\nHi Nikolai, \n\nI think that just lowering the add-node mutation rate should =\r\nbe enough, but why so many inputs? Is it a kind of image processing task? M=\r\naybe HyperNEAT can do better in such a case, if there is some geometric ord=\r\ner in the inputs. I should also note that NEAT is designed to automatically=\r\n find the best level of complexity for the solution, so I don&#39;t think such =\r\nmethods can bring any more help. Maybe try the phased pruning technique if =\r\nyour networks are getting too big without improving fitness. \n\nPeter\n\n--- I=\r\nn neat@yahoogroups.com, &quot;Nikolai&quot; &lt;ker_31_toluca@...&gt; wrote:\n&gt;\n&gt; Hi,\n&gt; i wo=\r\nuld like to check this idea with you guys.\n&gt; The problem has around 10,000 =\r\ninputs, and only 3 outputs. So, in order to discover which inputs are more =\r\nrelevant than others, i am thinking of initial state of 0 hidden nodes and =\r\ndo increases of hidden nodes by 1 and only allow 20% of the best population=\r\n to go for next stage.\n&gt; For example:\n&gt; Stage1.1 Start the process with a m=\r\naximum of 1 hidden nodes (i.e. mutate_add_node() function is not allowed to=\r\n execute if genome has one node already). Randomly connect inputs. Mutate w=\r\neights. Evolve for a considerable time(still to find out how much).\n&gt; Stage=\r\n1.2 Remove 80% percent of the population. \n&gt; Stage2.1 Start with population=\r\n that survived stage 1. Allow genomes to grow during mutation 1 node more (=\r\nmaximum 2 nodes per network now). Evolve for a considerable time.\n&gt; Stage2.=\r\n2 Remove 80% percent of the population. \n&gt; Stage3.1 Start with population t=\r\nhat survived stage 2. Allow networks to grow 1 node more (maximum 3 nodes p=\r\ner network) ....\n&gt; And so on... \n&gt; \n&gt; As you see, the basic idea, is to lim=\r\nit the growth of depth of the networks, forcing them to first find the best=\r\n solution at the minimum possible ammount of network depth, before adding m=\r\nore nodes. \n&gt; There will be no limits on how many links can be created.\n&gt; D=\r\no you think this method will improve the search?\n&gt; Thanks in advance.\n&gt;\n\n\n\n"}}