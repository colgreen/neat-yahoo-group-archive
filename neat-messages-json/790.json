{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":54567749,"authorName":"Kenneth Stanley","from":"&quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;","profile":"kenstanley01","replyTo":"LIST","senderId":"NnaJj2t9VRQHJc88vsDdJr24wGA4Dcw1bMSy7A1OaVIxYOPWmwqxt3Xg3RQsdDkez5cR28eMGGyEkjQBPrrB3wWyCjDeytBKD79Oz_YtvZZw","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: multi-agent net inputs","postDate":"1084748064","msgId":790,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGM4OHJmMCtyMTFpQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGQ1ZjIwMWM0M2I4OSQ4N2E3MTk1MCQ2Y2NiMDEwYUBtYWlsMndvcmxkLmNvbT4="},"prevInTopic":789,"nextInTopic":0,"prevInTime":789,"nextInTime":791,"topicId":780,"numMessagesInTopic":11,"msgSnippet":"Hey Chad, what do you mean by how many arcs it falls into?  My understanding is that any object will in general only fall into one arc. That said, it is","rawEmail":"Return-Path: &lt;kstanley@...&gt;\r\nX-Sender: kstanley@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 47790 invoked from network); 16 May 2004 22:54:32 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m22.grp.scd.yahoo.com with QMQP; 16 May 2004 22:54:32 -0000\r\nReceived: from unknown (HELO n36.grp.scd.yahoo.com) (66.218.66.104)\n  by mta3.grp.scd.yahoo.com with SMTP; 16 May 2004 22:54:31 -0000\r\nReceived: from [66.218.67.137] by n36.grp.scd.yahoo.com with NNFMP; 16 May 2004 22:54:26 -0000\r\nDate: Sun, 16 May 2004 22:54:24 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;c88rf0+r11i@...&gt;\r\nIn-Reply-To: &lt;d5f201c43b89$87a71950$6ccb010a@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Length: 3254\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-eGroups-Remote-IP: 66.218.66.104\r\nFrom: &quot;Kenneth Stanley&quot; &lt;kstanley@...&gt;\r\nSubject: Re: multi-agent net inputs\r\nX-Yahoo-Group-Post: member; u=54567749\r\nX-Yahoo-Profile: kenstanley01\r\n\r\nHey Chad, what do you mean by &quot;how many arcs it falls into?&quot;  My \nunderstanding is that any object will in general only fall into one \narc.\n\nThat said, it is common practice in such &quot;radar&quot;-like sensor systems \nto have the arcs slightly overlap so you don&#39;t get jumpy transitions \nwhen an object moves from one arc to the other.  \n\nBut aside from that slight overlap, generally each object falls into \none arc.\n\nI&#39;m also not sure what the advantage of a vision system simulation \nwould be for the NN.  I would just stick with calculating the radar \narcs.\n\nken\n\n--- In neat@yahoogroups.com, &quot;Chad Bohannan&quot; &lt;chad@b...&gt; wrote:\n&gt; These suggestions about calculating where the other targets are are\n&gt; great. That will take lots less power than scanning arcs with a ray\n&gt; seeing if it hit anything. \n&gt; However, I want to include environment variables in the \nsimulation. To\n&gt; analogy with the tag game, I don&#39;t want to bias the behaviour by \nsaying\n&gt; it&#39;s a good thing to be far from whoever is &#39;it&#39;. If there is an\n&gt; obstical, it may be better to be close to &#39;it&#39; but on the far side \nof\n&gt; the obstical. I would preffer to use a function of time spent as \nnot\n&gt; &#39;it&#39;. I was thinking this is where color information would be \nnice. I\n&gt; could have a terrain obstical with a neutral color, and two team \ncolors.\n&gt; I&#39;m thinking the size of the object would be static, and how many \narcs\n&gt; it fell into would be a function of it&#39;s size and distance. \nAnything\n&gt; else in those arcs that are farther away wouldn&#39;t appear.\n&gt; Is there a shortcut for doing a simulated vision system? I&#39;m using\n&gt; openGL, is it possible to take a low resolution &#39;picture&#39; into a \nbuffer,\n&gt; without effecting final rendering? It might be more computationaly\n&gt; complex, but it would be more accurate, and somewhat scalable, I \nwould\n&gt; think. Can it be done?\n&gt; chad\n&gt; \n&gt; &lt;-----Original Message-----&gt; \n&gt; From: Mattias Fagerlund\n&gt; Sent: 5/15/2004 2:20:14 AM\n&gt; To: neat@yahoogroups.com\n&gt; Subject: Re: [neat] Re: multi-agent net inputs\n&gt; \n&gt; &gt; ken posted while I was typing, now I feel silly...\n&gt; &gt; I should have asked the same question earlier. How do you detect \nif\n&gt; &gt; something is inside the radar arc? I think ODE lets me draw a \nray in\n&gt; &gt; space, and I can see if and where that ray intersects with \nsomething.\n&gt; &gt; Is\n&gt; &gt; that how to do it?\n&gt; &gt; This sounds exactly like a vision system, and it sounds easier \nthan I\n&gt; &gt; thought to write.\n&gt; \n&gt; Using ODE to simulate sensors is probably overkill. Determine the \n&gt; distance and direction to each and every opponent that&#39;s within \nrange. \n&gt; If there&#39;s a _great_ number of opponents, you&#39;ll need some form of \n&gt; spacial partitioning so you don&#39;t get a O(N^2) system. Use the \ndistance \n&gt; and direction to sort the hits into your sensors. Trivial and only \ntakes\n&gt; a minute of coding.\n&gt; \n&gt; for each opponent\n&gt; dir = arctan(dx/dy) // or is it the other way around?\n&gt; dist2 = dx^2 + dy^2\n&gt; for each sensor\n&gt; if dir\n&gt; dir&gt;sensor.ang-sensor.width and\n&gt; dist2 &lt;sensor.dist2 then\n&gt; begin\n&gt; sensor.dist2 = dist2\n&gt; sensor.opponent = opponent\n&gt; end\n&gt; \n&gt; for each sensor\n&gt; sensor.dist = sqrt(sensor.dist2)\n&gt; \n&gt; (the dist2 thing is merely to save sqrt that will be dropped \nanyway)\n&gt; \n&gt; cheers,\n&gt; m\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; Yahoo! Groups Links\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; \n&gt; .\n\n\n"}}