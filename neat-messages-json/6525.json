{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":311320802,"authorName":"Peter Chervenski","from":"Peter Chervenski &lt;spookey@...&gt;","profile":"petar_chervenski","replyTo":"LIST","senderId":"d6aX05NhdBKFKVjq-UFpBvOuWwL0TGpWR7121yYP5m9EEj_W6IOY1vHY5OL7-I5DgTdpv-VqZn_-l1EeitBR2syXF3VW7YJ-","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Help Evaluating networks with recurring and self referencing links.","postDate":"1438433128","msgId":6525,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU1QkNCRjY4LjMwNDA3MDJAYWJ2LmJnPg==","inReplyToHeader":"PDE4NDk1MDc1OTYuMTIyMDY1LjE0Mzg0MjkyNDYyMzguSmF2YU1haWwueWFob29AbWFpbC55YWhvby5jb20+","referencesHeader":"PG1wZ2thYisxOTgxbDYzQFlhaG9vR3JvdXBzLmNvbT4gPDE4NDk1MDc1OTYuMTIyMDY1LjE0Mzg0MjkyNDYyMzguSmF2YU1haWwueWFob29AbWFpbC55YWhvby5jb20+"},"prevInTopic":6524,"nextInTopic":6526,"prevInTime":6524,"nextInTime":6526,"topicId":6523,"numMessagesInTopic":6,"msgSnippet":"For continuous control problems, you should iterate through each node once and compute its output for every time step in the simulation. Waiting for the output","rawEmail":"Return-Path: &lt;spookey@...&gt;\r\nX-Sender: spookey@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 35048 invoked by uid 102); 1 Aug 2015 12:45:34 -0000\r\nX-Received: from unknown (HELO mtaq6.grp.bf1.yahoo.com) (10.193.84.37)\n  by m13.grp.bf1.yahoo.com with SMTP; 1 Aug 2015 12:45:34 -0000\r\nX-Received: (qmail 1346 invoked from network); 1 Aug 2015 12:45:34 -0000\r\nX-Received: from unknown (HELO mta1003.groups.mail.bf1.yahoo.com) (98.139.170.167)\n  by mtaq6.grp.bf1.yahoo.com with SMTP; 1 Aug 2015 12:45:34 -0000\r\nX-Original-Return-Path: &lt;spookey@...&gt;\r\nX-Received-SPF: pass (domain of abv.bg designates 194.153.145.30 as permitted sender)\r\nX-YMailISG: tGrJ2hEWLDvTQGsRnKSRqGz1zvqnw_JsRXHPUnlhoIAb_JEa\n Z4Qjli6o9Aa4ESRNxOtqynW3MNudEGM_Gi8cXia68cf1S5gI5YHknL87CFla\n rK6PVIMXffrZnCdwWZEVhv1oXCqELB5CbMn7HfDIPhP6M3mJ0QQuOihMFClO\n H5oa3ApWoyng_YCbARG2nP_fLKGGAIIIUTGBNx_h6YVsZ_UAWEW4F0vwt1hA\n EhB3EWc3g3jBsX91Mp.GJMVeZLQkFgUvSChKUOwYxFTP91xTuJ_OsEo1vHSg\n _1oRC9Mnh1bkYzvTvhzkzU7nuT0yNr_oxB7YPIUN3aYenHRMerkXU_JIixJo\n Uoy5ZLQ6Bhvb2_tQ6z1x76abjBnWEYF.xTeHU0w6BWf_RVcPcJdOY1mXJTQk\n o.88x2eS4JBk.KAUQe23jWHVdUh9nSsT02n3o6rMkRBnXRtGQ5Mt8T0RuLa4\n zhuay3nYVqxjRneCEGQea2RdfdLRafbUIeriCHRydapZXvo7N0Ut48vwRnvX\n 5Ps_F2md1Gu0hBtJuBgzvnNoFRXqs07y2gv0gPqEXBcXa3rBVtMtRTSPen7A\n 8d556JUyvcnmLYgAhRMIPg6mGW3LI5Aoy59RJPZYuosP7Vid_P9ARrSBLzXO\n yzV7svxOaW.QoBZEgp4mgr6wr4k0Fz9I8nj5IDOaIyJEUiFVy.XFadc50EnL\n YJ4CeJntl842ANeGBK6maryjy3cPD2OZ677f9Oi27_R4iUy2dsjyHEHx_mxF\n .5A98miEqvisDyukNp1pLtWmTLE0Q9yJeZXqY0_AvumBKrCFnl_plYn27g1r\n ujUaubKZ2PUmi_Sh5CSER0Vv1Hgzup5935fnMD2n.8GvKJnEQ0lKEhwh.Rtx\n ICKE5HI6NFAROuIVNVUeFb6LK5.dWIIIM.0u0_kC0CFbcT2WklWyXLEM1sdv\n TBYokPh.U8PHuyHLAQQd4G_btrXPxWJr5_06wWjx4oF5vR_SZYP3ifMkoJLG\n f6v1hfKc7fLcc4kyhZ65eqMZNNTIexExB92pNV.3s0BXeK5RGDndtXxVK8u1\n kVGpZNOsEUyZA2sSIfoAJPQ9A1nhuSsa7EEH.35AEPj5nQN_9ti_UlC.VLLk\n eQ_S7idND_cAyD1LWfZxUOT8nrKGOM5LtzS_XMOmJHuiWEmD5Q94NL4FL_tU\n Yg45uZE9SxIqXUV_pEe0dLfg7uvijuMlxTr84vg8SOBXa9ii3tyIcOx3xXsc\n pIWtbOZHdEHhWKl_DGi.mCCRV2XIainklQ.YeSozCcvo2AyyMiHgIF9m5olM\n ABmZKmv6tVemM.DB.UIRMTpYqUExo1TptkUOTzicKmP04RLga7rYDymUmaGK\n ckRJt9RiQBAiVpIrJNCBC8hm2xqM.Od304A95y_AbVhi1gQD_jOBRgBBVhBv\n 9hBlxWlUij40ujIGNZGwCxOy1OVLXNWZhNuRqbkV6SYpNqpUaT_5gjQ8JHPb\n fH1Y7AO4tJWoRvr9Ju0dcLLL0jLzfoLC9ydLRWlX_iKlQGE7p4BgkP7FLqgk\n X4r5sKqCQRW5917qa1MARegtUsunmBXw.RDtd.pcqPoI.Ol9YbaBlVk7W.57\n dUZcfKsB_Vf_2VZLSyl43B5xbZK1hLUMhA--\r\nAuthentication-Results: mta1003.groups.mail.bf1.yahoo.com  from=abv.bg; domainkeys=neutral (no sig);  from=abv.bg; dkim=neutral (no sig)\r\nX-Received: from 127.0.0.1  (EHLO pop31.abv.bg) (194.153.145.30)\n  by mta1003.groups.mail.bf1.yahoo.com with SMTP; Sat, 01 Aug 2015 12:45:33 +0000\r\nX-Received: from smtp.abv.bg (localhost [127.0.0.1])\n\tby pop31.abv.bg (Postfix) with ESMTP id A4C643F953\n\tfor &lt;neat@yahoogroups.com&gt;; Sat,  1 Aug 2015 15:45:31 +0300 (EEST)\r\nX-Received: from Unknown (HELO [192.168.1.100]) (88.87.27.82)\n  (smtp-auth username spookey@..., mechanism plain)\n  by smtp.abv.bg (qpsmtpd/0.84) with (ECDHE-RSA-AES256-SHA encrypted) ESMTPSA; Sat, 01 Aug 2015 15:45:31 +0300\r\nMessage-ID: &lt;55BCBF68.3040702@...&gt;\r\nDate: Sat, 01 Aug 2015 15:45:28 +0300\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101 Thunderbird/31.8.0\r\nMIME-Version: 1.0\r\nTo: neat@yahoogroups.com\r\nReferences: &lt;mpgkab+1981l63@...&gt; &lt;1849507596.122065.1438429246238.JavaMail.yahoo@...&gt;\r\nIn-Reply-To: &lt;1849507596.122065.1438429246238.JavaMail.yahoo@...&gt;\r\nContent-Type: multipart/alternative;\n boundary=&quot;------------020705070305030705010601&quot;\r\nSubject: Re: [neat] Help Evaluating networks with recurring and self referencing\n links.\r\nX-Yahoo-Group-Post: member; u=311320802; y=PNGMan1hWaQEb9nzIWpNUKXxqzpYQZYHDA_Srx9xJgAzlG5hasJn_fLsiw\r\nX-Yahoo-Profile: petar_chervenski\r\nFrom: Peter Chervenski &lt;spookey@...&gt;\r\n\r\n\r\n--------------020705070305030705010601\r\nContent-Type: text/plain; charset=utf-8; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\n\r\nFor continuous control problems, you should iterate through each node \nonce and compute its output for every time step in the simulation. \nWaiting for the output to stabilize doesn&#39;t make sense, because it&#39;s \noften chaotic and never converges. Besides, this sort of defeats the \npurpose of using recurrent links in the first place.\n\nFor problems of classification, regression, CPPN output and things like \nthat, it&#39;s best to avoid recurrence at all, but because this is \ngenerally hard in NEAT (even with &quot;no recurrent links&quot; protection, you \ncan get a loop like A-&gt;B-&gt;C-&gt;A which is recurrent), I usually pick a \nfixed constant number that represents the maximum depth, like 8 or 16, \nand activate the NN this many times. If some NN is too deep and the \noutput is 0, evolution will penalize it anyway.\n\nPeter\n\n\nOn 08/01/2015 02:40 PM, Fred Mitchell lordalveric@... [neat] wrote:\n&gt; In the case of RubyNEAT, I simply iterate the TWEANN a fixed number of \n&gt; times to allow the recurrence to &quot;converge&quot; on a value. It does not \n&gt; make sense to me to involve the the innovation numbers for this, but \n&gt; maybe I am missing something?\n&gt;\n&gt; Ken, what are your thoughts on this?\n&gt;\n&gt;     Kind Regards,\n&gt;\n&gt;     Fred Mitchell, \n&gt;\n&gt;\n&gt;     +49 (0)15 259 409475, Skype: flajann\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; On Friday, 31 July 2015, 22:03, &quot;bbjprizes@... [neat]&quot; \n&gt; &lt;neat@yahoogroups.com&gt; wrote:\n&gt;\n&gt;\n&gt; Hi, I was hoping I could get some help with understanding how a \n&gt; networks output is calculated when the path between the inputs and \n&gt; outputs may have recurring or self referencing links.\n&gt;\n&gt; I&#39;m not sure what the best way to express the network is but I&#39;ll try \n&gt; this.\n&gt; // Recurring Example\n&gt; var nodes =[\n&gt;  { type: &quot;Input&quot; },\n&gt;  { type: &quot;Output&quot; },\n&gt;  { type: &quot;Hidden&quot; },\n&gt;  { type: &quot;Hidden&quot; }\n&gt; ];\n&gt;\n&gt; var genes = [\n&gt; { innovation: 1, inNode:0, outNode:1, weight:0.75, enabled:false },\n&gt; { innovation: 2, inNode:0, outNode:2, weight:1, enabled:false },\n&gt; { innovation: 3, inNode:2, outNode:1, weight:0.75, enabled:true },\n&gt; { innovation: 4, inNode:0, outNode:3, weight:0.3, enabled:true },\n&gt; { innovation: 5, inNode:3, outNode:2, weight:0.4, enabled:true },\n&gt; { innovation: 6, inNode:2, outNode:3, weight:0.5, enabled:true },\n&gt; ]\n&gt;\n&gt; 1\n&gt; ^\n&gt; |\n&gt; 2 --\n&gt; ^  |\n&gt; |   |\n&gt; 3&lt;\n&gt; ^\n&gt; |\n&gt; 0\n&gt;\n&gt; The network originally had 1 input and 1 output but through mutation \n&gt; it has gained two hidden nodes and one recurring link.\n&gt; If you evaluating the original network with an input value of &quot;1&quot; the \n&gt; output should be 1*0.75=0.75.\n&gt; With the addition of just the two hidden nodes, with weight mutations, \n&gt; I calculate the output to be  1 * 0.3 * 0.4 * 0.75 = 0.09.\n&gt; After adding in the link mutation between nodes 2 and 3 I&#39;m not sure \n&gt; how to sum the inputs into node 3.  Since node 2 relies on the value \n&gt; of node 3 and node 3 relies on the values of nodes 2 and 0.\n&gt;\n&gt; Most implementations I&#39;ve seen build an array of nodes with links in \n&gt; the order of their innovations. Then loop through the array and sum \n&gt; the weighted value on the links the node point to. This does&#39;t seem \n&gt; correct to me since node 2&#39;s value is calculated based on node 3 which \n&gt; hasn&#39;t been calculated yet and would be 0.  I&#39;ve considered looping \n&gt; through each output node and &quot;walking&quot; the links backwards until I \n&gt; reach and input node and then summing the values on the way back. This \n&gt; is where I&#39;m running into issues with the recurring links and infinite \n&gt; loops.\n&gt;\n&gt; My question about self referencing links is a little simpler.  In the \n&gt; example above change the last link between 2 and 3 to be between 2 and \n&gt; 2. When you calculate the value at node 2 it would be the weighted \n&gt; value of node 3 + the weighted value of node 2. Since node 2 value is \n&gt; initially 0 it adds no value.  When would it ever not be 0?  It seems \n&gt; that self referencing links would always be 0, I must be missing \n&gt; something.\n&gt;\n&gt; Thanks in advance for any help or guidance.\n&gt;\n&gt; Joel\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; \n\n\r\n--------------020705070305030705010601\r\nContent-Type: text/html; charset=utf-8\r\nContent-Transfer-Encoding: 8bit\r\n\r\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta content=&quot;text/html; charset=utf-8&quot; http-equiv=&quot;Content-Type&quot;&gt;\n  &lt;/head&gt;\n  &lt;body bgcolor=&quot;#FFFFFF&quot; text=&quot;#000000&quot;&gt;\n    &lt;div class=&quot;moz-cite-prefix&quot;&gt;For continuous control problems, you\n      should iterate through each node once and compute its output for\n      every time step in the simulation. Waiting for the output to\n      stabilize doesn&#39;t make sense, because it&#39;s often chaotic and never\n      converges. Besides, this sort of defeats the purpose of using\n      recurrent links in the first place. &lt;br&gt;\n      &lt;br&gt;\n      For problems of classification, regression, CPPN output and things\n      like that, it&#39;s best to avoid recurrence at all, but because this\n      is generally hard in NEAT (even with &quot;no recurrent links&quot;\n      protection, you can get a loop like A-&gt;B-&gt;C-&gt;A which is\n      recurrent), I usually pick a fixed constant number that represents\n      the maximum depth, like 8 or 16, and activate the NN this many\n      times. If some NN is too deep and the output is 0, evolution will\n      penalize it anyway. &lt;br&gt;\n      &lt;br&gt;\n      Peter&lt;br&gt;\n      &lt;br&gt;\n      &lt;br&gt;\n      On 08/01/2015 02:40 PM, Fred Mitchell &lt;a class=&quot;moz-txt-link-abbreviated&quot; href=&quot;mailto:lordalveric@...&quot;&gt;lordalveric@...&lt;/a&gt; [neat]\n      wrote:&lt;br&gt;\n    &lt;/div&gt;\n    &lt;blockquote\n      cite=&quot;mid:1849507596.122065.1438429246238.JavaMail.yahoo@...&quot;\n      type=&quot;cite&quot;&gt; &lt;span style=&quot;display:none&quot;&gt; &lt;/span&gt;\n      \n          &lt;div id=&quot;ygrp-text&quot;&gt;\n            &lt;div\n              style=&quot;color:#000;background-color:#fff;font-family:Helvetica\n              Neue-Light, Helvetica Neue Light, Helvetica Neue,\n              Helvetica, Arial, Lucida Grande,\n              Sans-Serif;font-size:16px;&quot;&gt;\n              &lt;div dir=&quot;ltr&quot; id=&quot;yui_3_16_0_1_1438427969216_11180&quot;&gt;&lt;span\n                  id=&quot;yui_3_16_0_1_1438427969216_11179&quot;&gt;In the case of\n                  RubyNEAT, I simply iterate the TWEANN a fixed number\n                  of times to allow the recurrence to &quot;converge&quot; on a\n                  value. It does not make sense to me to involve the the\n                  innovation numbers for this, but maybe I am missing\n                  something?&lt;/span&gt;&lt;/div&gt;\n              &lt;div dir=&quot;ltr&quot; id=&quot;yui_3_16_0_1_1438427969216_11180&quot;&gt;&lt;span&gt;&lt;br&gt;\n                &lt;/span&gt;&lt;/div&gt;\n              &lt;div dir=&quot;ltr&quot; id=&quot;yui_3_16_0_1_1438427969216_11180&quot;&gt;&lt;span\n                  id=&quot;yui_3_16_0_1_1438427969216_11928&quot;&gt;Ken, what are\n                  your thoughts on this? &lt;/span&gt;&lt;/div&gt;\n              &lt;div id=&quot;yui_3_16_0_1_1438427969216_11178&quot;&gt; &lt;/div&gt;\n              &lt;div class=&quot;signature&quot;\n                id=&quot;yui_3_16_0_1_1438427969216_10838&quot;&gt;&lt;br&gt;\n                &lt;blockquote style=&quot;margin:0 0 0 40px;padding:0px;&quot;\n                  id=&quot;yui_3_16_0_1_1438427969216_10851&quot;&gt;Kind Regards,&lt;br&gt;\n                  &lt;br&gt;\n                  Fred Mitchell, &lt;/blockquote&gt;\n                &lt;br&gt;\n                &lt;blockquote style=&quot;margin:0 0 0 40px;padding:0px;&quot;&gt;&lt;span\n                    style=&quot;font-style:italic;font-weight:bold;&quot;&gt;+49\n                    (0)15 259 409475, &lt;/span&gt;&lt;span\n                    style=&quot;font-style:italic;&quot;&gt;Skype&lt;/span&gt;&lt;span\n                    style=&quot;font-style:italic;&quot;&gt;: &lt;/span&gt;&lt;span\n                    style=&quot;font-style:italic;font-weight:bold;&quot;&gt;flajann&lt;/span&gt;&lt;/blockquote&gt;\n              &lt;/div&gt;\n              &lt;br&gt;\n              &lt;div class=&quot;qtdSeparateBR&quot;&gt;&lt;br&gt;\n                &lt;br&gt;\n              &lt;/div&gt;\n              &lt;div class=&quot;yahoo_quoted&quot;&gt;\n                &lt;div style=&quot;font-family: Helvetica Neue-Light, Helvetica\n                  Neue Light, Helvetica Neue, Helvetica, Arial, Lucida\n                  Grande, Sans-Serif;font-size: 16px;&quot;&gt;\n                  &lt;div style=&quot;font-family: HelveticaNeue, Helvetica\n                    Neue, Helvetica, Arial, Lucida Grande,\n                    Sans-Serif;font-size: 16px;&quot;&gt;\n                    &lt;div dir=&quot;ltr&quot;&gt; &lt;font size=&quot;2&quot; face=&quot;Arial&quot;&gt; On\n                        Friday, 31 July 2015, 22:03,\n                        &lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;mailto:bbjprizes@...[neat]&quot;&gt;&quot;bbjprizes@... [neat]&quot;&lt;/a&gt;\n                        &lt;a class=&quot;moz-txt-link-rfc2396E&quot; href=&quot;mailto:neat@yahoogroups.com&quot;&gt;&lt;neat@yahoogroups.com&gt;&lt;/a&gt; wrote:&lt;br&gt;\n                      &lt;/font&gt; &lt;/div&gt;\n                    &lt;br&gt;\n                    &lt;br&gt;\n                    &lt;div class=&quot;y_msg_container&quot;&gt;\n                      &lt;div id=&quot;yiv7569512078&quot;&gt;\n                        &lt;div&gt;\n                          &lt;span&gt; &lt;/span&gt;\n                          &lt;div id=&quot;yiv7569512078ygrp-mlmsg&quot;&gt;\n                            &lt;div id=&quot;yiv7569512078ygrp-msg&quot;&gt;\n                              &lt;div id=&quot;yiv7569512078ygrp-text&quot;&gt;\n                                &lt;div&gt;Hi, I was hoping I could get some\n                                  help with understanding how a networks\n                                  output is calculated when the path\n                                  between the inputs and outputs may\n                                  have recurring or self referencing\n                                  links. &lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;I&#39;m not sure what the best way to\n                                  express the network is but I&#39;ll try\n                                  this. &lt;/div&gt;\n                                &lt;div&gt;&lt;span style=&quot;word-spacing:normal;&quot;&gt;//\n                                    Recurring Example&lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;&lt;span style=&quot;word-spacing:normal;&quot;&gt;var\n                                    nodes =[&lt;/span&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt; { type: &quot;Input&quot; },&lt;/div&gt;\n                                &lt;div&gt; { type: &quot;Output&quot; },&lt;/div&gt;\n                                &lt;div&gt; { type: &quot;Hidden&quot; },&lt;/div&gt;\n                                &lt;div&gt; { type: &quot;Hidden&quot; }&lt;/div&gt;\n                                &lt;div&gt;];&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;var genes = [&lt;/div&gt;\n                                &lt;div&gt;{ innovation: 1, inNode:0,\n                                  outNode:1, weight:0.75, enabled:false\n                                  },&lt;/div&gt;\n                                &lt;div&gt;{ innovation: 2, inNode:0,\n                                  outNode:2, weight:1, enabled:false },&lt;/div&gt;\n                                &lt;div&gt;{ innovation: 3, inNode:2,\n                                  outNode:1, weight:0.75, enabled:true\n                                  },&lt;/div&gt;\n                                &lt;div&gt;{ innovation: 4, inNode:0,\n                                  outNode:3, weight:0.3, enabled:true },&lt;/div&gt;\n                                &lt;div&gt;{ innovation: 5, inNode:3,\n                                  outNode:2, weight:0.4, enabled:true },&lt;/div&gt;\n                                &lt;div&gt;{ innovation: 6, inNode:2,\n                                  outNode:3, weight:0.5, enabled:true },&lt;/div&gt;\n                                &lt;div&gt;]&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;1&lt;/div&gt;\n                                &lt;div&gt;^&lt;/div&gt;\n                                &lt;div&gt;|&lt;/div&gt;\n                                &lt;div&gt;2 --&lt;/div&gt;\n                                &lt;div&gt;^  |&lt;/div&gt;\n                                &lt;div&gt;|   |&lt;/div&gt;\n                                &lt;div&gt;3&lt;&lt;/div&gt;\n                                &lt;div&gt;^&lt;/div&gt;\n                                &lt;div&gt;|&lt;/div&gt;\n                                &lt;div&gt;0&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;The network originally had 1 input\n                                  and 1 output but through mutation &lt;span\n                                    style=&quot;word-spacing:normal;&quot;&gt;it has\n                                    gained two hidden nodes and one\n                                    recurring link. &lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;&lt;span style=&quot;word-spacing:normal;&quot;&gt;If\n                                    you evaluating the original network\n                                    with an input value of &quot;1&quot; the\n                                    output should be 1*0.75=0.75.&lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;With the addition of just the two\n                                  hidden nodes, with weight mutations, I\n                                  calculate the output to be  1 * 0.3 *\n                                  0.4 * 0.75 = 0.09.&lt;/div&gt;\n                                &lt;div&gt;After adding in the link mutation\n                                  between nodes 2 and 3 &lt;span\n                                    style=&quot;word-spacing:normal;&quot;&gt;I&#39;m not\n                                    sure how to sum the inputs into node\n                                    3.  Since node 2 relies on the value\n                                    of node 3 and node 3 relies on the\n                                    values of nodes 2 and 0.&lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;&lt;span style=&quot;word-spacing:normal;&quot;&gt;&lt;br\n                                      clear=&quot;none&quot;&gt;\n                                  &lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;Most implementations I&#39;ve seen\n                                  build an array of nodes with links in\n                                  the order of their innovations. Then\n                                  loop through the array and sum the\n                                  weighted value on the links the node\n                                  point to. This does&#39;t seem correct to\n                                  me since node 2&#39;s value is calculated\n                                  based on node 3 which hasn&#39;t been\n                                  calculated yet and would be 0.  I&#39;ve\n                                  considered looping through each output\n                                  node and &quot;walking&quot; the links backwards\n                                  until I reach and input node and then\n                                  summing the values on the way back.\n                                  This is where I&#39;m running into issues\n                                  with the recurring links and infinite\n                                  loops.&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;My question about self referencing\n                                  links is a little simpler.  In the\n                                  example above change the last link\n                                  between 2 and 3 to be between 2 and 2.\n                                  When you calculate the value at node 2\n                                  it would be the weighted value of node\n                                  3 + the weighted value of node 2.\n                                  Since node 2 value is initially 0 it\n                                  adds no value.  When would it ever not\n                                  be 0?  It seems that self referencing\n                                  links would always be 0, I must be\n                                  missing something.&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;Thanks in advance for any help or\n                                  guidance.&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;Joel&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;&lt;span style=&quot;word-spacing:normal;&quot;&gt;&lt;br\n                                      clear=&quot;none&quot;&gt;\n                                  &lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;&lt;span style=&quot;word-spacing:normal;&quot;&gt;&lt;br\n                                      clear=&quot;none&quot;&gt;\n                                  &lt;/span&gt;&lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt;&lt;br clear=&quot;none&quot;&gt;\n                                &lt;/div&gt;\n                                &lt;div&gt; &lt;/div&gt;\n                              &lt;/div&gt;\n                            &lt;/div&gt;\n                          &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;br&gt;\n                        &lt;br&gt;\n                      &lt;/div&gt;\n                    &lt;/div&gt;\n                  &lt;/div&gt;\n                &lt;/div&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n          \n      \n      &lt;!-- end group email --&gt;\n    &lt;/blockquote&gt;\n    &lt;br&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\r\n--------------020705070305030705010601--\r\n\n"}}