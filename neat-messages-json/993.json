{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"MTPcG7R0LIxTH17fWmvHMCdvzCVR5Clz3O_J2tAfuTZ5MuFNxLP8iXLy-c_NUGXx93-vkFDcHVn-H6o4Ia4DCoZr1MxP7i6COBA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Computation Time","postDate":"1086363249","msgId":993,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYuMS4wLjYuMC4yMDA0MDYwNDE1NTcyMi4wMjUxMjIyMEBwb3AubWFpbC55YWhvby5jby51az4=","inReplyToHeader":"PEJBWTItRjE3M1NWQXdGMjRzWEEwMDA0MzdlMUBob3RtYWlsLmNvbT4=","referencesHeader":"PEJBWTItRjE3M1NWQXdGMjRzWEEwMDA0MzdlMUBob3RtYWlsLmNvbT4="},"prevInTopic":991,"nextInTopic":999,"prevInTime":992,"nextInTime":994,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"... OK, a few thoughts: 1) it matters how much data you have, memory-access is still far slower than calculation (unless the whole thing fits in the data","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 40467 invoked from network); 4 Jun 2004 15:31:20 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m23.grp.scd.yahoo.com with QMQP; 4 Jun 2004 15:31:20 -0000\r\nReceived: from unknown (HELO smtp004.mail.ukl.yahoo.com) (217.12.11.35)\n  by mta4.grp.scd.yahoo.com with SMTP; 4 Jun 2004 15:31:20 -0000\r\nReceived: from unknown (HELO ian2k.yahoo.co.uk) (ian?badcoe@212.159.73.108 with login)\n  by smtp004.mail.ukl.yahoo.com with SMTP; 4 Jun 2004 15:31:10 -0000\r\nMessage-Id: &lt;6.1.0.6.0.20040604155722.02512220@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 6.1.0.6\r\nDate: Fri, 04 Jun 2004 16:34:09 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;BAY2-F173SVAwF24sXA000437e1@...&gt;\r\nReferences: &lt;BAY2-F173SVAwF24sXA000437e1@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 217.12.11.35\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: Computation Time\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nAt 15:38 04/06/2004, you wrote:\n&gt; &gt;From: Ian Badcoe &lt;ian_badcoe@...&gt;\n&gt;\n&gt; &gt;Why are we discussing this BTW, do people have serious speed problems?\n&gt;\n&gt;The problem for which I got interested in NEAT is image enlargement.  The\n&gt;evaluation of a single network for fitness will require it to be activated\n&gt;*billions* of times.  So in that case, every little bit helps. :)\n\nOK, a few thoughts:\n\n1) it matters how much data you have, memory-access is still far slower \nthan calculation (unless the whole thing fits in the data cache...) -- by \ndata I mean all data in RAM: images, weights, node-values, all of it\n\n2) ANN evaluation is essentially like a classical &quot;gather&quot; problem.  e.g. \ndata has to be gathered from multiple locations (the previous node values), \nprocessed and written into a single location (one new node value)\n\n3) when they were rolling out the extended SIMD instruction sets (MMX and \nthe later floating-point version, which I think was called SMME -- for \nstreaming multi-media extensions) they covered some problems quite like \nthis in the tutorials they gave away.  They took a purely intel-centric \nview, of course, but many of their general points should apply.\n\n4) since you are running the same network many times with different input \ndata then you might get a big speed-up if you can re-arrange the order of \nprocessing.  I assume that at the moment you evaluate a whole network, then \nanother whole network, then another, etc etc.  My first thought it to \nreorder this so that one link is evaluated for every point in the image, \nthen the next link and so on.  This way you are performing a simple \noperation on big arrays (and it is important to sort the data so that it is \nin contiguous arrays).  Thus, if you had a trivial net:\n\nIMAGE --w1-&gt; NODE --w2-&gt; OUTPUT\n\nThen instead of.\n\nfor (x,y) = every_point_in_image\n         NODE = IMAGE[x] * w[1];\n         NODE = ActivationFunction(NODE);\n         OUTPUT[x] = NODE * w[2];\nnext x\n\n-- which has a random data access pattern (OK, so not very random but the \nmore nodes you add the more it is) --\n\nYou do this:\n\n// DATA contains IMAGE sorted into a linear array\n\nfor x = 0 to number_of_pixels\n         NODE[x] = DATA[x] * w[1]\nnext x\nfor x = 0 to number_of_pixels\n         NODE[x] = ActivationFunction(NODE[x])\nnext x\nfor x = 0 to number_of_pixels\n         OUTPUT[x] = NODE[x] * w(2)\nnext x\n\n-- which accesses data as three straight runs through a set of contiguous \narrays.\n\nThe change that makes to data caching can be considerable.  If you like, \nI&#39;ll explain in more detail off list, unless this is of general \ninterest?  It&#39;s one of the things people used to do to get oomph out of the \nvector-pipelines on supercomputers...\n\nOh, and now that the activation function is being called many times in \nimmediate succession, then avoiding exp() will make a bigger difference \n(because we&#39;ve optimised away the things the CPU could do while waiting for \nthe exp).\n\n         Ian Badcoe\n\np.s. What language are you using?\n\n\n\nLiving@Home - Open Source Evolving Organisms - \nhttp://livingathome.sourceforge.net/\n\n\n\n"}}