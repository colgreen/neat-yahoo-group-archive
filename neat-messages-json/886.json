{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":115403844,"authorName":"John Arrowwood","from":"&quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;","profile":"jarrowwx","replyTo":"LIST","senderId":"_YA4LfAQqnEE0A9yxnxZZ7DbTwMlvNrkjuopvxocWMmp49_dQPbGuAReWq_M51ysrHw-Rza_if_YK_biWdxZGEUOE7T5k0UoRzuWATHD","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Computation Time","postDate":"1085782045","msgId":886,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJBWTItRjZwYTUwVUl4Z3pnZ2YwMDAzNWI4MkBob3RtYWlsLmNvbT4="},"prevInTopic":885,"nextInTopic":887,"prevInTime":885,"nextInTime":887,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"... I m wondering if what you did is anything like this... A normal evaluation of a network walks through a list of connections and looks up the weights and","rawEmail":"Return-Path: &lt;jarrowwx@...&gt;\r\nX-Sender: jarrowwx@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 91681 invoked from network); 28 May 2004 22:07:49 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m25.grp.scd.yahoo.com with QMQP; 28 May 2004 22:07:49 -0000\r\nReceived: from unknown (HELO hotmail.com) (65.54.247.6)\n  by mta4.grp.scd.yahoo.com with SMTP; 28 May 2004 22:07:48 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Fri, 28 May 2004 15:07:25 -0700\r\nReceived: from 64.122.44.102 by by2fd.bay2.hotmail.msn.com with HTTP;\n\tFri, 28 May 2004 22:07:25 GMT\r\nX-Originating-Email: [jarrowwx@...]\r\nX-Sender: jarrowwx@...\r\nTo: neat@yahoogroups.com\r\nBcc: \r\nDate: Fri, 28 May 2004 15:07:25 -0700\r\nMime-Version: 1.0\r\nContent-Type: text/plain; format=flowed\r\nMessage-ID: &lt;BAY2-F6pa50UIxgzggf00035b82@...&gt;\r\nX-OriginalArrivalTime: 28 May 2004 22:07:25.0745 (UTC) FILETIME=[28A53A10:01C44500]\r\nX-eGroups-Remote-IP: 65.54.247.6\r\nFrom: &quot;John Arrowwood&quot; &lt;jarrowwx@...&gt;\r\nReply-To: john@...\r\nSubject: Re: [neat] Re: Computation Time\r\nX-Yahoo-Group-Post: member; u=115403844\r\nX-Yahoo-Profile: jarrowwx\r\n\r\n&gt;From: &quot;Mattias Fagerlund&quot; &lt;mattias@...&gt;\n&gt;\n&gt; &gt; No, such a thing is definitely overkill for xor.  But for image\n&gt; &gt; enlargement,\n&gt; &gt; where analyzing the fitness of a single network may involve billions\n&gt; &gt; (yes,\n&gt; &gt; billions) of activations, every little bit will help.\n&gt;\n&gt;For DelphiNEAT I wrote a &quot;Pascal decompiler&quot; that created pascal code\n&gt;that represented the network. That way I could use a network that NEAT\n&gt;evolved outside of my NEAT framework. It&#39;s not very hard - but I&#39;m not\n&gt;sure how much faster it is.\n\nI&#39;m wondering if what you did is anything like this...\n\nA normal evaluation of a network walks through a list of connections and \nlooks up the weights and the nodes that it needs.  Time is spent calculating \noffsets into arrays, index comparison, index increments, etc.  For manually \ngenerated code, that&#39;s definitely the way to go, because it is maintainable. \n  But that maintainability comes at a speed price.\n\nImagine instead an algorithm that evaluates a feed-forward (no recurrent \nconnections) topology and does simple dependancy analysis.  It then produces \ncode that references hard-coded variables (e.g. hidden01..hidden0X) for \neverything, and deliberately does every calculation exactly once.  The \nresulting code could be orders of magnitude faster.\n\nAnyone besides me have a need for something like this?\n\n\n\n"}}