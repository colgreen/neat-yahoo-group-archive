{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":55268137,"authorName":"shimonw","from":"&quot;shimonw&quot; &lt;shimon@...&gt;","profile":"shimonw","replyTo":"LIST","senderId":"-WhrX_guyqsWzDyNAd_OEE3oGQQwnvhwDIacb8H4BgO587fQ0pkWx6nF5WlfwLeZfCj6_bS5qFuLq3fI_oCU2J5i_2LHyg","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: GECCO Paper on HyperNEAT","postDate":"1369666514","msgId":6097,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGtudnM0aSszbXJmQGVHcm91cHMuY29tPg==","inReplyToHeader":"PGttOXQ5MyszYnBsQGVHcm91cHMuY29tPg=="},"prevInTopic":6086,"nextInTopic":6101,"prevInTime":6096,"nextInTime":6098,"topicId":6085,"numMessagesInTopic":14,"msgSnippet":"Dear all, I d like to take the opportunity to respond to some of the criticisms that Ken made about our GECCO-13 paper on HyperNeat. I ve organized the","rawEmail":"Return-Path: &lt;shimon@...&gt;\r\nX-Sender: shimon@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nX-Received: (qmail 67703 invoked by uid 102); 27 May 2013 14:55:15 -0000\r\nX-Received: from unknown (HELO mtaq5.grp.bf1.yahoo.com) (10.193.84.36)\n  by m12.grp.bf1.yahoo.com with SMTP; 27 May 2013 14:55:15 -0000\r\nX-Received: (qmail 19028 invoked from network); 27 May 2013 14:55:15 -0000\r\nX-Received: from unknown (HELO ng15-ip3.bullet.mail.bf1.yahoo.com) (98.139.165.129)\n  by mtaq5.grp.bf1.yahoo.com with SMTP; 27 May 2013 14:55:15 -0000\r\nX-Received: from [98.139.164.122] by ng15.bullet.mail.bf1.yahoo.com with NNFMP; 27 May 2013 14:55:15 -0000\r\nX-Received: from [10.193.94.110] by tg3.bullet.mail.bf1.yahoo.com with NNFMP; 27 May 2013 14:55:15 -0000\r\nDate: Mon, 27 May 2013 14:55:14 -0000\r\nTo: neat@yahoogroups.com\r\nMessage-ID: &lt;knvs4i+3mrf@...&gt;\r\nIn-Reply-To: &lt;km9t93+3bpl@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;4-0587843040-5256296669=:5&quot;\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: &quot;shimonw&quot; &lt;shimon@...&gt;\r\nSubject: Re: GECCO Paper on HyperNEAT\r\nX-Yahoo-Group-Post: member; u=55268137; y=0HcJ9oEDWK_Q5Zz0Uja0cz2OQI_DAdLD9X7b9VXy0vBQkw\r\nX-Yahoo-Profile: shimonw\r\n\r\n\r\n--4-0587843040-5256296669=:5\r\nContent-Type: text/plain; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\nDear all,\n\n\n\n\nI&#39;d like to take the opportunity to respond to some of the\nc=\r\nriticisms that Ken made about our GECCO-13 paper on HyperNeat. \nI&#39;ve organi=\r\nzed the response according to what I consider the three\nmain issues of cont=\r\nention.  Following Ken&#39;s example, I&#39;ve\nincluded a short summary at the begi=\r\nnning for those who lack the time or\ninterest to read the whole response. (=\r\nFYI, this response was prepared\nwith the help of Thomas van den Berg, the f=\r\nirst author of the paper in\nquestion).\n\n\n\n\nShort summary\n\n1. There&#39;s no evi=\r\ndence of any problem with our code or experiments.\n\n2. While it is an impor=\r\ntant caveat of one section of our paper that it\nfocuses on target-based sce=\r\nnarios, there are good reasons to do the\nexperiment this way, the results s=\r\ntill provide substantial evidence that\nfracture can be difficult for HyperN=\r\nEAT, this is supported by additional\nevidence not from target-based scenari=\r\nos, and analogous caveats apply to\nthe counterexamples Ken provides.\n\n3. Ke=\r\nn&#39;s examples of Picbreeder evolving fracture do not contradict\nour claim ab=\r\nout the topology needed to represent fracture but are in\nfact consistent wi=\r\nth it.  If our claim is wrong, anyone can easily\ndisprove it by showing a s=\r\nimpler topology than in our Fig. 13 but to\ndate no one has done so.\n\n\n\n\nAnd=\r\n here&#39;s the full version:\n\n\n\n\nWhether our implementation of HyperNEAT is va=\r\nlid:\n\nThe PEAS implementation of NEAT and HyperNEAT is an attempt to create=\r\n an\naccessible python environment for experimenting with (generative)\nevolu=\r\ntionary methods. The code was made public as soon as possible to\nallow feed=\r\nback, so we&#39;re happy that Ken and others are looking at it\nand working with=\r\n it now.\n\n\n\n\nThat said, we have several good reasons to believe that all of=\r\n our\nresults are based on correctly functioning code:\n\n\n\n\n1. The code was b=\r\nuilt by closely following the specifications given in\npublished papers, and=\r\n existing implementations were used as references\nwhenever the details were=\r\n unclear.\n\n\n\n\n2. It was validated on multiple benchmarks from existing rese=\r\narch,\nincluding those we mention in our paper. We have not found=97and no\no=\r\nne has shown us=97any evidence that suggests our implementation is\ninvalid =\r\nor that its results are inconsistent with those of existing\nimplementations=\r\n.\n\n\n\n\n3. Not all of the experiments in our paper use PEAS. The fact that we=\r\n\nget qualitatively similar results on the Walking Gait task using Clune\net =\r\nal.&#39;s implementation is evidence for both our hypothesis and for\nthe correc=\r\ntness of our code.\n\n\n\n\nWhether our experiments are misleading because they =\r\nuse a target-based\nscenario:\n\nIt is indeed an important caveat of the exper=\r\niments we present in\nSection 6 of our paper that they use a target-based sc=\r\nenario (evolving\ntowards a fixed configuration of weights) with a &quot;tight&quot; f=\r\nitness\nfunction, as we explicitly acknowledge in the paper. However:\n\n\n\n\n1.=\r\n There are good reasons to do the experiment this way: because the\ndefiniti=\r\non of fracture is inherently generative, only a target-based\nscenario makes=\r\n it possible to control for the amount of fracture needed\nto solve the task=\r\n.  In addition, our experiments in the target-based\nscenario allow us to fo=\r\nllow up on the experiments of Clune et al.,\nshedding light on the reasons f=\r\nor HyperNEAT&#39;s failure, which were\nnot completely apparent from the origina=\r\nl experiments.\n\n\n\n\n2. Even given the caveat that it is a target-based scena=\r\nrio, it is\nsurprising and disappointing how quickly HyperNEAT fails to find=\r\n the\nfracture necessary to solve very small, easy target-based tasks, much\n=\r\neasier than those considered by Woolley & Stanley.  Therefore, we think\nthe=\r\nse results constitute valid evidence that fracture can be a challenge\nfor H=\r\nyperNEAT.\n\n\n\n\n3. In addition, most of the experiments in our paper were not=\r\n on such\ntarget-based tasks, and the &#39;difficult&#39; Walking Gait experiment pr=\r\novides\nadditional evidence that fracture can be challenging for HyperNEAT, =\r\nbut\nnow in a &quot;regular&quot; fitness-based scenario.\n\n\n\n\n4. An analogous caveat a=\r\npplies to the Picbreeder counterexamples that\nKen mentions: they were gener=\r\nated using the &quot;loose&quot; fitness\nfunctions of interactive evolution, where ma=\r\nny good solutions are\npossible and humans naturally provide intermediate gr=\r\nadients.  These\nresults are beautiful, fascinating, and important, but they=\r\n are no more\nrepresentative of many &quot;regular&quot; fitness functions, which are\n=\r\nencountered in a wide range of challenging optimization settings and for\nwh=\r\nich good solutions are rare but not unique, than target-based fitness\nfunct=\r\nions are.\n\n\n\n\nObviously, more research needs to be done to explore differen=\r\nt points on\nthe spectrum between tight and loose fitness functions, and it&#39;=\r\ns\nworthwhile to debate what parts of the spectrum we should care about. \nBu=\r\nt the fact that one set of our experiments looks at only one point on\nthat =\r\nspectrum does not make them misleading any more than the examples\nKen provi=\r\nded are misleading.  It just means that, like any finite set of\nexperiments=\r\n, it cannot tell the whole story.\n\n\n\n\n5. Regarding the non-Picbreeder count=\r\nerexamples of HyperNEAT evolving\nfracture: while these examples show that H=\r\nyperNEAT can evolve fracture\ngiven &quot;regular&quot; fitness functions, they do not=\r\n establish that\nsuch fracture is necessary.  A key distinction between our =\r\nexperiments\nand those that have previously been used to evaluate HyperNEAT =\r\nis that\nwe use baselines to establish the level of complexity that is actua=\r\nlly\nneeded to solve the task.  The results show that HyperNEAT sometimes\nev=\r\nolves complex structures that look impressive but are largely\nsuperfluous. =\r\n Thus, an important caveat of these counterexamples is that\nwe don&#39;t know h=\r\now much of this fracture, if any, is needed to solve\nthe task.\n\n\n\n\nWhether =\r\nsimpler topologies can represent fracture than what we claim.\n\nKen provides=\r\n some examples from Picbreeder to show how fracture can be\nrepresented in a=\r\n very simply way.  While these examples are very cool,\nthey actually do not=\r\n contradict our assertions about what topologies are\nneeded to represent fr=\r\nacture.  Both Ken&#39;s examples and our Figure 13\nhighlight the fact that repr=\r\nesenting fracture requires what we call an\n&quot;indicator node&quot; for outputting =\r\na component region in each of\nthe phenotypes.  The only reason that Figure =\r\n13 is a bit more\ncomplicated than Ken&#39;s examples is that it is solving a ha=\r\nrder\nproblem: in addition to partitioning the space into regions, it fills\n=\r\neach region with a particular repeated pattern.  This requires extra\nnodes =\r\nto prepare the inputs to the indicator node.\n\n\n\n\nNote that Fig 13 is by no =\r\nmeans a proof that a topology of this\ncomplexity is required to represent f=\r\nracture: it&#39;s an upper bound,\nnot a lower bound.  We know it can be done in=\r\n this way and we are unable\nto think of a simpler way.  That doesn&#39;t prove =\r\nthat a simpler way\ndoesn&#39;t exist, but, to date, no one has been able to sho=\r\nw us a\nsimpler way.  If our claim is not correct, everyone is free to prove=\r\n us\nwrong by simply providing such an example.\n\n\n\n\nIn conclusion\n\nWe wrote =\r\nthis paper because we believe strongly in the promise of GDS,\neven when use=\r\nd with &quot;regular&quot; fitness functions. It seems clear\nthat HyperNEAT paired wi=\r\nth interactive evolution is a powerful tool. \nBut our experiments suggest t=\r\nhat there are some potentially serious\ndifficulties when it comes to the &quot;r=\r\negular&quot; fitness functions\nthat arise in a large range of important applicat=\r\nions.  We don&#39;t\nthink those limitations were sufficiently apparent from pre=\r\nvious\nexperimental analyses of HyperNEAT and we therefore hope that, in thi=\r\ns\nrespect, our paper will be a useful contribution.\n\n\n\n\n-------------------=\r\n------------------------------------------\n\nShimon Whiteson | Assistant Pro=\r\nfessor\n\nIntelligent Autonomous Systems Group\n\nInformatics Institute | Unive=\r\nrsity of Amsterdam\n\n-------------------------------------------------------=\r\n------\n\nScience Park 904 | 1098 XH Amsterdam\n\n+31 (0)20.525.8701 | +31 (0)6=\r\n.3851.0110\n\nhttp://staff.science.uva.nl/~whiteson\n&lt;http://staff.science.uva=\r\n.nl/~whiteson&gt;\n\n\n\n---------------------------------------------------------=\r\n----\n\n\r\n--4-0587843040-5256296669=:5\r\nContent-Type: text/html; charset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n\n\n\n\n\n\n\n\n\n\n&lt;p class=3D&quot;p1&quot;&gt;Dear all,&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;=\r\np1&quot;&gt;I&#39;d like to take the opportunity to respond to some of the criticisms t=\r\nhat Ken made about our GECCO-13 paper on HyperNeat. &nbsp;I&#39;ve organized th=\r\ne response according to what I consider the three main issues of contention=\r\n. &nbsp;Following Ken&#39;s example, I&#39;ve included a short summary at the begin=\r\nning for those who lack the time or interest to read the whole response. (F=\r\nYI, this response was prepared with the help of Thomas van den Berg, the fi=\r\nrst author of the paper in question).&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=\r\n=3D&quot;p1&quot;&gt;&lt;b&gt;&lt;i&gt;Short summary&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;1. There&#39;s no eviden=\r\nce of any problem with our code or experiments.&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;2. While=\r\n it is an important caveat of one section of our paper that it focuses on t=\r\narget-based scenarios, there are good reasons to do the experiment this way=\r\n, the results still provide substantial evidence that fracture can be diffi=\r\ncult for HyperNEAT, this is supported by additional evidence not from targe=\r\nt-based scenarios, and analogous caveats apply to the counterexamples Ken p=\r\nrovides.&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;3. Ken&#39;s examples of Picbreeder evolving fractu=\r\nre do not contradict our claim about the topology needed to represent fract=\r\nure but are in fact consistent with it. &nbsp;If our claim is wrong, anyone=\r\n can easily disprove it by showing a simpler topology than in our Fig. 13 b=\r\nut to date no one has done so.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;A=\r\nnd here&#39;s the full version:&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;&lt;b&gt;&lt;=\r\ni&gt;Whether our implementation of HyperNEAT is valid:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=3D&quot;=\r\np1&quot;&gt;The PEAS implementation of NEAT and HyperNEAT is an attempt to create a=\r\nn accessible python environment for experimenting with (generative) evoluti=\r\nonary methods. The code was made public as soon as possible to allow feedba=\r\nck, so we&#39;re happy that Ken and others are looking at it and working with i=\r\nt now.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;That said, we have severa=\r\nl good reasons to believe that all of our results are based on correctly fu=\r\nnctioning code:&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;1. The code was =\r\nbuilt by closely following the specifications given in published papers, an=\r\nd existing implementations were used as references whenever the details wer=\r\ne unclear.&nbsp;&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;2. It was valid=\r\nated on multiple benchmarks from existing research, including those we ment=\r\nion in our paper. &lt;b&gt;We have not found=97and no one has shown us=97any evid=\r\nence that suggests our implementation is invalid or that its results are in=\r\nconsistent with those of existing implementations.&lt;/b&gt;&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;=\r\nbr&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;3. Not all of the experiments in our paper use PEAS.=\r\n The fact that we get qualitatively similar results on the Walking Gait tas=\r\nk using Clune et al.&#39;s implementation is evidence for both our hypothesis a=\r\nnd for the correctness of our code.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;=\r\np1&quot;&gt;&lt;b&gt;&lt;i&gt;Whether our experiments are misleading because they use a target-=\r\nbased scenario:&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;It is indeed an important caveat=\r\n of the experiments we present in Section 6 of our paper that they use a ta=\r\nrget-based scenario (evolving towards a fixed configuration of weights) wit=\r\nh a &quot;tight&quot; fitness function, as we explicitly acknowledge in the paper. Ho=\r\nwever:&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;1. There are good reasons=\r\n to do the experiment this way: because the definition of fracture is inher=\r\nently generative, only a target-based scenario makes it possible to control=\r\n for the amount of fracture needed to solve the task. &nbsp;In addition, ou=\r\nr experiments in the target-based scenario allow us to follow up on the exp=\r\neriments of Clune et al., shedding light on the reasons for HyperNEAT&#39;s fai=\r\nlure, which were not completely apparent from the original experiments.&lt;/p&gt;=\r\n&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;2. Even given the caveat that it is=\r\n a target-based scenario,&lt;b&gt; it is surprising and disappointing how quickly=\r\n HyperNEAT fails to find the fracture necessary to solve very small, easy t=\r\narget-based tasks&lt;/b&gt;, much easier than those considered by Woolley &amp; S=\r\ntanley. &nbsp;Therefore, we think these results constitute valid evidence t=\r\nhat fracture can be a challenge for HyperNEAT.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;=\r\np class=3D&quot;p1&quot;&gt;3. In addition,&lt;b&gt; most of the experiments in our paper were=\r\n &lt;i&gt;not&lt;/i&gt; on such target-based tasks&lt;/b&gt;, and the &#39;difficult&#39; Walking Gai=\r\nt experiment provides additional evidence that fracture can be challenging =\r\nfor HyperNEAT, but now in a &quot;regular&quot; fitness-based scenario.&lt;/p&gt;&lt;p class=\r\n=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;4. An analogous caveat applies to the Picbr=\r\needer counterexamples that Ken mentions: they were generated using the &quot;loo=\r\nse&quot; fitness functions of interactive evolution, where many good solutions a=\r\nre possible and humans naturally provide intermediate gradients. &nbsp;Thes=\r\ne results are beautiful, fascinating, and important, &lt;b&gt;but they are no mor=\r\ne representative of many &quot;regular&quot; fitness functions&lt;/b&gt;, which are encount=\r\nered in a wide range of challenging optimization settings and for which goo=\r\nd solutions are rare but not unique, than target-based fitness functions ar=\r\ne.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;Obviously, more research need=\r\ns to be done to explore different points on the spectrum between tight and =\r\nloose fitness functions, and it&#39;s worthwhile to debate what parts of the sp=\r\nectrum we should care about. &nbsp;But the fact that one set of our experim=\r\nents looks at only one point on that spectrum does not make them misleading=\r\n any more than the examples Ken provided are misleading. &nbsp;It just mean=\r\ns that, like any finite set of experiments, it cannot tell the whole story.=\r\n&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;5. Regarding the non-Picbreeder=\r\n counterexamples of HyperNEAT evolving fracture: while these examples show =\r\nthat HyperNEAT can evolve fracture given &quot;regular&quot; fitness functions,&lt;b&gt; th=\r\ney do not establish that such fracture is necessary&lt;/b&gt;. &nbsp;A key distin=\r\nction between our experiments and those that have previously been used to e=\r\nvaluate HyperNEAT is that we use baselines to establish the level of comple=\r\nxity that is actually needed to solve the task. &nbsp;The results show that=\r\n HyperNEAT sometimes evolves complex structures that look impressive but ar=\r\ne largely superfluous. &nbsp;Thus, an important caveat of these counterexam=\r\nples is that we don&#39;t know how much of this fracture, if any, is needed to =\r\nsolve the task.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;&lt;b&gt;&lt;i&gt;Whether si=\r\nmpler topologies can represent fracture than what we claim.&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p c=\r\nlass=3D&quot;p1&quot;&gt;Ken provides some examples from Picbreeder to show how fracture=\r\n can be represented in a very simply way. &nbsp;While these examples are ve=\r\nry cool, they actually do not contradict our assertions about what topologi=\r\nes are needed to represent fracture. &nbsp;Both Ken&#39;s examples and our Figu=\r\nre 13 highlight the fact that representing fracture requires what we call a=\r\nn &quot;indicator node&quot; for outputting a component region in each of the phenoty=\r\npes. &nbsp;The only reason that Figure 13 is a bit more complicated than Ke=\r\nn&#39;s examples is that it is solving a harder problem: in addition to partiti=\r\noning the space into regions, &lt;b&gt;it fills each region with a particular rep=\r\neated pattern&lt;/b&gt;. &nbsp;This requires extra nodes to prepare the inputs to=\r\n the indicator node.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;Note that F=\r\nig 13 is by no means a proof that a topology of this complexity is required=\r\n to represent fracture: it&#39;s an upper bound, not a lower bound. &nbsp;We kn=\r\now it can be done in this way and we are unable to think of a simpler way. =\r\n&nbsp;That doesn&#39;t prove that a simpler way doesn&#39;t exist, but,&lt;b&gt; to date,=\r\n no one has been able to show us a simpler way&lt;/b&gt;. &nbsp;If our claim is n=\r\not correct, everyone is free to prove us wrong by simply providing such an =\r\nexample.&lt;/p&gt;&lt;p class=3D&quot;p2&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;&lt;b&gt;&lt;i&gt;In conclusion&lt;/i&gt;=\r\n&lt;/b&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;We wrote this paper because we believe strongly in =\r\nthe promise of GDS, even when used with &quot;regular&quot; fitness functions. It see=\r\nms clear that HyperNEAT paired with interactive evolution is a powerful too=\r\nl. &nbsp;But our experiments suggest that there are some potentially seriou=\r\ns difficulties when it comes to the &quot;regular&quot; fitness functions that arise =\r\nin a large range of important applications. &nbsp;We don&#39;t think those limi=\r\ntations were sufficiently apparent from previous experimental analyses of H=\r\nyperNEAT and we therefore hope that, in this respect, our paper will be a u=\r\nseful contribution.&lt;/p&gt;&lt;p class=3D&quot;p3&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;------------=\r\n-------------------------------------------------&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;Shimon=\r\n Whiteson | Assistant Professor&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;Intelligent Autonomous S=\r\nystems Group&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;Informatics Institute | University of Amste=\r\nrdam&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;---------------------------------------------------=\r\n----------&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;Science Park 904 |&nbsp;1098 XH Amsterdam&lt;/p&gt;=\r\n&lt;p class=3D&quot;p4&quot;&gt;+31 (0)20.525.8701 | +31 (0)6.3851.0110&lt;/p&gt;&lt;p class=3D&quot;p5&quot;&gt;=\r\n&lt;span class=3D&quot;s1&quot;&gt;&lt;a rel=3D&quot;nofollow&quot; target=3D&quot;_blank&quot; href=3D&quot;http://sta=\r\nff.science.uva.nl/~whiteson&quot;&gt;http://staff.science.uva.nl/~whiteson&lt;/a&gt;&lt;/spa=\r\nn&gt;&lt;/p&gt;&lt;p class=3D&quot;p1&quot;&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n=\r\n\n\n\n\n\n\n\n\n&lt;/p&gt;&lt;p class=3D&quot;p4&quot;&gt;-----------------------------------------------=\r\n--------------&lt;span class=3D&quot;Apple-tab-span&quot;&gt;\t&lt;/span&gt;&lt;/p&gt;\n\n\r\n--4-0587843040-5256296669=:5--\r\n\n"}}