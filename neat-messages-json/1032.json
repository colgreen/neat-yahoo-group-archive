{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":7192225,"authorName":"Ian Badcoe","from":"Ian Badcoe &lt;ian_badcoe@...&gt;","profile":"ian_badcoe","replyTo":"LIST","senderId":"N98T_2nTFvkDlC8Zztf2hbFoKicUAseSR-TbdiVFcYj72i1ls8CsA2dCKxZvwHfw1nQeP_RCHpZiG-HyvZ6pNL_LXzMOYpBrFDU","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [neat] Re: Computation Time","postDate":"1086710260","msgId":1032,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDUuMS4wLjE0LjAuMjAwNDA2MDgxNjU1MTguMDBhOWY4OTBAcG9wLm1haWwueWFob28uY28udWs+","inReplyToHeader":"PGNhMzl2ays0djFhQGVHcm91cHMuY29tPg==","referencesHeader":"PGM5bnI1aSs5YjE0QGVHcm91cHMuY29tPg=="},"prevInTopic":1031,"nextInTopic":1035,"prevInTime":1031,"nextInTime":1033,"topicId":845,"numMessagesInTopic":99,"msgSnippet":"Hi, This is interesting, what language did you time them in? Ian Badcoe ... http://livingathome.sourceforge.net/ - evolution for the desktop","rawEmail":"Return-Path: &lt;ian_badcoe@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Apparently-To: neat@yahoogroups.com\r\nReceived: (qmail 8142 invoked from network); 8 Jun 2004 15:57:51 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m22.grp.scd.yahoo.com with QMQP; 8 Jun 2004 15:57:51 -0000\r\nReceived: from unknown (HELO cmailg2.svr.pol.co.uk) (195.92.195.172)\n  by mta5.grp.scd.yahoo.com with SMTP; 8 Jun 2004 15:57:51 -0000\r\nReceived: from modem-1049.leopard.dialup.pol.co.uk ([217.135.148.25] helo=giles.yahoo.co.uk)\n\tby cmailg2.svr.pol.co.uk with esmtp (Exim 4.14)\n\tid 1BXixT-0001Q2-DY\n\tfor neat@yahoogroups.com; Tue, 08 Jun 2004 16:56:16 +0100\r\nMessage-Id: &lt;5.1.0.14.0.20040608165518.00a9f890@...&gt;\r\nX-Sender: ian_badcoe@...\r\nX-Mailer: QUALCOMM Windows Eudora Version 5.1\r\nDate: Tue, 08 Jun 2004 16:57:40 +0100\r\nTo: neat@yahoogroups.com\r\nIn-Reply-To: &lt;ca39vk+4v1a@...&gt;\r\nReferences: &lt;c9nr5i+9b14@...&gt;\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot;; format=flowed\r\nX-eGroups-Remote-IP: 195.92.195.172\r\nFrom: Ian Badcoe &lt;ian_badcoe@...&gt;\r\nSubject: Re: [neat] Re: Computation Time\r\nX-Yahoo-Group-Post: member; u=7192225\r\nX-Yahoo-Profile: ian_badcoe\r\n\r\nHi,\n         This is interesting, what language did you time them in?\n\n         Ian Badcoe\n\nAt 02:57 08/06/2004 +0000, you wrote:\n&gt;--- In neat@yahoogroups.com, &quot;zenguyuno&quot; &lt;zenguyuno@y...&gt; wrote:\n&gt; &gt;\n&gt; &gt; Unless it&#39;s already been done!  Here is a ready-to-use sigmoid\n&gt; &gt; approximator in C, taken from the file neursubs.c of the EvSail\n&gt; &gt; package:\n&gt; &gt;\n&gt; &gt; /* This 4 piece curve is a good sigmoid approximator. */\n&gt; &gt; float sigAprox(register float x)  {\n&gt; &gt;     register float z;\n&gt; &gt;\n&gt; &gt;     if(x &lt;= -4.0)\n&gt; &gt;       return 0.0;\n&gt; &gt;     else if(x &lt;= 0.0) {\n&gt; &gt;         z = x + 4.0;\n&gt; &gt;         return z*z/32;\n&gt; &gt;     }\n&gt; &gt;     else if(x &lt; 4.0)  {\n&gt; &gt;         z = x - 4.0;\n&gt; &gt;         return 1.0 - z*z/32;\n&gt; &gt;     }\n&gt; &gt;     else\n&gt; &gt;       return 1.0;\n&gt; &gt; }\n&gt;\n&gt;If anyone&#39;s interested, I just did an analysis of this function vs\n&gt;the traditional sigmoid, and the inverse absolute value function Ian\n&gt;posted earlier vs tanh.  I added a spread sheet\n&gt;(activation_functions.xls) to the files section comparing the\n&gt;values.  Here are the functions ...\n&gt;\n&gt;sigmoid:  y = 1 / ( 1 + EXP( -( x * 4.924273 ) ) )\n&gt;evsail:   &lt;see above&gt;\n&gt;tanh:     y = -1 + ( 2 / ( 1 + EXP( -2 * ( x ) ) ) )\n&gt;inv-abs:  y = x / ( 1 + ABS( x ) )\n&gt;\n&gt;... where EXP is exponential function (i.e., EXP(x) is e raised to\n&gt;the power of x) and ABS is absolute value.  We got the sigmoid and\n&gt;tanh functions from JOONE source (http://www.jooneworld.com/).\n&gt;\n&gt;I ran 2 million activations each with each one to compare\n&gt;performance.  This is all on my laptop (PIII, 850MHz, 256MB RAM) on\n&gt;JVM 1.4.  Results:\n&gt;\n&gt;- the EvSail sigmoid approximation was about 4 times faster than the\n&gt;traditional sigmoid; ~90ms vs ~360ms.\n&gt;- the inverse absolute value function was about 2.5 times faster\n&gt;than the traditional tanh; ~170ms vs ~400ms.\n&gt;\n&gt;I&#39;d be interested to know if similar performance benefits can be had\n&gt;in C, or any other languages.  I&#39;m also curious to know if there are\n&gt;any other pitfalls from using such approximation functions, or even\n&gt;simple step functions.  For example, is it crucial that the function\n&gt;be continuous?  I assume it is since the evolutionary algorithm is a\n&gt;form of hill climbing.  But, how smooth/steep is the optimal curve?\n&gt;Or is it domain dependant?\n&gt;\n&gt;- Philip\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\nhttp://livingathome.sourceforge.net/ - evolution for the desktop\n\n\n\n"}}